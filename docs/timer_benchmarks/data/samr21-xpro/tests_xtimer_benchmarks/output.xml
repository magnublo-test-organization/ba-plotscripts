<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 18:14:06.691" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.981" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:07.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:10.033" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:07.977" endtime="20201029 18:14:10.034"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.040" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:10.036" endtime="20201029 18:14:10.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.974" endtime="20201029 18:14:10.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:10.047" endtime="20201029 18:14:10.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.044" endtime="20201029 18:14:10.396"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.429" endtime="20201029 18:14:10.445"></status>
</kw>
<msg timestamp="20201029 18:14:10.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.426" endtime="20201029 18:14:10.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.453" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.449" endtime="20201029 18:14:10.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.460" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:10.455" endtime="20201029 18:14:10.460"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:10.419" endtime="20201029 18:14:10.462"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:10.411" endtime="20201029 18:14:10.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.408" endtime="20201029 18:14:10.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:10.473" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:10.471" endtime="20201029 18:14:10.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.467" endtime="20201029 18:14:10.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.406" endtime="20201029 18:14:10.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.405" endtime="20201029 18:14:10.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.477" endtime="20201029 18:14:10.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.401" endtime="20201029 18:14:10.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.483" endtime="20201029 18:14:10.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.397" endtime="20201029 18:14:10.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.970" endtime="20201029 18:14:10.489"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:10.504" endtime="20201029 18:14:10.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.500" endtime="20201029 18:14:10.528"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.563" endtime="20201029 18:14:10.579"></status>
</kw>
<msg timestamp="20201029 18:14:10.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.559" endtime="20201029 18:14:10.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.582" endtime="20201029 18:14:10.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.593" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:10.589" endtime="20201029 18:14:10.594"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:10.552" endtime="20201029 18:14:10.595"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:10.546" endtime="20201029 18:14:10.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.541" endtime="20201029 18:14:10.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:10.606" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:10.604" endtime="20201029 18:14:10.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.600" endtime="20201029 18:14:10.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.539" endtime="20201029 18:14:10.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.538" endtime="20201029 18:14:10.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.609" endtime="20201029 18:14:10.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.534" endtime="20201029 18:14:10.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.529" endtime="20201029 18:14:10.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.498" endtime="20201029 18:14:10.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.633" endtime="20201029 18:14:10.644"></status>
</kw>
<msg timestamp="20201029 18:14:10.645" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.630" endtime="20201029 18:14:10.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.651" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.647" endtime="20201029 18:14:10.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.653" endtime="20201029 18:14:10.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.623" endtime="20201029 18:14:10.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.618" endtime="20201029 18:14:10.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.670" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:14:10.668" endtime="20201029 18:14:10.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.675" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:14:10.672" endtime="20201029 18:14:10.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.662" endtime="20201029 18:14:10.677"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:10.490" endtime="20201029 18:14:10.678" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:06.978" endtime="20201029 18:14:10.685"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.818" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:10.833" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:12.889" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:10.814" endtime="20201029 18:14:12.891"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.896" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:12.893" endtime="20201029 18:14:12.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.811" endtime="20201029 18:14:12.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:12.903" endtime="20201029 18:14:13.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.900" endtime="20201029 18:14:13.268"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.298" endtime="20201029 18:14:13.317"></status>
</kw>
<msg timestamp="20201029 18:14:13.318" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.295" endtime="20201029 18:14:13.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.320" endtime="20201029 18:14:13.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.331" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:13.327" endtime="20201029 18:14:13.332"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.288" endtime="20201029 18:14:13.334"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.283" endtime="20201029 18:14:13.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.280" endtime="20201029 18:14:13.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:13.344" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:13.342" endtime="20201029 18:14:13.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.338" endtime="20201029 18:14:13.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.278" endtime="20201029 18:14:13.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.277" endtime="20201029 18:14:13.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.347" endtime="20201029 18:14:13.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.273" endtime="20201029 18:14:13.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.354" endtime="20201029 18:14:13.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.270" endtime="20201029 18:14:13.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.808" endtime="20201029 18:14:13.360"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:13.374" endtime="20201029 18:14:13.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.370" endtime="20201029 18:14:13.399"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.494" endtime="20201029 18:14:13.512"></status>
</kw>
<msg timestamp="20201029 18:14:13.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.491" endtime="20201029 18:14:13.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.516" endtime="20201029 18:14:13.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.527" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:13.523" endtime="20201029 18:14:13.527"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.483" endtime="20201029 18:14:13.529"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.415" endtime="20201029 18:14:13.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.412" endtime="20201029 18:14:13.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:13.540" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:13.538" endtime="20201029 18:14:13.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.534" endtime="20201029 18:14:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.411" endtime="20201029 18:14:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.409" endtime="20201029 18:14:13.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.543" endtime="20201029 18:14:13.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.405" endtime="20201029 18:14:13.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.401" endtime="20201029 18:14:13.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.367" endtime="20201029 18:14:13.550"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.572" endtime="20201029 18:14:13.584"></status>
</kw>
<msg timestamp="20201029 18:14:13.586" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.569" endtime="20201029 18:14:13.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.592" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.588" endtime="20201029 18:14:13.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.594" endtime="20201029 18:14:13.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.562" endtime="20201029 18:14:13.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.557" endtime="20201029 18:14:13.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.619" endtime="20201029 18:14:13.992"></status>
</kw>
<msg timestamp="20201029 18:14:13.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189040028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.189056194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:13.616" endtime="20201029 18:14:14.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189040028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.189056194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:14.002" endtime="20201029 18:14:14.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.020" endtime="20201029 18:14:14.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.607" endtime="20201029 18:14:14.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.602" endtime="20201029 18:14:14.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:14.037" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.869999999934649e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.859999999...</msg>
<status status="PASS" starttime="20201029 18:14:14.029" endtime="20201029 18:14:14.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:14.048" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.869999999934649e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:14:14.040" endtime="20201029 18:14:14.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.062" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:14.058" endtime="20201029 18:14:14.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.068" level="INFO">VALUE: [0, 4.869999999934649e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7199999997360464e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.859999999939912e-07]</msg>
<status status="PASS" starttime="20201029 18:14:14.064" endtime="20201029 18:14:14.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.051" endtime="20201029 18:14:14.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.554" endtime="20201029 18:14:14.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.553" endtime="20201029 18:14:14.075"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.101" endtime="20201029 18:14:14.112"></status>
</kw>
<msg timestamp="20201029 18:14:14.113" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.098" endtime="20201029 18:14:14.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.119" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.115" endtime="20201029 18:14:14.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.122" endtime="20201029 18:14:14.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.088" endtime="20201029 18:14:14.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.081" endtime="20201029 18:14:14.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.145" endtime="20201029 18:14:14.529"></status>
</kw>
<msg timestamp="20201029 18:14:14.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189607361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.189607847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:14.142" endtime="20201029 18:14:14.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189607361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.189607847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:14.540" endtime="20201029 18:14:14.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.563" endtime="20201029 18:14:14.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.134" endtime="20201029 18:14:14.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.130" endtime="20201029 18:14:14.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:14.581" level="INFO">${RESULT} = [{'diff': 4.859999999939912e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:14.572" endtime="20201029 18:14:14.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:14.593" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201029 18:14:14.583" endtime="20201029 18:14:14.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.605" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:14.602" endtime="20201029 18:14:14.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.611" level="INFO">VALUE: [4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.859999999107245e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 18:14:14.607" endtime="20201029 18:14:14.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.596" endtime="20201029 18:14:14.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.077" endtime="20201029 18:14:14.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.076" endtime="20201029 18:14:14.615"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.636" endtime="20201029 18:14:14.648"></status>
</kw>
<msg timestamp="20201029 18:14:14.649" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.632" endtime="20201029 18:14:14.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.656" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.652" endtime="20201029 18:14:14.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.658" endtime="20201029 18:14:14.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.625" endtime="20201029 18:14:14.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.620" endtime="20201029 18:14:14.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.682" endtime="20201029 18:14:15.088"></status>
</kw>
<msg timestamp="20201029 18:14:15.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.709321778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.70932225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:14.678" endtime="20201029 18:14:15.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.709321778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.70932225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:15.099" endtime="20201029 18:14:15.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.122" endtime="20201029 18:14:15.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.671" endtime="20201029 18:14:15.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.666" endtime="20201029 18:14:15.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:15.140" level="INFO">${RESULT} = [{'diff': 4.7200000008462695e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07},...</msg>
<status status="PASS" starttime="20201029 18:14:15.130" endtime="20201029 18:14:15.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:15.152" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 18:14:15.142" endtime="20201029 18:14:15.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.163" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:15.161" endtime="20201029 18:14:15.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.169" level="INFO">VALUE: [4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.870000001044872e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:15.165" endtime="20201029 18:14:15.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.155" endtime="20201029 18:14:15.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.617" endtime="20201029 18:14:15.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.616" endtime="20201029 18:14:15.173"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.194" endtime="20201029 18:14:15.206"></status>
</kw>
<msg timestamp="20201029 18:14:15.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.190" endtime="20201029 18:14:15.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.213" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.209" endtime="20201029 18:14:15.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.216" endtime="20201029 18:14:15.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.183" endtime="20201029 18:14:15.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.178" endtime="20201029 18:14:15.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.241" endtime="20201029 18:14:15.609"></status>
</kw>
<msg timestamp="20201029 18:14:15.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.234862889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.234863375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.237" endtime="20201029 18:14:15.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.234862889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.234863375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.620" endtime="20201029 18:14:15.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.643" endtime="20201029 18:14:15.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.229" endtime="20201029 18:14:15.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.224" endtime="20201029 18:14:15.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:15.661" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:15.651" endtime="20201029 18:14:15.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:15.680" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 18:14:15.663" endtime="20201029 18:14:15.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.690" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:15.688" endtime="20201029 18:14:15.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.696" level="INFO">VALUE: [4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:15.693" endtime="20201029 18:14:15.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.682" endtime="20201029 18:14:15.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.175" endtime="20201029 18:14:15.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.174" endtime="20201029 18:14:15.701"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.722" endtime="20201029 18:14:15.733"></status>
</kw>
<msg timestamp="20201029 18:14:15.735" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.719" endtime="20201029 18:14:15.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.741" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.737" endtime="20201029 18:14:15.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.743" endtime="20201029 18:14:15.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.710" endtime="20201029 18:14:15.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.706" endtime="20201029 18:14:15.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.767" endtime="20201029 18:14:16.151"></status>
</kw>
<msg timestamp="20201029 18:14:16.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.784523653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.784524139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.763" endtime="20201029 18:14:16.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.784523653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.784524139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.162" endtime="20201029 18:14:16.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.184" endtime="20201029 18:14:16.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.756" endtime="20201029 18:14:16.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.751" endtime="20201029 18:14:16.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.202" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:16.192" endtime="20201029 18:14:16.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.214" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 18:14:16.204" endtime="20201029 18:14:16.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.224" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:16.222" endtime="20201029 18:14:16.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.230" level="INFO">VALUE: [4.860000000217468e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:16.226" endtime="20201029 18:14:16.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.216" endtime="20201029 18:14:16.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.702" endtime="20201029 18:14:16.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.701" endtime="20201029 18:14:16.234"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.259" endtime="20201029 18:14:16.272"></status>
</kw>
<msg timestamp="20201029 18:14:16.273" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.255" endtime="20201029 18:14:16.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.275" endtime="20201029 18:14:16.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.282" endtime="20201029 18:14:16.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.244" endtime="20201029 18:14:16.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.239" endtime="20201029 18:14:16.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.306" endtime="20201029 18:14:16.691"></status>
</kw>
<msg timestamp="20201029 18:14:16.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.305149389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.305149861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.303" endtime="20201029 18:14:16.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.305149389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.305149861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.702" endtime="20201029 18:14:16.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.724" endtime="20201029 18:14:16.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.295" endtime="20201029 18:14:16.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.290" endtime="20201029 18:14:16.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.742" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:16.733" endtime="20201029 18:14:16.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.755" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.8600...</msg>
<status status="PASS" starttime="20201029 18:14:16.745" endtime="20201029 18:14:16.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.765" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:16.763" endtime="20201029 18:14:16.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.770" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 18:14:16.767" endtime="20201029 18:14:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.757" endtime="20201029 18:14:16.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.236" endtime="20201029 18:14:16.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.235" endtime="20201029 18:14:16.775"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.795" endtime="20201029 18:14:16.806"></status>
</kw>
<msg timestamp="20201029 18:14:16.807" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.792" endtime="20201029 18:14:16.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.809" endtime="20201029 18:14:16.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.815" endtime="20201029 18:14:16.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.784" endtime="20201029 18:14:16.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.780" endtime="20201029 18:14:16.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.838" endtime="20201029 18:14:17.211"></status>
</kw>
<msg timestamp="20201029 18:14:17.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.833075389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.833075875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.835" endtime="20201029 18:14:17.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.833075389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.833075875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.223" endtime="20201029 18:14:17.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.245" endtime="20201029 18:14:17.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.828" endtime="20201029 18:14:17.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.823" endtime="20201029 18:14:17.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:17.263" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:14:17.253" endtime="20201029 18:14:17.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:17.274" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:14:17.265" endtime="20201029 18:14:17.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.293" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:17.291" endtime="20201029 18:14:17.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.299" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.870000003265318e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:17.296" endtime="20201029 18:14:17.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.276" endtime="20201029 18:14:17.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.776" endtime="20201029 18:14:17.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.776" endtime="20201029 18:14:17.304"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.327" endtime="20201029 18:14:17.338"></status>
</kw>
<msg timestamp="20201029 18:14:17.339" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.322" endtime="20201029 18:14:17.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.346" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.341" endtime="20201029 18:14:17.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.352" endtime="20201029 18:14:17.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.315" endtime="20201029 18:14:17.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.310" endtime="20201029 18:14:17.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.383" endtime="20201029 18:14:17.774"></status>
</kw>
<msg timestamp="20201029 18:14:17.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.358510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.358510542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.378" endtime="20201029 18:14:17.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.358510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.358510542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.785" endtime="20201029 18:14:17.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.807" endtime="20201029 18:14:17.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.370" endtime="20201029 18:14:17.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.363" endtime="20201029 18:14:17.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:17.827" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.860000002437914e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:17.817" endtime="20201029 18:14:17.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:17.839" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7200000041769385e-07, 4.870000003265318e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 18:14:17.829" endtime="20201029 18:14:17.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.849" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:17.847" endtime="20201029 18:14:17.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.855" level="INFO">VALUE: [4.73000000056345e-07, 4.7200000041769385e-07, 4.870000003265318e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 18:14:17.852" endtime="20201029 18:14:17.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.841" endtime="20201029 18:14:17.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.306" endtime="20201029 18:14:17.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.305" endtime="20201029 18:14:17.859"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.880" endtime="20201029 18:14:17.893"></status>
</kw>
<msg timestamp="20201029 18:14:17.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.877" endtime="20201029 18:14:17.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.896" endtime="20201029 18:14:17.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.902" endtime="20201029 18:14:17.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.869" endtime="20201029 18:14:17.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.865" endtime="20201029 18:14:17.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.926" endtime="20201029 18:14:18.319"></status>
</kw>
<msg timestamp="20201029 18:14:18.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.878050111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.878050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.923" endtime="20201029 18:14:18.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.878050111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.878050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.334" endtime="20201029 18:14:18.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.360" endtime="20201029 18:14:18.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.915" endtime="20201029 18:14:18.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.911" endtime="20201029 18:14:18.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:18.379" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:18.369" endtime="20201029 18:14:18.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:18.395" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.85...</msg>
<status status="PASS" starttime="20201029 18:14:18.381" endtime="20201029 18:14:18.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.405" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:18.403" endtime="20201029 18:14:18.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.411" level="INFO">VALUE: [4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:14:18.408" endtime="20201029 18:14:18.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.397" endtime="20201029 18:14:18.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.861" endtime="20201029 18:14:18.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.860" endtime="20201029 18:14:18.416"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.437" endtime="20201029 18:14:18.450"></status>
</kw>
<msg timestamp="20201029 18:14:18.451" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.433" endtime="20201029 18:14:18.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.454" endtime="20201029 18:14:18.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.460" endtime="20201029 18:14:18.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.426" endtime="20201029 18:14:18.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.421" endtime="20201029 18:14:18.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.484" endtime="20201029 18:14:18.851"></status>
</kw>
<msg timestamp="20201029 18:14:18.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.420473125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.420473597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.480" endtime="20201029 18:14:18.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.420473125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.420473597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.862" endtime="20201029 18:14:18.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.885" endtime="20201029 18:14:18.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.473" endtime="20201029 18:14:18.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.468" endtime="20201029 18:14:18.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:18.903" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:18.893" endtime="20201029 18:14:18.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:18.913" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 18:14:18.905" endtime="20201029 18:14:18.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.923" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:18.921" endtime="20201029 18:14:18.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.929" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:14:18.925" endtime="20201029 18:14:18.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.915" endtime="20201029 18:14:18.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.417" endtime="20201029 18:14:18.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.416" endtime="20201029 18:14:18.933"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.953" endtime="20201029 18:14:18.966"></status>
</kw>
<msg timestamp="20201029 18:14:18.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.950" endtime="20201029 18:14:18.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.970" endtime="20201029 18:14:18.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.976" endtime="20201029 18:14:18.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.943" endtime="20201029 18:14:18.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.938" endtime="20201029 18:14:18.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.999" endtime="20201029 18:14:19.388"></status>
</kw>
<msg timestamp="20201029 18:14:19.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.967950014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.967950486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.996" endtime="20201029 18:14:19.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.967950014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.967950486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.400" endtime="20201029 18:14:19.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.431" endtime="20201029 18:14:19.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.989" endtime="20201029 18:14:19.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.984" endtime="20201029 18:14:19.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.453" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.869999994383534e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:19.442" endtime="20201029 18:14:19.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.467" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.71999...</msg>
<status status="PASS" starttime="20201029 18:14:19.456" endtime="20201029 18:14:19.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.478" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:19.475" endtime="20201029 18:14:19.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.483" level="INFO">VALUE: [4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201029 18:14:19.480" endtime="20201029 18:14:19.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.469" endtime="20201029 18:14:19.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.935" endtime="20201029 18:14:19.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.934" endtime="20201029 18:14:19.488"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.508" endtime="20201029 18:14:19.519"></status>
</kw>
<msg timestamp="20201029 18:14:19.521" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.505" endtime="20201029 18:14:19.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.527" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.523" endtime="20201029 18:14:19.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.529" endtime="20201029 18:14:19.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.498" endtime="20201029 18:14:19.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.493" endtime="20201029 18:14:19.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.553" endtime="20201029 18:14:19.931"></status>
</kw>
<msg timestamp="20201029 18:14:19.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.474723292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.474723764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.549" endtime="20201029 18:14:19.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.474723292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.474723764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.942" endtime="20201029 18:14:19.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.965" endtime="20201029 18:14:19.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.542" endtime="20201029 18:14:19.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.537" endtime="20201029 18:14:19.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.983" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:19.974" endtime="20201029 18:14:19.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.995" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000...</msg>
<status status="PASS" starttime="20201029 18:14:19.985" endtime="20201029 18:14:19.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.006" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:20.004" endtime="20201029 18:14:20.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.012" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 18:14:20.008" endtime="20201029 18:14:20.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.997" endtime="20201029 18:14:20.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.490" endtime="20201029 18:14:20.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.488" endtime="20201029 18:14:20.016"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.037" endtime="20201029 18:14:20.048"></status>
</kw>
<msg timestamp="20201029 18:14:20.049" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.033" endtime="20201029 18:14:20.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.055" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.051" endtime="20201029 18:14:20.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.057" endtime="20201029 18:14:20.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.026" endtime="20201029 18:14:20.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.021" endtime="20201029 18:14:20.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.081" endtime="20201029 18:14:20.454"></status>
</kw>
<msg timestamp="20201029 18:14:20.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.019688403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.019688875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.077" endtime="20201029 18:14:20.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.019688403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.019688875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.466" endtime="20201029 18:14:20.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.489" endtime="20201029 18:14:20.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.070" endtime="20201029 18:14:20.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.065" endtime="20201029 18:14:20.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:20.507" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:20.497" endtime="20201029 18:14:20.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:20.517" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.730000...</msg>
<status status="PASS" starttime="20201029 18:14:20.509" endtime="20201029 18:14:20.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.528" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:20.525" endtime="20201029 18:14:20.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.533" level="INFO">VALUE: [4.7199999997360464e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:20.530" endtime="20201029 18:14:20.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.519" endtime="20201029 18:14:20.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.018" endtime="20201029 18:14:20.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.017" endtime="20201029 18:14:20.538"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.558" endtime="20201029 18:14:20.572"></status>
</kw>
<msg timestamp="20201029 18:14:20.573" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.555" endtime="20201029 18:14:20.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.580" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.576" endtime="20201029 18:14:20.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.582" endtime="20201029 18:14:20.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.547" endtime="20201029 18:14:20.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.543" endtime="20201029 18:14:20.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.605" endtime="20201029 18:14:21.015"></status>
</kw>
<msg timestamp="20201029 18:14:21.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.537964597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.537965069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.602" endtime="20201029 18:14:21.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.537964597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.537965069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.028" endtime="20201029 18:14:21.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.109" endtime="20201029 18:14:21.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.595" endtime="20201029 18:14:21.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.590" endtime="20201029 18:14:21.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.127" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.729999991681666e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.869999994383534e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:21.117" endtime="20201029 18:14:21.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.140" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 18:14:21.130" endtime="20201029 18:14:21.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.150" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.148" endtime="20201029 18:14:21.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.156" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:21.152" endtime="20201029 18:14:21.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.142" endtime="20201029 18:14:21.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.539" endtime="20201029 18:14:21.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.538" endtime="20201029 18:14:21.160"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.181" endtime="20201029 18:14:21.191"></status>
</kw>
<msg timestamp="20201029 18:14:21.193" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.177" endtime="20201029 18:14:21.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.199" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.195" endtime="20201029 18:14:21.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.201" endtime="20201029 18:14:21.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.170" endtime="20201029 18:14:21.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.165" endtime="20201029 18:14:21.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.225" endtime="20201029 18:14:21.600"></status>
</kw>
<msg timestamp="20201029 18:14:21.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.050073667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.050074153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.221" endtime="20201029 18:14:21.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.050073667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.050074153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.611" endtime="20201029 18:14:21.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.634" endtime="20201029 18:14:21.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.214" endtime="20201029 18:14:21.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.209" endtime="20201029 18:14:21.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.652" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.870000003265318e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:21.642" endtime="20201029 18:14:21.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.664" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.86000000...</msg>
<status status="PASS" starttime="20201029 18:14:21.654" endtime="20201029 18:14:21.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.675" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.672" endtime="20201029 18:14:21.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.680" level="INFO">VALUE: [4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 18:14:21.677" endtime="20201029 18:14:21.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.666" endtime="20201029 18:14:21.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.162" endtime="20201029 18:14:21.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.161" endtime="20201029 18:14:21.685"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.705" endtime="20201029 18:14:21.716"></status>
</kw>
<msg timestamp="20201029 18:14:21.717" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.702" endtime="20201029 18:14:21.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.719" endtime="20201029 18:14:21.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.726" endtime="20201029 18:14:21.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.694" endtime="20201029 18:14:21.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.690" endtime="20201029 18:14:21.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.749" endtime="20201029 18:14:22.120"></status>
</kw>
<msg timestamp="20201029 18:14:22.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.660949472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.660949944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.746" endtime="20201029 18:14:22.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.660949472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.660949944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.131" endtime="20201029 18:14:22.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.154" endtime="20201029 18:14:22.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.739" endtime="20201029 18:14:22.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.734" endtime="20201029 18:14:22.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.172" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:22.163" endtime="20201029 18:14:22.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.183" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 18:14:22.174" endtime="20201029 18:14:22.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.193" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:22.191" endtime="20201029 18:14:22.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.199" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.869999994383534e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:22.195" endtime="20201029 18:14:22.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.185" endtime="20201029 18:14:22.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.686" endtime="20201029 18:14:22.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.685" endtime="20201029 18:14:22.203"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.224" endtime="20201029 18:14:22.236"></status>
</kw>
<msg timestamp="20201029 18:14:22.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.220" endtime="20201029 18:14:22.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.240" endtime="20201029 18:14:22.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.246" endtime="20201029 18:14:22.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.213" endtime="20201029 18:14:22.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.208" endtime="20201029 18:14:22.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.269" endtime="20201029 18:14:22.647"></status>
</kw>
<msg timestamp="20201029 18:14:22.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.175407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.175407611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.266" endtime="20201029 18:14:22.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.175407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.175407611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.659" endtime="20201029 18:14:22.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.681" endtime="20201029 18:14:22.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.259" endtime="20201029 18:14:22.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.254" endtime="20201029 18:14:22.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.699" level="INFO">${RESULT} = [{'diff': 4.860000011319698e-07}, {'diff': 4.869999994383534e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.869999994383534e-07}, {'diff': 4.860000011319698e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:22.690" endtime="20201029 18:14:22.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.711" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000011319698e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.8599...</msg>
<status status="PASS" starttime="20201029 18:14:22.701" endtime="20201029 18:14:22.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.721" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:22.719" endtime="20201029 18:14:22.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.727" level="INFO">VALUE: [4.860000011319698e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.729999982799882e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201029 18:14:22.724" endtime="20201029 18:14:22.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.713" endtime="20201029 18:14:22.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.205" endtime="20201029 18:14:22.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.204" endtime="20201029 18:14:22.731"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.752" endtime="20201029 18:14:22.764"></status>
</kw>
<msg timestamp="20201029 18:14:22.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.748" endtime="20201029 18:14:22.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.772" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.767" endtime="20201029 18:14:22.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.774" endtime="20201029 18:14:22.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.741" endtime="20201029 18:14:22.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.736" endtime="20201029 18:14:22.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.797" endtime="20201029 18:14:23.184"></status>
</kw>
<msg timestamp="20201029 18:14:23.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.685609278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.68560975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:22.794" endtime="20201029 18:14:23.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.685609278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.68560975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:23.196" endtime="20201029 18:14:23.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.219" endtime="20201029 18:14:23.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.787" endtime="20201029 18:14:23.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.782" endtime="20201029 18:14:23.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.237" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.860000011319698e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:23.227" endtime="20201029 18:14:23.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.253" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.8599...</msg>
<status status="PASS" starttime="20201029 18:14:23.239" endtime="20201029 18:14:23.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.263" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:23.261" endtime="20201029 18:14:23.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.269" level="INFO">VALUE: [4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.870000012147102e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:23.265" endtime="20201029 18:14:23.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.255" endtime="20201029 18:14:23.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.733" endtime="20201029 18:14:23.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.732" endtime="20201029 18:14:23.273"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.293" endtime="20201029 18:14:23.305"></status>
</kw>
<msg timestamp="20201029 18:14:23.307" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.290" endtime="20201029 18:14:23.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.313" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.309" endtime="20201029 18:14:23.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.315" endtime="20201029 18:14:23.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.283" endtime="20201029 18:14:23.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.278" endtime="20201029 18:14:23.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.339" endtime="20201029 18:14:23.724"></status>
</kw>
<msg timestamp="20201029 18:14:23.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.202585472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.202585944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.336" endtime="20201029 18:14:23.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.202585472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.202585944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.736" endtime="20201029 18:14:23.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.758" endtime="20201029 18:14:23.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.328" endtime="20201029 18:14:23.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.324" endtime="20201029 18:14:23.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.776" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.869999994383534e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:23.767" endtime="20201029 18:14:23.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.787" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 18:14:23.778" endtime="20201029 18:14:23.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.797" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:23.795" endtime="20201029 18:14:23.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.803" level="INFO">VALUE: [4.7199999997360464e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.720000017499615e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:23.800" endtime="20201029 18:14:23.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.789" endtime="20201029 18:14:23.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.275" endtime="20201029 18:14:23.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.274" endtime="20201029 18:14:23.807"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.828" endtime="20201029 18:14:23.841"></status>
</kw>
<msg timestamp="20201029 18:14:23.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.825" endtime="20201029 18:14:23.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.848" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.844" endtime="20201029 18:14:23.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.850" endtime="20201029 18:14:23.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.817" endtime="20201029 18:14:23.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.813" endtime="20201029 18:14:23.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.874" endtime="20201029 18:14:24.228"></status>
</kw>
<msg timestamp="20201029 18:14:24.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.734025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.734025611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.870" endtime="20201029 18:14:24.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.734025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.734025611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.239" endtime="20201029 18:14:24.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.262" endtime="20201029 18:14:24.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.863" endtime="20201029 18:14:24.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.858" endtime="20201029 18:14:24.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.280" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.869999994383534e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:24.271" endtime="20201029 18:14:24.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.292" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999...</msg>
<status status="PASS" starttime="20201029 18:14:24.282" endtime="20201029 18:14:24.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.303" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:24.300" endtime="20201029 18:14:24.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.310" level="INFO">VALUE: [4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.720000017499615e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000012147102e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.870000012147102e-07]</msg>
<status status="PASS" starttime="20201029 18:14:24.306" endtime="20201029 18:14:24.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.294" endtime="20201029 18:14:24.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.809" endtime="20201029 18:14:24.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.808" endtime="20201029 18:14:24.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.551" endtime="20201029 18:14:24.316"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:13.361" endtime="20201029 18:14:24.318" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:24.338" endtime="20201029 18:14:24.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.333" endtime="20201029 18:14:24.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.396" endtime="20201029 18:14:24.411"></status>
</kw>
<msg timestamp="20201029 18:14:24.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.392" endtime="20201029 18:14:24.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.415" endtime="20201029 18:14:24.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.426" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:24.422" endtime="20201029 18:14:24.427"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:24.385" endtime="20201029 18:14:24.429"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:24.378" endtime="20201029 18:14:24.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.376" endtime="20201029 18:14:24.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:24.439" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:24.438" endtime="20201029 18:14:24.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.433" endtime="20201029 18:14:24.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.374" endtime="20201029 18:14:24.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.372" endtime="20201029 18:14:24.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.443" endtime="20201029 18:14:24.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.368" endtime="20201029 18:14:24.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.364" endtime="20201029 18:14:24.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.330" endtime="20201029 18:14:24.450"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.474" endtime="20201029 18:14:24.486"></status>
</kw>
<msg timestamp="20201029 18:14:24.487" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.471" endtime="20201029 18:14:24.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.494" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.490" endtime="20201029 18:14:24.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.496" endtime="20201029 18:14:24.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.461" endtime="20201029 18:14:24.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.457" endtime="20201029 18:14:24.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.519" endtime="20201029 18:14:24.888"></status>
</kw>
<msg timestamp="20201029 18:14:24.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126048361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126057125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.516" endtime="20201029 18:14:24.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126048361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126057125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.897" endtime="20201029 18:14:24.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.916" endtime="20201029 18:14:24.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.509" endtime="20201029 18:14:24.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.504" endtime="20201029 18:14:24.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.933" level="INFO">${RESULT} = [{'diff': 8.763999999994443e-06}, {'diff': 8.610999999991709e-06}, {'diff': 8.945000000010195e-06}, {'diff': 9.277000000001978e-06}, {'diff': 9.111000000006086e-06}, {'diff': 8.62499999998434e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:24.925" endtime="20201029 18:14:24.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.943" level="INFO">${OVERHEAD} = {'diff': [8.763999999994443e-06, 8.610999999991709e-06, 8.945000000010195e-06, 9.277000000001978e-06, 9.111000000006086e-06, 8.62499999998434e-06, 9.443999999997343e-06, 8.625000000012095e-06, 8.76399...</msg>
<status status="PASS" starttime="20201029 18:14:24.935" endtime="20201029 18:14:24.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.954" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:24.951" endtime="20201029 18:14:24.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.961" level="INFO">VALUE: [8.763999999994443e-06, 8.610999999991709e-06, 8.945000000010195e-06, 9.277000000001978e-06, 9.111000000006086e-06, 8.62499999998434e-06, 9.443999999997343e-06, 8.625000000012095e-06, 8.763999999994443e-06, 9.26400000000882e-06, 9.0969999999857e-06, 8.583000000006447e-06, 9.443999999997343e-06, 9.541000000001798e-06, 9.625000000013095e-06, 8.945000000010195e-06, 8.777999999987074e-06, 9.26400000000882e-06, 9.472000000010361e-06, 8.79200000000746e-06, 9.430000000004712e-06, 9.055000000007807e-06, 9.249999999988434e-06, 8.834000000013109e-06, 9.278000000001452e-06, 9.277000000001978e-06, 9.083999999992542e-06, 8.944000000010721e-06, 9.124999999998717e-06, 9.111000000006086e-06, 9.055000000007807e-06, 8.77800000001483e-06, 9.277999999973696e-06, 8.763999999994443e-06, 8.93000000001809e-06, 9.333999999999731e-06, 8.597999999998551e-06, 8.931000000017564e-06, 9.473000000009835e-06, 8.90299999997679e-06, 9.180999999996997e-06, 8.929999999990335e-06, 9.263999999981065e-06, 9.30600000001447e-06, 9.179999999997523e-06, 8.763999999994443e-06, 9.26400000000882e-06, 9.277000000001978e-06, 9.263999999981065e-06, 9.111000000006086e-06]</msg>
<status status="PASS" starttime="20201029 18:14:24.957" endtime="20201029 18:14:24.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.945" endtime="20201029 18:14:24.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.453" endtime="20201029 18:14:24.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.452" endtime="20201029 18:14:24.965"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.989" endtime="20201029 18:14:25.003"></status>
</kw>
<msg timestamp="20201029 18:14:25.004" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.985" endtime="20201029 18:14:25.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.007" endtime="20201029 18:14:25.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.014" endtime="20201029 18:14:25.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.976" endtime="20201029 18:14:25.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.971" endtime="20201029 18:14:25.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.041" endtime="20201029 18:14:25.404"></status>
</kw>
<msg timestamp="20201029 18:14:25.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126651583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126660181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.037" endtime="20201029 18:14:25.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126651583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126660181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.418" endtime="20201029 18:14:25.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.445" endtime="20201029 18:14:25.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.030" endtime="20201029 18:14:25.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.025" endtime="20201029 18:14:25.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:25.472" level="INFO">${RESULT} = [{'diff': 8.597999999998551e-06}, {'diff': 8.931000000017564e-06}, {'diff': 9.473000000009835e-06}, {'diff': 8.90299999997679e-06}, {'diff': 9.180999999996997e-06}, {'diff': 8.929999999990335e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:25.458" endtime="20201029 18:14:25.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:25.485" level="INFO">${OVERHEAD} = {'diff': [8.597999999998551e-06, 8.931000000017564e-06, 9.473000000009835e-06, 8.90299999997679e-06, 9.180999999996997e-06, 8.929999999990335e-06, 9.263999999981065e-06, 9.30600000001447e-06, 9.179999...</msg>
<status status="PASS" starttime="20201029 18:14:25.474" endtime="20201029 18:14:25.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.496" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:25.493" endtime="20201029 18:14:25.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.502" level="INFO">VALUE: [8.597999999998551e-06, 8.931000000017564e-06, 9.473000000009835e-06, 8.90299999997679e-06, 9.180999999996997e-06, 8.929999999990335e-06, 9.263999999981065e-06, 9.30600000001447e-06, 9.179999999997523e-06, 8.763999999994443e-06, 9.26400000000882e-06, 9.277000000001978e-06, 9.263999999981065e-06, 9.111000000006086e-06, 9.278000000056963e-06, 8.94500000003795e-06, 8.930999999989808e-06, 8.610999999936197e-06, 9.430999999948675e-06, 9.124999999943206e-06, 9.111000000006086e-06, 9.429999999976957e-06, 9.444999999996817e-06, 8.959000000086093e-06, 9.444000000025099e-06, 9.111000000006086e-06, 8.930999999989808e-06, 9.444999999996817e-06, 8.597999999970796e-06, 9.291999999994083e-06, 9.263999999897798e-06, 9.26400000000882e-06, 9.444000000025099e-06, 9.430999999948675e-06, 9.625000000013095e-06, 8.777000000015356e-06, 8.72200000001655e-06, 9.097000000068967e-06, 9.249999999960679e-06, 9.15300000003949e-06, 8.94399999995521e-06, 8.777999999987074e-06, 9.291999999994083e-06, 8.583000000061958e-06, 8.612000000018938e-06, 8.582999999950935e-06, 9.26400000000882e-06, 8.94500000003795e-06, 8.596999999999078e-06, 8.62499999998434e-06, 9.124999999943206e-06, 9.429999999976957e-06, 9.083000000020824e-06, 9.319999999979345e-06, 9.26400000000882e-06, 8.764000000049954e-06, 8.916999999941666e-06, 8.762999999967214e-06, 9.431000000059697e-06, 9.111000000006086e-06, 8.83299999998588e-06, 8.777000000015356e-06, 9.111000000006086e-06, 9.429999999976957e-06]</msg>
<status status="PASS" starttime="20201029 18:14:25.498" endtime="20201029 18:14:25.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.486" endtime="20201029 18:14:25.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.967" endtime="20201029 18:14:25.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.966" endtime="20201029 18:14:25.506"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.527" endtime="20201029 18:14:25.542"></status>
</kw>
<msg timestamp="20201029 18:14:25.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.524" endtime="20201029 18:14:25.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.550" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.546" endtime="20201029 18:14:25.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.552" endtime="20201029 18:14:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.516" endtime="20201029 18:14:25.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.512" endtime="20201029 18:14:25.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.577" endtime="20201029 18:14:25.973"></status>
</kw>
<msg timestamp="20201029 18:14:25.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.632703694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.632712819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.573" endtime="20201029 18:14:25.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.632703694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.632712819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.984" endtime="20201029 18:14:26.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.007" endtime="20201029 18:14:26.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.566" endtime="20201029 18:14:26.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.561" endtime="20201029 18:14:26.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.027" level="INFO">${RESULT} = [{'diff': 9.124999999943206e-06}, {'diff': 9.429999999976957e-06}, {'diff': 9.083000000020824e-06}, {'diff': 9.319999999979345e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.764000000049954e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:26.016" endtime="20201029 18:14:26.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.038" level="INFO">${OVERHEAD} = {'diff': [9.124999999943206e-06, 9.429999999976957e-06, 9.083000000020824e-06, 9.319999999979345e-06, 9.26400000000882e-06, 8.764000000049954e-06, 8.916999999941666e-06, 8.762999999967214e-06, 9.43100...</msg>
<status status="PASS" starttime="20201029 18:14:26.030" endtime="20201029 18:14:26.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.054" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.052" endtime="20201029 18:14:26.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.060" level="INFO">VALUE: [9.124999999943206e-06, 9.429999999976957e-06, 9.083000000020824e-06, 9.319999999979345e-06, 9.26400000000882e-06, 8.764000000049954e-06, 8.916999999941666e-06, 8.762999999967214e-06, 9.431000000059697e-06, 9.111000000006086e-06, 8.83299999998588e-06, 8.777000000015356e-06, 9.111000000006086e-06, 9.429999999976957e-06, 8.94399999995521e-06, 9.096999999957944e-06, 8.985999999877592e-06, 8.74999999989079e-06, 9.125000000054229e-06, 8.610999999936197e-06, 8.8200000001315e-06, 8.610999999936197e-06, 9.249999999960679e-06, 8.736000000064692e-06, 8.84800000000574e-06, 9.111000000006086e-06, 9.305000000070507e-06, 9.431000000059697e-06, 9.597000000027833e-06, 9.125000000054229e-06, 8.81900000004876e-06, 9.292000000105105e-06, 9.44500000010784e-06, 9.444999999885795e-06, 9.276999999974223e-06, 8.930999999989808e-06, 8.94399999995521e-06, 9.111000000006086e-06, 8.930999999989808e-06, 9.276999999974223e-06, 9.444000000025099e-06, 8.776999999904334e-06, 9.152999999928468e-06, 8.763999999938932e-06, 9.083000000131847e-06, 9.278000000056963e-06, 9.444000000025099e-06, 9.278000000056963e-06, 9.597999999888529e-06, 8.930999999989808e-06, 8.958000000003352e-06, 8.778000000209119e-06, 9.597000000027833e-06, 9.152999999928468e-06, 9.444000000025099e-06, 9.124999999832184e-06, 9.278000000056963e-06, 9.444000000025099e-06, 8.94399999995521e-06, 9.305999999931203e-06, 9.458999999933937e-06, 9.249999999960679e-06, 9.431000000059697e-06, 8.596999999888055e-06]</msg>
<status status="PASS" starttime="20201029 18:14:26.056" endtime="20201029 18:14:26.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.045" endtime="20201029 18:14:26.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.508" endtime="20201029 18:14:26.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.507" endtime="20201029 18:14:26.064"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.085" endtime="20201029 18:14:26.100"></status>
</kw>
<msg timestamp="20201029 18:14:26.101" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.082" endtime="20201029 18:14:26.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.104" endtime="20201029 18:14:26.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.110" endtime="20201029 18:14:26.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.074" endtime="20201029 18:14:26.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.070" endtime="20201029 18:14:26.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.136" endtime="20201029 18:14:26.517"></status>
</kw>
<msg timestamp="20201029 18:14:26.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.158268514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.158277472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.132" endtime="20201029 18:14:26.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.158268514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.158277472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.529" endtime="20201029 18:14:26.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.553" endtime="20201029 18:14:26.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.123" endtime="20201029 18:14:26.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.118" endtime="20201029 18:14:26.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.571" level="INFO">${RESULT} = [{'diff': 8.958000000003352e-06}, {'diff': 8.778000000209119e-06}, {'diff': 9.597000000027833e-06}, {'diff': 9.152999999928468e-06}, {'diff': 9.444000000025099e-06}, {'diff': 9.124999999832184e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:26.561" endtime="20201029 18:14:26.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.582" level="INFO">${OVERHEAD} = {'diff': [8.958000000003352e-06, 8.778000000209119e-06, 9.597000000027833e-06, 9.152999999928468e-06, 9.444000000025099e-06, 9.124999999832184e-06, 9.278000000056963e-06, 9.444000000025099e-06, 8.9439...</msg>
<status status="PASS" starttime="20201029 18:14:26.573" endtime="20201029 18:14:26.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.592" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.590" endtime="20201029 18:14:26.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.605" level="INFO">VALUE: [8.958000000003352e-06, 8.778000000209119e-06, 9.597000000027833e-06, 9.152999999928468e-06, 9.444000000025099e-06, 9.124999999832184e-06, 9.278000000056963e-06, 9.444000000025099e-06, 8.94399999995521e-06, 9.305999999931203e-06, 9.458999999933937e-06, 9.249999999960679e-06, 9.431000000059697e-06, 8.596999999888055e-06, 8.569000000013816e-06, 9.429999999976957e-06, 8.764000000160976e-06, 9.374999999867129e-06, 8.597999999970796e-06, 8.777000000126378e-06, 9.458000000073241e-06, 9.625000000124118e-06, 9.082999999909802e-06, 8.91700000016371e-06, 9.096999999957944e-06, 9.263000000148125e-06, 9.305999999931203e-06, 9.431000000059697e-06, 8.583000000061958e-06, 9.222000000086439e-06, 9.26400000000882e-06, 8.94500000003795e-06, 9.584000000062431e-06, 8.94399999995521e-06, 8.777999999987074e-06, 9.499999999995623e-06, 8.944000000177255e-06, 9.444999999885795e-06, 9.111000000006086e-06, 9.457999999851197e-06, 9.111000000006086e-06, 8.584000000144698e-06, 9.277999999834918e-06, 8.91700000016371e-06, 8.94399999995521e-06, 8.958000000003352e-06, 8.736000000064692e-06, 8.985999999877592e-06, 9.110999999784042e-06, 9.111999999866782e-06, 8.94399999995521e-06, 9.444000000025099e-06, 9.26400000000882e-06, 9.458999999933937e-06, 9.26400000000882e-06, 9.278000000056963e-06, 9.111000000006086e-06, 9.457999999851197e-06, 8.596999999888055e-06, 9.235999999912536e-06, 8.597999999970796e-06, 9.429999999976957e-06, 9.000000000147779e-06, 8.763000000078236e-06]</msg>
<status status="PASS" starttime="20201029 18:14:26.601" endtime="20201029 18:14:26.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.584" endtime="20201029 18:14:26.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.066" endtime="20201029 18:14:26.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.065" endtime="20201029 18:14:26.610"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.633" endtime="20201029 18:14:26.645"></status>
</kw>
<msg timestamp="20201029 18:14:26.646" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.629" endtime="20201029 18:14:26.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.652" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.648" endtime="20201029 18:14:26.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.655" endtime="20201029 18:14:26.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.622" endtime="20201029 18:14:26.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.615" endtime="20201029 18:14:26.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.678" endtime="20201029 18:14:27.040"></status>
</kw>
<msg timestamp="20201029 18:14:27.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.706184028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.706192972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.675" endtime="20201029 18:14:27.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.706184028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.706192972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.052" endtime="20201029 18:14:27.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.074" endtime="20201029 18:14:27.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.668" endtime="20201029 18:14:27.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.663" endtime="20201029 18:14:27.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:27.092" level="INFO">${RESULT} = [{'diff': 8.94399999995521e-06}, {'diff': 9.444000000025099e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.458999999933937e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.278000000056963e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:27.082" endtime="20201029 18:14:27.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:27.104" level="INFO">${OVERHEAD} = {'diff': [8.94399999995521e-06, 9.444000000025099e-06, 9.26400000000882e-06, 9.458999999933937e-06, 9.26400000000882e-06, 9.278000000056963e-06, 9.111000000006086e-06, 9.457999999851197e-06, 8.5969999...</msg>
<status status="PASS" starttime="20201029 18:14:27.094" endtime="20201029 18:14:27.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.115" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:27.112" endtime="20201029 18:14:27.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.120" level="INFO">VALUE: [8.94399999995521e-06, 9.444000000025099e-06, 9.26400000000882e-06, 9.458999999933937e-06, 9.26400000000882e-06, 9.278000000056963e-06, 9.111000000006086e-06, 9.457999999851197e-06, 8.596999999888055e-06, 9.235999999912536e-06, 8.597999999970796e-06, 9.429999999976957e-06, 9.000000000147779e-06, 8.763000000078236e-06, 9.276999999752178e-06, 9.26400000000882e-06, 9.597000000027833e-06, 8.930999999989808e-06, 8.97199999982945e-06, 8.777000000126378e-06, 9.125000000054229e-06, 9.278000000279008e-06, 9.597000000027833e-06, 8.930999999989808e-06, 9.110999999784042e-06, 9.443999999803054e-06, 8.930000000351157e-06, 8.91600000008097e-06, 9.444999999885795e-06, 8.944999999815906e-06, 8.597000000332145e-06, 8.944000000177255e-06, 8.77799999976503e-06, 9.098000000040685e-06, 9.276999999752178e-06, 8.611000000158242e-06, 9.12499999961014e-06, 9.291999999661016e-06, 9.429999999976957e-06, 8.611999999796893e-06, 9.486000000169525e-06, 9.125000000054229e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.583000000201736e-06, 8.66700000035081e-06, 9.277000000196267e-06, 8.596999999888055e-06, 8.763999999938932e-06, 8.777000000126378e-06, 8.944000000177255e-06, 8.778000000209119e-06, 9.292000000105105e-06, 9.1670000004207e-06, 8.91600000008097e-06, 9.277000000196267e-06, 8.611000000158242e-06, 9.444999999885795e-06, 9.457999999629152e-06, 9.41599999970677e-06, 8.583000000061958e-06, 8.736000000286737e-06, 9.458000000073241e-06, 9.26400000000882e-06]</msg>
<status status="PASS" starttime="20201029 18:14:27.117" endtime="20201029 18:14:27.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.106" endtime="20201029 18:14:27.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.612" endtime="20201029 18:14:27.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.611" endtime="20201029 18:14:27.125"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.145" endtime="20201029 18:14:27.157"></status>
</kw>
<msg timestamp="20201029 18:14:27.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.142" endtime="20201029 18:14:27.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.165" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.161" endtime="20201029 18:14:27.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.167" endtime="20201029 18:14:27.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.134" endtime="20201029 18:14:27.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.130" endtime="20201029 18:14:27.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.202" endtime="20201029 18:14:27.588"></status>
</kw>
<msg timestamp="20201029 18:14:27.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.243851306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.24386025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:27.197" endtime="20201029 18:14:27.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.243851306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.24386025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:27.599" endtime="20201029 18:14:27.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.621" endtime="20201029 18:14:27.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.185" endtime="20201029 18:14:27.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.180" endtime="20201029 18:14:27.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:27.639" level="INFO">${RESULT} = [{'diff': 8.944000000177255e-06}, {'diff': 8.778000000209119e-06}, {'diff': 9.292000000105105e-06}, {'diff': 9.1670000004207e-06}, {'diff': 8.91600000008097e-06}, {'diff': 9.277000000196267e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:27.630" endtime="20201029 18:14:27.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:27.653" level="INFO">${OVERHEAD} = {'diff': [8.944000000177255e-06, 8.778000000209119e-06, 9.292000000105105e-06, 9.1670000004207e-06, 8.91600000008097e-06, 9.277000000196267e-06, 8.611000000158242e-06, 9.444999999885795e-06, 9.4579999...</msg>
<status status="PASS" starttime="20201029 18:14:27.642" endtime="20201029 18:14:27.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.664" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:27.661" endtime="20201029 18:14:27.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.669" level="INFO">VALUE: [8.944000000177255e-06, 8.778000000209119e-06, 9.292000000105105e-06, 9.1670000004207e-06, 8.91600000008097e-06, 9.277000000196267e-06, 8.611000000158242e-06, 9.444999999885795e-06, 9.457999999629152e-06, 9.41599999970677e-06, 8.583000000061958e-06, 8.736000000286737e-06, 9.458000000073241e-06, 9.26400000000882e-06, 8.945000000259995e-06, 9.096999999957944e-06, 9.431000000059697e-06, 9.277999999834918e-06, 8.62499999998434e-06, 9.597000000027833e-06, 8.610999999714153e-06, 9.139000000324415e-06, 8.763999999938932e-06, 9.096999999957944e-06, 9.06900000030575e-06, 9.125000000054229e-06, 9.278000000279008e-06, 8.804999999778573e-06, 8.944999999815906e-06, 9.249999999738634e-06, 9.111000000228131e-06, 8.8200000001315e-06, 9.112000000310871e-06, 8.763999999938932e-06, 8.77799999976503e-06, 9.278000000279008e-06, 9.292000000105105e-06, 8.792000000035216e-06, 9.597000000027833e-06, 8.81900000004876e-06, 9.098000000040685e-06, 9.458000000073241e-06, 9.305999999931203e-06, 8.776999999682289e-06, 9.31899999967456e-06, 9.180000000164057e-06, 9.652000000137662e-06, 8.763999999938932e-06, 8.583000000061958e-06, 8.77799999976503e-06, 8.945000000259995e-06, 9.444000000247144e-06, 8.81900000004876e-06, 8.77799999976503e-06, 8.763999999938932e-06, 9.111000000228131e-06, 9.430999999615608e-06, 9.125000000054229e-06, 9.431000000059697e-06, 9.292000000105105e-06, 9.292000000105105e-06, 9.111000000228131e-06, 8.776999999682289e-06, 9.346999999770844e-06]</msg>
<status status="PASS" starttime="20201029 18:14:27.666" endtime="20201029 18:14:27.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.655" endtime="20201029 18:14:27.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.126" endtime="20201029 18:14:27.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.125" endtime="20201029 18:14:27.674"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.694" endtime="20201029 18:14:27.706"></status>
</kw>
<msg timestamp="20201029 18:14:27.707" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.691" endtime="20201029 18:14:27.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.714" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.710" endtime="20201029 18:14:27.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.716" endtime="20201029 18:14:27.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.684" endtime="20201029 18:14:27.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.679" endtime="20201029 18:14:27.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.740" endtime="20201029 18:14:28.113"></status>
</kw>
<msg timestamp="20201029 18:14:28.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.746078361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.746087306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.736" endtime="20201029 18:14:28.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.746078361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.746087306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.124" endtime="20201029 18:14:28.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.147" endtime="20201029 18:14:28.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.729" endtime="20201029 18:14:28.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.724" endtime="20201029 18:14:28.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:28.165" level="INFO">${RESULT} = [{'diff': 8.945000000259995e-06}, {'diff': 9.444000000247144e-06}, {'diff': 8.81900000004876e-06}, {'diff': 8.77799999976503e-06}, {'diff': 8.763999999938932e-06}, {'diff': 9.111000000228131e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:28.155" endtime="20201029 18:14:28.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:28.176" level="INFO">${OVERHEAD} = {'diff': [8.945000000259995e-06, 9.444000000247144e-06, 8.81900000004876e-06, 8.77799999976503e-06, 8.763999999938932e-06, 9.111000000228131e-06, 9.430999999615608e-06, 9.125000000054229e-06, 9.431000...</msg>
<status status="PASS" starttime="20201029 18:14:28.167" endtime="20201029 18:14:28.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.186" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:28.184" endtime="20201029 18:14:28.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.193" level="INFO">VALUE: [8.945000000259995e-06, 9.444000000247144e-06, 8.81900000004876e-06, 8.77799999976503e-06, 8.763999999938932e-06, 9.111000000228131e-06, 9.430999999615608e-06, 9.125000000054229e-06, 9.431000000059697e-06, 9.292000000105105e-06, 9.292000000105105e-06, 9.111000000228131e-06, 8.776999999682289e-06, 9.346999999770844e-06, 9.096999999957944e-06, 9.250000000182723e-06, 9.083000000131847e-06, 8.596999999888055e-06, 8.763999999938932e-06, 8.889000000067426e-06, 9.082999999687758e-06, 8.944000000177255e-06, 9.277999999834918e-06, 9.443999999803054e-06, 9.304999999848462e-06, 9.111000000228131e-06, 9.26400000000882e-06, 9.083000000131847e-06, 9.26400000000882e-06, 8.999999999925734e-06, 9.250000000182723e-06, 9.61099999985393e-06, 8.763999999938932e-06, 8.610999999714153e-06, 8.597000000332145e-06, 8.681000000176908e-06, 9.26400000000882e-06, 9.444999999885795e-06, 9.111000000228131e-06, 9.431000000059697e-06, 9.028000000022018e-06, 8.763999999938932e-06, 9.097000000402033e-06, 8.944000000177255e-06, 8.763999999938932e-06, 9.41699999978951e-06, 8.944000000177255e-06, 9.26400000000882e-06, 9.26299999992608e-06, 8.611000000158242e-06, 9.429999999976957e-06, 8.596999999888055e-06, 8.930999999989808e-06, 9.597000000027833e-06, 8.860999999971142e-06, 9.597000000027833e-06, 8.91700000016371e-06, 9.277999999834918e-06, 8.792000000035216e-06, 9.26400000000882e-06, 9.026999999939278e-06, 9.07000000038849e-06, 9.429999999976957e-06, 8.958000000003352e-06]</msg>
<status status="PASS" starttime="20201029 18:14:28.190" endtime="20201029 18:14:28.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.178" endtime="20201029 18:14:28.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.675" endtime="20201029 18:14:28.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.675" endtime="20201029 18:14:28.198"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.220" endtime="20201029 18:14:28.232"></status>
</kw>
<msg timestamp="20201029 18:14:28.233" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.215" endtime="20201029 18:14:28.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.240" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.235" endtime="20201029 18:14:28.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.242" endtime="20201029 18:14:28.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.207" endtime="20201029 18:14:28.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.203" endtime="20201029 18:14:28.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.265" endtime="20201029 18:14:28.632"></status>
</kw>
<msg timestamp="20201029 18:14:28.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.285231139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.285240569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.262" endtime="20201029 18:14:28.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.285231139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.285240569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.644" endtime="20201029 18:14:28.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.666" endtime="20201029 18:14:28.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.255" endtime="20201029 18:14:28.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.250" endtime="20201029 18:14:28.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:28.685" level="INFO">${RESULT} = [{'diff': 9.429999999976957e-06}, {'diff': 8.596999999888055e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.597000000027833e-06}, {'diff': 8.860999999971142e-06}, {'diff': 9.597000000027833e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:28.675" endtime="20201029 18:14:28.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:28.698" level="INFO">${OVERHEAD} = {'diff': [9.429999999976957e-06, 8.596999999888055e-06, 8.930999999989808e-06, 9.597000000027833e-06, 8.860999999971142e-06, 9.597000000027833e-06, 8.91700000016371e-06, 9.277999999834918e-06, 8.79200...</msg>
<status status="PASS" starttime="20201029 18:14:28.688" endtime="20201029 18:14:28.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.708" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:28.706" endtime="20201029 18:14:28.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.714" level="INFO">VALUE: [9.429999999976957e-06, 8.596999999888055e-06, 8.930999999989808e-06, 9.597000000027833e-06, 8.860999999971142e-06, 9.597000000027833e-06, 8.91700000016371e-06, 9.277999999834918e-06, 8.792000000035216e-06, 9.26400000000882e-06, 9.026999999939278e-06, 9.07000000038849e-06, 9.429999999976957e-06, 8.958000000003352e-06, 8.791999999591127e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.12499999961014e-06, 9.096999999957944e-06, 8.805999999861314e-06, 9.111000000228131e-06, 8.77799999976503e-06, 8.62499999998434e-06, 8.62499999998434e-06, 8.778000000209119e-06, 8.792000000035216e-06, 8.958000000003352e-06, 9.402999999963413e-06, 8.764000000383021e-06, 8.791000000396565e-06, 9.042000000292205e-06, 9.153000000150513e-06, 8.597000000332145e-06, 8.959000000086093e-06, 9.277999999834918e-06, 8.763999999938932e-06, 9.444999999885795e-06, 8.638999999810437e-06, 8.778000000209119e-06, 9.125000000054229e-06, 9.292000000105105e-06, 9.110999999784042e-06, 9.443999999803054e-06, 9.292000000105105e-06, 9.041999999848116e-06, 9.096999999957944e-06, 8.611000000158242e-06, 9.096999999957944e-06, 9.277999999834918e-06, 9.389000000137315e-06, 9.250000000182723e-06, 8.584000000144698e-06, 9.110999999784042e-06, 9.26299999992608e-06, 8.930999999989808e-06, 9.111000000228131e-06, 8.610999999714153e-06, 8.596999999888055e-06, 8.930999999989808e-06, 8.943999999733165e-06, 8.792000000035216e-06, 9.444999999885795e-06, 9.276999999752178e-06, 9.61100000029802e-06]</msg>
<status status="PASS" starttime="20201029 18:14:28.710" endtime="20201029 18:14:28.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.700" endtime="20201029 18:14:28.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.200" endtime="20201029 18:14:28.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.199" endtime="20201029 18:14:28.718"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.739" endtime="20201029 18:14:28.751"></status>
</kw>
<msg timestamp="20201029 18:14:28.752" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.735" endtime="20201029 18:14:28.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.758" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.754" endtime="20201029 18:14:28.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.761" endtime="20201029 18:14:28.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.728" endtime="20201029 18:14:28.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.723" endtime="20201029 18:14:28.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.784" endtime="20201029 18:14:29.159"></status>
</kw>
<msg timestamp="20201029 18:14:29.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.801934556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.801943806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.781" endtime="20201029 18:14:29.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.801934556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.801943806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.170" endtime="20201029 18:14:29.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.192" endtime="20201029 18:14:29.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.773" endtime="20201029 18:14:29.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.769" endtime="20201029 18:14:29.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:29.211" level="INFO">${RESULT} = [{'diff': 9.250000000182723e-06}, {'diff': 8.584000000144698e-06}, {'diff': 9.110999999784042e-06}, {'diff': 9.26299999992608e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.111000000228131e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:29.201" endtime="20201029 18:14:29.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:29.224" level="INFO">${OVERHEAD} = {'diff': [9.250000000182723e-06, 8.584000000144698e-06, 9.110999999784042e-06, 9.26299999992608e-06, 8.930999999989808e-06, 9.111000000228131e-06, 8.610999999714153e-06, 8.596999999888055e-06, 8.93099...</msg>
<status status="PASS" starttime="20201029 18:14:29.213" endtime="20201029 18:14:29.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.234" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:29.231" endtime="20201029 18:14:29.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.239" level="INFO">VALUE: [9.250000000182723e-06, 8.584000000144698e-06, 9.110999999784042e-06, 9.26299999992608e-06, 8.930999999989808e-06, 9.111000000228131e-06, 8.610999999714153e-06, 8.596999999888055e-06, 8.930999999989808e-06, 8.943999999733165e-06, 8.792000000035216e-06, 9.444999999885795e-06, 9.276999999752178e-06, 9.61100000029802e-06, 8.582999999617869e-06, 9.278000000279008e-06, 9.416999999345421e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.096999999513855e-06, 8.612000000240982e-06, 9.402999999963413e-06, 9.26400000000882e-06, 8.764000000383021e-06, 8.945000000259995e-06, 8.930999999989808e-06, 9.083000000131847e-06, 9.459000000155982e-06, 9.110999999784042e-06, 8.611000000158242e-06, 9.430999999615608e-06, 9.096999999513855e-06, 8.959000000530182e-06, 9.098000000484774e-06, 8.957999999559263e-06, 8.77799999976503e-06, 8.583999999700609e-06, 8.764000000383021e-06, 9.402999999963413e-06, 9.110999999784042e-06, 8.959000000530182e-06, 9.000000000369823e-06, 9.26400000000882e-06, 9.458000000073241e-06, 8.806000000305403e-06, 9.305999999931203e-06, 8.944000000177255e-06, 9.26299999992608e-06, 8.611000000158242e-06, 9.291999999661016e-06, 8.97299999991219e-06, 8.87499999979724e-06, 9.097000000402033e-06, 8.959000000530182e-06, 9.583999999840387e-06, 9.443999999803054e-06, 9.26400000000882e-06, 9.444999999885795e-06, 9.430999999615608e-06, 9.459000000155982e-06, 8.792000000035216e-06, 9.430999999615608e-06, 9.292000000549194e-06]</msg>
<status status="PASS" starttime="20201029 18:14:29.236" endtime="20201029 18:14:29.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.225" endtime="20201029 18:14:29.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.720" endtime="20201029 18:14:29.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.719" endtime="20201029 18:14:29.244"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.264" endtime="20201029 18:14:29.276"></status>
</kw>
<msg timestamp="20201029 18:14:29.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.261" endtime="20201029 18:14:29.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.284" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.280" endtime="20201029 18:14:29.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.286" endtime="20201029 18:14:29.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.254" endtime="20201029 18:14:29.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.249" endtime="20201029 18:14:29.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.310" endtime="20201029 18:14:29.687"></status>
</kw>
<msg timestamp="20201029 18:14:29.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.309901847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.309911139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.306" endtime="20201029 18:14:29.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.309901847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.309911139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.699" endtime="20201029 18:14:29.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.721" endtime="20201029 18:14:29.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.299" endtime="20201029 18:14:29.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.294" endtime="20201029 18:14:29.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:29.741" level="INFO">${RESULT} = [{'diff': 9.291999999661016e-06}, {'diff': 8.97299999991219e-06}, {'diff': 8.87499999979724e-06}, {'diff': 9.097000000402033e-06}, {'diff': 8.959000000530182e-06}, {'diff': 9.583999999840387e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:29.731" endtime="20201029 18:14:29.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:29.752" level="INFO">${OVERHEAD} = {'diff': [9.291999999661016e-06, 8.97299999991219e-06, 8.87499999979724e-06, 9.097000000402033e-06, 8.959000000530182e-06, 9.583999999840387e-06, 9.443999999803054e-06, 9.26400000000882e-06, 9.4449999...</msg>
<status status="PASS" starttime="20201029 18:14:29.743" endtime="20201029 18:14:29.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.762" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:29.759" endtime="20201029 18:14:29.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.767" level="INFO">VALUE: [9.291999999661016e-06, 8.97299999991219e-06, 8.87499999979724e-06, 9.097000000402033e-06, 8.959000000530182e-06, 9.583999999840387e-06, 9.443999999803054e-06, 9.26400000000882e-06, 9.444999999885795e-06, 9.430999999615608e-06, 9.459000000155982e-06, 8.792000000035216e-06, 9.430999999615608e-06, 9.292000000549194e-06, 8.930000000795246e-06, 8.583999999700609e-06, 8.625000000428429e-06, 8.764000000383021e-06, 8.81900000049285e-06, 9.4170000002336e-06, 8.750000000112834e-06, 9.26400000000882e-06, 9.638999999950215e-06, 9.444999999885795e-06, 8.943999999289076e-06, 9.098000000484774e-06, 9.444999999885795e-06, 9.096999999513855e-06, 8.929999999907068e-06, 9.097000000402033e-06, 8.556000000048414e-06, 9.319000000118649e-06, 8.5700000003186e-06, 9.111999999866782e-06, 8.889000000067426e-06, 8.709000000273193e-06, 8.778000000653208e-06, 9.430999999615608e-06, 9.278000000279008e-06, 8.583000000506047e-06, 9.222000000086439e-06, 8.596999999888055e-06, 8.597999999970796e-06, 8.611000000158242e-06, 8.625000000428429e-06, 8.596999999888055e-06, 8.582999999617869e-06, 9.26400000000882e-06, 9.097000000402033e-06, 8.77799999976503e-06, 9.278000000279008e-06, 9.028000000022018e-06, 9.429999999532868e-06, 9.430999999615608e-06, 8.930999999989808e-06, 8.596999999888055e-06, 9.444999999885795e-06, 8.764000000383021e-06, 9.26400000000882e-06, 9.125000000054229e-06, 9.443999999803054e-06, 9.444999999885795e-06, 8.986000000099637e-06, 9.110999999784042e-06]</msg>
<status status="PASS" starttime="20201029 18:14:29.764" endtime="20201029 18:14:29.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.753" endtime="20201029 18:14:29.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.245" endtime="20201029 18:14:29.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.245" endtime="20201029 18:14:29.772"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.792" endtime="20201029 18:14:29.806"></status>
</kw>
<msg timestamp="20201029 18:14:29.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.789" endtime="20201029 18:14:29.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.809" endtime="20201029 18:14:29.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.816" endtime="20201029 18:14:29.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.782" endtime="20201029 18:14:29.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.777" endtime="20201029 18:14:29.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.839" endtime="20201029 18:14:30.219"></status>
</kw>
<msg timestamp="20201029 18:14:30.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.826331986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.826341264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.836" endtime="20201029 18:14:30.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.826331986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.826341264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.230" endtime="20201029 18:14:30.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.252" endtime="20201029 18:14:30.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.829" endtime="20201029 18:14:30.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.824" endtime="20201029 18:14:30.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.271" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 9.028000000022018e-06}, {'diff': 9.429999999532868e-06}, {'diff': 9.430999999615608e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.596999999888055e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:30.261" endtime="20201029 18:14:30.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:30.283" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 9.028000000022018e-06, 9.429999999532868e-06, 9.430999999615608e-06, 8.930999999989808e-06, 8.596999999888055e-06, 9.444999999885795e-06, 8.764000000383021e-06, 9.2640...</msg>
<status status="PASS" starttime="20201029 18:14:30.273" endtime="20201029 18:14:30.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.293" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:30.291" endtime="20201029 18:14:30.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.299" level="INFO">VALUE: [9.278000000279008e-06, 9.028000000022018e-06, 9.429999999532868e-06, 9.430999999615608e-06, 8.930999999989808e-06, 8.596999999888055e-06, 9.444999999885795e-06, 8.764000000383021e-06, 9.26400000000882e-06, 9.125000000054229e-06, 9.443999999803054e-06, 9.444999999885795e-06, 8.986000000099637e-06, 9.110999999784042e-06, 9.110999999784042e-06, 8.625000000428429e-06, 9.485999999725436e-06, 8.638999999810437e-06, 9.527999999647818e-06, 8.87499999979724e-06, 9.097000000402033e-06, 9.610999999409842e-06, 9.444999999885795e-06, 9.291999999661016e-06, 8.929999999907068e-06, 8.889000000067426e-06, 8.776999999682289e-06, 9.110999999784042e-06, 8.541999999778227e-06, 9.26400000000882e-06, 9.11100000067222e-06, 8.792000000035216e-06, 9.097000000402033e-06, 9.292000000549194e-06, 8.943999999289076e-06, 9.139000000324415e-06, 8.625000000428429e-06, 9.096999999513855e-06, 8.750000000112834e-06, 8.77799999976503e-06, 9.000000000369823e-06, 8.945000000259995e-06, 9.110999999784042e-06, 8.792000000035216e-06, 8.764000000383021e-06, 8.611000000158242e-06, 8.792000000035216e-06, 9.263000000814259e-06, 8.915999999636881e-06, 8.91600000052506e-06, 9.125000000054229e-06, 9.096999999513855e-06, 8.596999999888055e-06, 8.943999999289076e-06, 9.097000000402033e-06, 9.277000000196267e-06, 8.611000000158242e-06, 8.944000000177255e-06, 9.26400000000882e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.277999999390829e-06, 9.277999999390829e-06, 8.611000000158242e-06]</msg>
<status status="PASS" starttime="20201029 18:14:30.295" endtime="20201029 18:14:30.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.285" endtime="20201029 18:14:30.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.774" endtime="20201029 18:14:30.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.773" endtime="20201029 18:14:30.303"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.324" endtime="20201029 18:14:30.336"></status>
</kw>
<msg timestamp="20201029 18:14:30.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.320" endtime="20201029 18:14:30.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.343" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.339" endtime="20201029 18:14:30.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.345" endtime="20201029 18:14:30.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.313" endtime="20201029 18:14:30.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.308" endtime="20201029 18:14:30.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.369" endtime="20201029 18:14:30.736"></status>
</kw>
<msg timestamp="20201029 18:14:30.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.345098528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.345107653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.366" endtime="20201029 18:14:30.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.345098528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.345107653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.747" endtime="20201029 18:14:30.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.770" endtime="20201029 18:14:30.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.358" endtime="20201029 18:14:30.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.354" endtime="20201029 18:14:30.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.788" level="INFO">${RESULT} = [{'diff': 9.125000000054229e-06}, {'diff': 9.096999999513855e-06}, {'diff': 8.596999999888055e-06}, {'diff': 8.943999999289076e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.277000000196267e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:30.779" endtime="20201029 18:14:30.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:30.801" level="INFO">${OVERHEAD} = {'diff': [9.125000000054229e-06, 9.096999999513855e-06, 8.596999999888055e-06, 8.943999999289076e-06, 9.097000000402033e-06, 9.277000000196267e-06, 8.611000000158242e-06, 8.944000000177255e-06, 9.2640...</msg>
<status status="PASS" starttime="20201029 18:14:30.791" endtime="20201029 18:14:30.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.811" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:30.809" endtime="20201029 18:14:30.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.817" level="INFO">VALUE: [9.125000000054229e-06, 9.096999999513855e-06, 8.596999999888055e-06, 8.943999999289076e-06, 9.097000000402033e-06, 9.277000000196267e-06, 8.611000000158242e-06, 8.944000000177255e-06, 9.26400000000882e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.277999999390829e-06, 9.277999999390829e-06, 8.611000000158242e-06, 9.083000000131847e-06, 9.458000000073241e-06, 9.277000000196267e-06, 9.444999999885795e-06, 8.62499999954025e-06, 8.945000000259995e-06, 8.763999999494843e-06, 8.818999999604671e-06, 8.584000000588787e-06, 8.762999999412102e-06, 8.929999999907068e-06, 9.290999999578275e-06, 9.084000000214587e-06, 9.097000000402033e-06, 8.929999999907068e-06, 9.277000000196267e-06, 9.430000000421046e-06, 8.958000000447441e-06, 9.097999999596595e-06, 8.77799999976503e-06, 8.930999999989808e-06, 8.97199999982945e-06, 8.610999999270064e-06, 8.930999999989808e-06, 9.444999999885795e-06, 9.291999999661016e-06, 8.945000000259995e-06, 8.97199999982945e-06, 9.278000000279008e-06, 9.499999999995623e-06, 9.26400000000882e-06, 9.097000000402033e-06, 9.388000000498664e-06, 9.443999999803054e-06, 9.430999999615608e-06, 9.083000000131847e-06, 9.291999999661016e-06, 9.097999999596595e-06, 8.929999999907068e-06, 8.763999999494843e-06, 9.26400000000882e-06, 8.930999999989808e-06, 8.847999999339606e-06, 9.291000000466454e-06, 9.402999999963413e-06, 8.944999999371817e-06, 9.110999999784042e-06, 9.277000000196267e-06, 9.110999999784042e-06, 8.958000000447441e-06]</msg>
<status status="PASS" starttime="20201029 18:14:30.813" endtime="20201029 18:14:30.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.803" endtime="20201029 18:14:30.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.305" endtime="20201029 18:14:30.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.304" endtime="20201029 18:14:30.821"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.842" endtime="20201029 18:14:30.854"></status>
</kw>
<msg timestamp="20201029 18:14:30.855" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.838" endtime="20201029 18:14:30.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.857" endtime="20201029 18:14:30.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.864" endtime="20201029 18:14:30.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.831" endtime="20201029 18:14:30.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.826" endtime="20201029 18:14:30.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.887" endtime="20201029 18:14:31.253"></status>
</kw>
<msg timestamp="20201029 18:14:31.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.864898611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.864907903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.884" endtime="20201029 18:14:31.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.864898611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.864907903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.264" endtime="20201029 18:14:31.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.287" endtime="20201029 18:14:31.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.877" endtime="20201029 18:14:31.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.872" endtime="20201029 18:14:31.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.305" level="INFO">${RESULT} = [{'diff': 9.291999999661016e-06}, {'diff': 9.097999999596595e-06}, {'diff': 8.929999999907068e-06}, {'diff': 8.763999999494843e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.930999999989808e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:31.295" endtime="20201029 18:14:31.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:31.315" level="INFO">${OVERHEAD} = {'diff': [9.291999999661016e-06, 9.097999999596595e-06, 8.929999999907068e-06, 8.763999999494843e-06, 9.26400000000882e-06, 8.930999999989808e-06, 8.847999999339606e-06, 9.291000000466454e-06, 9.40299...</msg>
<status status="PASS" starttime="20201029 18:14:31.307" endtime="20201029 18:14:31.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.326" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:31.324" endtime="20201029 18:14:31.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.332" level="INFO">VALUE: [9.291999999661016e-06, 9.097999999596595e-06, 8.929999999907068e-06, 8.763999999494843e-06, 9.26400000000882e-06, 8.930999999989808e-06, 8.847999999339606e-06, 9.291000000466454e-06, 9.402999999963413e-06, 8.944999999371817e-06, 9.110999999784042e-06, 9.277000000196267e-06, 9.110999999784042e-06, 8.958000000447441e-06, 9.26400000000882e-06, 9.444999999885795e-06, 8.596999999888055e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.125000000054229e-06, 8.776999999682289e-06, 9.458000000073241e-06, 9.250000000626812e-06, 9.597000000027833e-06, 9.444999999885795e-06, 9.402999999963413e-06, 8.944000000177255e-06, 9.235999999468447e-06, 8.945000000259995e-06, 8.750000000112834e-06, 9.473000000426168e-06, 8.957999999559263e-06, 9.401999999880672e-06, 9.457999999185063e-06, 8.651999999997884e-06, 9.180000000164057e-06, 8.750000000112834e-06, 9.401999999880672e-06, 8.943999999289076e-06, 8.763999999494843e-06, 8.763999999494843e-06, 8.763999999494843e-06, 9.624999999680028e-06, 9.193999999546065e-06, 8.735999999842647e-06, 9.139000000324415e-06, 8.806000000305403e-06, 9.361000000041031e-06, 8.930999999989808e-06, 9.16699999997661e-06, 9.278000000279008e-06, 8.611000000158242e-06, 9.319000000118649e-06, 9.097000000402033e-06, 9.41600000015086e-06, 8.596999999888055e-06, 9.596999999139655e-06, 8.610999999270064e-06, 9.277000000196267e-06, 8.764000000383021e-06, 8.750000000112834e-06, 9.096999999513855e-06, 9.110999999784042e-06, 9.444999999885795e-06]</msg>
<status status="PASS" starttime="20201029 18:14:31.328" endtime="20201029 18:14:31.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.317" endtime="20201029 18:14:31.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.823" endtime="20201029 18:14:31.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.822" endtime="20201029 18:14:31.336"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.356" endtime="20201029 18:14:31.370"></status>
</kw>
<msg timestamp="20201029 18:14:31.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.353" endtime="20201029 18:14:31.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.374" endtime="20201029 18:14:31.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.380" endtime="20201029 18:14:31.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.346" endtime="20201029 18:14:31.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.341" endtime="20201029 18:14:31.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.406" endtime="20201029 18:14:31.786"></status>
</kw>
<msg timestamp="20201029 18:14:31.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.372114861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.372124139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.402" endtime="20201029 18:14:31.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.372114861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.372124139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.798" endtime="20201029 18:14:31.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.821" endtime="20201029 18:14:31.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.394" endtime="20201029 18:14:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.388" endtime="20201029 18:14:31.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.839" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 8.611000000158242e-06}, {'diff': 9.319000000118649e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.41600000015086e-06}, {'diff': 8.596999999888055e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:31.829" endtime="20201029 18:14:31.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:31.851" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 8.611000000158242e-06, 9.319000000118649e-06, 9.097000000402033e-06, 9.41600000015086e-06, 8.596999999888055e-06, 9.596999999139655e-06, 8.610999999270064e-06, 9.27700...</msg>
<status status="PASS" starttime="20201029 18:14:31.841" endtime="20201029 18:14:31.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.861" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:31.859" endtime="20201029 18:14:31.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.867" level="INFO">VALUE: [9.278000000279008e-06, 8.611000000158242e-06, 9.319000000118649e-06, 9.097000000402033e-06, 9.41600000015086e-06, 8.596999999888055e-06, 9.596999999139655e-06, 8.610999999270064e-06, 9.277000000196267e-06, 8.764000000383021e-06, 8.750000000112834e-06, 9.096999999513855e-06, 9.110999999784042e-06, 9.444999999885795e-06, 9.31899999923047e-06, 9.097000000402033e-06, 9.429999999532868e-06, 8.945000000259995e-06, 8.611000000158242e-06, 9.22300000016918e-06, 9.096999999513855e-06, 9.332999999500657e-06, 8.957999999559263e-06, 9.47299999953799e-06, 9.277000000196267e-06, 8.764000000383021e-06, 8.986000000099637e-06, 9.444999999885795e-06, 9.125000000054229e-06, 9.582999999757646e-06, 8.639000000698616e-06, 9.041000000209465e-06, 9.152999999706424e-06, 9.431000000503786e-06, 9.597000000027833e-06, 8.929999999907068e-06, 8.77799999976503e-06, 9.26400000000882e-06, 8.77799999976503e-06, 9.319999999313211e-06, 8.763999999494843e-06, 9.139000000324415e-06, 8.77799999976503e-06, 9.291000000466454e-06, 9.056000000562392e-06, 9.51400000026581e-06, 9.083000000131847e-06, 8.556000000048414e-06, 9.304999999848462e-06, 9.278000000279008e-06, 9.110999999784042e-06, 8.930999999989808e-06, 8.945000000259995e-06, 9.430999999615608e-06, 9.000000000369823e-06, 8.818999999604671e-06, 9.610999999409842e-06, 8.944000000177255e-06, 9.110999999784042e-06, 8.929999999907068e-06, 9.110999999784042e-06, 8.805999999417224e-06, 8.944999999371817e-06, 9.431000000503786e-06]</msg>
<status status="PASS" starttime="20201029 18:14:31.863" endtime="20201029 18:14:31.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.853" endtime="20201029 18:14:31.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.338" endtime="20201029 18:14:31.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.337" endtime="20201029 18:14:31.871"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.891" endtime="20201029 18:14:31.904"></status>
</kw>
<msg timestamp="20201029 18:14:31.905" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.888" endtime="20201029 18:14:31.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.911" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.907" endtime="20201029 18:14:31.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.913" endtime="20201029 18:14:31.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.881" endtime="20201029 18:14:31.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.876" endtime="20201029 18:14:31.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.937" endtime="20201029 18:14:32.313"></status>
</kw>
<msg timestamp="20201029 18:14:32.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.878385972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.878395083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.934" endtime="20201029 18:14:32.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.878385972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.878395083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.324" endtime="20201029 18:14:32.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.347" endtime="20201029 18:14:32.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.926" endtime="20201029 18:14:32.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.922" endtime="20201029 18:14:32.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:32.365" level="INFO">${RESULT} = [{'diff': 9.110999999784042e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.945000000259995e-06}, {'diff': 9.430999999615608e-06}, {'diff': 9.000000000369823e-06}, {'diff': 8.818999999604671e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:32.355" endtime="20201029 18:14:32.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:32.377" level="INFO">${OVERHEAD} = {'diff': [9.110999999784042e-06, 8.930999999989808e-06, 8.945000000259995e-06, 9.430999999615608e-06, 9.000000000369823e-06, 8.818999999604671e-06, 9.610999999409842e-06, 8.944000000177255e-06, 9.1109...</msg>
<status status="PASS" starttime="20201029 18:14:32.367" endtime="20201029 18:14:32.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.387" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:32.385" endtime="20201029 18:14:32.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.393" level="INFO">VALUE: [9.110999999784042e-06, 8.930999999989808e-06, 8.945000000259995e-06, 9.430999999615608e-06, 9.000000000369823e-06, 8.818999999604671e-06, 9.610999999409842e-06, 8.944000000177255e-06, 9.110999999784042e-06, 8.929999999907068e-06, 9.110999999784042e-06, 8.805999999417224e-06, 8.944999999371817e-06, 9.431000000503786e-06, 8.735999999842647e-06, 9.361000000041031e-06, 8.778000000653208e-06, 9.12499999916605e-06, 8.986000000099637e-06, 8.596999999888055e-06, 9.332999999500657e-06, 9.06899999986166e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.096999999513855e-06, 8.638999999810437e-06, 8.76300000030028e-06, 8.596999999888055e-06, 9.598000000110574e-06, 9.472000000343428e-06, 8.944999999371817e-06, 9.431000000503786e-06, 8.944999999371817e-06, 9.430999999615608e-06, 9.11200000075496e-06, 9.26299999992608e-06, 9.416999999345421e-06, 8.764000000383021e-06, 8.583000000506047e-06, 8.764000000383021e-06, 9.430000000421046e-06, 8.722999999655201e-06, 9.443999999803054e-06, 9.653000000220402e-06, 8.97199999982945e-06, 9.26400000000882e-06, 9.250000000626812e-06, 9.582999999757646e-06, 9.388999999693226e-06, 9.429999999532868e-06, 8.957999999559263e-06, 8.568999999347682e-06, 8.596999999888055e-06, 9.291999999661016e-06, 9.249999999738634e-06, 8.77799999976503e-06, 8.596999999888055e-06, 9.278000000279008e-06, 8.584000000588787e-06, 9.4170000002336e-06, 8.944000000177255e-06, 8.763999999494843e-06, 8.943999999289076e-06, 9.459000000155982e-06]</msg>
<status status="PASS" starttime="20201029 18:14:32.390" endtime="20201029 18:14:32.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.379" endtime="20201029 18:14:32.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.873" endtime="20201029 18:14:32.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.872" endtime="20201029 18:14:32.397"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.418" endtime="20201029 18:14:32.430"></status>
</kw>
<msg timestamp="20201029 18:14:32.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.415" endtime="20201029 18:14:32.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.434" endtime="20201029 18:14:32.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.440" endtime="20201029 18:14:32.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.407" endtime="20201029 18:14:32.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.403" endtime="20201029 18:14:32.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.463" endtime="20201029 18:14:32.843"></status>
</kw>
<msg timestamp="20201029 18:14:32.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.402900486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.402909444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.460" endtime="20201029 18:14:32.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.402900486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.402909444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.855" endtime="20201029 18:14:32.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.877" endtime="20201029 18:14:32.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.453" endtime="20201029 18:14:32.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.448" endtime="20201029 18:14:32.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:32.895" level="INFO">${RESULT} = [{'diff': 8.957999999559263e-06}, {'diff': 8.568999999347682e-06}, {'diff': 8.596999999888055e-06}, {'diff': 9.291999999661016e-06}, {'diff': 9.249999999738634e-06}, {'diff': 8.77799999976503e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:32.885" endtime="20201029 18:14:32.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:32.906" level="INFO">${OVERHEAD} = {'diff': [8.957999999559263e-06, 8.568999999347682e-06, 8.596999999888055e-06, 9.291999999661016e-06, 9.249999999738634e-06, 8.77799999976503e-06, 8.596999999888055e-06, 9.278000000279008e-06, 8.58400...</msg>
<status status="PASS" starttime="20201029 18:14:32.897" endtime="20201029 18:14:32.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.916" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:32.914" endtime="20201029 18:14:32.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.922" level="INFO">VALUE: [8.957999999559263e-06, 8.568999999347682e-06, 8.596999999888055e-06, 9.291999999661016e-06, 9.249999999738634e-06, 8.77799999976503e-06, 8.596999999888055e-06, 9.278000000279008e-06, 8.584000000588787e-06, 9.4170000002336e-06, 8.944000000177255e-06, 8.763999999494843e-06, 8.943999999289076e-06, 9.459000000155982e-06, 8.861000000415231e-06, 9.430000000421046e-06, 8.764000000383021e-06, 8.930999999989808e-06, 8.77799999976503e-06, 9.06899999986166e-06, 8.915999999636881e-06, 9.125000000054229e-06, 9.097999999596595e-06, 9.097000000402033e-06, 9.111999999866782e-06, 8.735999999842647e-06, 9.277000000196267e-06, 9.277999999390829e-06, 8.749999999224656e-06, 9.443999999803054e-06, 8.596999999888055e-06, 9.082999999243668e-06, 9.430000000421046e-06, 8.777000000570467e-06, 9.499999999995623e-06, 9.125000000054229e-06, 9.277000000196267e-06, 9.041999999404027e-06, 8.611000000158242e-06, 9.443999999803054e-06, 8.583999999700609e-06, 9.278000000279008e-06, 8.625000000428429e-06, 9.431000000503786e-06, 9.125000000054229e-06, 9.277999999390829e-06, 8.568999999347682e-06, 8.611000000158242e-06, 9.277999999390829e-06, 8.764000000383021e-06, 9.26400000000882e-06, 8.944000000177255e-06, 8.930999999989808e-06, 8.611000000158242e-06, 9.444999999885795e-06, 8.62499999954025e-06, 9.097000000402033e-06, 8.62499999954025e-06, 9.290999999578275e-06, 8.612000000240982e-06, 9.278000000279008e-06, 9.388999999693226e-06, 9.445000000773973e-06, 8.597000000776234e-06]</msg>
<status status="PASS" starttime="20201029 18:14:32.918" endtime="20201029 18:14:32.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.907" endtime="20201029 18:14:32.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.399" endtime="20201029 18:14:32.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.398" endtime="20201029 18:14:32.926"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.946" endtime="20201029 18:14:32.960"></status>
</kw>
<msg timestamp="20201029 18:14:32.961" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.943" endtime="20201029 18:14:32.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.967" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.963" endtime="20201029 18:14:32.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.970" endtime="20201029 18:14:32.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.936" endtime="20201029 18:14:32.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.931" endtime="20201029 18:14:32.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.995" endtime="20201029 18:14:33.366"></status>
</kw>
<msg timestamp="20201029 18:14:33.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.920324153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.920333417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.991" endtime="20201029 18:14:33.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.920324153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.920333417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.377" endtime="20201029 18:14:33.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.400" endtime="20201029 18:14:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.983" endtime="20201029 18:14:33.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.978" endtime="20201029 18:14:33.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.418" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 8.944000000177255e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.611000000158242e-06}, {'diff': 9.444999999885795e-06}, {'diff': 8.62499999954025e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:33.408" endtime="20201029 18:14:33.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:33.430" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 8.944000000177255e-06, 8.930999999989808e-06, 8.611000000158242e-06, 9.444999999885795e-06, 8.62499999954025e-06, 9.097000000402033e-06, 8.62499999954025e-06, 9.2909999...</msg>
<status status="PASS" starttime="20201029 18:14:33.420" endtime="20201029 18:14:33.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.440" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:33.438" endtime="20201029 18:14:33.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.446" level="INFO">VALUE: [9.26400000000882e-06, 8.944000000177255e-06, 8.930999999989808e-06, 8.611000000158242e-06, 9.444999999885795e-06, 8.62499999954025e-06, 9.097000000402033e-06, 8.62499999954025e-06, 9.290999999578275e-06, 8.612000000240982e-06, 9.278000000279008e-06, 9.388999999693226e-06, 9.445000000773973e-06, 8.597000000776234e-06, 9.291999999661016e-06, 9.610999999409842e-06, 8.889000000067426e-06, 8.778000001541386e-06, 8.944000001065433e-06, 9.249999999738634e-06, 8.790999999064297e-06, 9.110999998895863e-06, 8.945000001148173e-06, 9.16699999997661e-06, 8.958000000447441e-06, 9.083000000131847e-06, 8.611000000158242e-06, 9.431000000503786e-06, 8.76300000030028e-06, 8.818999999604671e-06, 8.790999999064297e-06, 8.5700000003186e-06, 9.444999999885795e-06, 9.41599999926268e-06, 9.11100000067222e-06, 8.986999999294198e-06, 9.610999999409842e-06, 8.597000000776234e-06, 8.749999999224656e-06, 9.388999998805048e-06, 8.958000000447441e-06, 9.110999998895863e-06, 8.598000000858974e-06, 8.791999999147038e-06, 9.431000000503786e-06, 9.096999999513855e-06, 8.764000000383021e-06, 8.596999998999877e-06, 9.610999999409842e-06, 9.416999999345421e-06, 9.472000000343428e-06, 8.930999999989808e-06, 9.597000000027833e-06, 9.444999999885795e-06, 9.084000000214587e-06, 9.458999999267803e-06, 8.903000001225791e-06, 8.749999999224656e-06, 8.625000001316607e-06, 9.263999999120642e-06, 8.958000000447441e-06, 9.27799999850265e-06, 9.443999999803054e-06, 9.291999999661016e-06]</msg>
<status status="PASS" starttime="20201029 18:14:33.442" endtime="20201029 18:14:33.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.432" endtime="20201029 18:14:33.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.928" endtime="20201029 18:14:33.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.927" endtime="20201029 18:14:33.450"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.470" endtime="20201029 18:14:33.482"></status>
</kw>
<msg timestamp="20201029 18:14:33.484" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.467" endtime="20201029 18:14:33.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.490" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.486" endtime="20201029 18:14:33.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.492" endtime="20201029 18:14:33.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.460" endtime="20201029 18:14:33.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.455" endtime="20201029 18:14:33.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.516" endtime="20201029 18:14:33.892"></status>
</kw>
<msg timestamp="20201029 18:14:33.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.440199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.44020925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:33.512" endtime="20201029 18:14:33.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.440199778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.44020925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:33.904" endtime="20201029 18:14:33.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.926" endtime="20201029 18:14:33.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.505" endtime="20201029 18:14:33.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.500" endtime="20201029 18:14:33.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.944" level="INFO">${RESULT} = [{'diff': 9.472000000343428e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.597000000027833e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.084000000214587e-06}, {'diff': 9.458999999267803e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:33.934" endtime="20201029 18:14:33.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:33.956" level="INFO">${OVERHEAD} = {'diff': [9.472000000343428e-06, 8.930999999989808e-06, 9.597000000027833e-06, 9.444999999885795e-06, 9.084000000214587e-06, 9.458999999267803e-06, 8.903000001225791e-06, 8.749999999224656e-06, 8.6250...</msg>
<status status="PASS" starttime="20201029 18:14:33.946" endtime="20201029 18:14:33.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.966" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:33.964" endtime="20201029 18:14:33.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.972" level="INFO">VALUE: [9.472000000343428e-06, 8.930999999989808e-06, 9.597000000027833e-06, 9.444999999885795e-06, 9.084000000214587e-06, 9.458999999267803e-06, 8.903000001225791e-06, 8.749999999224656e-06, 8.625000001316607e-06, 9.263999999120642e-06, 8.958000000447441e-06, 9.27799999850265e-06, 9.443999999803054e-06, 9.291999999661016e-06, 8.958999998753825e-06, 8.582999999617869e-06, 8.625000001316607e-06, 8.930999999989808e-06, 8.764000000383021e-06, 9.610999999409842e-06, 9.443999999803054e-06, 9.083000000131847e-06, 9.430000000421046e-06, 8.930999999989808e-06, 9.611000001186198e-06, 8.957999998671085e-06, 9.444999999885795e-06, 8.583999999700609e-06, 8.958999998753825e-06, 9.083000000131847e-06, 8.722000000460639e-06, 9.443999999803054e-06, 8.597000000776234e-06, 8.764000000383021e-06, 8.930999999989808e-06, 8.902000001143051e-06, 9.304999998960284e-06, 8.62499999954025e-06, 8.736000001619004e-06, 9.055999999674214e-06, 8.611000000158242e-06, 9.263999999120642e-06, 8.76300000030028e-06, 8.77799999976503e-06, 9.264000000897e-06, 8.97199999982945e-06, 9.444999999885795e-06, 8.707999999302274e-06, 9.125000000054229e-06, 9.291999999661016e-06, 8.792000000923395e-06, 9.443999999803054e-06, 9.263999999120642e-06, 9.45800000096142e-06, 9.43099999872743e-06, 8.693999999920266e-06, 9.306000000819381e-06, 9.388000000498664e-06, 9.541999999029827e-06, 9.194999998740627e-06, 9.264000000897e-06, 8.597000000776234e-06, 9.430000000421046e-06, 9.11100000067222e-06]</msg>
<status status="PASS" starttime="20201029 18:14:33.969" endtime="20201029 18:14:33.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.958" endtime="20201029 18:14:33.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.452" endtime="20201029 18:14:33.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.451" endtime="20201029 18:14:33.976"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.997" endtime="20201029 18:14:34.009"></status>
</kw>
<msg timestamp="20201029 18:14:34.010" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.994" endtime="20201029 18:14:34.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.017" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.013" endtime="20201029 18:14:34.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.019" endtime="20201029 18:14:34.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.986" endtime="20201029 18:14:34.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.982" endtime="20201029 18:14:34.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.043" endtime="20201029 18:14:34.421"></status>
</kw>
<msg timestamp="20201029 18:14:34.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.952799139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.952807931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.039" endtime="20201029 18:14:34.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.952799139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.952807931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.432" endtime="20201029 18:14:34.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.454" endtime="20201029 18:14:34.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.032" endtime="20201029 18:14:34.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.027" endtime="20201029 18:14:34.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:34.476" level="INFO">${RESULT} = [{'diff': 8.792000000923395e-06}, {'diff': 9.443999999803054e-06}, {'diff': 9.263999999120642e-06}, {'diff': 9.45800000096142e-06}, {'diff': 9.43099999872743e-06}, {'diff': 8.693999999920266e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:34.463" endtime="20201029 18:14:34.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:34.487" level="INFO">${OVERHEAD} = {'diff': [8.792000000923395e-06, 9.443999999803054e-06, 9.263999999120642e-06, 9.45800000096142e-06, 9.43099999872743e-06, 8.693999999920266e-06, 9.306000000819381e-06, 9.388000000498664e-06, 9.541999...</msg>
<status status="PASS" starttime="20201029 18:14:34.478" endtime="20201029 18:14:34.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.497" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:34.495" endtime="20201029 18:14:34.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.503" level="INFO">VALUE: [8.792000000923395e-06, 9.443999999803054e-06, 9.263999999120642e-06, 9.45800000096142e-06, 9.43099999872743e-06, 8.693999999920266e-06, 9.306000000819381e-06, 9.388000000498664e-06, 9.541999999029827e-06, 9.194999998740627e-06, 9.264000000897e-06, 8.597000000776234e-06, 9.430000000421046e-06, 9.11100000067222e-06, 9.319000000118649e-06, 8.722999998767023e-06, 9.416000001039038e-06, 9.11100000067222e-06, 9.430000000421046e-06, 8.943999999289076e-06, 8.957999998671085e-06, 8.597000000776234e-06, 9.111999998978604e-06, 9.292000001437373e-06, 8.776999999682289e-06, 8.597000000776234e-06, 9.263999999120642e-06, 8.790999999064297e-06, 9.096999999513855e-06, 9.430000000421046e-06, 8.77799999976503e-06, 9.042000000292205e-06, 9.084000000214587e-06, 9.290999999578275e-06, 9.45800000096142e-06, 9.417000001121778e-06, 9.443999999803054e-06, 8.66700000123899e-06, 9.111999998978604e-06, 8.554999999077495e-06, 8.791999999147038e-06, 9.430000000421046e-06, 8.764000000383021e-06, 9.097999999596595e-06, 8.860999999527053e-06, 9.278000000279008e-06, 8.612000000240982e-06, 8.943999999289076e-06, 9.110999998895863e-06, 9.430000000421046e-06, 9.277000000196267e-06, 8.76300000030028e-06, 8.77799999976503e-06, 9.431000000503786e-06, 9.084000000214587e-06, 9.125000000054229e-06, 9.096999999513855e-06, 8.597000000776234e-06, 8.958000000447441e-06, 9.27799999850265e-06, 9.416999999345421e-06, 9.597000000027833e-06, 8.944999999371817e-06, 8.764000000383021e-06]</msg>
<status status="PASS" starttime="20201029 18:14:34.499" endtime="20201029 18:14:34.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.489" endtime="20201029 18:14:34.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.978" endtime="20201029 18:14:34.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.977" endtime="20201029 18:14:34.507"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.528" endtime="20201029 18:14:34.541"></status>
</kw>
<msg timestamp="20201029 18:14:34.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.524" endtime="20201029 18:14:34.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.545" endtime="20201029 18:14:34.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.551" endtime="20201029 18:14:34.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.517" endtime="20201029 18:14:34.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.512" endtime="20201029 18:14:34.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.575" endtime="20201029 18:14:34.956"></status>
</kw>
<msg timestamp="20201029 18:14:34.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.470254292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.470263569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.572" endtime="20201029 18:14:34.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.470254292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.470263569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.968" endtime="20201029 18:14:34.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.991" endtime="20201029 18:14:34.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.564" endtime="20201029 18:14:34.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.559" endtime="20201029 18:14:34.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.009" level="INFO">${RESULT} = [{'diff': 9.277000000196267e-06}, {'diff': 8.76300000030028e-06}, {'diff': 8.77799999976503e-06}, {'diff': 9.431000000503786e-06}, {'diff': 9.084000000214587e-06}, {'diff': 9.125000000054229e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:34.999" endtime="20201029 18:14:35.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:35.021" level="INFO">${OVERHEAD} = {'diff': [9.277000000196267e-06, 8.76300000030028e-06, 8.77799999976503e-06, 9.431000000503786e-06, 9.084000000214587e-06, 9.125000000054229e-06, 9.096999999513855e-06, 8.597000000776234e-06, 8.958000...</msg>
<status status="PASS" starttime="20201029 18:14:35.011" endtime="20201029 18:14:35.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.031" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:35.029" endtime="20201029 18:14:35.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.037" level="INFO">VALUE: [9.277000000196267e-06, 8.76300000030028e-06, 8.77799999976503e-06, 9.431000000503786e-06, 9.084000000214587e-06, 9.125000000054229e-06, 9.096999999513855e-06, 8.597000000776234e-06, 8.958000000447441e-06, 9.27799999850265e-06, 9.416999999345421e-06, 9.597000000027833e-06, 8.944999999371817e-06, 8.764000000383021e-06, 8.611000000158242e-06, 8.77799999976503e-06, 9.11100000067222e-06, 9.443999999803054e-06, 8.957999998671085e-06, 8.929999999907068e-06, 9.431000000503786e-06, 8.77799999976503e-06, 9.291000001354632e-06, 8.597000000776234e-06, 8.694000001696622e-06, 9.444999999885795e-06, 9.443999999803054e-06, 9.278000000279008e-06, 8.944999999371817e-06, 8.749999999224656e-06, 9.11100000067222e-06, 9.27799999850265e-06, 9.444999999885795e-06, 8.77799999976503e-06, 9.362000000123771e-06, 8.749999999224656e-06, 9.125000000054229e-06, 9.096999999513855e-06, 9.125000000054229e-06, 9.277000000196267e-06, 8.943999999289076e-06, 8.945000001148173e-06, 9.291000001354632e-06, 9.277000000196267e-06, 9.458999999267803e-06, 8.9170000006078e-06, 9.431000000503786e-06, 9.263000000814259e-06, 8.77799999976503e-06, 9.45800000096142e-06, 8.527999998619862e-06, 9.110999998895863e-06, 9.153000000594602e-06, 8.62499999954025e-06, 8.556000000936592e-06, 9.431000000503786e-06, 9.430000000421046e-06, 9.27799999850265e-06, 9.097000001290212e-06, 8.929999999907068e-06, 8.611000000158242e-06, 8.638000000615875e-06, 9.417000001121778e-06, 9.431000000503786e-06]</msg>
<status status="PASS" starttime="20201029 18:14:35.033" endtime="20201029 18:14:35.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.023" endtime="20201029 18:14:35.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.509" endtime="20201029 18:14:35.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.508" endtime="20201029 18:14:35.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.451" endtime="20201029 18:14:35.041"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:24.323" endtime="20201029 18:14:35.043" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:35.060" endtime="20201029 18:14:35.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.057" endtime="20201029 18:14:35.084"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.117" endtime="20201029 18:14:35.134"></status>
</kw>
<msg timestamp="20201029 18:14:35.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.114" endtime="20201029 18:14:35.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.137" endtime="20201029 18:14:35.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.148" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:35.144" endtime="20201029 18:14:35.149"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.106" endtime="20201029 18:14:35.151"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.100" endtime="20201029 18:14:35.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.097" endtime="20201029 18:14:35.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:35.161" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:35.159" endtime="20201029 18:14:35.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.155" endtime="20201029 18:14:35.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.096" endtime="20201029 18:14:35.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.094" endtime="20201029 18:14:35.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.164" endtime="20201029 18:14:35.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.090" endtime="20201029 18:14:35.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.085" endtime="20201029 18:14:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.054" endtime="20201029 18:14:35.172"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.196" endtime="20201029 18:14:35.217"></status>
</kw>
<msg timestamp="20201029 18:14:35.218" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.193" endtime="20201029 18:14:35.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.224" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.220" endtime="20201029 18:14:35.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.226" endtime="20201029 18:14:35.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.183" endtime="20201029 18:14:35.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.177" endtime="20201029 18:14:35.233"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.238" endtime="20201029 18:14:35.243"></status>
</kw>
<msg timestamp="20201029 18:14:35.244" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:35.235" endtime="20201029 18:14:35.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.254" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:35.251" endtime="20201029 18:14:35.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.258" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:35.256" endtime="20201029 18:14:35.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.245" endtime="20201029 18:14:35.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.270" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:35.268" endtime="20201029 18:14:35.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.275" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:35.272" endtime="20201029 18:14:35.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.262" endtime="20201029 18:14:35.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.294" endtime="20201029 18:14:35.642"></status>
</kw>
<msg timestamp="20201029 18:14:35.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127512625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1275285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:35.291" endtime="20201029 18:14:35.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127512625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1275285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:35.652" endtime="20201029 18:14:35.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.671" endtime="20201029 18:14:35.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.284" endtime="20201029 18:14:35.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.279" endtime="20201029 18:14:35.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.688" level="INFO">${RESULT} = [{'diff': 1.587499999999853e-05}, {'diff': 1.6695000000011007e-05}, {'diff': 1.669499999998325e-05}, {'diff': 1.652800000001564e-05}, {'diff': 1.604200000002165e-05}, {'diff': 1.6193999999997155e-05},...</msg>
<status status="PASS" starttime="20201029 18:14:35.679" endtime="20201029 18:14:35.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:35.699" level="INFO">${OVERHEAD} = {'diff': [1.587499999999853e-05, 1.6695000000011007e-05, 1.669499999998325e-05, 1.652800000001564e-05, 1.604200000002165e-05, 1.6193999999997155e-05, 1.5861000000005898e-05, 1.65410000000088e-05, 1.66...</msg>
<status status="PASS" starttime="20201029 18:14:35.690" endtime="20201029 18:14:35.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.710" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:35.708" endtime="20201029 18:14:35.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.716" level="INFO">VALUE: [1.587499999999853e-05, 1.6695000000011007e-05, 1.669499999998325e-05, 1.652800000001564e-05, 1.604200000002165e-05, 1.6193999999997155e-05, 1.5861000000005898e-05, 1.65410000000088e-05, 1.6679999999991146e-05, 1.584699999998551e-05, 1.5847999999984985e-05, 1.6180999999976242e-05, 1.6708000000004164e-05, 1.651400000002301e-05, 1.652800000001564e-05, 1.6902000000013073e-05, 1.6527000000016168e-05, 1.6167000000011367e-05, 1.5860999999978143e-05, 1.6041999999993894e-05, 1.63200000000141e-05, 1.669499999998325e-05, 1.6500000000002624e-05, 1.662499999999234e-05, 1.617999999997677e-05, 1.5847000000013267e-05, 1.6556000000000903e-05, 1.6222000000010173e-05, 1.684800000001374e-05, 1.6388999999977782e-05, 1.6389000000005538e-05, 1.620899999998926e-05, 1.6041000000022176e-05, 1.615299999999098e-05, 1.6361000000020276e-05, 1.683299999999388e-05, 1.6249999999995435e-05, 1.6916000000005704e-05, 1.6375000000012907e-05, 1.652800000001564e-05, 1.6054999999987052e-05, 1.5862000000005372e-05, 1.687499999999953e-05, 1.5903000000011547e-05, 1.687499999999953e-05, 1.6542000000008272e-05, 1.620899999998926e-05, 1.6263999999988066e-05, 1.651299999999578e-05, 1.651400000002301e-05]</msg>
<status status="PASS" starttime="20201029 18:14:35.713" endtime="20201029 18:14:35.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.701" endtime="20201029 18:14:35.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.173" endtime="20201029 18:14:35.720"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:35.047" endtime="20201029 18:14:35.721" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:35.739" endtime="20201029 18:14:35.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.735" endtime="20201029 18:14:35.762"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.795" endtime="20201029 18:14:35.811"></status>
</kw>
<msg timestamp="20201029 18:14:35.813" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.792" endtime="20201029 18:14:35.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.815" endtime="20201029 18:14:35.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.826" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:35.822" endtime="20201029 18:14:35.827"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.785" endtime="20201029 18:14:35.828"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.778" endtime="20201029 18:14:35.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.776" endtime="20201029 18:14:35.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:35.838" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:35.837" endtime="20201029 18:14:35.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.833" endtime="20201029 18:14:35.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.774" endtime="20201029 18:14:35.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.772" endtime="20201029 18:14:35.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.842" endtime="20201029 18:14:35.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.768" endtime="20201029 18:14:35.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.764" endtime="20201029 18:14:35.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.732" endtime="20201029 18:14:35.849"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.874" endtime="20201029 18:14:35.983"></status>
</kw>
<msg timestamp="20201029 18:14:35.984" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.870" endtime="20201029 18:14:35.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.991" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.987" endtime="20201029 18:14:35.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.993" endtime="20201029 18:14:35.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.863" endtime="20201029 18:14:35.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.855" endtime="20201029 18:14:36.000"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.005" endtime="20201029 18:14:36.009"></status>
</kw>
<msg timestamp="20201029 18:14:36.010" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:36.002" endtime="20201029 18:14:36.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.020" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:36.018" endtime="20201029 18:14:36.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.025" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:36.023" endtime="20201029 18:14:36.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.012" endtime="20201029 18:14:36.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.037" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:36.035" endtime="20201029 18:14:36.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.042" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:36.039" endtime="20201029 18:14:36.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.029" endtime="20201029 18:14:36.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.066" endtime="20201029 18:14:36.414"></status>
</kw>
<msg timestamp="20201029 18:14:36.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128550722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128606375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:36.062" endtime="20201029 18:14:36.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128550722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128606375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:36.424" endtime="20201029 18:14:36.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.442" endtime="20201029 18:14:36.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.050" endtime="20201029 18:14:36.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.045" endtime="20201029 18:14:36.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:36.459" level="INFO">${RESULT} = [{'diff': 5.565299999998885e-05}, {'diff': 5.612499999999021e-05}, {'diff': 5.612499999999021e-05}, {'diff': 5.5957999999994845e-05}, {'diff': 5.611099999999758e-05}, {'diff': 5.5944000000002214e-05},...</msg>
<status status="PASS" starttime="20201029 18:14:36.451" endtime="20201029 18:14:36.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:36.470" level="INFO">${OVERHEAD} = {'diff': [5.565299999998885e-05, 5.612499999999021e-05, 5.612499999999021e-05, 5.5957999999994845e-05, 5.611099999999758e-05, 5.5944000000002214e-05, 5.609700000000495e-05, 5.604200000000614e-05, 5.61...</msg>
<status status="PASS" starttime="20201029 18:14:36.462" endtime="20201029 18:14:36.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.482" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:36.480" endtime="20201029 18:14:36.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.487" level="INFO">VALUE: [5.565299999998885e-05, 5.612499999999021e-05, 5.612499999999021e-05, 5.5957999999994845e-05, 5.611099999999758e-05, 5.5944000000002214e-05, 5.609700000000495e-05, 5.604200000000614e-05, 5.612499999999021e-05, 5.593100000000906e-05, 5.6165999999996385e-05, 5.598600000000786e-05, 5.590299999999604e-05, 5.5957999999994845e-05, 5.592999999998183e-05, 5.594499999997393e-05, 5.604200000000614e-05, 5.591699999998867e-05, 5.611099999999758e-05, 5.597200000001523e-05, 5.611099999999758e-05, 5.611099999999758e-05, 5.611199999999705e-05, 5.609700000000495e-05, 5.5944000000002214e-05, 5.5944000000002214e-05, 5.5957999999994845e-05, 5.5957999999994845e-05, 5.5971999999987476e-05, 5.611199999999705e-05, 5.594500000000169e-05, 5.5971999999987476e-05, 5.5957999999994845e-05, 5.5987000000007336e-05, 5.5944000000002214e-05, 5.608300000001232e-05, 5.5917000000016426e-05, 5.612499999999021e-05, 5.606899999999193e-05, 5.612499999999021e-05, 5.587500000001078e-05, 5.593000000000958e-05, 5.595899999999432e-05, 5.5971999999987476e-05, 5.593100000000906e-05, 5.593000000000958e-05, 5.6152000000003754e-05, 5.594500000000169e-05, 5.594500000000169e-05, 5.615300000000323e-05]</msg>
<status status="PASS" starttime="20201029 18:14:36.484" endtime="20201029 18:14:36.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.472" endtime="20201029 18:14:36.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.851" endtime="20201029 18:14:36.491"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:35.726" endtime="20201029 18:14:36.493" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:36.510" endtime="20201029 18:14:36.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.506" endtime="20201029 18:14:36.534"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.567" endtime="20201029 18:14:36.582"></status>
</kw>
<msg timestamp="20201029 18:14:36.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.563" endtime="20201029 18:14:36.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.591" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.586" endtime="20201029 18:14:36.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.597" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:36.593" endtime="20201029 18:14:36.598"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:36.556" endtime="20201029 18:14:36.600"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:36.550" endtime="20201029 18:14:36.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.547" endtime="20201029 18:14:36.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:36.610" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:36.608" endtime="20201029 18:14:36.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.604" endtime="20201029 18:14:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.545" endtime="20201029 18:14:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.544" endtime="20201029 18:14:36.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.615" endtime="20201029 18:14:36.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.539" endtime="20201029 18:14:36.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.535" endtime="20201029 18:14:36.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.504" endtime="20201029 18:14:36.622"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.645" endtime="20201029 18:14:36.961"></status>
</kw>
<msg timestamp="20201029 18:14:36.963" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.642" endtime="20201029 18:14:36.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.969" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.965" endtime="20201029 18:14:36.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.972" endtime="20201029 18:14:36.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.634" endtime="20201029 18:14:36.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.628" endtime="20201029 18:14:36.979"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.983" endtime="20201029 18:14:36.988"></status>
</kw>
<msg timestamp="20201029 18:14:36.989" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:36.981" endtime="20201029 18:14:36.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.999" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:36.997" endtime="20201029 18:14:37.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.004" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:37.002" endtime="20201029 18:14:37.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.991" endtime="20201029 18:14:37.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.016" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:37.014" endtime="20201029 18:14:37.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.021" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:37.018" endtime="20201029 18:14:37.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.008" endtime="20201029 18:14:37.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.040" endtime="20201029 18:14:37.401"></status>
</kw>
<msg timestamp="20201029 18:14:37.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132084917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132184583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.037" endtime="20201029 18:14:37.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132084917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132184583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.412" endtime="20201029 18:14:37.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.430" endtime="20201029 18:14:37.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.029" endtime="20201029 18:14:37.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.024" endtime="20201029 18:14:37.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:37.447" level="INFO">${RESULT} = [{'diff': 9.966599999999826e-05}, {'diff': 9.898600000002311e-05}, {'diff': 9.912500000000546e-05}, {'diff': 9.908299999999981e-05}, {'diff': 9.894500000001694e-05}, {'diff': 9.912500000000546e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:37.438" endtime="20201029 18:14:37.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:37.462" level="INFO">${OVERHEAD} = {'diff': [9.966599999999826e-05, 9.898600000002311e-05, 9.912500000000546e-05, 9.908299999999981e-05, 9.894500000001694e-05, 9.912500000000546e-05, 9.909699999999244e-05, 9.909699999999244e-05, 9.9069...</msg>
<status status="PASS" starttime="20201029 18:14:37.449" endtime="20201029 18:14:37.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.474" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:37.471" endtime="20201029 18:14:37.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.484" level="INFO">VALUE: [9.966599999999826e-05, 9.898600000002311e-05, 9.912500000000546e-05, 9.908299999999981e-05, 9.894500000001694e-05, 9.912500000000546e-05, 9.909699999999244e-05, 9.909699999999244e-05, 9.906900000000718e-05, 9.909699999999244e-05, 9.89580000000101e-05, 9.909699999999244e-05, 9.911099999998507e-05, 9.890300000001129e-05, 9.908299999999981e-05, 9.912500000000546e-05, 9.906900000000718e-05, 9.908299999999981e-05, 9.912500000000546e-05, 9.91249999999777e-05, 9.911099999998507e-05, 9.909699999999244e-05, 9.911099999998507e-05, 9.909699999999244e-05, 9.913899999997033e-05, 9.915300000001848e-05, 9.908299999999981e-05, 9.909699999999244e-05, 9.900000000001574e-05, 9.912500000003321e-05, 9.911099999998507e-05, 9.909699999999244e-05, 9.906900000000718e-05, 9.909700000004795e-05, 9.888900000004641e-05, 9.909699999999244e-05, 9.908299999999981e-05, 9.909699999999244e-05, 9.911099999998507e-05, 9.894399999998971e-05, 9.905599999998627e-05, 9.918000000003202e-05, 9.909800000001967e-05, 9.913900000002585e-05, 9.911099999998507e-05, 9.911099999998507e-05, 9.911099999998507e-05, 9.891600000000444e-05, 9.906900000000718e-05, 9.91249999999777e-05]</msg>
<status status="PASS" starttime="20201029 18:14:37.478" endtime="20201029 18:14:37.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.464" endtime="20201029 18:14:37.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.624" endtime="20201029 18:14:37.490"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:36.497" endtime="20201029 18:14:37.492" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:37.514" endtime="20201029 18:14:37.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.509" endtime="20201029 18:14:37.538"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.572" endtime="20201029 18:14:37.589"></status>
</kw>
<msg timestamp="20201029 18:14:37.590" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.568" endtime="20201029 18:14:37.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.597" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.592" endtime="20201029 18:14:37.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.604" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:37.600" endtime="20201029 18:14:37.605"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:37.561" endtime="20201029 18:14:37.606"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:37.555" endtime="20201029 18:14:37.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.552" endtime="20201029 18:14:37.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:37.617" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:37.615" endtime="20201029 18:14:37.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.611" endtime="20201029 18:14:37.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.550" endtime="20201029 18:14:37.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.548" endtime="20201029 18:14:37.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.620" endtime="20201029 18:14:37.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.544" endtime="20201029 18:14:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.540" endtime="20201029 18:14:37.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.506" endtime="20201029 18:14:37.627"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.650" endtime="20201029 18:14:37.671"></status>
</kw>
<msg timestamp="20201029 18:14:37.672" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.646" endtime="20201029 18:14:37.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.679" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.675" endtime="20201029 18:14:37.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.681" endtime="20201029 18:14:37.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.639" endtime="20201029 18:14:37.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.633" endtime="20201029 18:14:37.688"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.693" endtime="20201029 18:14:37.697"></status>
</kw>
<msg timestamp="20201029 18:14:37.698" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:37.690" endtime="20201029 18:14:37.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.708" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:37.706" endtime="20201029 18:14:37.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.713" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:37.711" endtime="20201029 18:14:37.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.700" endtime="20201029 18:14:37.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.725" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:37.722" endtime="20201029 18:14:37.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.729" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:37.727" endtime="20201029 18:14:37.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.716" endtime="20201029 18:14:37.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.749" endtime="20201029 18:14:38.100"></status>
</kw>
<msg timestamp="20201029 18:14:38.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127419639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127421875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.745" endtime="20201029 18:14:38.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127419639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127421875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.110" endtime="20201029 18:14:38.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.129" endtime="20201029 18:14:38.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.738" endtime="20201029 18:14:38.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.733" endtime="20201029 18:14:38.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.149" level="INFO">${RESULT} = [{'diff': 2.2359999999888025e-06}, {'diff': 2.1800000000182784e-06}, {'diff': 2.1669999999973655e-06}, {'diff': 2.1809999999899965e-06}, {'diff': 2.195000000010383e-06}, {'diff': 2.1940000000109094e-0...</msg>
<status status="PASS" starttime="20201029 18:14:38.139" endtime="20201029 18:14:38.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:38.160" level="INFO">${OVERHEAD} = {'diff': [2.2359999999888025e-06, 2.1800000000182784e-06, 2.1669999999973655e-06, 2.1809999999899965e-06, 2.195000000010383e-06, 2.1940000000109094e-06, 2.2080000000035405e-06, 2.181000000017752e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:38.152" endtime="20201029 18:14:38.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.173" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:38.171" endtime="20201029 18:14:38.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.180" level="INFO">VALUE: [2.2359999999888025e-06, 2.1800000000182784e-06, 2.1669999999973655e-06, 2.1809999999899965e-06, 2.195000000010383e-06, 2.1940000000109094e-06, 2.2080000000035405e-06, 2.181000000017752e-06, 2.1940000000109094e-06, 2.193999999983154e-06, 2.195000000010383e-06, 2.179999999990523e-06, 2.195000000010383e-06, 2.1809999999899965e-06, 2.1809999999899965e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.1809999999899965e-06, 2.195000000010383e-06, 2.1949999999826275e-06, 2.26400000000182e-06, 2.1949999999826275e-06, 2.1809999999899965e-06, 2.1800000000182784e-06, 2.1949999999826275e-06, 2.1949999999826275e-06, 2.2080000000035405e-06, 2.193999999983154e-06, 2.1940000000109094e-06, 2.1809999999899965e-06, 2.179999999990523e-06, 2.1800000000182784e-06, 2.2089999999752585e-06, 2.2080000000035405e-06, 2.193999999983154e-06, 2.195000000010383e-06, 2.179999999990523e-06, 2.193999999983154e-06, 2.1809999999899965e-06, 2.195000000010383e-06, 2.1940000000109094e-06, 2.1940000000109094e-06, 2.1669999999973655e-06, 2.195000000010383e-06, 2.138999999984348e-06, 2.1940000000109094e-06, 2.1940000000109094e-06, 2.2219999999961715e-06, 2.195000000010383e-06, 2.1940000000109094e-06]</msg>
<status status="PASS" starttime="20201029 18:14:38.176" endtime="20201029 18:14:38.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.162" endtime="20201029 18:14:38.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.628" endtime="20201029 18:14:38.185"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:37.497" endtime="20201029 18:14:38.187" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.204" endtime="20201029 18:14:38.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.200" endtime="20201029 18:14:38.228"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.263" endtime="20201029 18:14:38.278"></status>
</kw>
<msg timestamp="20201029 18:14:38.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.259" endtime="20201029 18:14:38.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.287" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.282" endtime="20201029 18:14:38.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.293" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:38.289" endtime="20201029 18:14:38.294"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:38.252" endtime="20201029 18:14:38.296"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:38.244" endtime="20201029 18:14:38.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.241" endtime="20201029 18:14:38.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:38.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:38.305" endtime="20201029 18:14:38.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.300" endtime="20201029 18:14:38.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.240" endtime="20201029 18:14:38.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.238" endtime="20201029 18:14:38.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.310" endtime="20201029 18:14:38.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.234" endtime="20201029 18:14:38.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.229" endtime="20201029 18:14:38.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.198" endtime="20201029 18:14:38.317"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.339" endtime="20201029 18:14:38.450"></status>
</kw>
<msg timestamp="20201029 18:14:38.451" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.336" endtime="20201029 18:14:38.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.457" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.453" endtime="20201029 18:14:38.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.460" endtime="20201029 18:14:38.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.329" endtime="20201029 18:14:38.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.323" endtime="20201029 18:14:38.466"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.471" endtime="20201029 18:14:38.476"></status>
</kw>
<msg timestamp="20201029 18:14:38.477" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:38.468" endtime="20201029 18:14:38.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.487" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:38.484" endtime="20201029 18:14:38.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.491" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:38.489" endtime="20201029 18:14:38.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.478" endtime="20201029 18:14:38.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.503" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:38.501" endtime="20201029 18:14:38.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.508" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:38.506" endtime="20201029 18:14:38.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.495" endtime="20201029 18:14:38.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.530" endtime="20201029 18:14:38.885"></status>
</kw>
<msg timestamp="20201029 18:14:38.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129008097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129020569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.525" endtime="20201029 18:14:38.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129008097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129020569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.895" endtime="20201029 18:14:38.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.915" endtime="20201029 18:14:38.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.516" endtime="20201029 18:14:38.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.511" endtime="20201029 18:14:38.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.932" level="INFO">${RESULT} = [{'diff': 1.2472000000013361e-05}, {'diff': 1.2472000000013361e-05}, {'diff': 1.2444000000000344e-05}, {'diff': 1.2472000000013361e-05}, {'diff': 1.2473000000012835e-05}, {'diff': 1.247299999998508e-0...</msg>
<status status="PASS" starttime="20201029 18:14:38.923" endtime="20201029 18:14:38.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:38.942" level="INFO">${OVERHEAD} = {'diff': [1.2472000000013361e-05, 1.2472000000013361e-05, 1.2444000000000344e-05, 1.2472000000013361e-05, 1.2473000000012835e-05, 1.247299999998508e-05, 1.2473000000012835e-05, 1.2541000000004798e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:38.934" endtime="20201029 18:14:38.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.953" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:38.951" endtime="20201029 18:14:38.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.958" level="INFO">VALUE: [1.2472000000013361e-05, 1.2472000000013361e-05, 1.2444000000000344e-05, 1.2472000000013361e-05, 1.2473000000012835e-05, 1.247299999998508e-05, 1.2473000000012835e-05, 1.2541000000004798e-05, 1.2472000000013361e-05, 1.2486000000005992e-05, 1.2486000000005992e-05, 1.2444000000000344e-05, 1.2444999999999817e-05, 1.2457999999992975e-05, 1.2472000000013361e-05, 1.2486000000005992e-05, 1.2444000000000344e-05, 1.2458999999992448e-05, 1.245800000002073e-05, 1.2472000000013361e-05, 1.2513999999991254e-05, 1.2457999999992975e-05, 1.2473000000012835e-05, 1.2472000000013361e-05, 1.2389000000001538e-05, 1.2473000000012835e-05, 1.2486000000005992e-05, 1.2443999999972588e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2472000000013361e-05, 1.2487000000005466e-05, 1.2499999999998623e-05, 1.245800000002073e-05, 1.2430000000007713e-05, 1.2375000000008907e-05, 1.2473000000012835e-05, 1.245800000002073e-05, 1.2457999999992975e-05, 1.2471999999985606e-05, 1.2457999999992975e-05, 1.2444000000000344e-05, 1.2458999999992448e-05, 1.2444000000000344e-05, 1.2472000000013361e-05, 1.2486000000005992e-05, 1.2485999999978237e-05, 1.2499999999998623e-05, 1.2444000000000344e-05, 1.2431000000007186e-05]</msg>
<status status="PASS" starttime="20201029 18:14:38.955" endtime="20201029 18:14:38.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.943" endtime="20201029 18:14:38.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.318" endtime="20201029 18:14:38.962"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:38.191" endtime="20201029 18:14:38.964" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.981" endtime="20201029 18:14:39.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.978" endtime="20201029 18:14:39.005"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.042" endtime="20201029 18:14:39.058"></status>
</kw>
<msg timestamp="20201029 18:14:39.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.038" endtime="20201029 18:14:39.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.061" endtime="20201029 18:14:39.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.073" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:39.068" endtime="20201029 18:14:39.073"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:39.031" endtime="20201029 18:14:39.075"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:39.024" endtime="20201029 18:14:39.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.021" endtime="20201029 18:14:39.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:39.085" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:39.084" endtime="20201029 18:14:39.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.079" endtime="20201029 18:14:39.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.019" endtime="20201029 18:14:39.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.017" endtime="20201029 18:14:39.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.089" endtime="20201029 18:14:39.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.011" endtime="20201029 18:14:39.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.007" endtime="20201029 18:14:39.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.975" endtime="20201029 18:14:39.096"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.119" endtime="20201029 18:14:39.437"></status>
</kw>
<msg timestamp="20201029 18:14:39.438" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.115" endtime="20201029 18:14:39.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.444" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.440" endtime="20201029 18:14:39.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.446" endtime="20201029 18:14:39.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.108" endtime="20201029 18:14:39.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.102" endtime="20201029 18:14:39.453"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.458" endtime="20201029 18:14:39.462"></status>
</kw>
<msg timestamp="20201029 18:14:39.463" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:14:39.455" endtime="20201029 18:14:39.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.473" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:39.471" endtime="20201029 18:14:39.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.478" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:39.476" endtime="20201029 18:14:39.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.465" endtime="20201029 18:14:39.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.490" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:39.488" endtime="20201029 18:14:39.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.495" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:39.492" endtime="20201029 18:14:39.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.482" endtime="20201029 18:14:39.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.517" endtime="20201029 18:14:39.864"></status>
</kw>
<msg timestamp="20201029 18:14:39.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134904097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134927, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:39.513" endtime="20201029 18:14:39.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134904097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134927, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:39.874" endtime="20201029 18:14:39.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.905" endtime="20201029 18:14:39.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.505" endtime="20201029 18:14:39.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.500" endtime="20201029 18:14:39.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.927" level="INFO">${RESULT} = [{'diff': 2.2902999999990792e-05}, {'diff': 2.2943999999996967e-05}, {'diff': 2.2833999999999355e-05}, {'diff': 2.2902999999990792e-05}, {'diff': 2.2959000000016827e-05}, {'diff': 2.2902999999990792e-...</msg>
<status status="PASS" starttime="20201029 18:14:39.916" endtime="20201029 18:14:39.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:39.938" level="INFO">${OVERHEAD} = {'diff': [2.2902999999990792e-05, 2.2943999999996967e-05, 2.2833999999999355e-05, 2.2902999999990792e-05, 2.2959000000016827e-05, 2.2902999999990792e-05, 2.2916000000011705e-05, 2.288899999999816e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:39.929" endtime="20201029 18:14:39.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.952" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:39.949" endtime="20201029 18:14:39.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.957" level="INFO">VALUE: [2.2902999999990792e-05, 2.2943999999996967e-05, 2.2833999999999355e-05, 2.2902999999990792e-05, 2.2959000000016827e-05, 2.2902999999990792e-05, 2.2916000000011705e-05, 2.288899999999816e-05, 2.2902999999990792e-05, 2.2846999999992512e-05, 2.2903000000018547e-05, 2.2902999999990792e-05, 2.288899999999816e-05, 2.2889000000025916e-05, 2.288899999999816e-05, 2.287500000000553e-05, 2.2903000000018547e-05, 2.287500000000553e-05, 2.2861999999984617e-05, 2.288899999999816e-05, 2.2958000000017353e-05, 2.2901999999991318e-05, 2.2903000000018547e-05, 2.2903000000018547e-05, 2.2889000000025916e-05, 2.2889000000025916e-05, 2.2903000000018547e-05, 2.2916999999955667e-05, 2.2875000000033285e-05, 2.2875000000033285e-05, 2.2874999999977774e-05, 2.2957999999961842e-05, 2.2860999999985143e-05, 2.291700000001118e-05, 2.2875000000033285e-05, 2.2888999999970405e-05, 2.290200000004683e-05, 2.2889000000025916e-05, 2.2861000000040654e-05, 2.2888999999970405e-05, 2.281899999995174e-05, 2.291700000001118e-05, 2.2889000000025916e-05, 2.293100000000381e-05, 2.2888999999970405e-05, 2.293100000000381e-05, 2.2889000000025916e-05, 2.293100000000381e-05, 2.2903000000018547e-05, 2.293000000003209e-05]</msg>
<status status="PASS" starttime="20201029 18:14:39.954" endtime="20201029 18:14:39.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.941" endtime="20201029 18:14:39.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.097" endtime="20201029 18:14:39.961"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:38.968" endtime="20201029 18:14:39.963" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:39.981" endtime="20201029 18:14:40.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.976" endtime="20201029 18:14:40.005"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.063" endtime="20201029 18:14:40.088"></status>
</kw>
<msg timestamp="20201029 18:14:40.090" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.060" endtime="20201029 18:14:40.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.093" endtime="20201029 18:14:40.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.109" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:40.103" endtime="20201029 18:14:40.110"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:40.048" endtime="20201029 18:14:40.113"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:40.031" endtime="20201029 18:14:40.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.019" endtime="20201029 18:14:40.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:40.126" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:40.124" endtime="20201029 18:14:40.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.118" endtime="20201029 18:14:40.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.017" endtime="20201029 18:14:40.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.015" endtime="20201029 18:14:40.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.131" endtime="20201029 18:14:40.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.011" endtime="20201029 18:14:40.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.006" endtime="20201029 18:14:40.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.973" endtime="20201029 18:14:40.140"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.151" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:40.169" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:42.237" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:40.147" endtime="20201029 18:14:42.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.244" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:42.241" endtime="20201029 18:14:42.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.142" endtime="20201029 18:14:42.247"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.255" endtime="20201029 18:14:42.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.251" endtime="20201029 18:14:42.278"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.303" endtime="20201029 18:14:42.311"></status>
</kw>
<msg timestamp="20201029 18:14:42.313" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.299" endtime="20201029 18:14:42.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.319" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.315" endtime="20201029 18:14:42.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.321" endtime="20201029 18:14:42.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.290" endtime="20201029 18:14:42.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.284" endtime="20201029 18:14:42.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.345" endtime="20201029 18:14:42.704"></status>
</kw>
<msg timestamp="20201029 18:14:42.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037875028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037877569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:42.342" endtime="20201029 18:14:42.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037875028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037877569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:42.713" endtime="20201029 18:14:42.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.733" endtime="20201029 18:14:42.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.335" endtime="20201029 18:14:42.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.330" endtime="20201029 18:14:42.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.750" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 1.6473000000002957e-05}, {'diff': 1.6472000000003484e-05}, {'diff': 1.648699999999559e-05}, {'diff': 1.6485999999996115e-05}, {'diff': 1.666699999999799e-05}, {'diff': 1.6500000...</msg>
<status status="PASS" starttime="20201029 18:14:42.742" endtime="20201029 18:14:42.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.760" level="INFO">${RESULT} = {'diff': [0, 1.6473000000002957e-05, 1.6472000000003484e-05, 1.648699999999559e-05, 1.6485999999996115e-05, 1.666699999999799e-05, 1.6500000000002624e-05, 1.6500000000002624e-05, 1.6471999999996545e-0...</msg>
<status status="PASS" starttime="20201029 18:14:42.752" endtime="20201029 18:14:42.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.771" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.768" endtime="20201029 18:14:42.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.778" level="INFO">VALUE: [0, 1.6473000000002957e-05, 1.6472000000003484e-05, 1.648699999999559e-05, 1.6485999999996115e-05, 1.666699999999799e-05, 1.6500000000002624e-05, 1.6500000000002624e-05, 1.6471999999996545e-05, 1.652700000000229e-05, 1.6487000000002527e-05, 1.651299999999578e-05, 1.6542000000001333e-05, 1.665299999999842e-05, 1.6486000000003054e-05, 1.6500000000002624e-05, 1.6513999999995255e-05, 1.6472000000003484e-05, 1.6486000000003054e-05, 1.6513999999995255e-05, 1.6499999999995685e-05, 1.658300000000057e-05, 1.6416000000005204e-05, 1.6527999999994825e-05, 1.6485999999996115e-05, 1.6486000000003054e-05, 1.6500000000002624e-05, 1.6513999999995255e-05, 1.6471999999996545e-05, 1.6665999999998515e-05, 1.6486000000003054e-05, 1.6500000000002624e-05, 1.6513999999995255e-05, 1.6486000000003054e-05, 1.6472000000003484e-05, 1.6471999999996545e-05, 1.6499999999995685e-05, 1.663899999999885e-05, 1.655500000000143e-05, 1.6500000000002624e-05, 1.648699999999559e-05, 1.6500000000002624e-05, 1.6487000000002527e-05, 1.6472000000003484e-05, 1.6499999999995685e-05, 1.67089999999967e-05, 1.6500000000002624e-05, 1.6500000000002624e-05, 1.6513999999995255e-05, 1.6528000000001764e-05]</msg>
<status status="PASS" starttime="20201029 18:14:42.775" endtime="20201029 18:14:42.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.762" endtime="20201029 18:14:42.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.280" endtime="20201029 18:14:42.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.249" endtime="20201029 18:14:42.782"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.788" endtime="20201029 18:14:42.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.784" endtime="20201029 18:14:42.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.833" endtime="20201029 18:14:42.843"></status>
</kw>
<msg timestamp="20201029 18:14:42.845" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.830" endtime="20201029 18:14:42.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.851" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.847" endtime="20201029 18:14:42.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.853" endtime="20201029 18:14:42.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.823" endtime="20201029 18:14:42.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.817" endtime="20201029 18:14:42.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.877" endtime="20201029 18:14:43.238"></status>
</kw>
<msg timestamp="20201029 18:14:43.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035034236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.874" endtime="20201029 18:14:43.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035034236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.249" endtime="20201029 18:14:43.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.268" endtime="20201029 18:14:43.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.866" endtime="20201029 18:14:43.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.862" endtime="20201029 18:14:43.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:43.285" level="INFO">${PHILIP_RES} = [{'diff': 3.0028000000001387e-05}, {'diff': 3.188900000000022e-05}, {'diff': 3.040300000000523e-05}, {'diff': 3.070800000000429e-05}, {'diff': 3.188900000000022e-05}, {'diff': 3.0374999999999153e-05},...</msg>
<status status="PASS" starttime="20201029 18:14:43.277" endtime="20201029 18:14:43.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.296" level="INFO">${RESULT} = {'diff': [3.0028000000001387e-05, 3.188900000000022e-05, 3.040300000000523e-05, 3.070800000000429e-05, 3.188900000000022e-05, 3.0374999999999153e-05, 3.069499999999725e-05, 3.188800000000075e-05, 3.03...</msg>
<status status="PASS" starttime="20201029 18:14:43.287" endtime="20201029 18:14:43.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.307" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:43.304" endtime="20201029 18:14:43.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.313" level="INFO">VALUE: [3.0028000000001387e-05, 3.188900000000022e-05, 3.040300000000523e-05, 3.070800000000429e-05, 3.188900000000022e-05, 3.0374999999999153e-05, 3.069499999999725e-05, 3.188800000000075e-05, 3.0388999999998723e-05, 3.072199999999692e-05, 3.1832999999995004e-05, 3.0374999999999153e-05, 3.066599999999864e-05, 3.186100000000108e-05, 3.038900000000566e-05, 3.070799999999735e-05, 3.179200000000271e-05, 3.0374999999999153e-05, 3.070799999999735e-05, 3.186100000000108e-05, 3.0360999999999583e-05, 3.070800000000429e-05, 3.19300000000064e-05, 3.0291999999994268e-05, 3.072300000000333e-05, 3.186100000000108e-05, 3.0388999999998723e-05, 3.072299999999639e-05, 3.1862000000000557e-05, 3.0388999999998723e-05, 3.072199999999692e-05, 3.183300000000194e-05, 3.0388999999998723e-05, 3.072200000000386e-05, 3.187500000000065e-05, 3.038900000000566e-05, 3.070899999999682e-05, 3.186100000000108e-05, 3.0333999999999917e-05, 3.072199999999692e-05, 3.184700000000151e-05, 3.038799999999925e-05, 3.073600000000343e-05, 3.1860999999994144e-05, 3.038900000000566e-05, 3.072199999999692e-05, 3.19449999999985e-05, 3.0374999999999153e-05, 3.072199999999692e-05, 3.186100000000108e-05]</msg>
<status status="PASS" starttime="20201029 18:14:43.309" endtime="20201029 18:14:43.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.298" endtime="20201029 18:14:43.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.813" endtime="20201029 18:14:43.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.783" endtime="20201029 18:14:43.317"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:43.323" endtime="20201029 18:14:43.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.319" endtime="20201029 18:14:43.346"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.367" endtime="20201029 18:14:43.377"></status>
</kw>
<msg timestamp="20201029 18:14:43.378" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.364" endtime="20201029 18:14:43.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.384" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.380" endtime="20201029 18:14:43.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.387" endtime="20201029 18:14:43.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.357" endtime="20201029 18:14:43.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.351" endtime="20201029 18:14:43.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.410" endtime="20201029 18:14:43.798"></status>
</kw>
<msg timestamp="20201029 18:14:43.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034342431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034387056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.407" endtime="20201029 18:14:43.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034342431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034387056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.808" endtime="20201029 18:14:43.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.826" endtime="20201029 18:14:43.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.399" endtime="20201029 18:14:43.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.395" endtime="20201029 18:14:43.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:43.843" level="INFO">${PHILIP_RES} = [{'diff': 4.4624999999999526e-05}, {'diff': 4.482000000000097e-05}, {'diff': 4.5833000000002067e-05}, {'diff': 4.579100000000336e-05}, {'diff': 4.577799999999632e-05}, {'diff': 4.579099999999642e-05},...</msg>
<status status="PASS" starttime="20201029 18:14:43.835" endtime="20201029 18:14:43.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.854" level="INFO">${RESULT} = {'diff': [4.4624999999999526e-05, 4.482000000000097e-05, 4.5833000000002067e-05, 4.579100000000336e-05, 4.577799999999632e-05, 4.579099999999642e-05, 4.58060000000024e-05, 4.576300000000422e-05, 4.582...</msg>
<status status="PASS" starttime="20201029 18:14:43.845" endtime="20201029 18:14:43.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.864" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:43.862" endtime="20201029 18:14:43.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.870" level="INFO">VALUE: [4.4624999999999526e-05, 4.482000000000097e-05, 4.5833000000002067e-05, 4.579100000000336e-05, 4.577799999999632e-05, 4.579099999999642e-05, 4.58060000000024e-05, 4.576300000000422e-05, 4.582000000000197e-05, 4.582000000000197e-05, 4.577699999999685e-05, 4.579200000000283e-05, 4.5875000000000776e-05, 4.572200000000498e-05, 4.579099999999642e-05, 4.579199999999589e-05, 4.58060000000024e-05, 4.580500000000293e-05, 4.580599999999546e-05, 4.581899999999556e-05, 4.579200000000283e-05, 4.580500000000293e-05, 4.58060000000024e-05, 4.572199999999804e-05, 4.579199999999589e-05, 4.58060000000024e-05, 4.577800000000326e-05, 4.579199999999589e-05, 4.581899999999556e-05, 4.579200000000283e-05, 4.58060000000024e-05, 4.58190000000025e-05, 4.577799999999632e-05, 4.5833000000002067e-05, 4.579200000000283e-05, 4.580500000000293e-05, 4.579199999999589e-05, 4.579099999999642e-05, 4.579200000000283e-05, 4.573600000000455e-05, 4.580599999999546e-05, 4.579099999999642e-05, 4.582000000000197e-05, 4.579200000000283e-05, 4.576399999999675e-05, 4.577799999999632e-05, 4.577699999999685e-05, 4.582000000000197e-05, 4.58190000000025e-05, 4.579199999999589e-05]</msg>
<status status="PASS" starttime="20201029 18:14:43.867" endtime="20201029 18:14:43.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.856" endtime="20201029 18:14:43.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.347" endtime="20201029 18:14:43.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.318" endtime="20201029 18:14:43.874"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:43.880" endtime="20201029 18:14:43.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.876" endtime="20201029 18:14:43.903"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.924" endtime="20201029 18:14:43.935"></status>
</kw>
<msg timestamp="20201029 18:14:43.936" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.921" endtime="20201029 18:14:43.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.942" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.938" endtime="20201029 18:14:43.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.944" endtime="20201029 18:14:43.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.913" endtime="20201029 18:14:43.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.908" endtime="20201029 18:14:43.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.967" endtime="20201029 18:14:44.339"></status>
</kw>
<msg timestamp="20201029 18:14:44.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033907528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033969597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.964" endtime="20201029 18:14:44.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033907528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033969597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.349" endtime="20201029 18:14:44.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.368" endtime="20201029 18:14:44.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.957" endtime="20201029 18:14:44.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.952" endtime="20201029 18:14:44.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.384" level="INFO">${PHILIP_RES} = [{'diff': 6.206899999999793e-05}, {'diff': 6.194400000000128e-05}, {'diff': 6.191700000000161e-05}, {'diff': 6.194400000000128e-05}, {'diff': 6.192999999999477e-05}, {'diff': 6.195900000000032e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:44.377" endtime="20201029 18:14:44.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.394" level="INFO">${RESULT} = {'diff': [6.206899999999793e-05, 6.194400000000128e-05, 6.191700000000161e-05, 6.194400000000128e-05, 6.192999999999477e-05, 6.195900000000032e-05, 6.193100000000118e-05, 6.188899999999553e-05, 6.1944...</msg>
<status status="PASS" starttime="20201029 18:14:44.386" endtime="20201029 18:14:44.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.404" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.402" endtime="20201029 18:14:44.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.410" level="INFO">VALUE: [6.206899999999793e-05, 6.194400000000128e-05, 6.191700000000161e-05, 6.194400000000128e-05, 6.192999999999477e-05, 6.195900000000032e-05, 6.193100000000118e-05, 6.188899999999553e-05, 6.194400000000128e-05, 6.194500000000075e-05, 6.186099999999639e-05, 6.195799999999391e-05, 6.195800000000085e-05, 6.193100000000118e-05, 6.193100000000118e-05, 6.191699999999467e-05, 6.193100000000118e-05, 6.201399999999913e-05, 6.194400000000128e-05, 6.194500000000075e-05, 6.194500000000075e-05, 6.197200000000042e-05, 6.194400000000128e-05, 6.197200000000042e-05, 6.193100000000118e-05, 6.194400000000128e-05, 6.195800000000085e-05, 6.195800000000085e-05, 6.194500000000075e-05, 6.190300000000204e-05, 6.195800000000085e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.194500000000075e-05, 6.193100000000118e-05, 6.191700000000161e-05, 6.194400000000128e-05, 6.197200000000042e-05, 6.194500000000075e-05, 6.198599999999999e-05, 6.191700000000161e-05, 6.193100000000118e-05, 6.197200000000042e-05, 6.19300000000017e-05, 6.197200000000042e-05, 6.194500000000075e-05, 6.199999999999956e-05, 6.194400000000128e-05, 6.194500000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:14:44.407" endtime="20201029 18:14:44.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.396" endtime="20201029 18:14:44.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.904" endtime="20201029 18:14:44.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.875" endtime="20201029 18:14:44.414"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.420" endtime="20201029 18:14:44.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.416" endtime="20201029 18:14:44.444"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.465" endtime="20201029 18:14:44.479"></status>
</kw>
<msg timestamp="20201029 18:14:44.480" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.462" endtime="20201029 18:14:44.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.486" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.482" endtime="20201029 18:14:44.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.489" endtime="20201029 18:14:44.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.454" endtime="20201029 18:14:44.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.449" endtime="20201029 18:14:44.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.512" endtime="20201029 18:14:44.863"></status>
</kw>
<msg timestamp="20201029 18:14:44.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036023542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036101639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.509" endtime="20201029 18:14:44.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036023542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036101639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.872" endtime="20201029 18:14:44.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.892" endtime="20201029 18:14:44.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.501" endtime="20201029 18:14:44.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.497" endtime="20201029 18:14:44.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.908" level="INFO">${PHILIP_RES} = [{'diff': 7.80969999999992e-05}, {'diff': 7.716699999999604e-05}, {'diff': 7.697300000000101e-05}, {'diff': 7.815300000000441e-05}, {'diff': 7.719400000000265e-05}, {'diff': 7.695800000000197e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:44.900" endtime="20201029 18:14:44.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.917" level="INFO">${RESULT} = {'diff': [7.80969999999992e-05, 7.716699999999604e-05, 7.697300000000101e-05, 7.815300000000441e-05, 7.719400000000265e-05, 7.695800000000197e-05, 7.813900000000484e-05, 7.716600000000351e-05, 7.70000...</msg>
<status status="PASS" starttime="20201029 18:14:44.910" endtime="20201029 18:14:44.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.928" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.926" endtime="20201029 18:14:44.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.933" level="INFO">VALUE: [7.80969999999992e-05, 7.716699999999604e-05, 7.697300000000101e-05, 7.815300000000441e-05, 7.719400000000265e-05, 7.695800000000197e-05, 7.813900000000484e-05, 7.716600000000351e-05, 7.700000000000068e-05, 7.81389999999979e-05, 7.715299999999647e-05, 7.698600000000111e-05, 7.8151999999998e-05, 7.715300000000341e-05, 7.694499999999493e-05, 7.8151999999998e-05, 7.719500000000212e-05, 7.697200000000154e-05, 7.81389999999979e-05, 7.713799999999743e-05, 7.702799999999982e-05, 7.813900000000484e-05, 7.716600000000351e-05, 7.701400000000025e-05, 7.81389999999979e-05, 7.719400000000265e-05, 7.700000000000068e-05, 7.812499999999833e-05, 7.716599999999657e-05, 7.701400000000025e-05, 7.815300000000441e-05, 7.715300000000341e-05, 7.700000000000068e-05, 7.811099999999876e-05, 7.71389999999969e-05, 7.700000000000068e-05, 7.8151999999998e-05, 7.716700000000298e-05, 7.700000000000068e-05, 7.819500000000312e-05, 7.718000000000308e-05, 7.698599999999417e-05, 7.81389999999979e-05, 7.716600000000351e-05, 7.700000000000068e-05, 7.816699999999704e-05, 7.70969999999982e-05, 7.698600000000111e-05, 7.815300000000441e-05, 7.716699999999604e-05]</msg>
<status status="PASS" starttime="20201029 18:14:44.930" endtime="20201029 18:14:44.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.919" endtime="20201029 18:14:44.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.445" endtime="20201029 18:14:44.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.415" endtime="20201029 18:14:44.938"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.943" endtime="20201029 18:14:44.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.940" endtime="20201029 18:14:44.968"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.998" endtime="20201029 18:14:45.012"></status>
</kw>
<msg timestamp="20201029 18:14:45.013" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.994" endtime="20201029 18:14:45.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.020" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.015" endtime="20201029 18:14:45.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.022" endtime="20201029 18:14:45.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.985" endtime="20201029 18:14:45.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.978" endtime="20201029 18:14:45.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.045" endtime="20201029 18:14:45.385"></status>
</kw>
<msg timestamp="20201029 18:14:45.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045393986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045489389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.042" endtime="20201029 18:14:45.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045393986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045489389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.395" endtime="20201029 18:14:45.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.414" endtime="20201029 18:14:45.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.035" endtime="20201029 18:14:45.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.030" endtime="20201029 18:14:45.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.431" level="INFO">${PHILIP_RES} = [{'diff': 9.540300000000085e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.520899999999888e-05}, {'diff': 9.536100000000214e-05}, {'diff': 9.62080000000004e-05}, {'diff': 9.522299999999845e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:45.423" endtime="20201029 18:14:45.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.440" level="INFO">${RESULT} = {'diff': [9.540300000000085e-05, 9.522199999999897e-05, 9.520899999999888e-05, 9.536100000000214e-05, 9.62080000000004e-05, 9.522299999999845e-05, 9.523599999999854e-05, 9.523599999999854e-05, 9.51939...</msg>
<status status="PASS" starttime="20201029 18:14:45.433" endtime="20201029 18:14:45.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.451" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.448" endtime="20201029 18:14:45.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.458" level="INFO">VALUE: [9.540300000000085e-05, 9.522199999999897e-05, 9.520899999999888e-05, 9.536100000000214e-05, 9.62080000000004e-05, 9.522299999999845e-05, 9.523599999999854e-05, 9.523599999999854e-05, 9.519399999999983e-05, 9.534700000000257e-05, 9.618100000000074e-05, 9.518099999999974e-05, 9.522299999999845e-05, 9.524999999999811e-05, 9.522200000000591e-05, 9.541700000000042e-05, 9.618100000000074e-05, 9.523599999999854e-05, 9.522300000000539e-05, 9.529200000000376e-05, 9.526399999999768e-05, 9.541600000000094e-05, 9.615200000000212e-05, 9.526399999999768e-05, 9.526399999999768e-05, 9.523699999999802e-05, 9.527800000000419e-05, 9.540300000000085e-05, 9.618100000000074e-05, 9.520899999999888e-05, 9.527699999999778e-05, 9.524999999999811e-05, 9.527800000000419e-05, 9.537499999999477e-05, 9.618000000000126e-05, 9.518099999999974e-05, 9.524999999999811e-05, 9.526300000000515e-05, 9.525000000000505e-05, 9.534699999999563e-05, 9.618000000000126e-05, 9.524999999999811e-05, 9.526400000000462e-05, 9.526299999999821e-05, 9.526399999999768e-05, 9.540300000000085e-05, 9.623599999999954e-05, 9.526399999999768e-05, 9.524999999999811e-05, 9.523599999999854e-05]</msg>
<status status="PASS" starttime="20201029 18:14:45.453" endtime="20201029 18:14:45.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.442" endtime="20201029 18:14:45.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.970" endtime="20201029 18:14:45.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.938" endtime="20201029 18:14:45.462"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.468" endtime="20201029 18:14:45.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.464" endtime="20201029 18:14:45.492"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.513" endtime="20201029 18:14:45.526"></status>
</kw>
<msg timestamp="20201029 18:14:45.528" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.509" endtime="20201029 18:14:45.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.534" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.530" endtime="20201029 18:14:45.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.536" endtime="20201029 18:14:45.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.502" endtime="20201029 18:14:45.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.497" endtime="20201029 18:14:45.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.560" endtime="20201029 18:14:45.899"></status>
</kw>
<msg timestamp="20201029 18:14:45.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034456153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034569972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.556" endtime="20201029 18:14:45.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034456153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034569972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.909" endtime="20201029 18:14:45.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.928" endtime="20201029 18:14:45.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.549" endtime="20201029 18:14:45.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.544" endtime="20201029 18:14:45.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.944" level="INFO">${PHILIP_RES} = [{'diff': 0.00011381899999999417}, {'diff': 0.00011333300000000018}, {'diff': 0.00011434700000000075}, {'diff': 0.00011348599999999598}, {'diff': 0.00011429199999999501}, {'diff': 0.000113527999999994...</msg>
<status status="PASS" starttime="20201029 18:14:45.936" endtime="20201029 18:14:45.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.954" level="INFO">${RESULT} = {'diff': [0.00011381899999999417, 0.00011333300000000018, 0.00011434700000000075, 0.00011348599999999598, 0.00011429199999999501, 0.00011352799999999469, 0.00011433400000000066, 0.00011350000000000249...</msg>
<status status="PASS" starttime="20201029 18:14:45.946" endtime="20201029 18:14:45.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.965" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.963" endtime="20201029 18:14:45.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.970" level="INFO">VALUE: [0.00011381899999999417, 0.00011333300000000018, 0.00011434700000000075, 0.00011348599999999598, 0.00011429199999999501, 0.00011352799999999469, 0.00011433400000000066, 0.00011350000000000249, 0.00011430600000000152, 0.0001135550000000013, 0.00011433300000000118, 0.00011351400000000206, 0.00011433300000000118, 0.00011350000000000249, 0.0001142499999999963, 0.00011354100000000172, 0.00011430600000000152, 0.00011350000000000249, 0.00011433300000000118, 0.00011352700000000215, 0.00011432000000000109, 0.00011351299999999565, 0.00011433300000000118, 0.00011349999999999555, 0.00011430500000000204, 0.0001135420000000012, 0.00011432000000000109, 0.0001135420000000012, 0.00011433300000000118, 0.00011348600000000292, 0.00011429200000000195, 0.0001135420000000012, 0.00011432000000000109, 0.00011351299999999565, 0.00011430599999999458, 0.00011347300000000282, 0.00011427800000000238, 0.00011352800000000163, 0.00011426400000000281, 0.00011351399999999512, 0.00011430599999999458, 0.00011345899999999631, 0.00011432000000000109, 0.00011355600000000077, 0.00011431900000000161, 0.00011351400000000206, 0.00011429100000000247, 0.00011351400000000206, 0.00011431900000000161, 0.00011349999999999555]</msg>
<status status="PASS" starttime="20201029 18:14:45.967" endtime="20201029 18:14:45.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.956" endtime="20201029 18:14:45.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.493" endtime="20201029 18:14:45.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.463" endtime="20201029 18:14:45.975"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.980" endtime="20201029 18:14:46.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.977" endtime="20201029 18:14:46.004"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.025" endtime="20201029 18:14:46.040"></status>
</kw>
<msg timestamp="20201029 18:14:46.041" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.022" endtime="20201029 18:14:46.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.047" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.044" endtime="20201029 18:14:46.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.050" endtime="20201029 18:14:46.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.015" endtime="20201029 18:14:46.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.009" endtime="20201029 18:14:46.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.073" endtime="20201029 18:14:46.415"></status>
</kw>
<msg timestamp="20201029 18:14:46.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034604222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034738681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.070" endtime="20201029 18:14:46.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034604222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034738681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.426" endtime="20201029 18:14:46.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.444" endtime="20201029 18:14:46.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.063" endtime="20201029 18:14:46.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.058" endtime="20201029 18:14:46.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.460" level="INFO">${PHILIP_RES} = [{'diff': 0.00013445900000000344}, {'diff': 0.00013351400000000124}, {'diff': 0.0001345970000000002}, {'diff': 0.0001334310000000033}, {'diff': 0.00013466699999999804}, {'diff': 0.0001335280000000008}...</msg>
<status status="PASS" starttime="20201029 18:14:46.453" endtime="20201029 18:14:46.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.471" level="INFO">${RESULT} = {'diff': [0.00013445900000000344, 0.00013351400000000124, 0.0001345970000000002, 0.0001334310000000033, 0.00013466699999999804, 0.0001335280000000008, 0.0001345970000000002, 0.00013352799999999387, 0....</msg>
<status status="PASS" starttime="20201029 18:14:46.463" endtime="20201029 18:14:46.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.482" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.480" endtime="20201029 18:14:46.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.487" level="INFO">VALUE: [0.00013445900000000344, 0.00013351400000000124, 0.0001345970000000002, 0.0001334310000000033, 0.00013466699999999804, 0.0001335280000000008, 0.0001345970000000002, 0.00013352799999999387, 0.00013458300000000062, 0.00013350000000000167, 0.0001346389999999989, 0.00013354200000000038, 0.0001346530000000054, 0.0001335280000000008, 0.0001346389999999989, 0.00013347200000000253, 0.00013466699999999804, 0.0001334719999999956, 0.00013461099999999976, 0.00013351400000000124, 0.00013463900000000584, 0.0001334860000000021, 0.00013466699999999804, 0.00013344499999999593, 0.00013462499999999933, 0.00013348700000000158, 0.0001346389999999989, 0.00013350000000000167, 0.00013461099999999976, 0.00013350000000000167, 0.00013461200000000617, 0.0001334860000000021, 0.00013470799999999727, 0.00013347200000000253, 0.0001345970000000002, 0.00013351300000000177, 0.0001346389999999989, 0.00013352700000000134, 0.0001346389999999989, 0.0001334860000000021, 0.00013462499999999933, 0.000133473000000002, 0.00013461099999999976, 0.00013344399999999645, 0.00013461099999999976, 0.00013350000000000167, 0.00013462499999999933, 0.0001334719999999956, 0.00013462499999999933, 0.00013351300000000177]</msg>
<status status="PASS" starttime="20201029 18:14:46.484" endtime="20201029 18:14:46.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.473" endtime="20201029 18:14:46.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.005" endtime="20201029 18:14:46.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.975" endtime="20201029 18:14:46.492"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:46.497" endtime="20201029 18:14:46.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.494" endtime="20201029 18:14:46.524"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.546" endtime="20201029 18:14:46.562"></status>
</kw>
<msg timestamp="20201029 18:14:46.563" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.543" endtime="20201029 18:14:46.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.570" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.566" endtime="20201029 18:14:46.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.572" endtime="20201029 18:14:46.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.536" endtime="20201029 18:14:46.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.530" endtime="20201029 18:14:46.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.597" endtime="20201029 18:14:46.937"></status>
</kw>
<msg timestamp="20201029 18:14:46.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038921917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039077056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.593" endtime="20201029 18:14:46.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038921917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039077056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.946" endtime="20201029 18:14:46.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.965" endtime="20201029 18:14:46.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.585" endtime="20201029 18:14:46.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.580" endtime="20201029 18:14:46.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.981" level="INFO">${PHILIP_RES} = [{'diff': 0.00015513899999999858}, {'diff': 0.00015272300000000044}, {'diff': 0.0001526950000000013}, {'diff': 0.00015269499999999436}, {'diff': 0.00015263900000000302}, {'diff': 0.0001526940000000018...</msg>
<status status="PASS" starttime="20201029 18:14:46.973" endtime="20201029 18:14:46.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.990" level="INFO">${RESULT} = {'diff': [0.00015513899999999858, 0.00015272300000000044, 0.0001526950000000013, 0.00015269499999999436, 0.00015263900000000302, 0.00015269400000000183, 0.00015476400000000168, 0.00015270900000000087,...</msg>
<status status="PASS" starttime="20201029 18:14:46.983" endtime="20201029 18:14:46.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.001" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.998" endtime="20201029 18:14:47.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.006" level="INFO">VALUE: [0.00015513899999999858, 0.00015272300000000044, 0.0001526950000000013, 0.00015269499999999436, 0.00015263900000000302, 0.00015269400000000183, 0.00015476400000000168, 0.00015270900000000087, 0.00015269499999999436, 0.00015263900000000302, 0.0001526939999999949, 0.00015273600000000054, 0.00015481999999999996, 0.00015268100000000173, 0.0001527359999999936, 0.00015270900000000087, 0.00015273600000000054, 0.00015268100000000173, 0.00015484800000000604, 0.0001527080000000014, 0.00015270899999999393, 0.00015272300000000044, 0.00015270799999999446, 0.0001526950000000013, 0.00015483300000000005, 0.00015273600000000054, 0.0001527080000000014, 0.0001527080000000014, 0.0001527500000000001, 0.00015265299999999565, 0.00015487499999999876, 0.00015272200000000097, 0.00015272200000000097, 0.00015273600000000054, 0.0001527630000000002, 0.0001527080000000014, 0.0001548609999999992, 0.00015272300000000044, 0.00015273600000000054, 0.00015273600000000054, 0.0001527500000000001, 0.0001527500000000001, 0.00015483399999999953, 0.00015272200000000097, 0.00015273600000000054, 0.00015277799999999925, 0.00015269400000000183, 0.0001526939999999949, 0.00015483399999999953, 0.00015272200000000097]</msg>
<status status="PASS" starttime="20201029 18:14:47.003" endtime="20201029 18:14:47.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.992" endtime="20201029 18:14:47.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.526" endtime="20201029 18:14:47.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.492" endtime="20201029 18:14:47.011"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.016" endtime="20201029 18:14:47.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.013" endtime="20201029 18:14:47.040"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.061" endtime="20201029 18:14:47.078"></status>
</kw>
<msg timestamp="20201029 18:14:47.079" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.057" endtime="20201029 18:14:47.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.085" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.082" endtime="20201029 18:14:47.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.088" endtime="20201029 18:14:47.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.050" endtime="20201029 18:14:47.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.045" endtime="20201029 18:14:47.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.114" endtime="20201029 18:14:47.454"></status>
</kw>
<msg timestamp="20201029 18:14:47.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034467542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034641361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.110" endtime="20201029 18:14:47.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034467542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034641361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.464" endtime="20201029 18:14:47.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.484" endtime="20201029 18:14:47.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.102" endtime="20201029 18:14:47.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.097" endtime="20201029 18:14:47.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.500" level="INFO">${PHILIP_RES} = [{'diff': 0.0001738190000000056}, {'diff': 0.0001757500000000023}, {'diff': 0.00017397300000000088}, {'diff': 0.00017397300000000088}, {'diff': 0.00017580600000000057}, {'diff': 0.00017394500000000174...</msg>
<status status="PASS" starttime="20201029 18:14:47.493" endtime="20201029 18:14:47.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.510" level="INFO">${RESULT} = {'diff': [0.0001738190000000056, 0.0001757500000000023, 0.00017397300000000088, 0.00017397300000000088, 0.00017580600000000057, 0.00017394500000000174, 0.00017398600000000097, 0.00017574999999999535, ...</msg>
<status status="PASS" starttime="20201029 18:14:47.503" endtime="20201029 18:14:47.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.520" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.518" endtime="20201029 18:14:47.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.526" level="INFO">VALUE: [0.0001738190000000056, 0.0001757500000000023, 0.00017397300000000088, 0.00017397300000000088, 0.00017580600000000057, 0.00017394500000000174, 0.00017398600000000097, 0.00017574999999999535, 0.0001739720000000014, 0.00017397300000000088, 0.00017573599999999578, 0.00017395800000000183, 0.00017395800000000183, 0.00017572200000000315, 0.0001739300000000027, 0.0001739720000000014, 0.0001758050000000011, 0.00017395800000000183, 0.00017398599999999403, 0.0001757500000000023, 0.0001739579999999949, 0.00017398600000000097, 0.00017577800000000143, 0.0001739720000000014, 0.0001739590000000013, 0.00017582000000000014, 0.00017392999999999575, 0.00017400000000000054, 0.00017577800000000143, 0.00017391599999999618, 0.00017394400000000226, 0.000175792000000001, 0.00017402799999999968, 0.00017393100000000217, 0.00017574999999999535, 0.0001739720000000014, 0.00017394399999999532, 0.000175792000000001, 0.00017391600000000312, 0.0001739720000000014, 0.0001757500000000023, 0.00017397300000000088, 0.00017393100000000217, 0.00017576400000000186, 0.00017392999999999575, 0.0001739720000000014, 0.00017573599999999578, 0.00017395800000000183, 0.0001739720000000014, 0.00017577699999999502]</msg>
<status status="PASS" starttime="20201029 18:14:47.523" endtime="20201029 18:14:47.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.511" endtime="20201029 18:14:47.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.041" endtime="20201029 18:14:47.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.011" endtime="20201029 18:14:47.530"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.536" endtime="20201029 18:14:47.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.532" endtime="20201029 18:14:47.560"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.582" endtime="20201029 18:14:47.601"></status>
</kw>
<msg timestamp="20201029 18:14:47.602" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.579" endtime="20201029 18:14:47.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.609" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.604" endtime="20201029 18:14:47.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.611" endtime="20201029 18:14:47.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.572" endtime="20201029 18:14:47.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.566" endtime="20201029 18:14:47.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.635" endtime="20201029 18:14:47.974"></status>
</kw>
<msg timestamp="20201029 18:14:47.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036365986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036563847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.632" endtime="20201029 18:14:47.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036365986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036563847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.983" endtime="20201029 18:14:48.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.002" endtime="20201029 18:14:48.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.625" endtime="20201029 18:14:48.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.619" endtime="20201029 18:14:48.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.018" level="INFO">${PHILIP_RES} = [{'diff': 0.00019786099999999363}, {'diff': 0.00019801399999999636}, {'diff': 0.00019802800000000287}, {'diff': 0.00019802800000000287}, {'diff': 0.00019805599999999507}, {'diff': 0.000198000000000003...</msg>
<status status="PASS" starttime="20201029 18:14:48.010" endtime="20201029 18:14:48.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.027" level="INFO">${RESULT} = {'diff': [0.00019786099999999363, 0.00019801399999999636, 0.00019802800000000287, 0.00019802800000000287, 0.00019805599999999507, 0.00019800000000000373, 0.00019802800000000287, 0.0001979999999999968,...</msg>
<status status="PASS" starttime="20201029 18:14:48.020" endtime="20201029 18:14:48.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.037" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.035" endtime="20201029 18:14:48.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.045" level="INFO">VALUE: [0.00019786099999999363, 0.00019801399999999636, 0.00019802800000000287, 0.00019802800000000287, 0.00019805599999999507, 0.00019800000000000373, 0.00019802800000000287, 0.0001979999999999968, 0.00019798600000000416, 0.00019805500000000253, 0.00019802799999999593, 0.0001979720000000046, 0.00019798599999999722, 0.00019802799999999593, 0.00019802800000000287, 0.00019802800000000287, 0.00019802699999999646, 0.0001980140000000033, 0.0001979439999999985, 0.0001980690000000021, 0.00019801399999999636, 0.00019798599999999722, 0.00019800000000000373, 0.00019798599999999722, 0.0001979439999999985, 0.0001979999999999968, 0.00019800000000000373, 0.00019798599999999722, 0.0001979720000000046, 0.00019797299999999712, 0.00019798600000000416, 0.00019801399999999636, 0.00019798600000000416, 0.0001979869999999967, 0.0001980140000000033, 0.00019805500000000253, 0.00019801399999999636, 0.0001980140000000033, 0.0001979999999999968, 0.0001979999999999968, 0.00019800000000000373, 0.0001979999999999968, 0.00019801399999999636, 0.00019807000000000158, 0.00019802800000000287, 0.0001980140000000033, 0.0001980419999999955, 0.00019800000000000373, 0.00019802800000000287, 0.0001979999999999968]</msg>
<status status="PASS" starttime="20201029 18:14:48.040" endtime="20201029 18:14:48.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.029" endtime="20201029 18:14:48.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.561" endtime="20201029 18:14:48.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.531" endtime="20201029 18:14:48.049"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.055" endtime="20201029 18:14:48.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.051" endtime="20201029 18:14:48.078"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.099" endtime="20201029 18:14:48.119"></status>
</kw>
<msg timestamp="20201029 18:14:48.120" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.096" endtime="20201029 18:14:48.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.126" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.122" endtime="20201029 18:14:48.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.129" endtime="20201029 18:14:48.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.089" endtime="20201029 18:14:48.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.083" endtime="20201029 18:14:48.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.153" endtime="20201029 18:14:48.493"></status>
</kw>
<msg timestamp="20201029 18:14:48.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.150" endtime="20201029 18:14:48.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.503" endtime="20201029 18:14:48.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.521" endtime="20201029 18:14:48.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.143" endtime="20201029 18:14:48.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.138" endtime="20201029 18:14:48.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.537" level="INFO">${PHILIP_RES} = [{'diff': 0.0002198330000000026}, {'diff': 0.00022018000000000038}, {'diff': 0.00022020799999999952}, {'diff': 0.00022012500000000157}, {'diff': 0.00022020799999999952}, {'diff': 0.0002201660000000008...</msg>
<status status="PASS" starttime="20201029 18:14:48.529" endtime="20201029 18:14:48.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.547" level="INFO">${RESULT} = {'diff': [0.0002198330000000026, 0.00022018000000000038, 0.00022020799999999952, 0.00022012500000000157, 0.00022020799999999952, 0.0002201660000000008, 0.0002201530000000007, 0.0002201530000000007, 0....</msg>
<status status="PASS" starttime="20201029 18:14:48.539" endtime="20201029 18:14:48.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.558" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.556" endtime="20201029 18:14:48.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.564" level="INFO">VALUE: [0.0002198330000000026, 0.00022018000000000038, 0.00022020799999999952, 0.00022012500000000157, 0.00022020799999999952, 0.0002201660000000008, 0.0002201530000000007, 0.0002201530000000007, 0.00022019399999999995, 0.00022012499999999463, 0.00022020799999999952, 0.00022029099999999746, 0.00022015299999999377, 0.00022020799999999952, 0.00022020799999999952, 0.00022024999999999822, 0.00022026400000000473, 0.00022019499999999942, 0.00022023599999999866, 0.00022023599999999866, 0.00022024999999999822, 0.00022016700000000028, 0.00022024999999999822, 0.00022020799999999952, 0.00022023599999999866, 0.00022022199999999909, 0.00022012500000000157, 0.00022022199999999909, 0.00022018000000000038, 0.00022023599999999866, 0.00022019399999999995, 0.00022022199999999909, 0.00022020900000000593, 0.000220208999999999, 0.00022019399999999995, 0.00022027799999999736, 0.00022022200000000602, 0.00022018000000000038, 0.00022016700000000028, 0.00022020799999999952, 0.00022024999999999822, 0.00022022299999999856, 0.00022018099999999985, 0.00022019499999999942, 0.00022016700000000028, 0.00022015200000000124, 0.00022019499999999942, 0.00022022199999999909, 0.0002202639999999978, 0.00022022200000000602]</msg>
<status status="PASS" starttime="20201029 18:14:48.560" endtime="20201029 18:14:48.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.549" endtime="20201029 18:14:48.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.079" endtime="20201029 18:14:48.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.050" endtime="20201029 18:14:48.568"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.574" endtime="20201029 18:14:48.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.570" endtime="20201029 18:14:48.597"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.619" endtime="20201029 18:14:48.640"></status>
</kw>
<msg timestamp="20201029 18:14:48.641" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.615" endtime="20201029 18:14:48.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.647" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.643" endtime="20201029 18:14:48.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.650" endtime="20201029 18:14:48.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.608" endtime="20201029 18:14:48.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.603" endtime="20201029 18:14:48.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.674" endtime="20201029 18:14:49.012"></status>
</kw>
<msg timestamp="20201029 18:14:49.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034681819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034924153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.670" endtime="20201029 18:14:49.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034681819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034924153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.021" endtime="20201029 18:14:49.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.040" endtime="20201029 18:14:49.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.663" endtime="20201029 18:14:49.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.658" endtime="20201029 18:14:49.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.059" level="INFO">${PHILIP_RES} = [{'diff': 0.00024233399999999683}, {'diff': 0.00024443099999999635}, {'diff': 0.0002425279999999988}, {'diff': 0.00024236100000000343}, {'diff': 0.00024455500000000047}, {'diff': 0.0002425279999999988...</msg>
<status status="PASS" starttime="20201029 18:14:49.050" endtime="20201029 18:14:49.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.071" level="INFO">${RESULT} = {'diff': [0.00024233399999999683, 0.00024443099999999635, 0.0002425279999999988, 0.00024236100000000343, 0.00024455500000000047, 0.0002425279999999988, 0.00024237499999999607, 0.00024451400000000123, ...</msg>
<status status="PASS" starttime="20201029 18:14:49.061" endtime="20201029 18:14:49.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.083" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.080" endtime="20201029 18:14:49.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.090" level="INFO">VALUE: [0.00024233399999999683, 0.00024443099999999635, 0.0002425279999999988, 0.00024236100000000343, 0.00024455500000000047, 0.0002425279999999988, 0.00024237499999999607, 0.00024451400000000123, 0.00024254199999999837, 0.0002423609999999965, 0.0002445280000000008, 0.00024251299999999976, 0.00024236100000000343, 0.00024450000000000166, 0.00024258400000000402, 0.0002423330000000043, 0.00024455599999999994, 0.0002424860000000001, 0.00024238899999999564, 0.00024455599999999994, 0.00024249999999999966, 0.000242375000000003, 0.00024450000000000166, 0.00024249999999999966, 0.0002422780000000055, 0.00024445800000000295, 0.00024249999999999966, 0.0002423620000000029, 0.00024445800000000295, 0.00024249999999999966, 0.00024233399999999683, 0.0002444590000000024, 0.0002425279999999988, 0.00024234700000000386, 0.00024451400000000123, 0.0002424860000000001, 0.000242375000000003, 0.00024451400000000123, 0.00024251399999999923, 0.00024231899999999779, 0.0002444169999999968, 0.00024249999999999966, 0.0002423330000000043, 0.0002445139999999943, 0.00024251399999999923, 0.00024237499999999607, 0.00024451400000000123, 0.00024252699999999933, 0.00024236100000000343, 0.0002445270000000013]</msg>
<status status="PASS" starttime="20201029 18:14:49.086" endtime="20201029 18:14:49.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.073" endtime="20201029 18:14:49.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.598" endtime="20201029 18:14:49.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.569" endtime="20201029 18:14:49.095"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.101" endtime="20201029 18:14:49.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.097" endtime="20201029 18:14:49.124"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.146" endtime="20201029 18:14:49.168"></status>
</kw>
<msg timestamp="20201029 18:14:49.169" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.142" endtime="20201029 18:14:49.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.176" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.171" endtime="20201029 18:14:49.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.178" endtime="20201029 18:14:49.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.135" endtime="20201029 18:14:49.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.130" endtime="20201029 18:14:49.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.202" endtime="20201029 18:14:49.546"></status>
</kw>
<msg timestamp="20201029 18:14:49.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034646639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034913083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.199" endtime="20201029 18:14:49.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034646639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034913083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.555" endtime="20201029 18:14:49.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.573" endtime="20201029 18:14:49.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.191" endtime="20201029 18:14:49.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.187" endtime="20201029 18:14:49.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.589" level="INFO">${PHILIP_RES} = [{'diff': 0.00026644399999999763}, {'diff': 0.0002664720000000037}, {'diff': 0.000266512999999996}, {'diff': 0.00026663899999999907}, {'diff': 0.00026847299999999824}, {'diff': 0.00026648700000000275}...</msg>
<status status="PASS" starttime="20201029 18:14:49.582" endtime="20201029 18:14:49.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.598" level="INFO">${RESULT} = {'diff': [0.00026644399999999763, 0.0002664720000000037, 0.000266512999999996, 0.00026663899999999907, 0.00026847299999999824, 0.00026648700000000275, 0.000266528000000002, 0.00026654200000000156, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:49.591" endtime="20201029 18:14:49.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.609" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.606" endtime="20201029 18:14:49.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.614" level="INFO">VALUE: [0.00026644399999999763, 0.0002664720000000037, 0.000266512999999996, 0.00026663899999999907, 0.00026847299999999824, 0.00026648700000000275, 0.000266528000000002, 0.00026654200000000156, 0.0002665549999999947, 0.00026663899999999907, 0.00026850000000000485, 0.0002664999999999959, 0.0002665410000000021, 0.0002664999999999959, 0.00026651300000000294, 0.00026670799999999745, 0.00026847199999999877, 0.0002664449999999971, 0.0002664720000000037, 0.0002664860000000033, 0.00026648599999999634, 0.00026670900000000386, 0.0002685140000000044, 0.0002664720000000037, 0.0002665139999999955, 0.00026659700000000036, 0.0002664029999999984, 0.0002666939999999979, 0.00026845899999999867, 0.00026647199999999677, 0.000266528000000002, 0.00026645899999999667, 0.0002665140000000024, 0.00026665199999999917, 0.00026843000000000006, 0.00026648599999999634, 0.00026648599999999634, 0.00026650000000000285, 0.00026647199999999677, 0.00026665199999999917, 0.00026848599999999834, 0.0002665140000000024, 0.0002664860000000033, 0.0002665139999999955, 0.0002664860000000033, 0.00026663899999999907, 0.0002684999999999979, 0.0002665139999999955, 0.0002665140000000024, 0.00026650000000000285]</msg>
<status status="PASS" starttime="20201029 18:14:49.611" endtime="20201029 18:14:49.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.600" endtime="20201029 18:14:49.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.126" endtime="20201029 18:14:49.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.096" endtime="20201029 18:14:49.619"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.624" endtime="20201029 18:14:49.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.621" endtime="20201029 18:14:49.648"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.669" endtime="20201029 18:14:49.693"></status>
</kw>
<msg timestamp="20201029 18:14:49.694" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.665" endtime="20201029 18:14:49.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.701" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.696" endtime="20201029 18:14:49.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.703" endtime="20201029 18:14:49.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.658" endtime="20201029 18:14:49.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.653" endtime="20201029 18:14:49.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.729" endtime="20201029 18:14:50.065"></status>
</kw>
<msg timestamp="20201029 18:14:50.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034580583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034872583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.726" endtime="20201029 18:14:50.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034580583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034872583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.074" endtime="20201029 18:14:50.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.092" endtime="20201029 18:14:50.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.717" endtime="20201029 18:14:50.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.712" endtime="20201029 18:14:50.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:50.108" level="INFO">${PHILIP_RES} = [{'diff': 0.0002920000000000006}, {'diff': 0.00029456900000000147}, {'diff': 0.00029270800000000263}, {'diff': 0.0002945139999999957}, {'diff': 0.0002927640000000009}, {'diff': 0.0002945420000000018},...</msg>
<status status="PASS" starttime="20201029 18:14:50.100" endtime="20201029 18:14:50.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.117" level="INFO">${RESULT} = {'diff': [0.0002920000000000006, 0.00029456900000000147, 0.00029270800000000263, 0.0002945139999999957, 0.0002927640000000009, 0.0002945420000000018, 0.00029270800000000263, 0.0002944450000000043, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:50.110" endtime="20201029 18:14:50.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.129" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:50.126" endtime="20201029 18:14:50.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.134" level="INFO">VALUE: [0.0002920000000000006, 0.00029456900000000147, 0.00029270800000000263, 0.0002945139999999957, 0.0002927640000000009, 0.0002945420000000018, 0.00029270800000000263, 0.0002944450000000043, 0.0002927369999999943, 0.00029457000000000094, 0.0002927220000000022, 0.0002945409999999954, 0.00029277799999999354, 0.00029454199999999486, 0.00029273600000000177, 0.00029451400000000266, 0.00029275000000000134, 0.00029455599999999443, 0.0002927230000000017, 0.00029455600000000137, 0.0002927780000000005, 0.00029452800000000223, 0.00029273600000000177, 0.0002945420000000018, 0.0002927220000000022, 0.0002944859999999966, 0.00029275000000000134, 0.00029451400000000266, 0.00029280500000000015, 0.00029455600000000137, 0.00029275000000000134, 0.0002945829999999941, 0.000292763999999994, 0.00029462499999999975, 0.0002927230000000017, 0.0002945000000000031, 0.0002927640000000009, 0.00029458300000000104, 0.00029275000000000134, 0.0002945839999999936, 0.0002927780000000005, 0.00029458300000000104, 0.0002927780000000005, 0.00029451400000000266, 0.00029275000000000134, 0.0002946110000000002, 0.00029272299999999474, 0.00029457000000000094, 0.0002927640000000009, 0.0002945420000000018]</msg>
<status status="PASS" starttime="20201029 18:14:50.131" endtime="20201029 18:14:50.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.119" endtime="20201029 18:14:50.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.649" endtime="20201029 18:14:50.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.619" endtime="20201029 18:14:50.138"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.144" endtime="20201029 18:14:50.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.140" endtime="20201029 18:14:50.167"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.190" endtime="20201029 18:14:50.215"></status>
</kw>
<msg timestamp="20201029 18:14:50.217" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.186" endtime="20201029 18:14:50.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.223" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.219" endtime="20201029 18:14:50.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.225" endtime="20201029 18:14:50.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.179" endtime="20201029 18:14:50.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.174" endtime="20201029 18:14:50.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.249" endtime="20201029 18:14:50.590"></status>
</kw>
<msg timestamp="20201029 18:14:50.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036637208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036956139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.245" endtime="20201029 18:14:50.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036637208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036956139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.599" endtime="20201029 18:14:50.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.617" endtime="20201029 18:14:50.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.238" endtime="20201029 18:14:50.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.234" endtime="20201029 18:14:50.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:50.633" level="INFO">${PHILIP_RES} = [{'diff': 0.00031893100000000146}, {'diff': 0.00032088900000000475}, {'diff': 0.000318736}, {'diff': 0.0003208750000000052}, {'diff': 0.0003187080000000009}, {'diff': 0.0003208609999999987}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:14:50.626" endtime="20201029 18:14:50.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.642" level="INFO">${RESULT} = {'diff': [0.00031893100000000146, 0.00032088900000000475, 0.000318736, 0.0003208750000000052, 0.0003187080000000009, 0.0003208609999999987, 0.00031877799999999873, 0.000320930000000004, 0.000318791999...</msg>
<status status="PASS" starttime="20201029 18:14:50.635" endtime="20201029 18:14:50.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.653" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:50.651" endtime="20201029 18:14:50.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.660" level="INFO">VALUE: [0.00031893100000000146, 0.00032088900000000475, 0.000318736, 0.0003208750000000052, 0.0003187080000000009, 0.0003208609999999987, 0.00031877799999999873, 0.000320930000000004, 0.0003187919999999983, 0.0003208889999999978, 0.0003187919999999983, 0.0003209449999999961, 0.0003187770000000062, 0.00032087499999999824, 0.00031876399999999916, 0.00032087499999999824, 0.00031875000000000653, 0.0003207910000000008, 0.0003187770000000062, 0.0003209029999999974, 0.00031870799999999394, 0.00032087499999999824, 0.00031879200000000524, 0.0003209029999999974, 0.0003187499999999996, 0.0003208889999999978, 0.00031872200000000045, 0.0003209029999999974, 0.0003186810000000012, 0.0003208050000000004, 0.00031876399999999916, 0.000320833999999999, 0.0003187229999999999, 0.0003208469999999991, 0.0003186940000000013, 0.0003208609999999987, 0.0003186950000000008, 0.0003208609999999987, 0.00031872200000000045, 0.00032080599999999987, 0.000318736, 0.00032083299999999954, 0.0003186940000000013, 0.00032087499999999824, 0.0003187369999999995, 0.00032080599999999987, 0.00031870900000000035, 0.0003208889999999978, 0.00031872200000000045, 0.00032087499999999824]</msg>
<status status="PASS" starttime="20201029 18:14:50.656" endtime="20201029 18:14:50.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.644" endtime="20201029 18:14:50.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.168" endtime="20201029 18:14:50.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.139" endtime="20201029 18:14:50.665"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.670" endtime="20201029 18:14:50.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.667" endtime="20201029 18:14:50.694"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.716" endtime="20201029 18:14:50.742"></status>
</kw>
<msg timestamp="20201029 18:14:50.744" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.712" endtime="20201029 18:14:50.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.750" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.746" endtime="20201029 18:14:50.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.752" endtime="20201029 18:14:50.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.704" endtime="20201029 18:14:50.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.699" endtime="20201029 18:14:50.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.776" endtime="20201029 18:14:51.119"></status>
</kw>
<msg timestamp="20201029 18:14:51.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035230139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035579375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.772" endtime="20201029 18:14:51.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035230139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035579375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.128" endtime="20201029 18:14:51.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.146" endtime="20201029 18:14:51.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.765" endtime="20201029 18:14:51.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.760" endtime="20201029 18:14:51.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.163" level="INFO">${PHILIP_RES} = [{'diff': 0.00034923600000000277}, {'diff': 0.00034601399999999866}, {'diff': 0.0003459859999999995}, {'diff': 0.00034598600000000646}, {'diff': 0.0003459450000000003}, {'diff': 0.0003459580000000004}...</msg>
<status status="PASS" starttime="20201029 18:14:51.155" endtime="20201029 18:14:51.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.173" level="INFO">${RESULT} = {'diff': [0.00034923600000000277, 0.00034601399999999866, 0.0003459859999999995, 0.00034598600000000646, 0.0003459450000000003, 0.0003459580000000004, 0.0003491389999999983, 0.00034605599999999737, 0....</msg>
<status status="PASS" starttime="20201029 18:14:51.165" endtime="20201029 18:14:51.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.184" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.182" endtime="20201029 18:14:51.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.189" level="INFO">VALUE: [0.00034923600000000277, 0.00034601399999999866, 0.0003459859999999995, 0.00034598600000000646, 0.0003459450000000003, 0.0003459580000000004, 0.0003491389999999983, 0.00034605599999999737, 0.0003460409999999983, 0.0003459999999999991, 0.00034604200000000473, 0.0003459999999999991, 0.00034908300000000003, 0.000346000000000006, 0.0003459999999999991, 0.00034611099999999617, 0.00034608299999999703, 0.00034606899999999746, 0.0003491529999999979, 0.00034602699999999875, 0.0003460549999999979, 0.00034602699999999875, 0.0003459999999999991, 0.00034601399999999866, 0.00034919400000000406, 0.00034601399999999866, 0.00034608299999999703, 0.00034608299999999703, 0.0003459999999999991, 0.00034608299999999703, 0.0003492079999999967, 0.0003460409999999983, 0.00034601399999999866, 0.00034604200000000473, 0.0003460560000000043, 0.0003461530000000018, 0.000349180999999997, 0.0003460969999999966, 0.0003461120000000026, 0.00034601399999999866, 0.00034605599999999737, 0.0003460419999999978, 0.00034911099999999917, 0.0003459859999999995, 0.00034597199999999995, 0.0003460140000000056, 0.0003460279999999982, 0.0003460129999999992, 0.00034911099999999917, 0.00034597199999999995]</msg>
<status status="PASS" starttime="20201029 18:14:51.186" endtime="20201029 18:14:51.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.175" endtime="20201029 18:14:51.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.695" endtime="20201029 18:14:51.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.665" endtime="20201029 18:14:51.193"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.199" endtime="20201029 18:14:51.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.196" endtime="20201029 18:14:51.223"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.245" endtime="20201029 18:14:51.273"></status>
</kw>
<msg timestamp="20201029 18:14:51.274" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.241" endtime="20201029 18:14:51.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.280" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.276" endtime="20201029 18:14:51.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.283" endtime="20201029 18:14:51.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.233" endtime="20201029 18:14:51.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.228" endtime="20201029 18:14:51.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.306" endtime="20201029 18:14:51.645"></status>
</kw>
<msg timestamp="20201029 18:14:51.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035440222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035816264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.303" endtime="20201029 18:14:51.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035440222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035816264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.655" endtime="20201029 18:14:51.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.673" endtime="20201029 18:14:51.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.296" endtime="20201029 18:14:51.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.291" endtime="20201029 18:14:51.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.689" level="INFO">${PHILIP_RES} = [{'diff': 0.00037604200000000004}, {'diff': 0.000373333999999996}, {'diff': 0.00037334700000000304}, {'diff': 0.00037612500000000493}, {'diff': 0.00037329100000000476}, {'diff': 0.0003732500000000055}...</msg>
<status status="PASS" starttime="20201029 18:14:51.681" endtime="20201029 18:14:51.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.700" level="INFO">${RESULT} = {'diff': [0.00037604200000000004, 0.000373333999999996, 0.00037334700000000304, 0.00037612500000000493, 0.00037329100000000476, 0.0003732500000000055, 0.00037608399999999875, 0.00037332000000000337, 0...</msg>
<status status="PASS" starttime="20201029 18:14:51.691" endtime="20201029 18:14:51.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.710" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.708" endtime="20201029 18:14:51.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.716" level="INFO">VALUE: [0.00037604200000000004, 0.000373333999999996, 0.00037334700000000304, 0.00037612500000000493, 0.00037329100000000476, 0.0003732500000000055, 0.00037608399999999875, 0.00037332000000000337, 0.0003732919999999973, 0.00037608399999999875, 0.0003732919999999973, 0.00037326399999999815, 0.0003761379999999981, 0.0003732500000000055, 0.0003732499999999986, 0.00037609699999999885, 0.0003732909999999978, 0.0003732629999999987, 0.0003761669999999967, 0.00037332000000000337, 0.00037329200000000423, 0.00037604200000000004, 0.0003732640000000051, 0.00037333300000000347, 0.0003761669999999967, 0.00037334799999999557, 0.0003733610000000026, 0.00037612500000000493, 0.0003733610000000026, 0.00037333299999999653, 0.000376124999999998, 0.00037333400000000294, 0.0003732779999999977, 0.00037608399999999875, 0.00037330599999999686, 0.00037327699999999825, 0.0003761109999999984, 0.00037326399999999815, 0.00037330599999999686, 0.00037609699999999885, 0.00037322199999999944, 0.00037326399999999815, 0.00037608399999999875, 0.00037316700000000064, 0.0003731810000000002, 0.00037604200000000004, 0.00037322199999999944, 0.0003732919999999973, 0.0003761109999999984, 0.00037333300000000347]</msg>
<status status="PASS" starttime="20201029 18:14:51.713" endtime="20201029 18:14:51.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.702" endtime="20201029 18:14:51.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.224" endtime="20201029 18:14:51.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.194" endtime="20201029 18:14:51.720"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.726" endtime="20201029 18:14:51.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.722" endtime="20201029 18:14:51.750"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.775" endtime="20201029 18:14:51.805"></status>
</kw>
<msg timestamp="20201029 18:14:51.806" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.772" endtime="20201029 18:14:51.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.813" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.809" endtime="20201029 18:14:51.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.815" endtime="20201029 18:14:51.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.765" endtime="20201029 18:14:51.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.759" endtime="20201029 18:14:51.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.839" endtime="20201029 18:14:52.178"></status>
</kw>
<msg timestamp="20201029 18:14:52.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039384194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039786208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.835" endtime="20201029 18:14:52.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039384194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039786208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.187" endtime="20201029 18:14:52.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.205" endtime="20201029 18:14:52.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.828" endtime="20201029 18:14:52.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.823" endtime="20201029 18:14:52.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.221" level="INFO">${PHILIP_RES} = [{'diff': 0.0004020140000000061}, {'diff': 0.00040533299999999384}, {'diff': 0.0004053330000000008}, {'diff': 0.00040529100000000207}, {'diff': 0.00040529100000000207}, {'diff': 0.0004053330000000008}...</msg>
<status status="PASS" starttime="20201029 18:14:52.214" endtime="20201029 18:14:52.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.231" level="INFO">${RESULT} = {'diff': [0.0004020140000000061, 0.00040533299999999384, 0.0004053330000000008, 0.00040529100000000207, 0.00040529100000000207, 0.0004053330000000008, 0.00040529100000000207, 0.0004053049999999947, 0....</msg>
<status status="PASS" starttime="20201029 18:14:52.223" endtime="20201029 18:14:52.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.241" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.239" endtime="20201029 18:14:52.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.247" level="INFO">VALUE: [0.0004020140000000061, 0.00040533299999999384, 0.0004053330000000008, 0.00040529100000000207, 0.00040529100000000207, 0.0004053330000000008, 0.00040529100000000207, 0.0004053049999999947, 0.0004053609999999999, 0.0004053609999999999, 0.00040530599999999417, 0.00040529200000000154, 0.0004052220000000037, 0.00040534700000000035, 0.00040533400000000025, 0.0004052499999999959, 0.00040534700000000035, 0.0004053330000000008, 0.00040529200000000154, 0.0004053479999999998, 0.0004053330000000008, 0.0004052770000000025, 0.0004053330000000008, 0.00040531899999999427, 0.0004053330000000008, 0.00040543000000000523, 0.0004053200000000007, 0.0004053619999999994, 0.0004053609999999999, 0.0004053060000000011, 0.0004053190000000012, 0.0004053200000000007, 0.00040529200000000154, 0.00040525000000000283, 0.00040531899999999427, 0.00040529100000000207, 0.0004053330000000008, 0.00040529100000000207, 0.00040529100000000207, 0.0004053330000000008, 0.00040533299999999384, 0.00040533299999999384, 0.00040536200000000633, 0.00040538899999999906, 0.0004053479999999998, 0.0004054169999999982, 0.0004053609999999999, 0.0004053749999999995, 0.0004053609999999999, 0.0004054029999999986]</msg>
<status status="PASS" starttime="20201029 18:14:52.244" endtime="20201029 18:14:52.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.232" endtime="20201029 18:14:52.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.751" endtime="20201029 18:14:52.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.721" endtime="20201029 18:14:52.251"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.257" endtime="20201029 18:14:52.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.253" endtime="20201029 18:14:52.281"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.302" endtime="20201029 18:14:52.333"></status>
</kw>
<msg timestamp="20201029 18:14:52.334" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.298" endtime="20201029 18:14:52.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.341" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.337" endtime="20201029 18:14:52.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.343" endtime="20201029 18:14:52.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.291" endtime="20201029 18:14:52.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.286" endtime="20201029 18:14:52.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.368" endtime="20201029 18:14:52.716"></status>
</kw>
<msg timestamp="20201029 18:14:52.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034522083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034953681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.365" endtime="20201029 18:14:52.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034522083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034953681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.726" endtime="20201029 18:14:52.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.744" endtime="20201029 18:14:52.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.357" endtime="20201029 18:14:52.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.353" endtime="20201029 18:14:52.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.761" level="INFO">${PHILIP_RES} = [{'diff': 0.0004315979999999983}, {'diff': 0.00043154200000000004}, {'diff': 0.00043138900000000424}, {'diff': 0.0004315130000000014}, {'diff': 0.0004345560000000026}, {'diff': 0.0004345560000000026},...</msg>
<status status="PASS" starttime="20201029 18:14:52.753" endtime="20201029 18:14:52.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.770" level="INFO">${RESULT} = {'diff': [0.0004315979999999983, 0.00043154200000000004, 0.00043138900000000424, 0.0004315130000000014, 0.0004345560000000026, 0.0004345560000000026, 0.0004344859999999978, 0.00043450000000000433, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:52.763" endtime="20201029 18:14:52.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.781" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.779" endtime="20201029 18:14:52.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.786" level="INFO">VALUE: [0.0004315979999999983, 0.00043154200000000004, 0.00043138900000000424, 0.0004315130000000014, 0.0004345560000000026, 0.0004345560000000026, 0.0004344859999999978, 0.00043450000000000433, 0.00043452800000000347, 0.00043441699999999944, 0.0004344859999999978, 0.0004344020000000004, 0.00043437500000000073, 0.00043447199999999825, 0.00043441699999999944, 0.0004343890000000003, 0.0004344999999999974, 0.0004345560000000026, 0.00043448600000000476, 0.0004345549999999962, 0.0004344859999999978, 0.00043450000000000433, 0.00043452699999999705, 0.0004344999999999974, 0.00043448600000000476, 0.0004344999999999974, 0.0004345419999999961, 0.00043437500000000073, 0.00043443100000000595, 0.0004344449999999986, 0.0004344579999999987, 0.0004344999999999974, 0.0004344590000000051, 0.00043447199999999825, 0.00043450000000000433, 0.00043447199999999825, 0.0004345700000000022, 0.0004345140000000039, 0.00043455599999999567, 0.0004344999999999974, 0.0004345140000000039, 0.00043452800000000347, 0.00043451399999999696, 0.0004345419999999961, 0.0004345140000000039, 0.0004345980000000013, 0.0004344729999999977, 0.00043462499999999404, 0.00043456899999999576, 0.00043452799999999653]</msg>
<status status="PASS" starttime="20201029 18:14:52.783" endtime="20201029 18:14:52.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.772" endtime="20201029 18:14:52.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.282" endtime="20201029 18:14:52.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.252" endtime="20201029 18:14:52.791"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.797" endtime="20201029 18:14:52.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.794" endtime="20201029 18:14:52.821"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.844" endtime="20201029 18:14:52.878"></status>
</kw>
<msg timestamp="20201029 18:14:52.879" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.841" endtime="20201029 18:14:52.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.885" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.881" endtime="20201029 18:14:52.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.888" endtime="20201029 18:14:52.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.833" endtime="20201029 18:14:52.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.828" endtime="20201029 18:14:52.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.912" endtime="20201029 18:14:53.280"></status>
</kw>
<msg timestamp="20201029 18:14:53.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036678431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037141, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:52.908" endtime="20201029 18:14:53.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036678431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037141, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:53.292" endtime="20201029 18:14:53.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.310" endtime="20201029 18:14:53.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.901" endtime="20201029 18:14:53.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.896" endtime="20201029 18:14:53.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.326" level="INFO">${PHILIP_RES} = [{'diff': 0.00046256900000000295}, {'diff': 0.00046245900000000534}, {'diff': 0.000465568999999999}, {'diff': 0.0004626379999999944}, {'diff': 0.00046248599999999807}, {'diff': 0.0004656799999999961},...</msg>
<status status="PASS" starttime="20201029 18:14:53.319" endtime="20201029 18:14:53.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.336" level="INFO">${RESULT} = {'diff': [0.00046256900000000295, 0.00046245900000000534, 0.000465568999999999, 0.0004626379999999944, 0.00046248599999999807, 0.0004656799999999961, 0.0004626939999999996, 0.00046244399999999936, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:53.328" endtime="20201029 18:14:53.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.346" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.344" endtime="20201029 18:14:53.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.353" level="INFO">VALUE: [0.00046256900000000295, 0.00046245900000000534, 0.000465568999999999, 0.0004626379999999944, 0.00046248599999999807, 0.0004656799999999961, 0.0004626939999999996, 0.00046244399999999936, 0.00046559699999999815, 0.0004626390000000008, 0.0004625269999999973, 0.00046555499999999944, 0.00046266600000000047, 0.0004625139999999972, 0.00046566700000000294, 0.00046266699999999994, 0.00046255499999999644, 0.00046559699999999815, 0.0004627500000000048, 0.00046254199999999634, 0.00046565299999999643, 0.00046265300000000037, 0.00046248599999999807, 0.0004656390000000038, 0.0004625830000000025, 0.00046248699999999754, 0.000465666999999996, 0.0004626809999999995, 0.0004624579999999989, 0.00046563899999999686, 0.0004627359999999983, 0.0004625280000000037, 0.0004655970000000051, 0.0004626390000000008, 0.0004624730000000049, 0.0004656390000000038, 0.00046262500000000123, 0.0004625000000000046, 0.00046559800000000456, 0.00046266699999999994, 0.0004624169999999997, 0.0004655829999999986, 0.0004626939999999996, 0.00046259699999999515, 0.0004656799999999961, 0.0004626390000000008, 0.0004625139999999972, 0.0004656109999999977, 0.0004626249999999943, 0.00046243099999999926]</msg>
<status status="PASS" starttime="20201029 18:14:53.348" endtime="20201029 18:14:53.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.337" endtime="20201029 18:14:53.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.822" endtime="20201029 18:14:53.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.792" endtime="20201029 18:14:53.358"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.364" endtime="20201029 18:14:53.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.360" endtime="20201029 18:14:53.387"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.408" endtime="20201029 18:14:53.443"></status>
</kw>
<msg timestamp="20201029 18:14:53.445" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.405" endtime="20201029 18:14:53.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.451" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.447" endtime="20201029 18:14:53.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.453" endtime="20201029 18:14:53.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.398" endtime="20201029 18:14:53.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.393" endtime="20201029 18:14:53.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.477" endtime="20201029 18:14:53.829"></status>
</kw>
<msg timestamp="20201029 18:14:53.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034592236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03508925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:53.473" endtime="20201029 18:14:53.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034592236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03508925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:53.838" endtime="20201029 18:14:53.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.856" endtime="20201029 18:14:53.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.466" endtime="20201029 18:14:53.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.461" endtime="20201029 18:14:53.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.872" level="INFO">${PHILIP_RES} = [{'diff': 0.000497014000000004}, {'diff': 0.0004939450000000026}, {'diff': 0.0004938749999999978}, {'diff': 0.000493819999999999}, {'diff': 0.0004938749999999978}, {'diff': 0.0004939860000000018}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:53.865" endtime="20201029 18:14:53.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.883" level="INFO">${RESULT} = {'diff': [0.000497014000000004, 0.0004939450000000026, 0.0004938749999999978, 0.000493819999999999, 0.0004938749999999978, 0.0004939860000000018, 0.0004977920000000038, 0.0004937500000000011, 0.000493...</msg>
<status status="PASS" starttime="20201029 18:14:53.874" endtime="20201029 18:14:53.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.893" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.891" endtime="20201029 18:14:53.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.899" level="INFO">VALUE: [0.000497014000000004, 0.0004939450000000026, 0.0004938749999999978, 0.000493819999999999, 0.0004938749999999978, 0.0004939860000000018, 0.0004977920000000038, 0.0004937500000000011, 0.000493639000000004, 0.0004937640000000007, 0.0004937919999999998, 0.0004939309999999961, 0.0004977499999999982, 0.0004937640000000007, 0.0004937919999999998, 0.0004937640000000007, 0.0004938059999999994, 0.0004939860000000018, 0.0004977639999999978, 0.0004939299999999966, 0.0004938059999999994, 0.0004939169999999965, 0.0004938329999999991, 0.0004939860000000018, 0.0004978060000000034, 0.0004937779999999933, 0.0004938469999999986, 0.0004937920000000068, 0.0004938059999999994, 0.0004940280000000005, 0.0004977499999999982, 0.0004938059999999994, 0.000493819999999999, 0.0004937360000000016, 0.0004937639999999938, 0.0004938479999999981, 0.0004976530000000007, 0.0004937780000000003, 0.0004938200000000059, 0.0004938750000000047, 0.000493931000000003, 0.0004940550000000002, 0.0004977909999999974, 0.0004938609999999982, 0.0004938189999999995, 0.0004937770000000008, 0.0004938329999999991, 0.0004939439999999962, 0.0004977499999999982, 0.0004938609999999982]</msg>
<status status="PASS" starttime="20201029 18:14:53.896" endtime="20201029 18:14:53.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.885" endtime="20201029 18:14:53.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.389" endtime="20201029 18:14:53.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.359" endtime="20201029 18:14:53.904"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.909" endtime="20201029 18:14:53.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.906" endtime="20201029 18:14:53.933"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.954" endtime="20201029 18:14:53.991"></status>
</kw>
<msg timestamp="20201029 18:14:53.993" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.951" endtime="20201029 18:14:53.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.999" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.995" endtime="20201029 18:14:54.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.001" endtime="20201029 18:14:54.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.944" endtime="20201029 18:14:54.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.938" endtime="20201029 18:14:54.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.025" endtime="20201029 18:14:54.376"></status>
</kw>
<msg timestamp="20201029 18:14:54.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034683264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.022" endtime="20201029 18:14:54.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034683264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.386" endtime="20201029 18:14:54.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.404" endtime="20201029 18:14:54.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.014" endtime="20201029 18:14:54.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.009" endtime="20201029 18:14:54.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.420" level="INFO">${PHILIP_RES} = [{'diff': 0.0005266390000000024}, {'diff': 0.0005299309999999974}, {'diff': 0.000527167000000002}, {'diff': 0.000529944999999997}, {'diff': 0.0005271530000000024}, {'diff': 0.0005299999999999958}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:54.412" endtime="20201029 18:14:54.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.431" level="INFO">${RESULT} = {'diff': [0.0005266390000000024, 0.0005299309999999974, 0.000527167000000002, 0.000529944999999997, 0.0005271530000000024, 0.0005299999999999958, 0.0005271390000000029, 0.0005299299999999979, 0.000527...</msg>
<status status="PASS" starttime="20201029 18:14:54.422" endtime="20201029 18:14:54.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.441" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.439" endtime="20201029 18:14:54.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.446" level="INFO">VALUE: [0.0005266390000000024, 0.0005299309999999974, 0.000527167000000002, 0.000529944999999997, 0.0005271530000000024, 0.0005299999999999958, 0.0005271390000000029, 0.0005299299999999979, 0.0005271530000000024, 0.0005299169999999978, 0.0005271390000000029, 0.0005299589999999965, 0.0005271250000000033, 0.000529944999999997, 0.0005270419999999984, 0.0005299160000000053, 0.0005271659999999956, 0.0005300000000000027, 0.0005271249999999963, 0.0005298749999999991, 0.0005270140000000062, 0.000529847, 0.0005270139999999993, 0.0005299859999999962, 0.000527152000000003, 0.0005299299999999979, 0.0005271390000000029, 0.0005299029999999982, 0.0005270969999999972, 0.000529958000000004, 0.0005271530000000024, 0.0005299860000000031, 0.0005271939999999947, 0.000529958000000004, 0.0005270689999999981, 0.000529958000000004, 0.0005271379999999964, 0.000529958000000004, 0.0005271389999999959, 0.000529944999999997, 0.0005271390000000029, 0.0005298889999999987, 0.0005271389999999959, 0.0005299030000000052, 0.0005271659999999956, 0.0005299300000000048, 0.0005271669999999951, 0.0005298749999999991, 0.0005270140000000062, 0.000529847]</msg>
<status status="PASS" starttime="20201029 18:14:54.444" endtime="20201029 18:14:54.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.432" endtime="20201029 18:14:54.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.934" endtime="20201029 18:14:54.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.904" endtime="20201029 18:14:54.452"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.457" endtime="20201029 18:14:54.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.454" endtime="20201029 18:14:54.481"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.502" endtime="20201029 18:14:54.541"></status>
</kw>
<msg timestamp="20201029 18:14:54.542" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.499" endtime="20201029 18:14:54.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.549" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.545" endtime="20201029 18:14:54.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.551" endtime="20201029 18:14:54.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.492" endtime="20201029 18:14:54.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.486" endtime="20201029 18:14:54.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.576" endtime="20201029 18:14:54.934"></status>
</kw>
<msg timestamp="20201029 18:14:54.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034807875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035371153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.573" endtime="20201029 18:14:54.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034807875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035371153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.943" endtime="20201029 18:14:54.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.962" endtime="20201029 18:14:54.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.565" endtime="20201029 18:14:54.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.560" endtime="20201029 18:14:54.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.978" level="INFO">${PHILIP_RES} = [{'diff': 0.0005632780000000004}, {'diff': 0.0005610419999999977}, {'diff': 0.0005641669999999974}, {'diff': 0.0005610970000000035}, {'diff': 0.0005643050000000011}, {'diff': 0.0005610549999999978}, {...</msg>
<status status="PASS" starttime="20201029 18:14:54.970" endtime="20201029 18:14:54.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.987" level="INFO">${RESULT} = {'diff': [0.0005632780000000004, 0.0005610419999999977, 0.0005641669999999974, 0.0005610970000000035, 0.0005643050000000011, 0.0005610549999999978, 0.0005641660000000048, 0.0005611250000000026, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:14:54.980" endtime="20201029 18:14:54.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.997" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.995" endtime="20201029 18:14:54.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.003" level="INFO">VALUE: [0.0005632780000000004, 0.0005610419999999977, 0.0005641669999999974, 0.0005610970000000035, 0.0005643050000000011, 0.0005610549999999978, 0.0005641660000000048, 0.0005611250000000026, 0.0005642780000000014, 0.0005610969999999965, 0.0005642219999999962, 0.0005610970000000035, 0.0005641529999999978, 0.0005610969999999965, 0.0005641670000000043, 0.0005610279999999981, 0.0005642500000000022, 0.0005611120000000025, 0.0005642780000000014, 0.0005610969999999965, 0.0005642639999999949, 0.0005611249999999957, 0.0005643060000000005, 0.0005611530000000017, 0.0005642359999999957, 0.0005610269999999987, 0.0005642499999999953, 0.0005612080000000005, 0.0005643609999999993, 0.0005610690000000043, 0.0005642640000000018, 0.0005610970000000035, 0.0005641249999999987, 0.0005610560000000042, 0.0005641670000000043, 0.0005610969999999965, 0.0005643609999999993, 0.0005611389999999952, 0.0005642369999999952, 0.0005611529999999948, 0.0005642079999999966, 0.0005610700000000038, 0.000564194000000004, 0.0005611249999999957, 0.0005642639999999949, 0.0005610419999999977, 0.0005643199999999932, 0.00056108299999999, 0.0005642639999999949, 0.0005610969999999965]</msg>
<status status="PASS" starttime="20201029 18:14:55.000" endtime="20201029 18:14:55.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.989" endtime="20201029 18:14:55.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.482" endtime="20201029 18:14:55.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.453" endtime="20201029 18:14:55.008"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.014" endtime="20201029 18:14:55.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.010" endtime="20201029 18:14:55.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.058" endtime="20201029 18:14:55.099"></status>
</kw>
<msg timestamp="20201029 18:14:55.100" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.055" endtime="20201029 18:14:55.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.106" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.103" endtime="20201029 18:14:55.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.109" endtime="20201029 18:14:55.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.048" endtime="20201029 18:14:55.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.043" endtime="20201029 18:14:55.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.133" endtime="20201029 18:14:55.483"></status>
</kw>
<msg timestamp="20201029 18:14:55.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034759903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035358153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.129" endtime="20201029 18:14:55.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034759903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035358153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.492" endtime="20201029 18:14:55.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.510" endtime="20201029 18:14:55.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.122" endtime="20201029 18:14:55.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.117" endtime="20201029 18:14:55.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.526" level="INFO">${PHILIP_RES} = [{'diff': 0.0005982500000000016}, {'diff': 0.0005944169999999999}, {'diff': 0.0005944579999999991}, {'diff': 0.0005944030000000003}, {'diff': 0.0005943609999999946}, {'diff': 0.0005944030000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:14:55.519" endtime="20201029 18:14:55.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.535" level="INFO">${RESULT} = {'diff': [0.0005982500000000016, 0.0005944169999999999, 0.0005944579999999991, 0.0005944030000000003, 0.0005943609999999946, 0.0005944030000000003, 0.0005985420000000005, 0.0005944030000000003, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:14:55.528" endtime="20201029 18:14:55.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.546" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.544" endtime="20201029 18:14:55.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.554" level="INFO">VALUE: [0.0005982500000000016, 0.0005944169999999999, 0.0005944579999999991, 0.0005944030000000003, 0.0005943609999999946, 0.0005944030000000003, 0.0005985420000000005, 0.0005944030000000003, 0.000594444999999999, 0.0005943750000000012, 0.0005944169999999999, 0.0005944860000000052, 0.0005985829999999998, 0.0005943890000000007, 0.0005943750000000012, 0.0005943890000000007, 0.0005944030000000003, 0.0005943620000000011, 0.0005985560000000001, 0.0005944030000000003, 0.0005944439999999995, 0.0005944719999999987, 0.0005944310000000064, 0.0005943890000000007, 0.0005985839999999992, 0.000594347000000002, 0.0005944020000000008, 0.0005944159999999934, 0.0005943610000000016, 0.0005942910000000037, 0.0005985270000000015, 0.0005944309999999994, 0.0005943750000000012, 0.0005942779999999967, 0.000594235999999998, 0.0005943329999999955, 0.0005984590000000026, 0.0005942500000000045, 0.0005942920000000032, 0.0005943330000000024, 0.0005943200000000023, 0.0005942640000000041, 0.0005984030000000043, 0.0005943610000000016, 0.0005943890000000007, 0.0005943060000000028, 0.000594235999999998, 0.0005942639999999971, 0.0005983330000000064, 0.0005942770000000042]</msg>
<status status="PASS" starttime="20201029 18:14:55.550" endtime="20201029 18:14:55.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.537" endtime="20201029 18:14:55.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.039" endtime="20201029 18:14:55.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.009" endtime="20201029 18:14:55.560"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.566" endtime="20201029 18:14:55.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.563" endtime="20201029 18:14:55.593"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.617" endtime="20201029 18:14:55.659"></status>
</kw>
<msg timestamp="20201029 18:14:55.660" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.613" endtime="20201029 18:14:55.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.667" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.663" endtime="20201029 18:14:55.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.669" endtime="20201029 18:14:55.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.606" endtime="20201029 18:14:55.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.600" endtime="20201029 18:14:55.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.693" endtime="20201029 18:14:56.038"></status>
</kw>
<msg timestamp="20201029 18:14:56.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037472444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038102181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.689" endtime="20201029 18:14:56.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037472444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038102181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.047" endtime="20201029 18:14:56.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.065" endtime="20201029 18:14:56.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.682" endtime="20201029 18:14:56.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.677" endtime="20201029 18:14:56.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.081" level="INFO">${PHILIP_RES} = [{'diff': 0.0006297369999999983}, {'diff': 0.0006297499999999984}, {'diff': 0.0006335560000000004}, {'diff': 0.0006297079999999997}, {'diff': 0.000629681}, {'diff': 0.0006334309999999968}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 18:14:56.073" endtime="20201029 18:14:56.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.090" level="INFO">${RESULT} = {'diff': [0.0006297369999999983, 0.0006297499999999984, 0.0006335560000000004, 0.0006297079999999997, 0.000629681, 0.0006334309999999968, 0.0006296530000000009, 0.0006297089999999991, 0.00063348600000...</msg>
<status status="PASS" starttime="20201029 18:14:56.083" endtime="20201029 18:14:56.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.100" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.098" endtime="20201029 18:14:56.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.107" level="INFO">VALUE: [0.0006297369999999983, 0.0006297499999999984, 0.0006335560000000004, 0.0006297079999999997, 0.000629681, 0.0006334309999999968, 0.0006296530000000009, 0.0006297089999999991, 0.0006334860000000025, 0.0006295839999999955, 0.0006296530000000009, 0.0006334579999999965, 0.0006296119999999947, 0.0006296670000000004, 0.0006335969999999996, 0.000629666000000001, 0.0006297499999999984, 0.0006334589999999959, 0.000629681, 0.000629598000000002, 0.000633471999999996, 0.0006296250000000017, 0.0006296940000000001, 0.0006335410000000014, 0.0006296950000000065, 0.0006295970000000026, 0.0006334859999999956, 0.0006297219999999992, 0.0006296110000000021, 0.0006333480000000058, 0.0006295970000000026, 0.0006296389999999943, 0.0006334300000000043, 0.000629666000000001, 0.0006295840000000025, 0.0006334170000000042, 0.0006296109999999952, 0.000629583000000003, 0.0006334439999999969, 0.0006296670000000004, 0.0006296810000000069, 0.0006334580000000034, 0.0006297089999999922, 0.000629666000000001, 0.0006334300000000043, 0.0006297359999999919, 0.0006296659999999871, 0.0006335420000000008, 0.0006297229999999987, 0.0006297079999999927]</msg>
<status status="PASS" starttime="20201029 18:14:56.103" endtime="20201029 18:14:56.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.092" endtime="20201029 18:14:56.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.595" endtime="20201029 18:14:56.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.561" endtime="20201029 18:14:56.112"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.118" endtime="20201029 18:14:56.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.114" endtime="20201029 18:14:56.148"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.178" endtime="20201029 18:14:56.225"></status>
</kw>
<msg timestamp="20201029 18:14:56.226" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.174" endtime="20201029 18:14:56.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.232" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.228" endtime="20201029 18:14:56.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.235" endtime="20201029 18:14:56.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.164" endtime="20201029 18:14:56.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.156" endtime="20201029 18:14:56.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.258" endtime="20201029 18:14:56.610"></status>
</kw>
<msg timestamp="20201029 18:14:56.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052031556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052695778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.255" endtime="20201029 18:14:56.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052031556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052695778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.619" endtime="20201029 18:14:56.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.638" endtime="20201029 18:14:56.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.247" endtime="20201029 18:14:56.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.243" endtime="20201029 18:14:56.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.654" level="INFO">${PHILIP_RES} = [{'diff': 0.000664221999999999}, {'diff': 0.0006646530000000012}, {'diff': 0.0006646530000000012}, {'diff': 0.0006646110000000024}, {'diff': 0.0006685830000000004}, {'diff': 0.0006685560000000007}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:56.646" endtime="20201029 18:14:56.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.664" level="INFO">${RESULT} = {'diff': [0.000664221999999999, 0.0006646530000000012, 0.0006646530000000012, 0.0006646110000000024, 0.0006685830000000004, 0.0006685560000000007, 0.0006685550000000012, 0.0006686659999999983, 0.00066...</msg>
<status status="PASS" starttime="20201029 18:14:56.656" endtime="20201029 18:14:56.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.675" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.673" endtime="20201029 18:14:56.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.680" level="INFO">VALUE: [0.000664221999999999, 0.0006646530000000012, 0.0006646530000000012, 0.0006646110000000024, 0.0006685830000000004, 0.0006685560000000007, 0.0006685550000000012, 0.0006686659999999983, 0.0006686389999999987, 0.0006685420000000011, 0.000668514000000002, 0.0006685979999999994, 0.0006685000000000024, 0.0006684300000000046, 0.0006685420000000011, 0.0006685830000000004, 0.0006685139999999951, 0.0006685419999999942, 0.0006685419999999942, 0.0006685970000000069, 0.0006685839999999998, 0.0006685690000000077, 0.0006685830000000004, 0.0006685560000000007, 0.0006686669999999978, 0.0006685560000000007, 0.0006685980000000064, 0.0006685419999999942, 0.0006684720000000033, 0.0006685270000000021, 0.0006684309999999971, 0.0006684169999999906, 0.0006684860000000098, 0.0006687499999999957, 0.0006686529999999913, 0.0006685690000000077, 0.0006686520000000057, 0.0006685970000000069, 0.0006686530000000052, 0.0006686530000000052, 0.0006686669999999978, 0.0006687360000000031, 0.0006686109999999995, 0.0006687220000000105, 0.0006685419999999942, 0.000668611999999999, 0.0006686939999999975, 0.0006686800000000048, 0.0006686109999999995, 0.0006685839999999998]</msg>
<status status="PASS" starttime="20201029 18:14:56.677" endtime="20201029 18:14:56.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.666" endtime="20201029 18:14:56.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.150" endtime="20201029 18:14:56.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.113" endtime="20201029 18:14:56.685"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.691" endtime="20201029 18:14:56.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.688" endtime="20201029 18:14:56.715"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.736" endtime="20201029 18:14:56.782"></status>
</kw>
<msg timestamp="20201029 18:14:56.783" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.733" endtime="20201029 18:14:56.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.789" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.785" endtime="20201029 18:14:56.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.792" endtime="20201029 18:14:56.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.726" endtime="20201029 18:14:56.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.720" endtime="20201029 18:14:56.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.816" endtime="20201029 18:14:57.154"></status>
</kw>
<msg timestamp="20201029 18:14:57.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034853583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035559111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.812" endtime="20201029 18:14:57.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034853583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035559111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.163" endtime="20201029 18:14:57.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.181" endtime="20201029 18:14:57.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.805" endtime="20201029 18:14:57.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.800" endtime="20201029 18:14:57.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.197" level="INFO">${PHILIP_RES} = [{'diff': 0.0007055279999999969}, {'diff': 0.0007058049999999969}, {'diff': 0.0007057780000000041}, {'diff': 0.0007059030000000008}, {'diff': 0.0007057909999999973}, {'diff': 0.0007058750000000016}, {...</msg>
<status status="PASS" starttime="20201029 18:14:57.190" endtime="20201029 18:14:57.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.208" level="INFO">${RESULT} = {'diff': [0.0007055279999999969, 0.0007058049999999969, 0.0007057780000000041, 0.0007059030000000008, 0.0007057909999999973, 0.0007058750000000016, 0.0007058470000000025, 0.0007058750000000016, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:14:57.199" endtime="20201029 18:14:57.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.219" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.216" endtime="20201029 18:14:57.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.224" level="INFO">VALUE: [0.0007055279999999969, 0.0007058049999999969, 0.0007057780000000041, 0.0007059030000000008, 0.0007057909999999973, 0.0007058750000000016, 0.0007058470000000025, 0.0007058750000000016, 0.0007058750000000016, 0.0007058750000000016, 0.0007057919999999968, 0.0007058059999999963, 0.0007057640000000046, 0.0007058470000000025, 0.0007058049999999969, 0.0007058330000000029, 0.0007058470000000025, 0.000705832999999996, 0.000705832999999996, 0.0007058620000000015, 0.0007058330000000029, 0.0007058750000000016, 0.0007058610000000021, 0.0007059030000000008, 0.0007059309999999999, 0.0007058610000000021, 0.0007059579999999996, 0.0007058750000000016, 0.0007059720000000061, 0.0007059449999999995, 0.0007060139999999979, 0.0007059309999999999, 0.0007059030000000008, 0.0007059170000000003, 0.0007059019999999944, 0.0007057639999999976, 0.0007057920000000037, 0.0007058750000000086, 0.0007058060000000033, 0.0007058750000000086, 0.0007058750000000086, 0.0007058470000000094, 0.0007058050000000038, 0.0007058190000000103, 0.0007058060000000033, 0.0007057640000000115, 0.0007057919999999968, 0.000705750000000005, 0.0007057639999999976, 0.0007058199999999959]</msg>
<status status="PASS" starttime="20201029 18:14:57.221" endtime="20201029 18:14:57.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.210" endtime="20201029 18:14:57.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.716" endtime="20201029 18:14:57.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.686" endtime="20201029 18:14:57.234"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:57.240" endtime="20201029 18:14:57.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.236" endtime="20201029 18:14:57.263"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.284" endtime="20201029 18:14:57.333"></status>
</kw>
<msg timestamp="20201029 18:14:57.334" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.281" endtime="20201029 18:14:57.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.340" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.336" endtime="20201029 18:14:57.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.342" endtime="20201029 18:14:57.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.274" endtime="20201029 18:14:57.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.268" endtime="20201029 18:14:57.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.366" endtime="20201029 18:14:57.720"></status>
</kw>
<msg timestamp="20201029 18:14:57.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034536611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035276444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.363" endtime="20201029 18:14:57.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034536611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035276444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.729" endtime="20201029 18:14:57.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.747" endtime="20201029 18:14:57.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.355" endtime="20201029 18:14:57.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.351" endtime="20201029 18:14:57.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.763" level="INFO">${PHILIP_RES} = [{'diff': 0.0007398329999999953}, {'diff': 0.0007430279999999997}, {'diff': 0.0007390550000000023}, {'diff': 0.0007389449999999978}, {'diff': 0.0007431530000000033}, {'diff': 0.0007390690000000019}, {...</msg>
<status status="PASS" starttime="20201029 18:14:57.756" endtime="20201029 18:14:57.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.773" level="INFO">${RESULT} = {'diff': [0.0007398329999999953, 0.0007430279999999997, 0.0007390550000000023, 0.0007389449999999978, 0.0007431530000000033, 0.0007390690000000019, 0.0007389720000000044, 0.0007430979999999976, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:14:57.766" endtime="20201029 18:14:57.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.783" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.781" endtime="20201029 18:14:57.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.789" level="INFO">VALUE: [0.0007398329999999953, 0.0007430279999999997, 0.0007390550000000023, 0.0007389449999999978, 0.0007431530000000033, 0.0007390690000000019, 0.0007389720000000044, 0.0007430979999999976, 0.0007391389999999998, 0.0007389720000000044, 0.0007430969999999981, 0.0007391110000000006, 0.000738985999999997, 0.0007429309999999953, 0.0007390559999999949, 0.0007389309999999982, 0.0007430830000000055, 0.0007390140000000031, 0.0007389580000000048, 0.0007430979999999976, 0.0007391110000000006, 0.0007388470000000008, 0.0007430419999999993, 0.0007390980000000005, 0.000738986000000004, 0.0007431110000000046, 0.000739179999999999, 0.0007388610000000004, 0.0007429720000000015, 0.0007390000000000035, 0.000738792000000002, 0.0007430559999999989, 0.0007390559999999949, 0.0007390139999999962, 0.0007431250000000042, 0.0007391110000000076, 0.0007389439999999914, 0.0007430140000000002, 0.0007390690000000089, 0.0007389029999999991, 0.0007431249999999973, 0.0007390420000000092, 0.0007389029999999991, 0.0007431109999999908, 0.0007390279999999888, 0.000738903000000013, 0.000743068999999999, 0.0007390000000000035, 0.0007388470000000008, 0.0007431529999999964]</msg>
<status status="PASS" starttime="20201029 18:14:57.786" endtime="20201029 18:14:57.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.774" endtime="20201029 18:14:57.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.265" endtime="20201029 18:14:57.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.235" endtime="20201029 18:14:57.794"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:57.800" endtime="20201029 18:14:57.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.796" endtime="20201029 18:14:57.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.845" endtime="20201029 18:14:57.896"></status>
</kw>
<msg timestamp="20201029 18:14:57.897" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.841" endtime="20201029 18:14:57.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.904" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.900" endtime="20201029 18:14:57.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.906" endtime="20201029 18:14:57.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.834" endtime="20201029 18:14:57.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.829" endtime="20201029 18:14:57.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.930" endtime="20201029 18:14:58.281"></status>
</kw>
<msg timestamp="20201029 18:14:58.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036278986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037056444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.926" endtime="20201029 18:14:58.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036278986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037056444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.290" endtime="20201029 18:14:58.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.308" endtime="20201029 18:14:58.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.919" endtime="20201029 18:14:58.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.914" endtime="20201029 18:14:58.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.324" level="INFO">${PHILIP_RES} = [{'diff': 0.0007774580000000017}, {'diff': 0.0007784579999999958}, {'diff': 0.0007823199999999961}, {'diff': 0.0007783329999999991}, {'diff': 0.0007781530000000036}, {'diff': 0.0007782919999999999}, {...</msg>
<status status="PASS" starttime="20201029 18:14:58.317" endtime="20201029 18:14:58.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.334" level="INFO">${RESULT} = {'diff': [0.0007774580000000017, 0.0007784579999999958, 0.0007823199999999961, 0.0007783329999999991, 0.0007781530000000036, 0.0007782919999999999, 0.0007783059999999994, 0.0007784439999999962, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:14:58.326" endtime="20201029 18:14:58.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.344" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.342" endtime="20201029 18:14:58.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.349" level="INFO">VALUE: [0.0007774580000000017, 0.0007784579999999958, 0.0007823199999999961, 0.0007783329999999991, 0.0007781530000000036, 0.0007782919999999999, 0.0007783059999999994, 0.0007784439999999962, 0.0007822219999999991, 0.0007783340000000055, 0.0007782780000000003, 0.0007783609999999982, 0.0007783479999999982, 0.0007784719999999953, 0.0007822219999999991, 0.0007782360000000016, 0.0007781799999999964, 0.0007782360000000016, 0.0007782090000000019, 0.0007784439999999962, 0.0007822769999999979, 0.0007783469999999987, 0.0007783889999999974, 0.000778319999999999, 0.0007782500000000012, 0.0007784169999999965, 0.0007823059999999965, 0.0007782500000000012, 0.0007782360000000016, 0.0007782219999999951, 0.0007782770000000008, 0.0007784580000000027, 0.0007822359999999917, 0.0007783749999999978, 0.0007784170000000035, 0.0007784170000000035, 0.0007783620000000047, 0.0007784579999999958, 0.0007823470000000027, 0.0007783060000000064, 0.0007783190000000134, 0.0007782499999999942, 0.0007783340000000055, 0.0007784299999999966, 0.0007823189999999897, 0.0007782499999999942, 0.0007782219999999951, 0.0007782359999999877, 0.0007782360000000016, 0.0007783890000000043]</msg>
<status status="PASS" starttime="20201029 18:14:58.346" endtime="20201029 18:14:58.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.335" endtime="20201029 18:14:58.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.825" endtime="20201029 18:14:58.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.795" endtime="20201029 18:14:58.354"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.360" endtime="20201029 18:14:58.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.357" endtime="20201029 18:14:58.384"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.407" endtime="20201029 18:14:58.459"></status>
</kw>
<msg timestamp="20201029 18:14:58.460" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.403" endtime="20201029 18:14:58.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.466" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.462" endtime="20201029 18:14:58.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.469" endtime="20201029 18:14:58.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.396" endtime="20201029 18:14:58.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.391" endtime="20201029 18:14:58.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.492" endtime="20201029 18:14:58.846"></status>
</kw>
<msg timestamp="20201029 18:14:58.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036430236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037252208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.489" endtime="20201029 18:14:58.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036430236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037252208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.855" endtime="20201029 18:14:58.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.873" endtime="20201029 18:14:58.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.482" endtime="20201029 18:14:58.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.477" endtime="20201029 18:14:58.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.889" level="INFO">${PHILIP_RES} = [{'diff': 0.0008219720000000041}, {'diff': 0.0008174859999999992}, {'diff': 0.0008212499999999956}, {'diff': 0.0008173479999999955}, {'diff': 0.0008212220000000034}, {'diff': 0.0008173190000000038}, {...</msg>
<status status="PASS" starttime="20201029 18:14:58.882" endtime="20201029 18:14:58.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.898" level="INFO">${RESULT} = {'diff': [0.0008219720000000041, 0.0008174859999999992, 0.0008212499999999956, 0.0008173479999999955, 0.0008212220000000034, 0.0008173190000000038, 0.0008211659999999982, 0.0008175279999999979, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:14:58.891" endtime="20201029 18:14:58.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.909" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.907" endtime="20201029 18:14:58.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.916" level="INFO">VALUE: [0.0008219720000000041, 0.0008174859999999992, 0.0008212499999999956, 0.0008173479999999955, 0.0008212220000000034, 0.0008173190000000038, 0.0008211659999999982, 0.0008175279999999979, 0.0008213889999999988, 0.0008175840000000031, 0.0008213749999999992, 0.0008175829999999967, 0.000821347, 0.0008175280000000049, 0.0008214030000000053, 0.0008176529999999946, 0.0008214310000000044, 0.0008175279999999979, 0.000821347, 0.000817638999999995, 0.0008214860000000032, 0.0008176249999999954, 0.0008214590000000035, 0.0008175689999999972, 0.0008213749999999992, 0.0008177359999999995, 0.0008213749999999992, 0.0008177219999999999, 0.0008213879999999993, 0.0008176109999999959, 0.0008214440000000045, 0.0008175970000000032, 0.0008213750000000131, 0.0008175139999999914, 0.0008214579999999971, 0.0008175980000000027, 0.0008213609999999927, 0.0008176109999999959, 0.000821458000000011, 0.0008176250000000024, 0.0008214029999999983, 0.0008175970000000032, 0.0008214029999999983, 0.0008175970000000032, 0.0008214449999999901, 0.000817667000000008, 0.0008214170000000048, 0.0008175700000000036, 0.0008215280000000019, 0.0008177359999999995]</msg>
<status status="PASS" starttime="20201029 18:14:58.911" endtime="20201029 18:14:58.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.900" endtime="20201029 18:14:58.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.385" endtime="20201029 18:14:58.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.355" endtime="20201029 18:14:58.921"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.927" endtime="20201029 18:14:58.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.923" endtime="20201029 18:14:58.950"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.971" endtime="20201029 18:14:59.026"></status>
</kw>
<msg timestamp="20201029 18:14:59.027" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.968" endtime="20201029 18:14:59.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.033" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.029" endtime="20201029 18:14:59.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.035" endtime="20201029 18:14:59.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.961" endtime="20201029 18:14:59.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.956" endtime="20201029 18:14:59.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.059" endtime="20201029 18:14:59.422"></status>
</kw>
<msg timestamp="20201029 18:14:59.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034692153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035550347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.056" endtime="20201029 18:14:59.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034692153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035550347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.432" endtime="20201029 18:14:59.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.450" endtime="20201029 18:14:59.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.048" endtime="20201029 18:14:59.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.044" endtime="20201029 18:14:59.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:59.466" level="INFO">${PHILIP_RES} = [{'diff': 0.0008581939999999996}, {'diff': 0.0008627089999999962}, {'diff': 0.0008585420000000038}, {'diff': 0.0008627220000000033}, {'diff': 0.0008585279999999973}, {'diff': 0.0008627220000000033}, {...</msg>
<status status="PASS" starttime="20201029 18:14:59.458" endtime="20201029 18:14:59.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.476" level="INFO">${RESULT} = {'diff': [0.0008581939999999996, 0.0008627089999999962, 0.0008585420000000038, 0.0008627220000000033, 0.0008585279999999973, 0.0008627220000000033, 0.0008587629999999985, 0.0008627500000000024, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:14:59.468" endtime="20201029 18:14:59.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.487" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:59.485" endtime="20201029 18:14:59.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.492" level="INFO">VALUE: [0.0008581939999999996, 0.0008627089999999962, 0.0008585420000000038, 0.0008627220000000033, 0.0008585279999999973, 0.0008627220000000033, 0.0008587629999999985, 0.0008627500000000024, 0.0008586670000000005, 0.0008628469999999999, 0.0008586250000000017, 0.0008626670000000045, 0.0008586249999999948, 0.000862652999999998, 0.0008585419999999969, 0.0008626249999999988, 0.0008586110000000022, 0.0008628339999999998, 0.0008585690000000035, 0.0008626809999999971, 0.0008586389999999944, 0.0008627080000000037, 0.0008586110000000022, 0.000862652999999998, 0.0008585690000000035, 0.0008626950000000036, 0.0008585969999999957, 0.000862652999999998, 0.000858583000000003, 0.0008627359999999959, 0.0008586250000000087, 0.0008627360000000028, 0.0008585699999999891, 0.0008626940000000111, 0.000858554999999997, 0.0008627369999999884, 0.000858500000000012, 0.000862681000000004, 0.0008586250000000017, 0.0008627779999999946, 0.0008585980000000021, 0.0008627499999999955, 0.00085858300000001, 0.0008627500000000093, 0.000858471999999999, 0.0008626389999999984, 0.0008585140000000047, 0.0008627499999999955, 0.0008585409999999905, 0.0008626949999999967]</msg>
<status status="PASS" starttime="20201029 18:14:59.489" endtime="20201029 18:14:59.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.478" endtime="20201029 18:14:59.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.952" endtime="20201029 18:14:59.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.922" endtime="20201029 18:14:59.497"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.503" endtime="20201029 18:14:59.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.500" endtime="20201029 18:14:59.527"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.548" endtime="20201029 18:14:59.605"></status>
</kw>
<msg timestamp="20201029 18:14:59.606" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.545" endtime="20201029 18:14:59.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.612" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.608" endtime="20201029 18:14:59.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.615" endtime="20201029 18:14:59.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.537" endtime="20201029 18:14:59.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.532" endtime="20201029 18:14:59.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.638" endtime="20201029 18:14:59.989"></status>
</kw>
<msg timestamp="20201029 18:14:59.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034924917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035823583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.635" endtime="20201029 18:14:59.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034924917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035823583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.999" endtime="20201029 18:15:00.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.017" endtime="20201029 18:15:00.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.627" endtime="20201029 18:15:00.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.623" endtime="20201029 18:15:00.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:00.033" level="INFO">${PHILIP_RES} = [{'diff': 0.0008986659999999994}, {'diff': 0.0008988049999999956}, {'diff': 0.0008988330000000017}, {'diff': 0.0008987640000000033}, {'diff': 0.0009040420000000007}, {'diff': 0.0008988190000000021}, {...</msg>
<status status="PASS" starttime="20201029 18:15:00.025" endtime="20201029 18:15:00.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:00.044" level="INFO">${RESULT} = {'diff': [0.0008986659999999994, 0.0008988049999999956, 0.0008988330000000017, 0.0008987640000000033, 0.0009040420000000007, 0.0008988190000000021, 0.0008988190000000021, 0.0008988750000000004, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:15:00.035" endtime="20201029 18:15:00.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.054" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:00.052" endtime="20201029 18:15:00.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.060" level="INFO">VALUE: [0.0008986659999999994, 0.0008988049999999956, 0.0008988330000000017, 0.0008987640000000033, 0.0009040420000000007, 0.0008988190000000021, 0.0008988190000000021, 0.0008988750000000004, 0.0008988200000000016, 0.0008989159999999996, 0.0009041249999999987, 0.0008989860000000044, 0.0008989439999999987, 0.0008989859999999975, 0.0008989160000000065, 0.0008988610000000008, 0.000904000000000002, 0.0008987919999999955, 0.0008988339999999942, 0.0008988189999999951, 0.0008988049999999956, 0.0008988620000000003, 0.0009040690000000004, 0.0008988480000000007, 0.0008989439999999987, 0.000898791000000003, 0.0008989589999999978, 0.000898999999999997, 0.0009040969999999926, 0.0008989719999999979, 0.0008988330000000017, 0.0008989449999999982, 0.0008988200000000085, 0.000898902000000007, 0.0009040560000000003, 0.0008989299999999922, 0.000898806000000002, 0.0008988050000000025, 0.0008987360000000111, 0.000898819000000009, 0.0009039579999999964, 0.0008988620000000003, 0.0008988610000000008, 0.0008988189999999951, 0.0008988330000000017, 0.0008988889999999999, 0.0009040139999999947, 0.0008988610000000008, 0.0008988340000000011, 0.0008989030000000064]</msg>
<status status="PASS" starttime="20201029 18:15:00.057" endtime="20201029 18:15:00.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.046" endtime="20201029 18:15:00.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.528" endtime="20201029 18:15:00.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.498" endtime="20201029 18:15:00.065"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:00.071" endtime="20201029 18:15:00.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.067" endtime="20201029 18:15:00.094"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.115" endtime="20201029 18:15:00.174"></status>
</kw>
<msg timestamp="20201029 18:15:00.175" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.112" endtime="20201029 18:15:00.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.181" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.177" endtime="20201029 18:15:00.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.184" endtime="20201029 18:15:00.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.105" endtime="20201029 18:15:00.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.100" endtime="20201029 18:15:00.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.207" endtime="20201029 18:15:00.564"></status>
</kw>
<msg timestamp="20201029 18:15:00.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034718972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035659583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.204" endtime="20201029 18:15:00.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034718972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035659583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.574" endtime="20201029 18:15:00.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.592" endtime="20201029 18:15:00.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.197" endtime="20201029 18:15:00.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.192" endtime="20201029 18:15:00.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:00.611" level="INFO">${PHILIP_RES} = [{'diff': 0.0009406110000000009}, {'diff': 0.0009460279999999946}, {'diff': 0.0009412910000000038}, {'diff': 0.0009412630000000047}, {'diff': 0.0009460270000000021}, {'diff': 0.0009411809999999993}, {...</msg>
<status status="PASS" starttime="20201029 18:15:00.603" endtime="20201029 18:15:00.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:00.620" level="INFO">${RESULT} = {'diff': [0.0009406110000000009, 0.0009460279999999946, 0.0009412910000000038, 0.0009412630000000047, 0.0009460270000000021, 0.0009411809999999993, 0.0009410000000000043, 0.0009457359999999956, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:15:00.613" endtime="20201029 18:15:00.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.631" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:00.628" endtime="20201029 18:15:00.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.636" level="INFO">VALUE: [0.0009406110000000009, 0.0009460279999999946, 0.0009412910000000038, 0.0009412630000000047, 0.0009460270000000021, 0.0009411809999999993, 0.0009410000000000043, 0.0009457359999999956, 0.0009409999999999974, 0.0009410980000000013, 0.0009459029999999979, 0.0009409439999999991, 0.0009410700000000022, 0.0009459440000000041, 0.0009410560000000026, 0.0009411530000000001, 0.000946014000000002, 0.0009411530000000001, 0.0009411799999999998, 0.000946014000000002, 0.0009412220000000054, 0.0009412090000000053, 0.0009459440000000041, 0.0009412920000000033, 0.0009411950000000058, 0.0009459590000000032, 0.0009410689999999958, 0.0009412090000000053, 0.0009459720000000033, 0.0009412230000000049, 0.0009412910000000108, 0.0009459859999999959, 0.000941125000000001, 0.000941042000000003, 0.0009457780000000082, 0.0009412080000000128, 0.000941125000000001, 0.0009459999999999885, 0.0009412500000000046, 0.0009412079999999989, 0.000945916000000005, 0.0009411530000000001, 0.0009411670000000066, 0.0009459730000000027, 0.0009412500000000046, 0.0009411939999999924, 0.0009459589999999962, 0.0009411390000000075, 0.0009412220000000054, 0.0009459029999999979]</msg>
<status status="PASS" starttime="20201029 18:15:00.633" endtime="20201029 18:15:00.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.622" endtime="20201029 18:15:00.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.096" endtime="20201029 18:15:00.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.066" endtime="20201029 18:15:00.641"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:00.647" endtime="20201029 18:15:00.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.643" endtime="20201029 18:15:00.670"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.691" endtime="20201029 18:15:00.754"></status>
</kw>
<msg timestamp="20201029 18:15:00.755" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.688" endtime="20201029 18:15:00.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.763" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.758" endtime="20201029 18:15:00.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.766" endtime="20201029 18:15:00.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.681" endtime="20201029 18:15:00.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.676" endtime="20201029 18:15:00.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.792" endtime="20201029 18:15:01.129"></status>
</kw>
<msg timestamp="20201029 18:15:01.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03614575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037130014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:00.788" endtime="20201029 18:15:01.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03614575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037130014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:01.138" endtime="20201029 18:15:01.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.156" endtime="20201029 18:15:01.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.781" endtime="20201029 18:15:01.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.776" endtime="20201029 18:15:01.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:01.173" level="INFO">${PHILIP_RES} = [{'diff': 0.0009842640000000055}, {'diff': 0.0009834020000000013}, {'diff': 0.000988332999999994}, {'diff': 0.0009892079999999984}, {'diff': 0.0009893750000000007}, {'diff': 0.0009892779999999962}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:01.165" endtime="20201029 18:15:01.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.182" level="INFO">${RESULT} = {'diff': [0.0009842640000000055, 0.0009834020000000013, 0.000988332999999994, 0.0009892079999999984, 0.0009893750000000007, 0.0009892779999999962, 0.000989250000000004, 0.0009893340000000014, 0.000989...</msg>
<status status="PASS" starttime="20201029 18:15:01.175" endtime="20201029 18:15:01.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.193" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:01.191" endtime="20201029 18:15:01.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.198" level="INFO">VALUE: [0.0009842640000000055, 0.0009834020000000013, 0.000988332999999994, 0.0009892079999999984, 0.0009893750000000007, 0.0009892779999999962, 0.000989250000000004, 0.0009893340000000014, 0.0009893470000000015, 0.0009892779999999962, 0.0009891529999999996, 0.000989416, 0.0009893880000000008, 0.0009893049999999959, 0.0009893470000000015, 0.000989333000000002, 0.000989332999999995, 0.0009894730000000046, 0.0009893890000000002, 0.0009894449999999985, 0.0009892629999999972, 0.0009893470000000015, 0.000989332999999995, 0.0009893200000000019, 0.0009892770000000037, 0.0009892629999999902, 0.0009892360000000044, 0.0009892910000000033, 0.0009893340000000084, 0.0009892079999999914, 0.0009892360000000044, 0.0009892630000000041, 0.0009892080000000053, 0.0009892220000000118, 0.0009894299999999995, 0.000989458999999998, 0.0009892779999999962, 0.0009892080000000053, 0.0009892080000000053, 0.0009892080000000053, 0.0009891810000000056, 0.0009893190000000024, 0.0009892920000000027, 0.000989443999999992, 0.0009892360000000044, 0.0009893750000000007, 0.0009893609999999942, 0.0009893750000000007, 0.0009891669999999991, 0.0009891810000000056]</msg>
<status status="PASS" starttime="20201029 18:15:01.195" endtime="20201029 18:15:01.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.184" endtime="20201029 18:15:01.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.672" endtime="20201029 18:15:01.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.642" endtime="20201029 18:15:01.203"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.209" endtime="20201029 18:15:01.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.206" endtime="20201029 18:15:01.233"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.255" endtime="20201029 18:15:01.318"></status>
</kw>
<msg timestamp="20201029 18:15:01.319" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.252" endtime="20201029 18:15:01.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.325" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.321" endtime="20201029 18:15:01.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.328" endtime="20201029 18:15:01.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.245" endtime="20201029 18:15:01.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.239" endtime="20201029 18:15:01.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.351" endtime="20201029 18:15:01.693"></status>
</kw>
<msg timestamp="20201029 18:15:01.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036051292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037078625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.348" endtime="20201029 18:15:01.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036051292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037078625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.702" endtime="20201029 18:15:01.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.720" endtime="20201029 18:15:01.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.341" endtime="20201029 18:15:01.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.336" endtime="20201029 18:15:01.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:01.736" level="INFO">${PHILIP_RES} = [{'diff': 0.0010273329999999983}, {'diff': 0.001032749999999999}, {'diff': 0.0010328049999999978}, {'diff': 0.0010327359999999994}, {'diff': 0.0010327919999999977}, {'diff': 0.0010328330000000038}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:01.728" endtime="20201029 18:15:01.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.745" level="INFO">${RESULT} = {'diff': [0.0010273329999999983, 0.001032749999999999, 0.0010328049999999978, 0.0010327359999999994, 0.0010327919999999977, 0.0010328330000000038, 0.001032667000000001, 0.0010326390000000019, 0.001032...</msg>
<status status="PASS" starttime="20201029 18:15:01.738" endtime="20201029 18:15:01.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.756" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:01.753" endtime="20201029 18:15:01.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.763" level="INFO">VALUE: [0.0010273329999999983, 0.001032749999999999, 0.0010328049999999978, 0.0010327359999999994, 0.0010327919999999977, 0.0010328330000000038, 0.001032667000000001, 0.0010326390000000019, 0.0010325549999999975, 0.0010325969999999962, 0.001032652000000002, 0.0010326390000000019, 0.0010325830000000036, 0.0010325829999999966, 0.001032680000000001, 0.0010326949999999932, 0.001032568999999997, 0.0010324859999999991, 0.0010325280000000048, 0.0010327089999999997, 0.0010326530000000014, 0.0010328059999999972, 0.001032667000000001, 0.0010326390000000019, 0.0010325550000000044, 0.0010325969999999962, 0.001032556000000004, 0.0010324999999999918, 0.0010326250000000092, 0.001032444999999993, 0.0010325830000000036, 0.0010325830000000036, 0.001032652000000009, 0.001032680000000008, 0.0010325419999999974, 0.001032568999999997, 0.0010325830000000036, 0.0010326950000000001, 0.001032540999999998, 0.0010326390000000019, 0.0010325000000000056, 0.001032556000000004, 0.0010325419999999974, 0.0010324160000000082, 0.0010325140000000121, 0.0010324440000000074, 0.001032472999999992, 0.0010325269999999914, 0.001032540999999998, 0.001032584000000003]</msg>
<status status="PASS" starttime="20201029 18:15:01.758" endtime="20201029 18:15:01.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.747" endtime="20201029 18:15:01.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.234" endtime="20201029 18:15:01.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.204" endtime="20201029 18:15:01.768"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.774" endtime="20201029 18:15:01.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.770" endtime="20201029 18:15:01.797"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.820" endtime="20201029 18:15:01.885"></status>
</kw>
<msg timestamp="20201029 18:15:01.887" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.816" endtime="20201029 18:15:01.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.896" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.890" endtime="20201029 18:15:01.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.899" endtime="20201029 18:15:01.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.808" endtime="20201029 18:15:01.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.803" endtime="20201029 18:15:01.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.928" endtime="20201029 18:15:02.268"></status>
</kw>
<msg timestamp="20201029 18:15:02.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036020792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037098278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.924" endtime="20201029 18:15:02.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036020792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037098278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.277" endtime="20201029 18:15:02.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.295" endtime="20201029 18:15:02.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.915" endtime="20201029 18:15:02.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.910" endtime="20201029 18:15:02.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:02.312" level="INFO">${PHILIP_RES} = [{'diff': 0.0010774859999999956}, {'diff': 0.0010727780000000034}, {'diff': 0.0010725280000000031}, {'diff': 0.0010778330000000003}, {'diff': 0.0010729449999999988}, {'diff': 0.001072611000000001}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:02.304" endtime="20201029 18:15:02.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.322" level="INFO">${RESULT} = {'diff': [0.0010774859999999956, 0.0010727780000000034, 0.0010725280000000031, 0.0010778330000000003, 0.0010729449999999988, 0.001072611000000001, 0.0010778190000000007, 0.0010728329999999953, 0.00107...</msg>
<status status="PASS" starttime="20201029 18:15:02.314" endtime="20201029 18:15:02.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.333" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:02.330" endtime="20201029 18:15:02.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.338" level="INFO">VALUE: [0.0010774859999999956, 0.0010727780000000034, 0.0010725280000000031, 0.0010778330000000003, 0.0010729449999999988, 0.001072611000000001, 0.0010778190000000007, 0.0010728329999999953, 0.0010725559999999953, 0.001077792000000001, 0.0010728890000000005, 0.0010726250000000007, 0.0010776670000000044, 0.0010727500000000043, 0.0010725970000000015, 0.0010777500000000023, 0.0010728049999999961, 0.001072680999999999, 0.0010779580000000039, 0.0010729169999999996, 0.0010727219999999982, 0.0010778469999999998, 0.0010729169999999996, 0.001072776999999997, 0.0010779310000000042, 0.001072875000000001, 0.0010726669999999994, 0.0010779310000000042, 0.001072985999999998, 0.0010727779999999965, 0.0010779159999999982, 0.0010729720000000054, 0.00107276399999999, 0.0010779589999999895, 0.0010728480000000012, 0.001072820000000002, 0.0010777640000000088, 0.0010727079999999917, 0.0010726250000000076, 0.0010776109999999922, 0.0010726949999999985, 0.001072500000000004, 0.0010774580000000034, 0.0010726949999999985, 0.0010726109999999872, 0.0010777359999999958, 0.001072875000000001, 0.0010726530000000067, 0.0010778050000000011, 0.0010728470000000018]</msg>
<status status="PASS" starttime="20201029 18:15:02.335" endtime="20201029 18:15:02.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.324" endtime="20201029 18:15:02.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.798" endtime="20201029 18:15:02.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.768" endtime="20201029 18:15:02.350"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.355" endtime="20201029 18:15:02.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.352" endtime="20201029 18:15:02.379"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.400" endtime="20201029 18:15:02.467"></status>
</kw>
<msg timestamp="20201029 18:15:02.468" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.397" endtime="20201029 18:15:02.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.475" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.471" endtime="20201029 18:15:02.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.477" endtime="20201029 18:15:02.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.389" endtime="20201029 18:15:02.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.384" endtime="20201029 18:15:02.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.501" endtime="20201029 18:15:02.840"></status>
</kw>
<msg timestamp="20201029 18:15:02.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034595931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035713694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.497" endtime="20201029 18:15:02.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034595931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035713694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.850" endtime="20201029 18:15:02.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.868" endtime="20201029 18:15:02.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.490" endtime="20201029 18:15:02.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.485" endtime="20201029 18:15:02.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:02.884" level="INFO">${PHILIP_RES} = [{'diff': 0.0011177629999999938}, {'diff': 0.0011228189999999971}, {'diff': 0.0011178469999999982}, {'diff': 0.0011178199999999985}, {'diff': 0.001117901999999997}, {'diff': 0.0011179860000000014}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:02.877" endtime="20201029 18:15:02.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.895" level="INFO">${RESULT} = {'diff': [0.0011177629999999938, 0.0011228189999999971, 0.0011178469999999982, 0.0011178199999999985, 0.001117901999999997, 0.0011179860000000014, 0.0011179720000000018, 0.0011227640000000053, 0.00111...</msg>
<status status="PASS" starttime="20201029 18:15:02.886" endtime="20201029 18:15:02.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.906" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:02.904" endtime="20201029 18:15:02.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.912" level="INFO">VALUE: [0.0011177629999999938, 0.0011228189999999971, 0.0011178469999999982, 0.0011178199999999985, 0.001117901999999997, 0.0011179860000000014, 0.0011179720000000018, 0.0011227640000000053, 0.0011177640000000003, 0.0011177640000000003, 0.0011177370000000006, 0.001117916999999996, 0.0011180689999999993, 0.0011229310000000006, 0.0011179440000000027, 0.0011179579999999953, 0.0011178749999999973, 0.0011178609999999978, 0.0011180419999999996, 0.0011229719999999999, 0.0011179030000000034, 0.001117917000000003, 0.0011177359999999942, 0.0011179299999999961, 0.001118208999999995, 0.0011229309999999937, 0.001117736000000008, 0.001117679999999996, 0.0011177369999999937, 0.001117708000000009, 0.0011179030000000034, 0.0011227359999999992, 0.0011176670000000027, 0.001117596999999998, 0.0011177370000000075, 0.001117707999999995, 0.0011179590000000017, 0.0011227359999999992, 0.0011177359999999942, 0.0011178750000000043, 0.0011179440000000096, 0.0011177920000000063, 0.0011179719999999949, 0.0011227639999999983, 0.001117723000000001, 0.0011176380000000041, 0.0011176660000000033, 0.001117833999999998, 0.0011178750000000043, 0.0011226810000000004]</msg>
<status status="PASS" starttime="20201029 18:15:02.908" endtime="20201029 18:15:02.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.897" endtime="20201029 18:15:02.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.380" endtime="20201029 18:15:02.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.351" endtime="20201029 18:15:02.917"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.922" endtime="20201029 18:15:02.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.919" endtime="20201029 18:15:02.946"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.967" endtime="20201029 18:15:03.037"></status>
</kw>
<msg timestamp="20201029 18:15:03.038" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.964" endtime="20201029 18:15:03.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.045" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.041" endtime="20201029 18:15:03.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.047" endtime="20201029 18:15:03.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.956" endtime="20201029 18:15:03.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.951" endtime="20201029 18:15:03.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.070" endtime="20201029 18:15:03.421"></status>
</kw>
<msg timestamp="20201029 18:15:03.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034791097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035955319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.067" endtime="20201029 18:15:03.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034791097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035955319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.431" endtime="20201029 18:15:03.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.449" endtime="20201029 18:15:03.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.060" endtime="20201029 18:15:03.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.055" endtime="20201029 18:15:03.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:03.465" level="INFO">${PHILIP_RES} = [{'diff': 0.0011642219999999995}, {'diff': 0.0011699719999999983}, {'diff': 0.0011651800000000018}, {'diff': 0.0011699439999999992}, {'diff': 0.0011650970000000038}, {'diff': 0.0011699999999999974}, {...</msg>
<status status="PASS" starttime="20201029 18:15:03.457" endtime="20201029 18:15:03.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.474" level="INFO">${RESULT} = {'diff': [0.0011642219999999995, 0.0011699719999999983, 0.0011651800000000018, 0.0011699439999999992, 0.0011650970000000038, 0.0011699999999999974, 0.0011650830000000043, 0.0011698469999999947, 0.0011...</msg>
<status status="PASS" starttime="20201029 18:15:03.467" endtime="20201029 18:15:03.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.485" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:03.483" endtime="20201029 18:15:03.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.490" level="INFO">VALUE: [0.0011642219999999995, 0.0011699719999999983, 0.0011651800000000018, 0.0011699439999999992, 0.0011650970000000038, 0.0011699999999999974, 0.0011650830000000043, 0.0011698469999999947, 0.0011648610000000031, 0.0011698750000000008, 0.0011651670000000017, 0.0011700559999999957, 0.0011652220000000005, 0.001170125000000001, 0.0011652639999999992, 0.0011700689999999958, 0.0011651810000000012, 0.0011700280000000035, 0.0011650829999999973, 0.001169903, 0.001165041999999998, 0.0011698750000000008, 0.0011650419999999911, 0.0011701380000000011, 0.001165208000000001, 0.001169820000000002, 0.0011650829999999973, 0.0011698750000000008, 0.0011651389999999956, 0.0011699170000000064, 0.001165153000000002, 0.0011700280000000035, 0.001164930999999994, 0.0011696949999999984, 0.0011650829999999973, 0.0011699720000000052, 0.0011651659999999953, 0.0011698890000000073, 0.0011651670000000086, 0.001169903, 0.0011651670000000086, 0.0011699450000000056, 0.001164916000000002, 0.001169930999999999, 0.0011650970000000038, 0.001169804999999996, 0.0011649720000000002, 0.0011697359999999907, 0.0011649589999999932, 0.0011699299999999996]</msg>
<status status="PASS" starttime="20201029 18:15:03.487" endtime="20201029 18:15:03.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.476" endtime="20201029 18:15:03.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.947" endtime="20201029 18:15:03.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.917" endtime="20201029 18:15:03.495"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.501" endtime="20201029 18:15:03.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.497" endtime="20201029 18:15:03.525"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.546" endtime="20201029 18:15:03.620"></status>
</kw>
<msg timestamp="20201029 18:15:03.621" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.543" endtime="20201029 18:15:03.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.627" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.623" endtime="20201029 18:15:03.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.629" endtime="20201029 18:15:03.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.535" endtime="20201029 18:15:03.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.530" endtime="20201029 18:15:03.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.653" endtime="20201029 18:15:03.993"></status>
</kw>
<msg timestamp="20201029 18:15:04.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036149583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0373615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:03.649" endtime="20201029 18:15:04.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036149583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0373615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:04.003" endtime="20201029 18:15:04.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.021" endtime="20201029 18:15:04.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.642" endtime="20201029 18:15:04.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.637" endtime="20201029 18:15:04.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:04.037" level="INFO">${PHILIP_RES} = [{'diff': 0.0012119169999999999}, {'diff': 0.001217041000000002}, {'diff': 0.0012118750000000011}, {'diff': 0.001217056000000001}, {'diff': 0.001211957999999999}, {'diff': 0.001217013000000003}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:15:04.029" endtime="20201029 18:15:04.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.046" level="INFO">${RESULT} = {'diff': [0.0012119169999999999, 0.001217041000000002, 0.0012118750000000011, 0.001217056000000001, 0.001211957999999999, 0.001217013000000003, 0.001211834000000002, 0.0012170140000000024, 0.001211943...</msg>
<status status="PASS" starttime="20201029 18:15:04.039" endtime="20201029 18:15:04.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.057" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:04.054" endtime="20201029 18:15:04.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.062" level="INFO">VALUE: [0.0012119169999999999, 0.001217041000000002, 0.0012118750000000011, 0.001217056000000001, 0.001211957999999999, 0.001217013000000003, 0.001211834000000002, 0.0012170140000000024, 0.0012119439999999995, 0.0012171519999999991, 0.0012119030000000003, 0.0012170830000000007, 0.0012119020000000008, 0.0012168889999999988, 0.0012119169999999999, 0.0012169579999999972, 0.0012119169999999999, 0.0012171109999999999, 0.0012118749999999942, 0.0012170000000000028, 0.0012118609999999946, 0.0012170690000000012, 0.0012120280000000039, 0.0012171529999999986, 0.0012120000000000047, 0.001216916999999998, 0.0012118610000000085, 0.001217027999999995, 0.0012118750000000011, 0.0012170549999999947, 0.0012119729999999912, 0.0012169869999999888, 0.0012119020000000008, 0.001217013000000003, 0.0012118469999999881, 0.001217027999999995, 0.0012118890000000077, 0.0012170140000000024, 0.0012119030000000003, 0.0012171529999999986, 0.0012119859999999982, 0.0012172080000000113, 0.0012120280000000039, 0.001217222000000004, 0.0012118749999999873, 0.0012170420000000015, 0.0012120000000000047, 0.0012169860000000032, 0.0012119160000000073, 0.0012170280000000089]</msg>
<status status="PASS" starttime="20201029 18:15:04.059" endtime="20201029 18:15:04.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.048" endtime="20201029 18:15:04.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.526" endtime="20201029 18:15:04.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.496" endtime="20201029 18:15:04.067"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.073" endtime="20201029 18:15:04.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.069" endtime="20201029 18:15:04.096"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.119" endtime="20201029 18:15:04.194"></status>
</kw>
<msg timestamp="20201029 18:15:04.195" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.116" endtime="20201029 18:15:04.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.202" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.197" endtime="20201029 18:15:04.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.204" endtime="20201029 18:15:04.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.109" endtime="20201029 18:15:04.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.103" endtime="20201029 18:15:04.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.227" endtime="20201029 18:15:04.567"></status>
</kw>
<msg timestamp="20201029 18:15:04.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036259917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037520083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.224" endtime="20201029 18:15:04.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036259917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037520083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.576" endtime="20201029 18:15:04.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.597" endtime="20201029 18:15:04.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.217" endtime="20201029 18:15:04.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.212" endtime="20201029 18:15:04.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:04.614" level="INFO">${PHILIP_RES} = [{'diff': 0.001260166}, {'diff': 0.001260486000000005}, {'diff': 0.001266639}, {'diff': 0.0012605550000000035}, {'diff': 0.001260472999999998}, {'diff': 0.0012603749999999941}, {'diff': 0.001260319999...</msg>
<status status="PASS" starttime="20201029 18:15:04.606" endtime="20201029 18:15:04.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.623" level="INFO">${RESULT} = {'diff': [0.001260166, 0.001260486000000005, 0.001266639, 0.0012605550000000035, 0.001260472999999998, 0.0012603749999999941, 0.0012603199999999953, 0.0012604169999999998, 0.0012664859999999972, 0.001...</msg>
<status status="PASS" starttime="20201029 18:15:04.616" endtime="20201029 18:15:04.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.634" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:04.631" endtime="20201029 18:15:04.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.641" level="INFO">VALUE: [0.001260166, 0.001260486000000005, 0.001266639, 0.0012605550000000035, 0.001260472999999998, 0.0012603749999999941, 0.0012603199999999953, 0.0012604169999999998, 0.0012664859999999972, 0.0012603329999999954, 0.0012604030000000002, 0.0012604859999999982, 0.0012604719999999986, 0.0012603330000000024, 0.0012663750000000001, 0.001260264000000004, 0.001260180999999999, 0.001260235999999998, 0.0012602079999999988, 0.0012602909999999967, 0.0012664999999999899, 0.001260235999999998, 0.0012602089999999982, 0.0012602909999999967, 0.001260263999999997, 0.0012602500000000044, 0.0012664999999999899, 0.001260235999999998, 0.0012602910000000106, 0.0012602909999999967, 0.0012603330000000024, 0.0012604169999999998, 0.0012667229999999974, 0.0012604030000000072, 0.0012604719999999986, 0.001260458000000006, 0.0012602780000000036, 0.0012603189999999959, 0.001266473000000004, 0.0012604019999999938, 0.0012603880000000012, 0.0012604169999999998, 0.0012603890000000006, 0.001260444999999999, 0.001266457999999998, 0.0012602919999999962, 0.0012603050000000032, 0.001260235999999998, 0.0012602080000000127, 0.0012601389999999935]</msg>
<status status="PASS" starttime="20201029 18:15:04.636" endtime="20201029 18:15:04.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.625" endtime="20201029 18:15:04.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.098" endtime="20201029 18:15:04.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.068" endtime="20201029 18:15:04.646"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.652" endtime="20201029 18:15:04.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.648" endtime="20201029 18:15:04.675"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.696" endtime="20201029 18:15:04.774"></status>
</kw>
<msg timestamp="20201029 18:15:04.775" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.693" endtime="20201029 18:15:04.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.781" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.777" endtime="20201029 18:15:04.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.783" endtime="20201029 18:15:04.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.686" endtime="20201029 18:15:04.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.680" endtime="20201029 18:15:04.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.807" endtime="20201029 18:15:05.149"></status>
</kw>
<msg timestamp="20201029 18:15:05.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03475875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036068264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:04.804" endtime="20201029 18:15:05.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03475875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036068264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:05.158" endtime="20201029 18:15:05.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.176" endtime="20201029 18:15:05.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.796" endtime="20201029 18:15:05.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.792" endtime="20201029 18:15:05.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:05.192" level="INFO">${PHILIP_RES} = [{'diff': 0.0013095140000000047}, {'diff': 0.0013146800000000056}, {'diff': 0.0013089299999999998}, {'diff': 0.0013089309999999993}, {'diff': 0.0013147909999999957}, {'diff': 0.0013086390000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:15:05.185" endtime="20201029 18:15:05.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.203" level="INFO">${RESULT} = {'diff': [0.0013095140000000047, 0.0013146800000000056, 0.0013089299999999998, 0.0013089309999999993, 0.0013147909999999957, 0.0013086390000000003, 0.0013087500000000044, 0.0013146110000000003, 0.0013...</msg>
<status status="PASS" starttime="20201029 18:15:05.195" endtime="20201029 18:15:05.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.214" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:05.211" endtime="20201029 18:15:05.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.219" level="INFO">VALUE: [0.0013095140000000047, 0.0013146800000000056, 0.0013089299999999998, 0.0013089309999999993, 0.0013147909999999957, 0.0013086390000000003, 0.0013087500000000044, 0.0013146110000000003, 0.0013088050000000032, 0.0013088330000000023, 0.0013145980000000002, 0.0013088189999999958, 0.0013087779999999966, 0.001314652999999999, 0.0013086110000000012, 0.001308792000000003, 0.0013146110000000003, 0.0013087919999999961, 0.0013086939999999991, 0.001314554999999995, 0.0013088329999999954, 0.001308680999999992, 0.001314583000000008, 0.001308680999999992, 0.0013087780000000104, 0.0013145140000000027, 0.001308680999999992, 0.0013085690000000094, 0.0013145559999999945, 0.0013086939999999991, 0.0013088059999999957, 0.0013146950000000046, 0.0013087090000000051, 0.0013088329999999954, 0.0013146110000000072, 0.0013088330000000092, 0.0013090979999999947, 0.0013147919999999952, 0.0013089299999999998, 0.001308792000000003, 0.0013146519999999995, 0.0013088890000000075, 0.001308875000000001, 0.0013146389999999925, 0.0013088339999999948, 0.0013088059999999957, 0.0013145139999999889, 0.0013086390000000003, 0.0013086669999999995, 0.0013146249999999998]</msg>
<status status="PASS" starttime="20201029 18:15:05.216" endtime="20201029 18:15:05.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.205" endtime="20201029 18:15:05.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.676" endtime="20201029 18:15:05.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.646" endtime="20201029 18:15:05.224"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.230" endtime="20201029 18:15:05.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.226" endtime="20201029 18:15:05.253"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.274" endtime="20201029 18:15:05.354"></status>
</kw>
<msg timestamp="20201029 18:15:05.356" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.271" endtime="20201029 18:15:05.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.362" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.358" endtime="20201029 18:15:05.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.364" endtime="20201029 18:15:05.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.264" endtime="20201029 18:15:05.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.259" endtime="20201029 18:15:05.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.388" endtime="20201029 18:15:05.728"></status>
</kw>
<msg timestamp="20201029 18:15:05.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034439292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035798486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.384" endtime="20201029 18:15:05.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034439292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035798486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.737" endtime="20201029 18:15:05.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.755" endtime="20201029 18:15:05.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.377" endtime="20201029 18:15:05.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.372" endtime="20201029 18:15:05.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:05.771" level="INFO">${PHILIP_RES} = [{'diff': 0.0013591939999999941}, {'diff': 0.0013650280000000042}, {'diff': 0.0013649579999999994}, {'diff': 0.0013649999999999982}, {'diff': 0.001364971999999999}, {'diff': 0.001364889000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:05.763" endtime="20201029 18:15:05.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.782" level="INFO">${RESULT} = {'diff': [0.0013591939999999941, 0.0013650280000000042, 0.0013649579999999994, 0.0013649999999999982, 0.001364971999999999, 0.001364889000000001, 0.0013648199999999958, 0.0013649030000000006, 0.001365...</msg>
<status status="PASS" starttime="20201029 18:15:05.773" endtime="20201029 18:15:05.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.792" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:05.790" endtime="20201029 18:15:05.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.798" level="INFO">VALUE: [0.0013591939999999941, 0.0013650280000000042, 0.0013649579999999994, 0.0013649999999999982, 0.001364971999999999, 0.001364889000000001, 0.0013648199999999958, 0.0013649030000000006, 0.0013650139999999977, 0.0013649999999999982, 0.0013649859999999986, 0.0013649449999999994, 0.0013650279999999973, 0.0013650139999999977, 0.0013651110000000022, 0.0013651109999999952, 0.0013650840000000025, 0.0013651670000000005, 0.0013651940000000001, 0.0013651520000000014, 0.0013650280000000042, 0.0013651520000000084, 0.0013651249999999948, 0.0013651390000000013, 0.0013650280000000042, 0.0013651109999999883, 0.0013650279999999904, 0.0013650139999999977, 0.001364958999999999, 0.0013649030000000006, 0.0013648610000000089, 0.0013650409999999974, 0.0013650840000000025, 0.0013650970000000096, 0.001365083000000003, 0.001365152999999994, 0.0013649859999999986, 0.0013649859999999986, 0.0013650409999999974, 0.0013649169999999933, 0.0013651249999999948, 0.0013652780000000114, 0.001365083000000003, 0.0013649450000000063, 0.0013649020000000012, 0.0013648889999999941, 0.0013649020000000012, 0.0013649729999999916, 0.0013648200000000027, 0.0013650280000000042]</msg>
<status status="PASS" starttime="20201029 18:15:05.795" endtime="20201029 18:15:05.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.784" endtime="20201029 18:15:05.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.255" endtime="20201029 18:15:05.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.225" endtime="20201029 18:15:05.803"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.808" endtime="20201029 18:15:05.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.805" endtime="20201029 18:15:05.832"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.853" endtime="20201029 18:15:05.936"></status>
</kw>
<msg timestamp="20201029 18:15:05.937" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.850" endtime="20201029 18:15:05.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.944" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.940" endtime="20201029 18:15:05.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.946" endtime="20201029 18:15:05.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.842" endtime="20201029 18:15:05.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.837" endtime="20201029 18:15:05.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.971" endtime="20201029 18:15:06.316"></status>
</kw>
<msg timestamp="20201029 18:15:06.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034468361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035878014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.967" endtime="20201029 18:15:06.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034468361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035878014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.326" endtime="20201029 18:15:06.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.344" endtime="20201029 18:15:06.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.960" endtime="20201029 18:15:06.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.955" endtime="20201029 18:15:06.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:06.360" level="INFO">${PHILIP_RES} = [{'diff': 0.0014096529999999968}, {'diff': 0.0014090000000000005}, {'diff': 0.0014091810000000024}, {'diff': 0.0014089169999999956}, {'diff': 0.0014090280000000066}, {'diff': 0.001415068999999998}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:06.352" endtime="20201029 18:15:06.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.369" level="INFO">${RESULT} = {'diff': [0.0014096529999999968, 0.0014090000000000005, 0.0014091810000000024, 0.0014089169999999956, 0.0014090280000000066, 0.001415068999999998, 0.0014150559999999979, 0.0014150420000000052, 0.00141...</msg>
<status status="PASS" starttime="20201029 18:15:06.362" endtime="20201029 18:15:06.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.379" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:06.377" endtime="20201029 18:15:06.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.385" level="INFO">VALUE: [0.0014096529999999968, 0.0014090000000000005, 0.0014091810000000024, 0.0014089169999999956, 0.0014090280000000066, 0.001415068999999998, 0.0014150559999999979, 0.0014150420000000052, 0.0014151810000000015, 0.0014150549999999984, 0.001414903000000002, 0.0014150409999999988, 0.0014149170000000016, 0.0014151389999999958, 0.001415097000000004, 0.0014150699999999974, 0.0014149869999999995, 0.0014150549999999984, 0.001414986, 0.001415166999999995, 0.001415263, 0.001415277999999992, 0.0014153469999999974, 0.0014150830000000114, 0.001415166999999995, 0.001415068999999991, 0.0014151250000000032, 0.0014151110000000106, 0.001415180000000002, 0.0014152080000000011, 0.0014150980000000035, 0.0014152360000000003, 0.0014149450000000008, 0.001414985999999993, 0.0014149170000000016, 0.0014149029999999951, 0.0014149870000000064, 0.0014149720000000005, 0.0014149170000000016, 0.0014149299999999948, 0.0014151670000000088, 0.001415249999999993, 0.0014152500000000068, 0.0014153469999999974, 0.0014155130000000071, 0.0014154860000000075, 0.0014152919999999986, 0.0014151389999999958, 0.0014153610000000039, 0.0014151810000000015]</msg>
<status status="PASS" starttime="20201029 18:15:06.382" endtime="20201029 18:15:06.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.371" endtime="20201029 18:15:06.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.833" endtime="20201029 18:15:06.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.804" endtime="20201029 18:15:06.390"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.396" endtime="20201029 18:15:06.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.392" endtime="20201029 18:15:06.419"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.440" endtime="20201029 18:15:06.527"></status>
</kw>
<msg timestamp="20201029 18:15:06.528" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.437" endtime="20201029 18:15:06.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.534" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.530" endtime="20201029 18:15:06.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.536" endtime="20201029 18:15:06.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.429" endtime="20201029 18:15:06.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.424" endtime="20201029 18:15:06.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.560" endtime="20201029 18:15:06.899"></status>
</kw>
<msg timestamp="20201029 18:15:06.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036134111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037600931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.557" endtime="20201029 18:15:06.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036134111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037600931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.909" endtime="20201029 18:15:06.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.926" endtime="20201029 18:15:06.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.549" endtime="20201029 18:15:06.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.545" endtime="20201029 18:15:06.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:06.943" level="INFO">${PHILIP_RES} = [{'diff': 0.0014668200000000006}, {'diff': 0.001460902}, {'diff': 0.0014607089999999975}, {'diff': 0.0014669300000000052}, {'diff': 0.0014609719999999979}, {'diff': 0.0014608340000000011}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 18:15:06.935" endtime="20201029 18:15:06.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.952" level="INFO">${RESULT} = {'diff': [0.0014668200000000006, 0.001460902, 0.0014607089999999975, 0.0014669300000000052, 0.0014609719999999979, 0.0014608340000000011, 0.001467098, 0.0014611390000000002, 0.0014609309999999986, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:06.945" endtime="20201029 18:15:06.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.963" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:06.960" endtime="20201029 18:15:06.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.968" level="INFO">VALUE: [0.0014668200000000006, 0.001460902, 0.0014607089999999975, 0.0014669300000000052, 0.0014609719999999979, 0.0014608340000000011, 0.001467098, 0.0014611390000000002, 0.0014609309999999986, 0.001466778000000002, 0.0014610410000000032, 0.0014607369999999967, 0.0014668750000000064, 0.001460902, 0.001460707999999998, 0.0014669720000000039, 0.0014608200000000016, 0.001460694999999998, 0.0014670420000000017, 0.0014609159999999927, 0.0014608880000000074, 0.0014670559999999944, 0.0014612629999999904, 0.0014611530000000067, 0.0014669859999999896, 0.0014607640000000033, 0.0014608470000000012, 0.0014668609999999999, 0.0014610139999999966, 0.001460888999999993, 0.0014671390000000062, 0.00146099999999999, 0.0014608200000000016, 0.0014670550000000088, 0.0014609160000000065, 0.0014607499999999968, 0.0014668340000000002, 0.0014609159999999927, 0.0014608480000000007, 0.0014670690000000014, 0.0014611390000000002, 0.0014609169999999921, 0.0014667500000000028, 0.0014608890000000069, 0.0014607360000000041, 0.0014669580000000043, 0.001460986999999997, 0.0014606800000000059, 0.001466917000000012, 0.0014610559999999884]</msg>
<status status="PASS" starttime="20201029 18:15:06.965" endtime="20201029 18:15:06.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.954" endtime="20201029 18:15:06.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.420" endtime="20201029 18:15:06.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.391" endtime="20201029 18:15:06.974"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.980" endtime="20201029 18:15:07.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.976" endtime="20201029 18:15:07.004"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.027" endtime="20201029 18:15:07.115"></status>
</kw>
<msg timestamp="20201029 18:15:07.116" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.024" endtime="20201029 18:15:07.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.122" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.118" endtime="20201029 18:15:07.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.125" endtime="20201029 18:15:07.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.016" endtime="20201029 18:15:07.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.011" endtime="20201029 18:15:07.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.148" endtime="20201029 18:15:07.489"></status>
</kw>
<msg timestamp="20201029 18:15:07.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036727694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038247125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.145" endtime="20201029 18:15:07.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036727694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038247125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.498" endtime="20201029 18:15:07.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.516" endtime="20201029 18:15:07.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.138" endtime="20201029 18:15:07.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.133" endtime="20201029 18:15:07.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:07.532" level="INFO">${PHILIP_RES} = [{'diff': 0.0015194310000000016}, {'diff': 0.001513388999999997}, {'diff': 0.0015131939999999955}, {'diff': 0.0015131809999999954}, {'diff': 0.0015131389999999967}, {'diff': 0.0015132779999999998}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:07.525" endtime="20201029 18:15:07.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.542" level="INFO">${RESULT} = {'diff': [0.0015194310000000016, 0.001513388999999997, 0.0015131939999999955, 0.0015131809999999954, 0.0015131389999999967, 0.0015132779999999998, 0.001520083999999998, 0.001513401999999997, 0.0015132...</msg>
<status status="PASS" starttime="20201029 18:15:07.534" endtime="20201029 18:15:07.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.552" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:07.550" endtime="20201029 18:15:07.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.559" level="INFO">VALUE: [0.0015194310000000016, 0.001513388999999997, 0.0015131939999999955, 0.0015131809999999954, 0.0015131389999999967, 0.0015132779999999998, 0.001520083999999998, 0.001513401999999997, 0.0015132919999999994, 0.0015131940000000024, 0.001513096999999998, 0.001513194999999995, 0.0015199999999999936, 0.0015131249999999971, 0.0015131249999999971, 0.0015130409999999997, 0.001513236000000008, 0.0015132499999999938, 0.001520014, 0.001513014000000007, 0.0015131669999999958, 0.001513125000000004, 0.0015130829999999984, 0.0015133329999999917, 0.0015199580000000018, 0.0015130410000000066, 0.0015129589999999943, 0.001513097000000005, 0.0015131389999999967, 0.0015133469999999982, 0.0015201110000000045, 0.0015130549999999993, 0.001512985999999994, 0.0015130279999999996, 0.0015130559999999987, 0.0015133890000000039, 0.0015201530000000102, 0.0015133330000000056, 0.0015131389999999967, 0.001513291, 0.0015132640000000003, 0.0015133610000000047, 0.001520195000000002, 0.0015133329999999917, 0.0015131809999999885, 0.0015131109999999975, 0.001513208000000002, 0.0015132499999999938, 0.0015201249999999972, 0.0015131249999999902]</msg>
<status status="PASS" starttime="20201029 18:15:07.554" endtime="20201029 18:15:07.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.543" endtime="20201029 18:15:07.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.005" endtime="20201029 18:15:07.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.975" endtime="20201029 18:15:07.568"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.574" endtime="20201029 18:15:07.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.570" endtime="20201029 18:15:07.598"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.620" endtime="20201029 18:15:07.711"></status>
</kw>
<msg timestamp="20201029 18:15:07.712" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.617" endtime="20201029 18:15:07.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.718" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.714" endtime="20201029 18:15:07.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.720" endtime="20201029 18:15:07.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.609" endtime="20201029 18:15:07.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.604" endtime="20201029 18:15:07.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.743" endtime="20201029 18:15:08.104"></status>
</kw>
<msg timestamp="20201029 18:15:08.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036164903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037738069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.740" endtime="20201029 18:15:08.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036164903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037738069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.113" endtime="20201029 18:15:08.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.131" endtime="20201029 18:15:08.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.733" endtime="20201029 18:15:08.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.728" endtime="20201029 18:15:08.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:08.147" level="INFO">${PHILIP_RES} = [{'diff': 0.0015731660000000008}, {'diff': 0.0015676810000000013}, {'diff': 0.0015736670000000008}, {'diff': 0.0015676670000000018}, {'diff': 0.0015733610000000023}, {'diff': 0.0015676669999999948}, {...</msg>
<status status="PASS" starttime="20201029 18:15:08.139" endtime="20201029 18:15:08.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.157" level="INFO">${RESULT} = {'diff': [0.0015731660000000008, 0.0015676810000000013, 0.0015736670000000008, 0.0015676670000000018, 0.0015733610000000023, 0.0015676669999999948, 0.0015734579999999998, 0.001567596999999997, 0.00157...</msg>
<status status="PASS" starttime="20201029 18:15:08.149" endtime="20201029 18:15:08.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.167" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:08.165" endtime="20201029 18:15:08.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.173" level="INFO">VALUE: [0.0015731660000000008, 0.0015676810000000013, 0.0015736670000000008, 0.0015676670000000018, 0.0015733610000000023, 0.0015676669999999948, 0.0015734579999999998, 0.001567596999999997, 0.0015734729999999988, 0.0015674590000000002, 0.0015733189999999966, 0.0015673609999999963, 0.0015733610000000023, 0.001567707999999994, 0.0015733480000000022, 0.0015677220000000006, 0.0015735560000000037, 0.001567708000000001, 0.0015735270000000051, 0.001567723000000007, 0.0015736670000000008, 0.0015677360000000001, 0.0015735689999999969, 0.0015674450000000006, 0.0015735550000000043, 0.0015679030000000094, 0.001573625000000009, 0.0015678199999999975, 0.0015738749999999885, 0.0015678750000000102, 0.0015735280000000046, 0.001567819000000012, 0.0015734169999999936, 0.0015675559999999977, 0.0015736110000000025, 0.0015677640000000131, 0.0015734579999999998, 0.001567777999999992, 0.0015737359999999923, 0.0015678890000000029, 0.0015735549999999904, 0.0015679720000000008, 0.0015738329999999967, 0.0015679030000000094, 0.0015736110000000025, 0.001567834000000004, 0.0015735830000000034, 0.0015678609999999898, 0.0015739310000000006, 0.0015680559999999982]</msg>
<status status="PASS" starttime="20201029 18:15:08.170" endtime="20201029 18:15:08.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.159" endtime="20201029 18:15:08.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.600" endtime="20201029 18:15:08.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.569" endtime="20201029 18:15:08.178"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.183" endtime="20201029 18:15:08.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.180" endtime="20201029 18:15:08.207"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.228" endtime="20201029 18:15:08.321"></status>
</kw>
<msg timestamp="20201029 18:15:08.322" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.224" endtime="20201029 18:15:08.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.328" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.324" endtime="20201029 18:15:08.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.331" endtime="20201029 18:15:08.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.217" endtime="20201029 18:15:08.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.212" endtime="20201029 18:15:08.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.354" endtime="20201029 18:15:08.692"></status>
</kw>
<msg timestamp="20201029 18:15:08.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034207833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035829222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.351" endtime="20201029 18:15:08.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034207833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035829222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.701" endtime="20201029 18:15:08.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.719" endtime="20201029 18:15:08.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.343" endtime="20201029 18:15:08.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.339" endtime="20201029 18:15:08.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:08.734" level="INFO">${PHILIP_RES} = [{'diff': 0.0016213890000000009}, {'diff': 0.0016285839999999954}, {'diff': 0.0016222779999999978}, {'diff': 0.001628500000000005}, {'diff': 0.0016223750000000023}, {'diff': 0.0016285279999999971}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:08.727" endtime="20201029 18:15:08.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.745" level="INFO">${RESULT} = {'diff': [0.0016213890000000009, 0.0016285839999999954, 0.0016222779999999978, 0.001628500000000005, 0.0016223750000000023, 0.0016285279999999971, 0.0016224030000000014, 0.0016285279999999971, 0.00162...</msg>
<status status="PASS" starttime="20201029 18:15:08.737" endtime="20201029 18:15:08.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.756" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:08.754" endtime="20201029 18:15:08.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.761" level="INFO">VALUE: [0.0016213890000000009, 0.0016285839999999954, 0.0016222779999999978, 0.001628500000000005, 0.0016223750000000023, 0.0016285279999999971, 0.0016224030000000014, 0.0016285279999999971, 0.001622499999999999, 0.0016283750000000013, 0.001622430000000001, 0.0016285689999999964, 0.001622430000000001, 0.0016285830000000029, 0.0016222219999999996, 0.0016285409999999972, 0.0016224450000000001, 0.0016284309999999996, 0.0016221800000000008, 0.0016285700000000097, 0.0016223050000000044, 0.001628277999999997, 0.0016220829999999964, 0.0016282920000000034, 0.0016223330000000036, 0.001628388999999994, 0.0016221530000000012, 0.0016283749999999875, 0.0016222090000000133, 0.0016283890000000079, 0.0016222500000000056, 0.0016284589999999988, 0.0016221390000000085, 0.0016282769999999974, 0.0016221810000000003, 0.0016282360000000051, 0.0016221669999999938, 0.0016285690000000103, 0.0016223469999999962, 0.0016283050000000104, 0.001622208, 0.0016281939999999995, 0.0016221389999999947, 0.0016284160000000075, 0.0016223200000000104, 0.0016285139999999976, 0.0016221800000000008, 0.001628417000000007, 0.0016221950000000068, 0.0016283330000000096]</msg>
<status status="PASS" starttime="20201029 18:15:08.758" endtime="20201029 18:15:08.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.747" endtime="20201029 18:15:08.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.208" endtime="20201029 18:15:08.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.178" endtime="20201029 18:15:08.766"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.772" endtime="20201029 18:15:08.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.768" endtime="20201029 18:15:08.795"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.816" endtime="20201029 18:15:08.912"></status>
</kw>
<msg timestamp="20201029 18:15:08.913" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.813" endtime="20201029 18:15:08.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.919" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.915" endtime="20201029 18:15:08.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.922" endtime="20201029 18:15:08.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.805" endtime="20201029 18:15:08.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.800" endtime="20201029 18:15:08.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.945" endtime="20201029 18:15:09.287"></status>
</kw>
<msg timestamp="20201029 18:15:09.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034195472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035878944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.942" endtime="20201029 18:15:09.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034195472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035878944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.296" endtime="20201029 18:15:09.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.314" endtime="20201029 18:15:09.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.934" endtime="20201029 18:15:09.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.930" endtime="20201029 18:15:09.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:09.330" level="INFO">${PHILIP_RES} = [{'diff': 0.0016834720000000053}, {'diff': 0.0016766939999999994}, {'diff': 0.001676707999999999}, {'diff': 0.001676806000000003}, {'diff': 0.001676722999999998}, {'diff': 0.0016766939999999994}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:09.322" endtime="20201029 18:15:09.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.339" level="INFO">${RESULT} = {'diff': [0.0016834720000000053, 0.0016766939999999994, 0.001676707999999999, 0.001676806000000003, 0.001676722999999998, 0.0016766939999999994, 0.001683805999999996, 0.0016767780000000038, 0.00167666...</msg>
<status status="PASS" starttime="20201029 18:15:09.332" endtime="20201029 18:15:09.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.349" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:09.347" endtime="20201029 18:15:09.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.354" level="INFO">VALUE: [0.0016834720000000053, 0.0016766939999999994, 0.001676707999999999, 0.001676806000000003, 0.001676722999999998, 0.0016766939999999994, 0.001683805999999996, 0.0016767780000000038, 0.0016766669999999997, 0.0016767629999999978, 0.0016768890000000009, 0.0016764999999999974, 0.0016840140000000045, 0.0016768620000000012, 0.001676834000000002, 0.001676403, 0.0016765559999999957, 0.0016765410000000036, 0.0016836390000000007, 0.0016764169999999995, 0.0016763890000000004, 0.0016765410000000036, 0.0016765970000000019, 0.0016766390000000075, 0.001683679999999993, 0.0016765549999999962, 0.0016765690000000028, 0.0016765690000000028, 0.0016765559999999957, 0.0016766109999999945, 0.0016836939999999995, 0.0016764729999999978, 0.0016765280000000105, 0.0016768610000000017, 0.0016768749999999943, 0.001676818999999996, 0.0016840139999999976, 0.0016765970000000019, 0.0016766110000000084, 0.0016766669999999928, 0.0016766940000000063, 0.0016765830000000093, 0.0016838609999999948, 0.0016764589999999913, 0.0016764719999999983, 0.001676625000000001, 0.0016767219999999916, 0.0016766669999999928, 0.001683722999999998, 0.0016765839999999949]</msg>
<status status="PASS" starttime="20201029 18:15:09.352" endtime="20201029 18:15:09.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.341" endtime="20201029 18:15:09.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.796" endtime="20201029 18:15:09.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.767" endtime="20201029 18:15:09.359"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.365" endtime="20201029 18:15:09.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.362" endtime="20201029 18:15:09.388"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.409" endtime="20201029 18:15:09.510"></status>
</kw>
<msg timestamp="20201029 18:15:09.511" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.406" endtime="20201029 18:15:09.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.517" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.513" endtime="20201029 18:15:09.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.520" endtime="20201029 18:15:09.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.399" endtime="20201029 18:15:09.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.394" endtime="20201029 18:15:09.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.543" endtime="20201029 18:15:09.881"></status>
</kw>
<msg timestamp="20201029 18:15:09.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035695708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037428069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.539" endtime="20201029 18:15:09.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035695708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037428069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.890" endtime="20201029 18:15:09.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.907" endtime="20201029 18:15:09.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.532" endtime="20201029 18:15:09.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.528" endtime="20201029 18:15:09.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:09.923" level="INFO">${PHILIP_RES} = [{'diff': 0.0017323610000000017}, {'diff': 0.001739776999999998}, {'diff': 0.0017328750000000018}, {'diff': 0.001732931}, {'diff': 0.0017398890000000014}, {'diff': 0.001733290999999998}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:09.916" endtime="20201029 18:15:09.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.932" level="INFO">${RESULT} = {'diff': [0.0017323610000000017, 0.001739776999999998, 0.0017328750000000018, 0.001732931, 0.0017398890000000014, 0.001733290999999998, 0.0017333750000000023, 0.001740027000000005, 0.00173312500000000...</msg>
<status status="PASS" starttime="20201029 18:15:09.925" endtime="20201029 18:15:09.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.943" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:09.941" endtime="20201029 18:15:09.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.948" level="INFO">VALUE: [0.0017323610000000017, 0.001739776999999998, 0.0017328750000000018, 0.001732931, 0.0017398890000000014, 0.001733290999999998, 0.0017333750000000023, 0.001740027000000005, 0.001733125000000002, 0.0017332639999999983, 0.0017400559999999968, 0.0017331519999999948, 0.0017331109999999955, 0.0017399440000000002, 0.0017330839999999959, 0.0017329999999999984, 0.001739916000000008, 0.001733042000000004, 0.0017330690000000037, 0.001739903000000001, 0.0017329999999999984, 0.0017330700000000032, 0.0017398189999999897, 0.0017328340000000025, 0.0017328750000000087, 0.0017397359999999917, 0.0017330559999999967, 0.0017330279999999976, 0.0017398470000000027, 0.0017330549999999972, 0.001732985999999992, 0.001739985999999999, 0.0017332220000000065, 0.001733306000000004, 0.0017401390000000017, 0.0017331530000000012, 0.0017333749999999953, 0.0017400560000000037, 0.0017334450000000001, 0.0017336250000000025, 0.0017400830000000034, 0.0017329719999999993, 0.001732931000000007, 0.0017398329999999962, 0.0017330549999999972, 0.0017332219999999926, 0.001739903000000001, 0.001733111999999995, 0.0017331810000000003, 0.0017398329999999962]</msg>
<status status="PASS" starttime="20201029 18:15:09.945" endtime="20201029 18:15:09.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.934" endtime="20201029 18:15:09.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.390" endtime="20201029 18:15:09.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.360" endtime="20201029 18:15:09.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.248" endtime="20201029 18:15:09.953"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:39.967" endtime="20201029 18:15:09.955" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:10.698" endtime="20201029 18:15:09.977"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.153" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:10.169" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:12.151" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:10.150" endtime="20201029 18:15:12.152"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.158" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:12.154" endtime="20201029 18:15:12.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.147" endtime="20201029 18:15:12.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.165" endtime="20201029 18:15:12.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.162" endtime="20201029 18:15:12.497"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.527" endtime="20201029 18:15:12.542"></status>
</kw>
<msg timestamp="20201029 18:15:12.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.523" endtime="20201029 18:15:12.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.546" endtime="20201029 18:15:12.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.558" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:12.552" endtime="20201029 18:15:12.558"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:12.517" endtime="20201029 18:15:12.560"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:12.512" endtime="20201029 18:15:12.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.509" endtime="20201029 18:15:12.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:12.571" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:12.569" endtime="20201029 18:15:12.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.565" endtime="20201029 18:15:12.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.507" endtime="20201029 18:15:12.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.505" endtime="20201029 18:15:12.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.574" endtime="20201029 18:15:12.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.502" endtime="20201029 18:15:12.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.581" endtime="20201029 18:15:12.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.499" endtime="20201029 18:15:12.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.144" endtime="20201029 18:15:12.587"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.601" endtime="20201029 18:15:12.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.597" endtime="20201029 18:15:12.624"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.658" endtime="20201029 18:15:12.673"></status>
</kw>
<msg timestamp="20201029 18:15:12.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.655" endtime="20201029 18:15:12.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.677" endtime="20201029 18:15:12.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.687" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:12.683" endtime="20201029 18:15:12.688"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:12.647" endtime="20201029 18:15:12.690"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:12.641" endtime="20201029 18:15:12.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.638" endtime="20201029 18:15:12.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:12.700" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:12.698" endtime="20201029 18:15:12.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.694" endtime="20201029 18:15:12.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.637" endtime="20201029 18:15:12.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.635" endtime="20201029 18:15:12.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.705" endtime="20201029 18:15:12.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.631" endtime="20201029 18:15:12.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.626" endtime="20201029 18:15:12.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.594" endtime="20201029 18:15:12.712"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.737" endtime="20201029 18:15:12.751"></status>
</kw>
<msg timestamp="20201029 18:15:12.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.734" endtime="20201029 18:15:12.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.755" endtime="20201029 18:15:12.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.761" endtime="20201029 18:15:12.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.726" endtime="20201029 18:15:12.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.721" endtime="20201029 18:15:12.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.784" endtime="20201029 18:15:13.135"></status>
</kw>
<msg timestamp="20201029 18:15:13.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127667792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.127678181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:15:12.781" endtime="20201029 18:15:13.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127667792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.127678181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:15:13.145" endtime="20201029 18:15:13.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.164" endtime="20201029 18:15:13.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.774" endtime="20201029 18:15:13.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.769" endtime="20201029 18:15:13.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.182" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6665999999998515e-05}, {'diff': 1.7068999999980683e-05}, {'diff': 1.7054999999988052e-05}, {'diff': 1.6708000000004164e-05}, {'diff': 1.6542000000008272e-05}, {'diff': 1.67219...</msg>
<status status="PASS" starttime="20201029 18:15:13.173" endtime="20201029 18:15:13.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.195" level="INFO">${ACCURACY} = {'diff': [0, 1.6665999999998515e-05, 1.7068999999980683e-05, 1.7054999999988052e-05, 1.6708000000004164e-05, 1.6542000000008272e-05, 1.6721999999996795e-05, 1.7041999999994895e-05, 1.655500000000143e-...</msg>
<status status="PASS" starttime="20201029 18:15:13.184" endtime="20201029 18:15:13.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.206" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.204" endtime="20201029 18:15:13.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.211" level="INFO">VALUE: [0, 1.6665999999998515e-05, 1.7068999999980683e-05, 1.7054999999988052e-05, 1.6708000000004164e-05, 1.6542000000008272e-05, 1.6721999999996795e-05, 1.7041999999994895e-05, 1.655500000000143e-05, 1.7388999999978783e-05, 1.688899999999216e-05, 1.734700000000089e-05, 1.6708000000004164e-05, 1.65410000000088e-05, 1.7125000000006718e-05, 1.6721999999996795e-05, 1.7208000000018542e-05, 1.7388999999978783e-05, 1.719499999999763e-05, 1.688899999999216e-05, 1.6708000000004164e-05, 1.6679999999991146e-05, 1.6709000000003638e-05, 1.737499999998615e-05, 1.6695000000011007e-05, 1.7166000000012893e-05, 1.656899999999406e-05, 1.704099999999542e-05, 1.6721999999996795e-05, 1.7263999999989066e-05, 1.7028000000002264e-05, 1.688899999999216e-05, 1.706900000000844e-05, 1.6556000000000903e-05, 1.687499999999953e-05, 1.6957999999983597e-05, 1.6735999999989426e-05, 1.669499999998325e-05, 1.7027999999974508e-05, 1.6708000000004164e-05, 1.6721999999996795e-05, 1.7222000000011173e-05, 1.704200000002265e-05, 1.6375000000012907e-05, 1.662499999999234e-05, 1.720899999999026e-05, 1.687499999999953e-05, 1.7222000000011173e-05, 1.7041999999994895e-05, 1.652800000001564e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.208" endtime="20201029 18:15:13.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.197" endtime="20201029 18:15:13.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.223" endtime="20201029 18:15:13.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.219" endtime="20201029 18:15:13.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.216" endtime="20201029 18:15:13.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.716" endtime="20201029 18:15:13.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.715" endtime="20201029 18:15:13.248"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.271" endtime="20201029 18:15:13.286"></status>
</kw>
<msg timestamp="20201029 18:15:13.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.268" endtime="20201029 18:15:13.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.289" endtime="20201029 18:15:13.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.295" endtime="20201029 18:15:13.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.261" endtime="20201029 18:15:13.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.255" endtime="20201029 18:15:13.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.319" endtime="20201029 18:15:13.666"></status>
</kw>
<msg timestamp="20201029 18:15:13.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039377653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039394528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.315" endtime="20201029 18:15:13.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039377653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039394528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.677" endtime="20201029 18:15:13.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.698" endtime="20201029 18:15:13.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.308" endtime="20201029 18:15:13.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.303" endtime="20201029 18:15:13.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.719" level="INFO">${RESULT} = [{'diff': 1.687499999999953e-05}, {'diff': 1.7042000000001833e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.6514000000002194e-05}, {'diff': 1.6749999999995935e-05}, {'diff': 1.737500000000003e-05...</msg>
<status status="PASS" starttime="20201029 18:15:13.708" endtime="20201029 18:15:13.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.730" level="INFO">${ACCURACY} = {'diff': [1.687499999999953e-05, 1.7042000000001833e-05, 1.7056000000001403e-05, 1.6514000000002194e-05, 1.6749999999995935e-05, 1.737500000000003e-05, 1.6736000000003304e-05, 1.7055999999994464e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:13.721" endtime="20201029 18:15:13.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.741" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.739" endtime="20201029 18:15:13.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.747" level="INFO">VALUE: [1.687499999999953e-05, 1.7042000000001833e-05, 1.7056000000001403e-05, 1.6514000000002194e-05, 1.6749999999995935e-05, 1.737500000000003e-05, 1.6736000000003304e-05, 1.7055999999994464e-05, 1.7221999999997295e-05, 1.655499999999449e-05, 1.6486000000003054e-05, 1.6499999999995685e-05, 1.704100000000236e-05, 1.68889999999991e-05, 1.7056000000001403e-05, 1.6542000000001333e-05, 1.6527999999994825e-05, 1.705500000000193e-05, 1.6542000000001333e-05, 1.7222000000004234e-05, 1.7137999999999876e-05, 1.6723000000003208e-05, 1.7388000000000126e-05, 1.704099999999542e-05, 1.6722000000003734e-05, 1.7209000000004138e-05, 1.6887999999999626e-05, 1.6486000000003054e-05, 1.7208000000004664e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.6709000000003638e-05, 1.7388000000000126e-05, 1.7070000000000973e-05, 1.68889999999991e-05, 1.654100000000186e-05, 1.7014000000002694e-05, 1.7193999999998155e-05, 1.7236000000003804e-05, 1.6735999999996365e-05, 1.655499999999449e-05, 1.718099999999806e-05, 1.7208000000004664e-05, 1.7401999999999695e-05, 1.6556000000000903e-05, 1.68889999999991e-05, 1.7235999999996865e-05, 1.6722000000003734e-05, 1.7137999999999876e-05, 1.6707999999997225e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.744" endtime="20201029 18:15:13.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.732" endtime="20201029 18:15:13.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.758" endtime="20201029 18:15:13.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.754" endtime="20201029 18:15:13.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.752" endtime="20201029 18:15:13.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.251" endtime="20201029 18:15:13.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.249" endtime="20201029 18:15:13.783"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.806" endtime="20201029 18:15:13.821"></status>
</kw>
<msg timestamp="20201029 18:15:13.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.803" endtime="20201029 18:15:13.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.824" endtime="20201029 18:15:13.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.830" endtime="20201029 18:15:13.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.796" endtime="20201029 18:15:13.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.790" endtime="20201029 18:15:13.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.854" endtime="20201029 18:15:14.194"></status>
</kw>
<msg timestamp="20201029 18:15:14.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039193556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039210444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.851" endtime="20201029 18:15:14.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039193556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039210444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.204" endtime="20201029 18:15:14.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.223" endtime="20201029 18:15:14.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.844" endtime="20201029 18:15:14.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.839" endtime="20201029 18:15:14.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.241" level="INFO">${RESULT} = [{'diff': 1.6887999999999626e-05}, {'diff': 1.73889999999996e-05}, {'diff': 1.7070000000000973e-05}, {'diff': 1.661099999999971e-05}, {'diff': 1.687499999999953e-05}, {'diff': 1.662499999999928e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:14.232" endtime="20201029 18:15:14.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.251" level="INFO">${ACCURACY} = {'diff': [1.6887999999999626e-05, 1.73889999999996e-05, 1.7070000000000973e-05, 1.661099999999971e-05, 1.687499999999953e-05, 1.662499999999928e-05, 1.68889999999991e-05, 1.6667000000004928e-05, 1.690...</msg>
<status status="PASS" starttime="20201029 18:15:14.243" endtime="20201029 18:15:14.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.262" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.259" endtime="20201029 18:15:14.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.267" level="INFO">VALUE: [1.6887999999999626e-05, 1.73889999999996e-05, 1.7070000000000973e-05, 1.661099999999971e-05, 1.687499999999953e-05, 1.662499999999928e-05, 1.68889999999991e-05, 1.6667000000004928e-05, 1.690299999999867e-05, 1.719499999999763e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.7042000000001833e-05, 1.6721999999996795e-05, 1.73889999999996e-05, 1.672299999999627e-05, 1.63889999999986e-05, 1.73889999999996e-05, 1.7098000000000113e-05, 1.7221999999997295e-05, 1.7056000000001403e-05, 1.6569000000001e-05, 1.737500000000003e-05, 1.7028000000002264e-05, 1.7236000000003804e-05, 1.67089999999967e-05, 1.7250000000003374e-05, 1.687499999999953e-05, 1.73889999999996e-05, 1.6735999999996365e-05, 1.654100000000186e-05, 1.686099999999996e-05, 1.705500000000193e-05, 1.6542000000001333e-05, 1.6707999999997225e-05, 1.6889000000006038e-05, 1.68889999999991e-05, 1.733300000000132e-05, 1.6722000000003734e-05, 1.6945000000004318e-05, 1.7070000000000973e-05, 1.672299999999627e-05, 1.6750000000002874e-05, 1.7070000000000973e-05, 1.661099999999971e-05, 1.73889999999996e-05, 1.7042000000001833e-05, 1.7208000000004664e-05, 1.737500000000003e-05, 1.704099999999542e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.264" endtime="20201029 18:15:14.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.253" endtime="20201029 18:15:14.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.279" endtime="20201029 18:15:14.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.274" endtime="20201029 18:15:14.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.272" endtime="20201029 18:15:14.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.786" endtime="20201029 18:15:14.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.784" endtime="20201029 18:15:14.304"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.326" endtime="20201029 18:15:14.343"></status>
</kw>
<msg timestamp="20201029 18:15:14.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.323" endtime="20201029 18:15:14.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.346" endtime="20201029 18:15:14.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.353" endtime="20201029 18:15:14.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.316" endtime="20201029 18:15:14.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.310" endtime="20201029 18:15:14.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.376" endtime="20201029 18:15:14.732"></status>
</kw>
<msg timestamp="20201029 18:15:14.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040839125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040855847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.373" endtime="20201029 18:15:14.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040839125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040855847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.743" endtime="20201029 18:15:14.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.766" endtime="20201029 18:15:14.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.366" endtime="20201029 18:15:14.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.361" endtime="20201029 18:15:14.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.794" level="INFO">${RESULT} = [{'diff': 1.6722000000003734e-05}, {'diff': 1.654100000000186e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.73889999999996e-05}, {'diff': 1.690299999999867e-05}, {'diff': 1.6555999999993964e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:14.778" endtime="20201029 18:15:14.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.804" level="INFO">${ACCURACY} = {'diff': [1.6722000000003734e-05, 1.654100000000186e-05, 1.737500000000003e-05, 1.73889999999996e-05, 1.690299999999867e-05, 1.6555999999993964e-05, 1.6735999999996365e-05, 1.6556000000000903e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 18:15:14.796" endtime="20201029 18:15:14.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.815" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.813" endtime="20201029 18:15:14.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.820" level="INFO">VALUE: [1.6722000000003734e-05, 1.654100000000186e-05, 1.737500000000003e-05, 1.73889999999996e-05, 1.690299999999867e-05, 1.6555999999993964e-05, 1.6735999999996365e-05, 1.6556000000000903e-05, 1.741699999999874e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.7056000000001403e-05, 1.722299999999677e-05, 1.687499999999953e-05, 1.693099999999781e-05, 1.7388000000000126e-05, 1.6945000000004318e-05, 1.6721999999996795e-05, 1.740299999999917e-05, 1.6542000000001333e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.63889999999986e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.6721999999996795e-05, 1.7221999999997295e-05, 1.6569000000001e-05, 1.6999999999996185e-05, 1.6707999999997225e-05, 1.6723000000003208e-05, 1.6569000000001e-05, 1.6527999999994825e-05, 1.6707999999997225e-05, 1.67089999999967e-05, 1.655500000000143e-05, 1.7235999999996865e-05, 1.68889999999991e-05, 1.6556000000000903e-05, 1.7028000000002264e-05, 1.7221999999997295e-05, 1.68889999999991e-05, 1.6556000000000903e-05, 1.6709000000003638e-05, 1.6887999999999626e-05, 1.737500000000003e-05, 1.68889999999991e-05, 1.6556000000000903e-05, 1.705500000000193e-05, 1.6542000000001333e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.817" endtime="20201029 18:15:14.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.806" endtime="20201029 18:15:14.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.834" endtime="20201029 18:15:14.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.828" endtime="20201029 18:15:14.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.825" endtime="20201029 18:15:14.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.306" endtime="20201029 18:15:14.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.305" endtime="20201029 18:15:14.859"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.883" endtime="20201029 18:15:14.897"></status>
</kw>
<msg timestamp="20201029 18:15:14.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.879" endtime="20201029 18:15:14.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.901" endtime="20201029 18:15:14.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.907" endtime="20201029 18:15:14.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.872" endtime="20201029 18:15:14.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.866" endtime="20201029 18:15:14.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.930" endtime="20201029 18:15:15.274"></status>
</kw>
<msg timestamp="20201029 18:15:15.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040765792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.927" endtime="20201029 18:15:15.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040765792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.284" endtime="20201029 18:15:15.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.302" endtime="20201029 18:15:15.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.920" endtime="20201029 18:15:15.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.915" endtime="20201029 18:15:15.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.319" level="INFO">${RESULT} = [{'diff': 1.6569000000001e-05}, {'diff': 1.7014000000002694e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.6901999999999195e-05}, {'diff': 1.67089999999967e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:15.311" endtime="20201029 18:15:15.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.330" level="INFO">${ACCURACY} = {'diff': [1.6569000000001e-05, 1.7014000000002694e-05, 1.709700000000064e-05, 1.737500000000003e-05, 1.6901999999999195e-05, 1.67089999999967e-05, 1.6721999999996795e-05, 1.6570000000000473e-05, 1.675...</msg>
<status status="PASS" starttime="20201029 18:15:15.321" endtime="20201029 18:15:15.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.341" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.339" endtime="20201029 18:15:15.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.346" level="INFO">VALUE: [1.6569000000001e-05, 1.7014000000002694e-05, 1.709700000000064e-05, 1.737500000000003e-05, 1.6901999999999195e-05, 1.67089999999967e-05, 1.6721999999996795e-05, 1.6570000000000473e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.7070000000000973e-05, 1.6722000000003734e-05, 1.7387999999993187e-05, 1.6721999999996795e-05, 1.63889999999986e-05, 1.6542000000001333e-05, 1.686099999999996e-05, 1.6861999999999433e-05, 1.7209000000004138e-05, 1.7209000000004138e-05, 1.6722000000003734e-05, 1.7236000000003804e-05, 1.73889999999996e-05, 1.7361999999999933e-05, 1.70690000000015e-05, 1.73889999999996e-05, 1.6542000000001333e-05, 1.6570000000000473e-05, 1.6722000000003734e-05, 1.6736000000003304e-05, 1.718099999999806e-05, 1.7221999999997295e-05, 1.73889999999996e-05, 1.70690000000015e-05, 1.68889999999991e-05, 1.70690000000015e-05, 1.737500000000003e-05, 1.687499999999953e-05, 1.6707999999997225e-05, 1.7236000000003804e-05, 1.6721999999996795e-05, 1.6584000000000043e-05, 1.7056000000001403e-05, 1.7249999999996435e-05, 1.655500000000143e-05, 1.705500000000193e-05, 1.6556000000000903e-05, 1.7415999999999265e-05, 1.7221999999997295e-05, 1.708300000000107e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.343" endtime="20201029 18:15:15.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.332" endtime="20201029 18:15:15.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.358" endtime="20201029 18:15:15.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.354" endtime="20201029 18:15:15.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.351" endtime="20201029 18:15:15.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.862" endtime="20201029 18:15:15.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.860" endtime="20201029 18:15:15.383"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.407" endtime="20201029 18:15:15.423"></status>
</kw>
<msg timestamp="20201029 18:15:15.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.404" endtime="20201029 18:15:15.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.426" endtime="20201029 18:15:15.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.433" endtime="20201029 18:15:15.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.396" endtime="20201029 18:15:15.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.391" endtime="20201029 18:15:15.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.456" endtime="20201029 18:15:15.800"></status>
</kw>
<msg timestamp="20201029 18:15:15.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040216361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040232931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.453" endtime="20201029 18:15:15.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040216361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040232931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.810" endtime="20201029 18:15:15.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.828" endtime="20201029 18:15:15.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.446" endtime="20201029 18:15:15.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.441" endtime="20201029 18:15:15.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.845" level="INFO">${RESULT} = [{'diff': 1.6570000000000473e-05}, {'diff': 1.7070000000000973e-05}, {'diff': 1.6889000000006038e-05}, {'diff': 1.7055999999994464e-05}, {'diff': 1.7042000000001833e-05}, {'diff': 1.669499999999713e-0...</msg>
<status status="PASS" starttime="20201029 18:15:15.836" endtime="20201029 18:15:15.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.856" level="INFO">${ACCURACY} = {'diff': [1.6570000000000473e-05, 1.7070000000000973e-05, 1.6889000000006038e-05, 1.7055999999994464e-05, 1.7042000000001833e-05, 1.669499999999713e-05, 1.6763999999995505e-05, 1.6542000000001333e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:15.847" endtime="20201029 18:15:15.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.867" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.865" endtime="20201029 18:15:15.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.873" level="INFO">VALUE: [1.6570000000000473e-05, 1.7070000000000973e-05, 1.6889000000006038e-05, 1.7055999999994464e-05, 1.7042000000001833e-05, 1.669499999999713e-05, 1.6763999999995505e-05, 1.6542000000001333e-05, 1.690299999999867e-05, 1.654100000000186e-05, 1.6556000000000903e-05, 1.73889999999996e-05, 1.679099999999517e-05, 1.722299999999677e-05, 1.7222000000004234e-05, 1.68889999999991e-05, 1.7222000000004234e-05, 1.6499999999995685e-05, 1.70690000000015e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.722299999999677e-05, 1.6735999999996365e-05, 1.687499999999953e-05, 1.7235999999996865e-05, 1.7042000000001833e-05, 1.706899999999456e-05, 1.6570000000000473e-05, 1.687499999999953e-05, 1.6570000000000473e-05, 1.6847999999999863e-05, 1.6901999999999195e-05, 1.686099999999996e-05, 1.6528000000001764e-05, 1.7236000000003804e-05, 1.737500000000003e-05, 1.704100000000236e-05, 1.68889999999991e-05, 1.70690000000015e-05, 1.7055999999994464e-05, 1.694499999999738e-05, 1.652700000000229e-05, 1.6708000000004164e-05, 1.6570000000000473e-05, 1.65969999999932e-05, 1.712499999999978e-05, 1.7193999999998155e-05, 1.687499999999953e-05, 1.7222000000004234e-05, 1.7223000000003708e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.870" endtime="20201029 18:15:15.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.858" endtime="20201029 18:15:15.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.884" endtime="20201029 18:15:15.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.880" endtime="20201029 18:15:15.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.878" endtime="20201029 18:15:15.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.386" endtime="20201029 18:15:15.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.384" endtime="20201029 18:15:15.910"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.933" endtime="20201029 18:15:15.947"></status>
</kw>
<msg timestamp="20201029 18:15:15.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.929" endtime="20201029 18:15:15.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.950" endtime="20201029 18:15:15.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.957" endtime="20201029 18:15:15.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.922" endtime="20201029 18:15:15.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.916" endtime="20201029 18:15:15.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.980" endtime="20201029 18:15:16.330"></status>
</kw>
<msg timestamp="20201029 18:15:16.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039132278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039148986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.977" endtime="20201029 18:15:16.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039132278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039148986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.340" endtime="20201029 18:15:16.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.359" endtime="20201029 18:15:16.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.969" endtime="20201029 18:15:16.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.965" endtime="20201029 18:15:16.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.376" level="INFO">${RESULT} = [{'diff': 1.6707999999997225e-05}, {'diff': 1.7235999999996865e-05}, {'diff': 1.7084000000000543e-05}, {'diff': 1.690299999999867e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.6556000000000903e-0...</msg>
<status status="PASS" starttime="20201029 18:15:16.367" endtime="20201029 18:15:16.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.386" level="INFO">${ACCURACY} = {'diff': [1.6707999999997225e-05, 1.7235999999996865e-05, 1.7084000000000543e-05, 1.690299999999867e-05, 1.7056000000001403e-05, 1.6556000000000903e-05, 1.7055999999994464e-05, 1.7207999999997725e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:16.378" endtime="20201029 18:15:16.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.398" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.395" endtime="20201029 18:15:16.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.403" level="INFO">VALUE: [1.6707999999997225e-05, 1.7235999999996865e-05, 1.7084000000000543e-05, 1.690299999999867e-05, 1.7056000000001403e-05, 1.6556000000000903e-05, 1.7055999999994464e-05, 1.7207999999997725e-05, 1.7221999999997295e-05, 1.7056000000001403e-05, 1.6736000000003304e-05, 1.672299999999627e-05, 1.740299999999917e-05, 1.73889999999996e-05, 1.6556000000000903e-05, 1.70690000000015e-05, 1.7221999999997295e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.7250000000003374e-05, 1.715299999999892e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.7207999999997725e-05, 1.7014000000002694e-05, 1.6569999999993534e-05, 1.686099999999996e-05, 1.6569000000001e-05, 1.7194000000005094e-05, 1.687499999999953e-05, 1.6693999999997655e-05, 1.7221999999997295e-05, 1.686099999999996e-05, 1.655499999999449e-05, 1.68889999999991e-05, 1.70690000000015e-05, 1.663899999999885e-05, 1.705500000000193e-05, 1.7222000000004234e-05, 1.705500000000193e-05, 1.655499999999449e-05, 1.7222000000004234e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.6542000000001333e-05, 1.6514000000002194e-05, 1.652700000000229e-05, 1.722299999999677e-05, 1.6708000000004164e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.400" endtime="20201029 18:15:16.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.387" endtime="20201029 18:15:16.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.416" endtime="20201029 18:15:16.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.412" endtime="20201029 18:15:16.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.409" endtime="20201029 18:15:16.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.912" endtime="20201029 18:15:16.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.911" endtime="20201029 18:15:16.442"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.465" endtime="20201029 18:15:16.480"></status>
</kw>
<msg timestamp="20201029 18:15:16.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.462" endtime="20201029 18:15:16.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.483" endtime="20201029 18:15:16.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.490" endtime="20201029 18:15:16.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.454" endtime="20201029 18:15:16.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.448" endtime="20201029 18:15:16.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.515" endtime="20201029 18:15:16.864"></status>
</kw>
<msg timestamp="20201029 18:15:16.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040137722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.512" endtime="20201029 18:15:16.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040113694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040137722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.874" endtime="20201029 18:15:16.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.892" endtime="20201029 18:15:16.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.505" endtime="20201029 18:15:16.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.500" endtime="20201029 18:15:16.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.909" level="INFO">${RESULT} = [{'diff': 2.4028000000002325e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.368099999999762e-05}, {'diff': 2.415299999999898e-05}, {'diff': 2.4320000000001285e-05}, {'diff': 2.4305999999994776e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:16.900" endtime="20201029 18:15:16.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.918" level="INFO">${ACCURACY} = {'diff': [2.4028000000002325e-05, 2.436100000000052e-05, 2.368099999999762e-05, 2.415299999999898e-05, 2.4320000000001285e-05, 2.4305999999994776e-05, 2.3526999999995413e-05, 2.3708000000004226e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:16.911" endtime="20201029 18:15:16.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.929" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.927" endtime="20201029 18:15:16.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.935" level="INFO">VALUE: [2.4028000000002325e-05, 2.436100000000052e-05, 2.368099999999762e-05, 2.415299999999898e-05, 2.4320000000001285e-05, 2.4305999999994776e-05, 2.3526999999995413e-05, 2.3708000000004226e-05, 2.352700000000235e-05, 2.4235999999996927e-05, 2.372299999999633e-05, 2.387499999999959e-05, 2.388899999999916e-05, 2.4222000000004296e-05, 2.3679999999998147e-05, 2.4042000000001895e-05, 2.404100000000242e-05, 2.3721999999996857e-05, 2.422300000000377e-05, 2.390300000000567e-05, 2.4096999999993762e-05, 2.3707999999997287e-05, 2.3556000000000965e-05, 2.4014000000002755e-05, 2.4042000000001895e-05, 2.4221999999997357e-05, 2.3707999999997287e-05, 2.387499999999959e-05, 2.4388000000000187e-05, 2.352700000000235e-05, 2.387499999999959e-05, 2.388899999999916e-05, 2.4014000000002755e-05, 2.386100000000002e-05, 2.386100000000002e-05, 2.388899999999916e-05, 2.4013999999995816e-05, 2.386100000000002e-05, 2.3707999999997287e-05, 2.386100000000002e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.4207999999997787e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.37090000000037e-05, 2.419499999999769e-05, 2.354100000000192e-05, 2.444500000000488e-05, 2.3542000000001395e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.932" endtime="20201029 18:15:16.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.920" endtime="20201029 18:15:16.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.949" endtime="20201029 18:15:16.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.943" endtime="20201029 18:15:16.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.940" endtime="20201029 18:15:16.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.444" endtime="20201029 18:15:16.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.443" endtime="20201029 18:15:16.974"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.997" endtime="20201029 18:15:17.014"></status>
</kw>
<msg timestamp="20201029 18:15:17.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.994" endtime="20201029 18:15:17.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.024" endtime="20201029 18:15:17.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.031" endtime="20201029 18:15:17.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.986" endtime="20201029 18:15:17.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.981" endtime="20201029 18:15:17.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.061" endtime="20201029 18:15:17.403"></status>
</kw>
<msg timestamp="20201029 18:15:17.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040036792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.057" endtime="20201029 18:15:17.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040036792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.412" endtime="20201029 18:15:17.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.431" endtime="20201029 18:15:17.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.049" endtime="20201029 18:15:17.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.042" endtime="20201029 18:15:17.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.448" level="INFO">${RESULT} = [{'diff': 2.4040999999995483e-05}, {'diff': 2.3901999999999257e-05}, {'diff': 2.419499999999769e-05}, {'diff': 2.419499999999769e-05}, {'diff': 2.4042000000001895e-05}, {'diff': 2.419499999999769e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:17.439" endtime="20201029 18:15:17.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.459" level="INFO">${ACCURACY} = {'diff': [2.4040999999995483e-05, 2.3901999999999257e-05, 2.419499999999769e-05, 2.419499999999769e-05, 2.4042000000001895e-05, 2.419499999999769e-05, 2.387499999999959e-05, 2.42090000000042e-05, 2.37...</msg>
<status status="PASS" starttime="20201029 18:15:17.450" endtime="20201029 18:15:17.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.470" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.467" endtime="20201029 18:15:17.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.475" level="INFO">VALUE: [2.4040999999995483e-05, 2.3901999999999257e-05, 2.419499999999769e-05, 2.419499999999769e-05, 2.4042000000001895e-05, 2.419499999999769e-05, 2.387499999999959e-05, 2.42090000000042e-05, 2.3707999999997287e-05, 2.4235999999996927e-05, 2.386100000000002e-05, 2.3707999999997287e-05, 2.436100000000052e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.3943999999997967e-05, 2.3693999999997717e-05, 2.388899999999916e-05, 2.3694000000004656e-05, 2.3542000000001395e-05, 2.415299999999898e-05, 2.386100000000002e-05, 2.4040999999995483e-05, 2.390299999999873e-05, 2.438899999999966e-05, 2.4221999999997357e-05, 2.4027999999995386e-05, 2.387499999999959e-05, 2.3528000000001825e-05, 2.4208000000004726e-05, 2.369500000000413e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.4207999999997787e-05, 2.3542000000001395e-05, 2.4055999999994526e-05, 2.4207999999997787e-05, 2.387499999999959e-05, 2.4221999999997357e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.356900000000106e-05, 2.42090000000042e-05, 2.4207999999997787e-05, 2.404100000000242e-05, 2.3708000000004226e-05, 2.3707999999997287e-05, 2.3527999999994886e-05, 2.437500000000009e-05, 2.387499999999959e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.472" endtime="20201029 18:15:17.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.461" endtime="20201029 18:15:17.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.488" endtime="20201029 18:15:17.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.483" endtime="20201029 18:15:17.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.481" endtime="20201029 18:15:17.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.976" endtime="20201029 18:15:17.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.975" endtime="20201029 18:15:17.513"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.535" endtime="20201029 18:15:17.552"></status>
</kw>
<msg timestamp="20201029 18:15:17.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.532" endtime="20201029 18:15:17.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.555" endtime="20201029 18:15:17.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.562" endtime="20201029 18:15:17.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.525" endtime="20201029 18:15:17.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.519" endtime="20201029 18:15:17.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.585" endtime="20201029 18:15:17.935"></status>
</kw>
<msg timestamp="20201029 18:15:17.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039471806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039495347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.582" endtime="20201029 18:15:17.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039471806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039495347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.944" endtime="20201029 18:15:17.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.966" endtime="20201029 18:15:17.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.575" endtime="20201029 18:15:17.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.570" endtime="20201029 18:15:17.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.989" level="INFO">${RESULT} = [{'diff': 2.354100000000192e-05}, {'diff': 2.387499999999959e-05}, {'diff': 2.4055999999994526e-05}, {'diff': 2.3485999999996177e-05}, {'diff': 2.387499999999959e-05}, {'diff': 2.402700000000285e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:17.978" endtime="20201029 18:15:17.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.004" level="INFO">${ACCURACY} = {'diff': [2.354100000000192e-05, 2.387499999999959e-05, 2.4055999999994526e-05, 2.3485999999996177e-05, 2.387499999999959e-05, 2.402700000000285e-05, 2.4208000000004726e-05, 2.38890000000061e-05, 2.44...</msg>
<status status="PASS" starttime="20201029 18:15:17.993" endtime="20201029 18:15:18.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.017" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.015" endtime="20201029 18:15:18.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.023" level="INFO">VALUE: [2.354100000000192e-05, 2.387499999999959e-05, 2.4055999999994526e-05, 2.3485999999996177e-05, 2.387499999999959e-05, 2.402700000000285e-05, 2.4208000000004726e-05, 2.38890000000061e-05, 2.440299999999923e-05, 2.4222000000004296e-05, 2.4236000000003866e-05, 2.4222000000004296e-05, 2.4042000000001895e-05, 2.4042000000001895e-05, 2.438899999999966e-05, 2.3901999999999257e-05, 2.387499999999959e-05, 2.436100000000052e-05, 2.42090000000042e-05, 2.356900000000106e-05, 2.387499999999959e-05, 2.402700000000285e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.3735999999996427e-05, 2.3707999999997287e-05, 2.387499999999959e-05, 2.420899999999726e-05, 2.3526999999995413e-05, 2.358300000000063e-05, 2.406900000000156e-05, 2.372299999999633e-05, 2.4042000000001895e-05, 2.4318999999994872e-05, 2.437500000000009e-05, 2.3764000000002505e-05, 2.387499999999959e-05, 2.355500000000149e-05, 2.3861999999999495e-05, 2.440299999999923e-05, 2.437500000000009e-05, 2.3542000000001395e-05, 2.372299999999633e-05, 2.390300000000567e-05, 2.438899999999966e-05, 2.4042000000001895e-05, 2.4401999999999757e-05, 2.362499999999934e-05, 2.3556000000000965e-05, 2.404100000000242e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.020" endtime="20201029 18:15:18.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.006" endtime="20201029 18:15:18.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.040" endtime="20201029 18:15:18.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.036" endtime="20201029 18:15:18.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.033" endtime="20201029 18:15:18.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.515" endtime="20201029 18:15:18.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.514" endtime="20201029 18:15:18.066"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.088" endtime="20201029 18:15:18.104"></status>
</kw>
<msg timestamp="20201029 18:15:18.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.085" endtime="20201029 18:15:18.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.107" endtime="20201029 18:15:18.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.113" endtime="20201029 18:15:18.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.078" endtime="20201029 18:15:18.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.072" endtime="20201029 18:15:18.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.137" endtime="20201029 18:15:18.490"></status>
</kw>
<msg timestamp="20201029 18:15:18.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039849986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039873861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.134" endtime="20201029 18:15:18.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039849986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039873861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.499" endtime="20201029 18:15:18.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.518" endtime="20201029 18:15:18.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.126" endtime="20201029 18:15:18.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.122" endtime="20201029 18:15:18.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.535" level="INFO">${RESULT} = [{'diff': 2.387499999999959e-05}, {'diff': 2.4222000000004296e-05}, {'diff': 2.3542000000001395e-05}, {'diff': 2.355500000000149e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.438899999999966e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:18.526" endtime="20201029 18:15:18.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.544" level="INFO">${ACCURACY} = {'diff': [2.387499999999959e-05, 2.4222000000004296e-05, 2.3542000000001395e-05, 2.355500000000149e-05, 2.388899999999916e-05, 2.438899999999966e-05, 2.3514000000002255e-05, 2.4221999999997357e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:18.537" endtime="20201029 18:15:18.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.555" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.553" endtime="20201029 18:15:18.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.560" level="INFO">VALUE: [2.387499999999959e-05, 2.4222000000004296e-05, 2.3542000000001395e-05, 2.355500000000149e-05, 2.388899999999916e-05, 2.438899999999966e-05, 2.3514000000002255e-05, 2.4221999999997357e-05, 2.387499999999959e-05, 2.4041999999994956e-05, 2.3693999999997717e-05, 2.413900000000635e-05, 2.390299999999873e-05, 2.3736000000003366e-05, 2.354100000000192e-05, 2.383300000000088e-05, 2.386100000000002e-05, 2.384700000000045e-05, 2.354100000000192e-05, 2.3554999999994553e-05, 2.3528000000001825e-05, 2.387499999999959e-05, 2.363899999999891e-05, 2.3708000000004226e-05, 2.3722000000003796e-05, 2.436100000000052e-05, 2.4028000000002325e-05, 2.4068999999994622e-05, 2.4221999999997357e-05, 2.4221999999997357e-05, 2.436100000000052e-05, 2.4222000000004296e-05, 2.3707999999997287e-05, 2.3735999999996427e-05, 2.3679999999998147e-05, 2.437500000000009e-05, 2.3721999999996857e-05, 2.363899999999891e-05, 2.422299999999683e-05, 2.387500000000653e-05, 2.386100000000002e-05, 2.437500000000009e-05, 2.3680000000005086e-05, 2.356900000000106e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.354100000000192e-05, 2.393100000000481e-05, 2.438899999999966e-05, 2.390299999999873e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.557" endtime="20201029 18:15:18.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.546" endtime="20201029 18:15:18.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.573" endtime="20201029 18:15:18.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.569" endtime="20201029 18:15:18.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.566" endtime="20201029 18:15:18.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.068" endtime="20201029 18:15:18.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.066" endtime="20201029 18:15:18.598"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.621" endtime="20201029 18:15:18.637"></status>
</kw>
<msg timestamp="20201029 18:15:18.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.618" endtime="20201029 18:15:18.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.641" endtime="20201029 18:15:18.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.647" endtime="20201029 18:15:18.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.611" endtime="20201029 18:15:18.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.605" endtime="20201029 18:15:18.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.670" endtime="20201029 18:15:19.005"></status>
</kw>
<msg timestamp="20201029 18:15:19.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041111958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041136167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.667" endtime="20201029 18:15:19.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041111958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041136167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.014" endtime="20201029 18:15:19.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.032" endtime="20201029 18:15:19.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.660" endtime="20201029 18:15:19.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.655" endtime="20201029 18:15:19.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.050" level="INFO">${RESULT} = [{'diff': 2.42090000000042e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.3915999999998827e-05}, {'diff': 2.4263999999996066e-05}, {'diff': 2.387499999999959e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:19.041" endtime="20201029 18:15:19.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.059" level="INFO">${ACCURACY} = {'diff': [2.42090000000042e-05, 2.437500000000009e-05, 2.440299999999923e-05, 2.3915999999998827e-05, 2.4263999999996066e-05, 2.387499999999959e-05, 2.4235999999996927e-05, 2.3708000000004226e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 18:15:19.052" endtime="20201029 18:15:19.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.070" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.068" endtime="20201029 18:15:19.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.075" level="INFO">VALUE: [2.42090000000042e-05, 2.437500000000009e-05, 2.440299999999923e-05, 2.3915999999998827e-05, 2.4263999999996066e-05, 2.387499999999959e-05, 2.4235999999996927e-05, 2.3708000000004226e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.3528000000001825e-05, 2.4250000000003435e-05, 2.4070000000001035e-05, 2.4429999999998897e-05, 2.3722000000003796e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.381900000000131e-05, 2.4207999999997787e-05, 2.4042000000001895e-05, 2.4208000000004726e-05, 2.37090000000037e-05, 2.3722000000003796e-05, 2.3542000000001395e-05, 2.387499999999959e-05, 2.4014000000002755e-05, 2.402700000000285e-05, 2.3542000000001395e-05, 2.4235999999996927e-05, 2.388899999999916e-05, 2.3722000000003796e-05, 2.4235999999996927e-05, 2.4056000000001465e-05, 2.4014000000002755e-05, 2.388899999999916e-05, 2.4361999999999995e-05, 2.4207999999997787e-05, 2.4457999999998037e-05, 2.355500000000149e-05, 2.387499999999959e-05, 2.355500000000149e-05, 2.447299999999708e-05, 2.356900000000106e-05, 2.4056000000001465e-05, 2.438899999999966e-05, 2.3556000000000965e-05, 2.3555999999994026e-05, 2.436100000000052e-05, 2.37090000000037e-05, 2.388899999999916e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.072" endtime="20201029 18:15:19.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.061" endtime="20201029 18:15:19.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.094" endtime="20201029 18:15:19.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.083" endtime="20201029 18:15:19.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.081" endtime="20201029 18:15:19.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.600" endtime="20201029 18:15:19.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.599" endtime="20201029 18:15:19.121"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.147" endtime="20201029 18:15:19.162"></status>
</kw>
<msg timestamp="20201029 18:15:19.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.144" endtime="20201029 18:15:19.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.166" endtime="20201029 18:15:19.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.172" endtime="20201029 18:15:19.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.136" endtime="20201029 18:15:19.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.129" endtime="20201029 18:15:19.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.196" endtime="20201029 18:15:19.540"></status>
</kw>
<msg timestamp="20201029 18:15:19.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0441475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044171347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:19.193" endtime="20201029 18:15:19.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0441475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044171347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:19.549" endtime="20201029 18:15:19.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.568" endtime="20201029 18:15:19.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.185" endtime="20201029 18:15:19.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.180" endtime="20201029 18:15:19.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.585" level="INFO">${RESULT} = [{'diff': 2.384700000000045e-05}, {'diff': 2.4098000000000175e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.387499999999959e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.3707999999997287e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:19.576" endtime="20201029 18:15:19.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.596" level="INFO">${ACCURACY} = {'diff': [2.384700000000045e-05, 2.4098000000000175e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.440299999999923e-05, 2.3707999999997287e-05, 2.354100000000192e-05, 2.4042000000001895e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 18:15:19.587" endtime="20201029 18:15:19.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.607" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.604" endtime="20201029 18:15:19.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.612" level="INFO">VALUE: [2.384700000000045e-05, 2.4098000000000175e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.440299999999923e-05, 2.3707999999997287e-05, 2.354100000000192e-05, 2.4042000000001895e-05, 2.3943999999997967e-05, 2.4222000000004296e-05, 2.4236000000003866e-05, 2.4207999999997787e-05, 2.438899999999966e-05, 2.4193999999998217e-05, 2.440299999999923e-05, 2.388899999999916e-05, 2.3735999999996427e-05, 2.370899999999676e-05, 2.4222000000004296e-05, 2.3847999999999925e-05, 2.3861999999999495e-05, 2.3722000000003796e-05, 2.354100000000192e-05, 2.405500000000199e-05, 2.386100000000002e-05, 2.3542000000001395e-05, 2.4056000000001465e-05, 2.388899999999916e-05, 2.3527999999994886e-05, 2.3915999999998827e-05, 2.3736000000003366e-05, 2.3722000000003796e-05, 2.390299999999873e-05, 2.4207999999997787e-05, 2.355500000000149e-05, 2.3708000000004226e-05, 2.3722000000003796e-05, 2.388899999999916e-05, 2.4222000000004296e-05, 2.387499999999959e-05, 2.38890000000061e-05, 2.440299999999923e-05, 2.3944000000004906e-05, 2.388899999999916e-05, 2.423700000000334e-05, 2.3708000000004226e-05, 2.40970000000007e-05, 2.4042000000001895e-05, 2.387499999999959e-05, 2.438899999999966e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.609" endtime="20201029 18:15:19.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.597" endtime="20201029 18:15:19.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.625" endtime="20201029 18:15:19.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.620" endtime="20201029 18:15:19.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.618" endtime="20201029 18:15:19.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.124" endtime="20201029 18:15:19.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.122" endtime="20201029 18:15:19.650"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.673" endtime="20201029 18:15:19.690"></status>
</kw>
<msg timestamp="20201029 18:15:19.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.670" endtime="20201029 18:15:19.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.693" endtime="20201029 18:15:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.699" endtime="20201029 18:15:19.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.662" endtime="20201029 18:15:19.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.657" endtime="20201029 18:15:19.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.723" endtime="20201029 18:15:20.072"></status>
</kw>
<msg timestamp="20201029 18:15:20.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.720" endtime="20201029 18:15:20.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.081" endtime="20201029 18:15:20.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.100" endtime="20201029 18:15:20.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.712" endtime="20201029 18:15:20.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.708" endtime="20201029 18:15:20.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.117" level="INFO">${RESULT} = [{'diff': 2.42090000000042e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.4249999999996497e-05}, {'diff': 2.404100000000242e-05}, {'diff': 2.4056000000001465e-05}, {'diff': 2.356900000000106e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:20.108" endtime="20201029 18:15:20.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.128" level="INFO">${ACCURACY} = {'diff': [2.42090000000042e-05, 2.388899999999916e-05, 2.4249999999996497e-05, 2.404100000000242e-05, 2.4056000000001465e-05, 2.356900000000106e-05, 2.4401999999999757e-05, 2.4042000000001895e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 18:15:20.119" endtime="20201029 18:15:20.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.139" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.137" endtime="20201029 18:15:20.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.145" level="INFO">VALUE: [2.42090000000042e-05, 2.388899999999916e-05, 2.4249999999996497e-05, 2.404100000000242e-05, 2.4056000000001465e-05, 2.356900000000106e-05, 2.4401999999999757e-05, 2.4042000000001895e-05, 2.3708000000004226e-05, 2.412499999999984e-05, 2.3708000000004226e-05, 2.4041999999994956e-05, 2.372300000000327e-05, 2.3570000000000535e-05, 2.4388000000000187e-05, 2.437500000000009e-05, 2.4208000000004726e-05, 2.422299999999683e-05, 2.387499999999959e-05, 2.437500000000009e-05, 2.4028000000002325e-05, 2.438899999999966e-05, 2.386100000000002e-05, 2.4028000000002325e-05, 2.387499999999959e-05, 2.4207999999997787e-05, 2.3721999999996857e-05, 2.3721999999996857e-05, 2.387499999999959e-05, 2.3542000000001395e-05, 2.388899999999916e-05, 2.4319999999994346e-05, 2.387499999999959e-05, 2.390299999999873e-05, 2.4041999999994956e-05, 2.438899999999966e-05, 2.4042000000001895e-05, 2.387499999999959e-05, 2.3735999999996427e-05, 2.3999999999996247e-05, 2.3721999999996857e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.422300000000377e-05, 2.4221999999997357e-05, 2.436100000000052e-05, 2.3500000000002685e-05, 2.4028000000002325e-05, 2.384700000000045e-05, 2.4070000000001035e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.141" endtime="20201029 18:15:20.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.130" endtime="20201029 18:15:20.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.157" endtime="20201029 18:15:20.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.153" endtime="20201029 18:15:20.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.150" endtime="20201029 18:15:20.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.652" endtime="20201029 18:15:20.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.651" endtime="20201029 18:15:20.182"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.205" endtime="20201029 18:15:20.222"></status>
</kw>
<msg timestamp="20201029 18:15:20.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.202" endtime="20201029 18:15:20.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.226" endtime="20201029 18:15:20.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.232" endtime="20201029 18:15:20.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.195" endtime="20201029 18:15:20.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.189" endtime="20201029 18:15:20.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.255" endtime="20201029 18:15:20.625"></status>
</kw>
<msg timestamp="20201029 18:15:20.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039802472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039833861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.252" endtime="20201029 18:15:20.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039802472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039833861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.636" endtime="20201029 18:15:20.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.656" endtime="20201029 18:15:20.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.245" endtime="20201029 18:15:20.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.240" endtime="20201029 18:15:20.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.675" level="INFO">${RESULT} = [{'diff': 3.138899999999972e-05}, {'diff': 3.104200000000196e-05}, {'diff': 3.080600000000128e-05}, {'diff': 3.120799999999785e-05}, {'diff': 3.104100000000248e-05}, {'diff': 3.088899999999922e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:20.665" endtime="20201029 18:15:20.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.685" level="INFO">${ACCURACY} = {'diff': [3.138899999999972e-05, 3.104200000000196e-05, 3.080600000000128e-05, 3.120799999999785e-05, 3.104100000000248e-05, 3.088899999999922e-05, 3.052800000000189e-05, 3.138899999999972e-05, 3.1361...</msg>
<status status="PASS" starttime="20201029 18:15:20.677" endtime="20201029 18:15:20.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.696" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.694" endtime="20201029 18:15:20.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.701" level="INFO">VALUE: [3.138899999999972e-05, 3.104200000000196e-05, 3.080600000000128e-05, 3.120799999999785e-05, 3.104100000000248e-05, 3.088899999999922e-05, 3.052800000000189e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.0513999999995378e-05, 3.054200000000146e-05, 3.0861999999999556e-05, 3.088900000000616e-05, 3.137500000000015e-05, 3.084700000000051e-05, 3.105600000000153e-05, 3.137500000000015e-05, 3.104200000000196e-05, 3.123600000000393e-05, 3.086100000000008e-05, 3.070799999999735e-05, 3.120799999999785e-05, 3.119399999999828e-05, 3.119400000000522e-05, 3.120900000000426e-05, 3.120799999999785e-05, 3.055500000000155e-05, 3.120800000000479e-05, 3.097199999999717e-05, 3.155500000000255e-05, 3.0554999999994614e-05, 3.140299999999929e-05, 3.104200000000196e-05, 3.054200000000146e-05, 3.105600000000153e-05, 3.065299999999854e-05, 3.069499999999725e-05, 3.070900000000376e-05, 3.134700000000101e-05, 3.122199999999742e-05, 3.136100000000058e-05, 3.1040999999995544e-05, 3.055599999999409e-05, 3.122199999999742e-05, 3.1362000000000056e-05, 3.087499999999965e-05, 3.070800000000429e-05, 3.052799999999495e-05, 3.052800000000189e-05, 3.087499999999965e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.698" endtime="20201029 18:15:20.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.686" endtime="20201029 18:15:20.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.714" endtime="20201029 18:15:20.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.710" endtime="20201029 18:15:20.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.707" endtime="20201029 18:15:20.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.184" endtime="20201029 18:15:20.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.183" endtime="20201029 18:15:20.740"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.763" endtime="20201029 18:15:20.781"></status>
</kw>
<msg timestamp="20201029 18:15:20.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.760" endtime="20201029 18:15:20.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.785" endtime="20201029 18:15:20.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.791" endtime="20201029 18:15:20.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.753" endtime="20201029 18:15:20.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.747" endtime="20201029 18:15:20.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.817" endtime="20201029 18:15:21.170"></status>
</kw>
<msg timestamp="20201029 18:15:21.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040727819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040758694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.814" endtime="20201029 18:15:21.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040727819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040758694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.179" endtime="20201029 18:15:21.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.198" endtime="20201029 18:15:21.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.806" endtime="20201029 18:15:21.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.801" endtime="20201029 18:15:21.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.216" level="INFO">${RESULT} = [{'diff': 3.087499999999965e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.1374999999993214e-05}, {'diff': 3.0540999999995044e-05}, {'diff': 3.072200000000386e-05}, {'diff': 3.104200000000196e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:21.207" endtime="20201029 18:15:21.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.226" level="INFO">${ACCURACY} = {'diff': [3.087499999999965e-05, 3.138899999999972e-05, 3.1374999999993214e-05, 3.0540999999995044e-05, 3.072200000000386e-05, 3.104200000000196e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.06...</msg>
<status status="PASS" starttime="20201029 18:15:21.218" endtime="20201029 18:15:21.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.237" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.235" endtime="20201029 18:15:21.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.242" level="INFO">VALUE: [3.087499999999965e-05, 3.138899999999972e-05, 3.1374999999993214e-05, 3.0540999999995044e-05, 3.072200000000386e-05, 3.104200000000196e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.065199999999907e-05, 3.054199999999452e-05, 3.123599999999699e-05, 3.127800000000264e-05, 3.088799999999975e-05, 3.119499999999775e-05, 3.067999999999821e-05, 3.086100000000008e-05, 3.068100000000462e-05, 3.118000000000565e-05, 3.070899999999682e-05, 3.0514000000002317e-05, 3.142999999999896e-05, 3.087499999999965e-05, 3.101400000000282e-05, 3.140299999999929e-05, 3.091699999999836e-05, 3.120800000000479e-05, 3.087499999999965e-05, 3.0540999999995044e-05, 3.088899999999922e-05, 3.0861999999999556e-05, 3.091699999999836e-05, 3.120799999999785e-05, 3.087499999999965e-05, 3.084700000000051e-05, 3.070800000000429e-05, 3.119399999999828e-05, 3.0500000000002747e-05, 3.119399999999828e-05, 3.104200000000196e-05, 3.137500000000015e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.1026999999995974e-05, 3.0582999999993754e-05, 3.069500000000419e-05, 3.142999999999896e-05, 3.120799999999785e-05, 3.102800000000239e-05, 3.070799999999735e-05, 3.120800000000479e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.239" endtime="20201029 18:15:21.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.228" endtime="20201029 18:15:21.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.257" endtime="20201029 18:15:21.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.251" endtime="20201029 18:15:21.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.248" endtime="20201029 18:15:21.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.742" endtime="20201029 18:15:21.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.741" endtime="20201029 18:15:21.282"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.305" endtime="20201029 18:15:21.323"></status>
</kw>
<msg timestamp="20201029 18:15:21.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.302" endtime="20201029 18:15:21.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.327" endtime="20201029 18:15:21.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.333" endtime="20201029 18:15:21.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.294" endtime="20201029 18:15:21.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.289" endtime="20201029 18:15:21.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.357" endtime="20201029 18:15:21.698"></status>
</kw>
<msg timestamp="20201029 18:15:21.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04030575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040336625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:21.354" endtime="20201029 18:15:21.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04030575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040336625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:21.708" endtime="20201029 18:15:21.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.726" endtime="20201029 18:15:21.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.346" endtime="20201029 18:15:21.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.341" endtime="20201029 18:15:21.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.743" level="INFO">${RESULT} = [{'diff': 3.087499999999965e-05}, {'diff': 3.086100000000008e-05}, {'diff': 3.054200000000146e-05}, {'diff': 3.052800000000189e-05}, {'diff': 3.083400000000042e-05}, {'diff': 3.086100000000008e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:21.735" endtime="20201029 18:15:21.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.754" level="INFO">${ACCURACY} = {'diff': [3.087499999999965e-05, 3.086100000000008e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.083400000000042e-05, 3.086100000000008e-05, 3.072199999999692e-05, 3.137500000000015e-05, 3.1526...</msg>
<status status="PASS" starttime="20201029 18:15:21.745" endtime="20201029 18:15:21.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.765" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.763" endtime="20201029 18:15:21.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.770" level="INFO">VALUE: [3.087499999999965e-05, 3.086100000000008e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.083400000000042e-05, 3.086100000000008e-05, 3.072199999999692e-05, 3.137500000000015e-05, 3.1526999999996475e-05, 3.119399999999828e-05, 3.101400000000282e-05, 3.137500000000015e-05, 3.055600000000103e-05, 3.120799999999785e-05, 3.134700000000101e-05, 3.122199999999742e-05, 3.069499999999725e-05, 3.101400000000282e-05, 3.1348000000000487e-05, 3.122299999999689e-05, 3.152800000000289e-05, 3.105500000000205e-05, 3.086100000000008e-05, 3.069400000000472e-05, 3.080600000000128e-05, 3.109700000000076e-05, 3.0513999999995378e-05, 3.070799999999735e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.086100000000008e-05, 3.070799999999735e-05, 3.102800000000239e-05, 3.086100000000008e-05, 3.054100000000198e-05, 3.147199999999767e-05, 3.105500000000205e-05, 3.136100000000058e-05, 3.095900000000401e-05, 3.119399999999828e-05, 3.068099999999768e-05, 3.052799999999495e-05, 3.068100000000462e-05, 3.104199999999502e-05, 3.120799999999785e-05, 3.070800000000429e-05, 3.086100000000008e-05, 3.054100000000198e-05, 3.120799999999785e-05, 3.066699999999811e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.767" endtime="20201029 18:15:21.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.756" endtime="20201029 18:15:21.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.783" endtime="20201029 18:15:21.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.778" endtime="20201029 18:15:21.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.776" endtime="20201029 18:15:21.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.284" endtime="20201029 18:15:21.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.283" endtime="20201029 18:15:21.808"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.831" endtime="20201029 18:15:21.846"></status>
</kw>
<msg timestamp="20201029 18:15:21.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.827" endtime="20201029 18:15:21.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.850" endtime="20201029 18:15:21.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.856" endtime="20201029 18:15:21.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.820" endtime="20201029 18:15:21.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.815" endtime="20201029 18:15:21.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.879" endtime="20201029 18:15:22.260"></status>
</kw>
<msg timestamp="20201029 18:15:22.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039455333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.876" endtime="20201029 18:15:22.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039455333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.275" endtime="20201029 18:15:22.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.302" endtime="20201029 18:15:22.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.869" endtime="20201029 18:15:22.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.864" endtime="20201029 18:15:22.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.331" level="INFO">${RESULT} = [{'diff': 3.138899999999972e-05}, {'diff': 3.134700000000101e-05}, {'diff': 3.123599999999699e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.088899999999922e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:22.317" endtime="20201029 18:15:22.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.348" level="INFO">${ACCURACY} = {'diff': [3.138899999999972e-05, 3.134700000000101e-05, 3.123599999999699e-05, 3.138899999999972e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.0500000000002747e-05, 3.055500000000155e-05, 3.075...</msg>
<status status="PASS" starttime="20201029 18:15:22.334" endtime="20201029 18:15:22.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.367" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.362" endtime="20201029 18:15:22.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.376" level="INFO">VALUE: [3.138899999999972e-05, 3.134700000000101e-05, 3.123599999999699e-05, 3.138899999999972e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.0500000000002747e-05, 3.055500000000155e-05, 3.0750000000003e-05, 3.086100000000008e-05, 3.073600000000343e-05, 3.140299999999929e-05, 3.054200000000146e-05, 3.136100000000058e-05, 3.140299999999929e-05, 3.084700000000051e-05, 3.134700000000101e-05, 3.067999999999821e-05, 3.134700000000101e-05, 3.068100000000462e-05, 3.138899999999972e-05, 3.054200000000146e-05, 3.119499999999775e-05, 3.069400000000472e-05, 3.120800000000479e-05, 3.054200000000146e-05, 3.137500000000015e-05, 3.104200000000196e-05, 3.137500000000015e-05, 3.070800000000429e-05, 3.076400000000257e-05, 3.099999999999631e-05, 3.0514000000002317e-05, 3.137500000000015e-05, 3.104199999999502e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.122200000000436e-05, 3.120800000000479e-05, 3.122200000000436e-05, 3.052800000000189e-05, 3.087499999999965e-05, 3.102800000000239e-05, 3.122200000000436e-05, 3.122199999999742e-05, 3.070799999999735e-05, 3.0526999999995474e-05, 3.136100000000058e-05, 3.084700000000051e-05, 3.065299999999854e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.371" endtime="20201029 18:15:22.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.351" endtime="20201029 18:15:22.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.397" endtime="20201029 18:15:22.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.390" endtime="20201029 18:15:22.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.386" endtime="20201029 18:15:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.810" endtime="20201029 18:15:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.809" endtime="20201029 18:15:22.427"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.449" endtime="20201029 18:15:22.467"></status>
</kw>
<msg timestamp="20201029 18:15:22.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.446" endtime="20201029 18:15:22.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.470" endtime="20201029 18:15:22.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.476" endtime="20201029 18:15:22.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.439" endtime="20201029 18:15:22.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.433" endtime="20201029 18:15:22.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.500" endtime="20201029 18:15:22.847"></status>
</kw>
<msg timestamp="20201029 18:15:22.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043062125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043092833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.497" endtime="20201029 18:15:22.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043062125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043092833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.856" endtime="20201029 18:15:22.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.875" endtime="20201029 18:15:22.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.489" endtime="20201029 18:15:22.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.484" endtime="20201029 18:15:22.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.892" level="INFO">${RESULT} = [{'diff': 3.070799999999735e-05}, {'diff': 3.136100000000058e-05}, {'diff': 3.118099999999818e-05}, {'diff': 3.136100000000058e-05}, {'diff': 3.116699999999861e-05}, {'diff': 3.070799999999735e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:22.883" endtime="20201029 18:15:22.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.902" level="INFO">${ACCURACY} = {'diff': [3.070799999999735e-05, 3.136100000000058e-05, 3.118099999999818e-05, 3.136100000000058e-05, 3.116699999999861e-05, 3.070799999999735e-05, 3.138800000000025e-05, 3.120799999999785e-05, 3.1347...</msg>
<status status="PASS" starttime="20201029 18:15:22.894" endtime="20201029 18:15:22.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.913" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.910" endtime="20201029 18:15:22.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.918" level="INFO">VALUE: [3.070799999999735e-05, 3.136100000000058e-05, 3.118099999999818e-05, 3.136100000000058e-05, 3.116699999999861e-05, 3.070799999999735e-05, 3.138800000000025e-05, 3.120799999999785e-05, 3.134700000000101e-05, 3.05700000000006e-05, 3.070899999999682e-05, 3.0500000000002747e-05, 3.068099999999768e-05, 3.0513999999995378e-05, 3.133300000000144e-05, 3.119499999999775e-05, 3.0540999999995044e-05, 3.117999999999871e-05, 3.1026999999995974e-05, 3.136100000000058e-05, 3.119399999999828e-05, 3.136100000000058e-05, 3.052800000000189e-05, 3.086100000000008e-05, 3.082000000000085e-05, 3.11249999999999e-05, 3.069399999999778e-05, 3.137500000000015e-05, 3.120799999999785e-05, 3.137500000000015e-05, 3.05700000000006e-05, 3.079200000000171e-05, 3.119399999999828e-05, 3.069499999999725e-05, 3.137500000000015e-05, 3.082000000000085e-05, 3.054200000000146e-05, 3.155600000000203e-05, 3.054200000000146e-05, 3.086100000000008e-05, 3.055600000000103e-05, 3.069399999999778e-05, 3.119399999999828e-05, 3.104200000000196e-05, 3.069500000000419e-05, 3.086100000000008e-05, 3.086100000000008e-05, 3.138899999999972e-05, 3.054200000000146e-05, 3.137500000000015e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.915" endtime="20201029 18:15:22.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.903" endtime="20201029 18:15:22.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.931" endtime="20201029 18:15:22.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.926" endtime="20201029 18:15:22.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.924" endtime="20201029 18:15:22.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.429" endtime="20201029 18:15:22.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.428" endtime="20201029 18:15:22.956"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.979" endtime="20201029 18:15:22.995"></status>
</kw>
<msg timestamp="20201029 18:15:22.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.976" endtime="20201029 18:15:22.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.998" endtime="20201029 18:15:23.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.005" endtime="20201029 18:15:23.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.968" endtime="20201029 18:15:23.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.962" endtime="20201029 18:15:23.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.028" endtime="20201029 18:15:23.367"></status>
</kw>
<msg timestamp="20201029 18:15:23.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039974444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.025" endtime="20201029 18:15:23.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039974444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.376" endtime="20201029 18:15:23.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.395" endtime="20201029 18:15:23.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.018" endtime="20201029 18:15:23.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.013" endtime="20201029 18:15:23.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.412" level="INFO">${RESULT} = [{'diff': 3.072199999999692e-05}, {'diff': 3.070899999999682e-05}, {'diff': 3.084700000000051e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.0514000000002317e-05}, {'diff': 3.123600000000393e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:23.403" endtime="20201029 18:15:23.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.422" level="INFO">${ACCURACY} = {'diff': [3.072199999999692e-05, 3.070899999999682e-05, 3.084700000000051e-05, 3.138899999999972e-05, 3.0514000000002317e-05, 3.123600000000393e-05, 3.070900000000376e-05, 3.054200000000146e-05, 3.137...</msg>
<status status="PASS" starttime="20201029 18:15:23.414" endtime="20201029 18:15:23.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.433" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.430" endtime="20201029 18:15:23.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.438" level="INFO">VALUE: [3.072199999999692e-05, 3.070899999999682e-05, 3.084700000000051e-05, 3.138899999999972e-05, 3.0514000000002317e-05, 3.123600000000393e-05, 3.070900000000376e-05, 3.054200000000146e-05, 3.137500000000015e-05, 3.069499999999725e-05, 3.070799999999735e-05, 3.070800000000429e-05, 3.105600000000153e-05, 3.0526999999995474e-05, 3.105600000000153e-05, 3.119500000000469e-05, 3.073600000000343e-05, 3.069500000000419e-05, 3.119399999999828e-05, 3.073600000000343e-05, 3.069499999999725e-05, 3.14170000000058e-05, 3.087500000000659e-05, 3.072299999999639e-05, 3.067999999999821e-05, 3.104100000000248e-05, 3.122299999999689e-05, 3.1040999999995544e-05, 3.141599999999939e-05, 3.054199999999452e-05, 3.082000000000085e-05, 3.122199999999742e-05, 3.069499999999725e-05, 3.073599999999649e-05, 3.122200000000436e-05, 3.141699999999886e-05, 3.140299999999929e-05, 3.1360999999993644e-05, 3.081900000000137e-05, 3.087499999999965e-05, 3.117999999999871e-05, 3.119500000000469e-05, 3.087499999999965e-05, 3.055600000000103e-05, 3.056900000000112e-05, 3.087499999999965e-05, 3.137500000000015e-05, 3.069399999999778e-05, 3.137500000000015e-05, 3.104200000000196e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.435" endtime="20201029 18:15:23.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.423" endtime="20201029 18:15:23.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.461" endtime="20201029 18:15:23.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.451" endtime="20201029 18:15:23.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.448" endtime="20201029 18:15:23.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.958" endtime="20201029 18:15:23.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.957" endtime="20201029 18:15:23.486"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.509" endtime="20201029 18:15:23.525"></status>
</kw>
<msg timestamp="20201029 18:15:23.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.506" endtime="20201029 18:15:23.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.528" endtime="20201029 18:15:23.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.535" endtime="20201029 18:15:23.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.498" endtime="20201029 18:15:23.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.493" endtime="20201029 18:15:23.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.560" endtime="20201029 18:15:23.899"></status>
</kw>
<msg timestamp="20201029 18:15:23.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039716583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039747972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.556" endtime="20201029 18:15:23.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039716583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039747972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.908" endtime="20201029 18:15:23.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.928" endtime="20201029 18:15:23.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.549" endtime="20201029 18:15:23.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.544" endtime="20201029 18:15:23.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.948" level="INFO">${RESULT} = [{'diff': 3.138899999999972e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.090299999999879e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.137500000000015e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:23.938" endtime="20201029 18:15:23.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.961" level="INFO">${ACCURACY} = {'diff': [3.138899999999972e-05, 3.138899999999972e-05, 3.090299999999879e-05, 3.137500000000015e-05, 3.087499999999965e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.087499999999965e-05, 3.1193...</msg>
<status status="PASS" starttime="20201029 18:15:23.951" endtime="20201029 18:15:23.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.973" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.970" endtime="20201029 18:15:23.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.978" level="INFO">VALUE: [3.138899999999972e-05, 3.138899999999972e-05, 3.090299999999879e-05, 3.137500000000015e-05, 3.087499999999965e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.087499999999965e-05, 3.119399999999828e-05, 3.0513000000002843e-05, 3.086100000000008e-05, 3.132000000000135e-05, 3.0512999999995905e-05, 3.087499999999965e-05, 3.100000000000325e-05, 3.073599999999649e-05, 3.086100000000008e-05, 3.120900000000426e-05, 3.052800000000189e-05, 3.120899999999732e-05, 3.120900000000426e-05, 3.122299999999689e-05, 3.073599999999649e-05, 3.137500000000015e-05, 3.069400000000472e-05, 3.055600000000103e-05, 3.069499999999725e-05, 3.070799999999735e-05, 3.086100000000008e-05, 3.054200000000146e-05, 3.102700000000291e-05, 3.072200000000386e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.0554999999994614e-05, 3.087499999999965e-05, 3.104199999999502e-05, 3.120899999999732e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.104199999999502e-05, 3.134700000000101e-05, 3.154199999999552e-05, 3.104100000000248e-05, 3.070800000000429e-05, 3.070799999999735e-05, 3.055600000000103e-05, 3.073600000000343e-05, 3.072200000000386e-05, 3.119499999999775e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.975" endtime="20201029 18:15:23.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.963" endtime="20201029 18:15:23.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.991" endtime="20201029 18:15:24.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.987" endtime="20201029 18:15:24.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.984" endtime="20201029 18:15:24.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.488" endtime="20201029 18:15:24.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.487" endtime="20201029 18:15:24.016"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.040" endtime="20201029 18:15:24.056"></status>
</kw>
<msg timestamp="20201029 18:15:24.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.036" endtime="20201029 18:15:24.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.059" endtime="20201029 18:15:24.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.065" endtime="20201029 18:15:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.029" endtime="20201029 18:15:24.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.023" endtime="20201029 18:15:24.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.089" endtime="20201029 18:15:24.429"></status>
</kw>
<msg timestamp="20201029 18:15:24.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.086" endtime="20201029 18:15:24.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.438" endtime="20201029 18:15:24.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.457" endtime="20201029 18:15:24.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.078" endtime="20201029 18:15:24.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.074" endtime="20201029 18:15:24.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.474" level="INFO">${RESULT} = [{'diff': 3.752800000000195e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.819399999999834e-05}, {'diff': 3.7874999999999714e-05}, {'diff': 3.780600000000134e-05}, {'diff': 3.8375000000000214e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:24.465" endtime="20201029 18:15:24.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.486" level="INFO">${ACCURACY} = {'diff': [3.752800000000195e-05, 3.7861000000000145e-05, 3.819399999999834e-05, 3.7874999999999714e-05, 3.780600000000134e-05, 3.8375000000000214e-05, 3.7833000000001005e-05, 3.802800000000245e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:24.476" endtime="20201029 18:15:24.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.497" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.495" endtime="20201029 18:15:24.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.502" level="INFO">VALUE: [3.752800000000195e-05, 3.7861000000000145e-05, 3.819399999999834e-05, 3.7874999999999714e-05, 3.780600000000134e-05, 3.8375000000000214e-05, 3.7833000000001005e-05, 3.802800000000245e-05, 3.770799999999741e-05, 3.7694999999997314e-05, 3.8304999999995426e-05, 3.805599999999465e-05, 3.769500000000425e-05, 3.7861000000000145e-05, 3.851400000000338e-05, 3.824999999999662e-05, 3.7861000000000145e-05, 3.8554999999995676e-05, 3.851400000000338e-05, 3.8012999999996466e-05, 3.8180999999998244e-05, 3.820800000000485e-05, 3.804200000000202e-05, 3.7597000000000325e-05, 3.7888999999999284e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.819399999999834e-05, 3.786199999999962e-05, 3.7680999999997744e-05, 3.7847000000000575e-05, 3.769500000000425e-05, 3.7694999999997314e-05, 3.823600000000399e-05, 3.752800000000195e-05, 3.8012999999996466e-05, 3.75979999999998e-05, 3.8305000000002365e-05, 3.802800000000245e-05, 3.8041000000002545e-05, 3.752800000000195e-05, 3.8346999999994136e-05, 3.819399999999834e-05, 3.8361000000000645e-05, 3.7861000000000145e-05, 3.7666999999998174e-05, 3.7861000000000145e-05, 3.8361000000000645e-05, 3.820799999999791e-05, 3.819399999999834e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.499" endtime="20201029 18:15:24.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.488" endtime="20201029 18:15:24.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.515" endtime="20201029 18:15:24.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.511" endtime="20201029 18:15:24.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.508" endtime="20201029 18:15:24.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.018" endtime="20201029 18:15:24.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.017" endtime="20201029 18:15:24.540"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.564" endtime="20201029 18:15:24.580"></status>
</kw>
<msg timestamp="20201029 18:15:24.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.560" endtime="20201029 18:15:24.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.583" endtime="20201029 18:15:24.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.590" endtime="20201029 18:15:24.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.552" endtime="20201029 18:15:24.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.547" endtime="20201029 18:15:24.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.614" endtime="20201029 18:15:24.955"></status>
</kw>
<msg timestamp="20201029 18:15:24.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040528861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:24.611" endtime="20201029 18:15:24.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0404905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040528861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:24.965" endtime="20201029 18:15:24.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.984" endtime="20201029 18:15:24.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.604" endtime="20201029 18:15:24.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.599" endtime="20201029 18:15:24.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.001" level="INFO">${RESULT} = [{'diff': 3.8361000000000645e-05}, {'diff': 3.749999999999587e-05}, {'diff': 3.7680999999997744e-05}, {'diff': 3.8027000000002975e-05}, {'diff': 3.8194999999997814e-05}, {'diff': 3.791599999999895e-05...</msg>
<status status="PASS" starttime="20201029 18:15:24.992" endtime="20201029 18:15:25.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.011" level="INFO">${ACCURACY} = {'diff': [3.8361000000000645e-05, 3.749999999999587e-05, 3.7680999999997744e-05, 3.8027000000002975e-05, 3.8194999999997814e-05, 3.791599999999895e-05, 3.8012999999996466e-05, 3.817999999999877e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:15:25.003" endtime="20201029 18:15:25.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.022" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.019" endtime="20201029 18:15:25.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.027" level="INFO">VALUE: [3.8361000000000645e-05, 3.749999999999587e-05, 3.7680999999997744e-05, 3.8027000000002975e-05, 3.8194999999997814e-05, 3.791599999999895e-05, 3.8012999999996466e-05, 3.817999999999877e-05, 3.802799999999551e-05, 3.8512999999996966e-05, 3.8360999999993706e-05, 3.7666999999998174e-05, 3.7527000000002475e-05, 3.752799999999501e-05, 3.7680999999997744e-05, 3.804199999999508e-05, 3.852800000000295e-05, 3.7680999999997744e-05, 3.768000000000521e-05, 3.8041000000002545e-05, 3.7861000000000145e-05, 3.7680999999997744e-05, 3.8180999999998244e-05, 3.751399999999544e-05, 3.854199999999558e-05, 3.754200000000152e-05, 3.752800000000195e-05, 3.751400000000238e-05, 3.833400000000098e-05, 3.8361000000000645e-05, 3.7930999999997994e-05, 3.766600000000564e-05, 3.8138999999999534e-05, 3.7861000000000145e-05, 3.832000000000141e-05, 3.817999999999877e-05, 3.769399999999784e-05, 3.7874999999999714e-05, 3.7680999999997744e-05, 3.7638999999999034e-05, 3.8346999999994136e-05, 3.800000000000331e-05, 3.751399999999544e-05, 3.767999999999827e-05, 3.747199999999673e-05, 3.751399999999544e-05, 3.8069000000001685e-05, 3.766600000000564e-05, 3.7847000000000575e-05, 3.744399999999759e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.024" endtime="20201029 18:15:25.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.012" endtime="20201029 18:15:25.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.040" endtime="20201029 18:15:25.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.036" endtime="20201029 18:15:25.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.033" endtime="20201029 18:15:25.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.542" endtime="20201029 18:15:25.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.541" endtime="20201029 18:15:25.065"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.088" endtime="20201029 18:15:25.106"></status>
</kw>
<msg timestamp="20201029 18:15:25.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.085" endtime="20201029 18:15:25.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.109" endtime="20201029 18:15:25.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.116" endtime="20201029 18:15:25.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.078" endtime="20201029 18:15:25.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.072" endtime="20201029 18:15:25.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.140" endtime="20201029 18:15:25.479"></status>
</kw>
<msg timestamp="20201029 18:15:25.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041481736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041519764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.136" endtime="20201029 18:15:25.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041481736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041519764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.488" endtime="20201029 18:15:25.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.507" endtime="20201029 18:15:25.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.129" endtime="20201029 18:15:25.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.124" endtime="20201029 18:15:25.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.524" level="INFO">${RESULT} = [{'diff': 3.802800000000245e-05}, {'diff': 3.7694999999997314e-05}, {'diff': 3.7847000000000575e-05}, {'diff': 3.748600000000324e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.7569000000001185e-05...</msg>
<status status="PASS" starttime="20201029 18:15:25.516" endtime="20201029 18:15:25.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.534" level="INFO">${ACCURACY} = {'diff': [3.802800000000245e-05, 3.7694999999997314e-05, 3.7847000000000575e-05, 3.748600000000324e-05, 3.7861000000000145e-05, 3.7569000000001185e-05, 3.800000000000331e-05, 3.8304999999995426e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:15:25.526" endtime="20201029 18:15:25.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.545" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.543" endtime="20201029 18:15:25.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.550" level="INFO">VALUE: [3.802800000000245e-05, 3.7694999999997314e-05, 3.7847000000000575e-05, 3.748600000000324e-05, 3.7861000000000145e-05, 3.7569000000001185e-05, 3.800000000000331e-05, 3.8304999999995426e-05, 3.775000000000306e-05, 3.830600000000184e-05, 3.7847000000000575e-05, 3.749999999999587e-05, 3.779200000000177e-05, 3.824999999999662e-05, 3.752800000000195e-05, 3.7874999999999714e-05, 3.801399999999594e-05, 3.817999999999877e-05, 3.780600000000134e-05, 3.8194999999997814e-05, 3.769399999999784e-05, 3.77780000000022e-05, 3.752799999999501e-05, 3.767999999999827e-05, 3.769399999999784e-05, 3.8194999999997814e-05, 3.772200000000392e-05, 3.8375000000000214e-05, 3.794399999999809e-05, 3.7888999999999284e-05, 3.7874999999999714e-05, 3.7888999999999284e-05, 3.8194999999997814e-05, 3.802800000000245e-05, 3.802799999999551e-05, 3.836200000000012e-05, 3.8375000000000214e-05, 3.834800000000055e-05, 3.801399999999594e-05, 3.8180999999998244e-05, 3.7916999999998424e-05, 3.769399999999784e-05, 3.802799999999551e-05, 3.777799999999526e-05, 3.767999999999827e-05, 3.784800000000005e-05, 3.768100000000468e-05, 3.768100000000468e-05, 3.7874999999999714e-05, 3.797199999999723e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.547" endtime="20201029 18:15:25.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.536" endtime="20201029 18:15:25.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.565" endtime="20201029 18:15:25.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.559" endtime="20201029 18:15:25.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.556" endtime="20201029 18:15:25.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.067" endtime="20201029 18:15:25.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.066" endtime="20201029 18:15:25.590"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.614" endtime="20201029 18:15:25.630"></status>
</kw>
<msg timestamp="20201029 18:15:25.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.610" endtime="20201029 18:15:25.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.634" endtime="20201029 18:15:25.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.640" endtime="20201029 18:15:25.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.603" endtime="20201029 18:15:25.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.596" endtime="20201029 18:15:25.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.668" endtime="20201029 18:15:26.009"></status>
</kw>
<msg timestamp="20201029 18:15:26.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.664" endtime="20201029 18:15:26.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.019" endtime="20201029 18:15:26.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.038" endtime="20201029 18:15:26.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.655" endtime="20201029 18:15:26.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.649" endtime="20201029 18:15:26.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.055" level="INFO">${RESULT} = [{'diff': 3.802800000000245e-05}, {'diff': 3.749999999999587e-05}, {'diff': 3.7526999999995536e-05}, {'diff': 3.786199999999962e-05}, {'diff': 3.8361000000000645e-05}, {'diff': 3.7694999999997314e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:26.046" endtime="20201029 18:15:26.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.066" level="INFO">${ACCURACY} = {'diff': [3.802800000000245e-05, 3.749999999999587e-05, 3.7526999999995536e-05, 3.786199999999962e-05, 3.8361000000000645e-05, 3.7694999999997314e-05, 3.768100000000468e-05, 3.772200000000392e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:15:26.057" endtime="20201029 18:15:26.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.077" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.075" endtime="20201029 18:15:26.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.082" level="INFO">VALUE: [3.802800000000245e-05, 3.749999999999587e-05, 3.7526999999995536e-05, 3.786199999999962e-05, 3.8361000000000645e-05, 3.7694999999997314e-05, 3.768100000000468e-05, 3.772200000000392e-05, 3.832000000000141e-05, 3.8346999999994136e-05, 3.8347000000001075e-05, 3.829200000000227e-05, 3.852799999999601e-05, 3.776400000000263e-05, 3.752800000000195e-05, 3.8347000000001075e-05, 3.819399999999834e-05, 3.8361000000000645e-05, 3.7874999999999714e-05, 3.770799999999741e-05, 3.819399999999834e-05, 3.852800000000295e-05, 3.772199999999698e-05, 3.822199999999748e-05, 3.838800000000031e-05, 3.8375000000000214e-05, 3.8360999999993706e-05, 3.7888999999999284e-05, 3.852800000000295e-05, 3.784800000000005e-05, 3.819500000000475e-05, 3.8180999999998244e-05, 3.773600000000349e-05, 3.82780000000027e-05, 3.767999999999827e-05, 3.797200000000417e-05, 3.8361000000000645e-05, 3.7861000000000145e-05, 3.822199999999748e-05, 3.820799999999791e-05, 3.801400000000288e-05, 3.802799999999551e-05, 3.77780000000022e-05, 3.8361000000000645e-05, 3.7861000000000145e-05, 3.820800000000485e-05, 3.834800000000055e-05, 3.834800000000055e-05, 3.752800000000195e-05, 3.754199999999458e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.079" endtime="20201029 18:15:26.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.068" endtime="20201029 18:15:26.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.095" endtime="20201029 18:15:26.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.091" endtime="20201029 18:15:26.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.088" endtime="20201029 18:15:26.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.592" endtime="20201029 18:15:26.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.591" endtime="20201029 18:15:26.120"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.143" endtime="20201029 18:15:26.159"></status>
</kw>
<msg timestamp="20201029 18:15:26.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.140" endtime="20201029 18:15:26.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.163" endtime="20201029 18:15:26.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.169" endtime="20201029 18:15:26.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.132" endtime="20201029 18:15:26.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.127" endtime="20201029 18:15:26.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.194" endtime="20201029 18:15:26.535"></status>
</kw>
<msg timestamp="20201029 18:15:26.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039761569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.190" endtime="20201029 18:15:26.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039761569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039799417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.544" endtime="20201029 18:15:26.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.563" endtime="20201029 18:15:26.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.182" endtime="20201029 18:15:26.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.177" endtime="20201029 18:15:26.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.580" level="INFO">${RESULT} = [{'diff': 3.784800000000005e-05}, {'diff': 3.752800000000195e-05}, {'diff': 3.825000000000356e-05}, {'diff': 3.832000000000141e-05}, {'diff': 3.751399999999544e-05}, {'diff': 3.854199999999558e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:26.572" endtime="20201029 18:15:26.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.592" level="INFO">${ACCURACY} = {'diff': [3.784800000000005e-05, 3.752800000000195e-05, 3.825000000000356e-05, 3.832000000000141e-05, 3.751399999999544e-05, 3.854199999999558e-05, 3.841599999999945e-05, 3.8347000000001075e-05, 3.834...</msg>
<status status="PASS" starttime="20201029 18:15:26.583" endtime="20201029 18:15:26.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.603" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.600" endtime="20201029 18:15:26.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.608" level="INFO">VALUE: [3.784800000000005e-05, 3.752800000000195e-05, 3.825000000000356e-05, 3.832000000000141e-05, 3.751399999999544e-05, 3.854199999999558e-05, 3.841599999999945e-05, 3.8347000000001075e-05, 3.8347000000001075e-05, 3.7680999999997744e-05, 3.817999999999877e-05, 3.8166999999998674e-05, 3.8166999999998674e-05, 3.801399999999594e-05, 3.772199999999698e-05, 3.799999999999637e-05, 3.802800000000245e-05, 3.801399999999594e-05, 3.820799999999791e-05, 3.8388999999999784e-05, 3.819400000000528e-05, 3.8152999999999104e-05, 3.825000000000356e-05, 3.784800000000005e-05, 3.800000000000331e-05, 3.830600000000184e-05, 3.754200000000152e-05, 3.784800000000005e-05, 3.8375000000000214e-05, 3.752800000000195e-05, 3.755599999999415e-05, 3.802800000000245e-05, 3.8152999999999104e-05, 3.805600000000159e-05, 3.7694999999997314e-05, 3.7513000000002905e-05, 3.819500000000475e-05, 3.79859999999968e-05, 3.8388999999999784e-05, 3.819400000000528e-05, 3.8388999999999784e-05, 3.819399999999834e-05, 3.755600000000109e-05, 3.819500000000475e-05, 3.765199999999913e-05, 3.7847000000000575e-05, 3.8375000000000214e-05, 3.805600000000159e-05, 3.822200000000442e-05, 3.802800000000245e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.605" endtime="20201029 18:15:26.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.594" endtime="20201029 18:15:26.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.621" endtime="20201029 18:15:26.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.616" endtime="20201029 18:15:26.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.614" endtime="20201029 18:15:26.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.122" endtime="20201029 18:15:26.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.121" endtime="20201029 18:15:26.646"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.671" endtime="20201029 18:15:26.687"></status>
</kw>
<msg timestamp="20201029 18:15:26.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.667" endtime="20201029 18:15:26.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.691" endtime="20201029 18:15:26.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.697" endtime="20201029 18:15:26.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.660" endtime="20201029 18:15:26.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.653" endtime="20201029 18:15:26.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.720" endtime="20201029 18:15:27.062"></status>
</kw>
<msg timestamp="20201029 18:15:27.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.717" endtime="20201029 18:15:27.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.072" endtime="20201029 18:15:27.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.090" endtime="20201029 18:15:27.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.710" endtime="20201029 18:15:27.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.705" endtime="20201029 18:15:27.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.107" level="INFO">${RESULT} = [{'diff': 3.7638999999999034e-05}, {'diff': 3.754200000000152e-05}, {'diff': 3.851400000000338e-05}, {'diff': 3.768000000000521e-05}, {'diff': 3.816700000000561e-05}, {'diff': 3.769400000000478e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:27.099" endtime="20201029 18:15:27.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.117" level="INFO">${ACCURACY} = {'diff': [3.7638999999999034e-05, 3.754200000000152e-05, 3.851400000000338e-05, 3.768000000000521e-05, 3.816700000000561e-05, 3.769400000000478e-05, 3.822200000000442e-05, 3.750000000000281e-05, 3.804...</msg>
<status status="PASS" starttime="20201029 18:15:27.110" endtime="20201029 18:15:27.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.128" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.126" endtime="20201029 18:15:27.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.133" level="INFO">VALUE: [3.7638999999999034e-05, 3.754200000000152e-05, 3.851400000000338e-05, 3.768000000000521e-05, 3.816700000000561e-05, 3.769400000000478e-05, 3.822200000000442e-05, 3.750000000000281e-05, 3.8041000000002545e-05, 3.7861000000000145e-05, 3.8526999999996536e-05, 3.8041000000002545e-05, 3.804200000000202e-05, 3.754199999999458e-05, 3.7694999999997314e-05, 3.76659999999987e-05, 3.7540999999995106e-05, 3.782000000000091e-05, 3.8111000000000395e-05, 3.822200000000442e-05, 3.820900000000432e-05, 3.7874999999999714e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.775000000000306e-05, 3.754199999999458e-05, 3.801399999999594e-05, 3.8361000000000645e-05, 3.7694999999997314e-05, 3.8583000000001755e-05, 3.772199999999698e-05, 3.8360999999993706e-05, 3.768100000000468e-05, 3.752799999999501e-05, 3.74580000000041e-05, 3.8027000000002975e-05, 3.834800000000055e-05, 3.7902999999998854e-05, 3.834800000000055e-05, 3.747200000000367e-05, 3.769399999999784e-05, 3.826400000000313e-05, 3.767999999999827e-05, 3.784800000000005e-05, 3.800000000000331e-05, 3.8194999999997814e-05, 3.769500000000425e-05, 3.858400000000123e-05, 3.7847000000000575e-05, 3.751400000000238e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.130" endtime="20201029 18:15:27.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.119" endtime="20201029 18:15:27.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.146" endtime="20201029 18:15:27.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.142" endtime="20201029 18:15:27.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.139" endtime="20201029 18:15:27.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.649" endtime="20201029 18:15:27.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.647" endtime="20201029 18:15:27.171"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.194" endtime="20201029 18:15:27.211"></status>
</kw>
<msg timestamp="20201029 18:15:27.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.191" endtime="20201029 18:15:27.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.215" endtime="20201029 18:15:27.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.221" endtime="20201029 18:15:27.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.183" endtime="20201029 18:15:27.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.177" endtime="20201029 18:15:27.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.245" endtime="20201029 18:15:27.585"></status>
</kw>
<msg timestamp="20201029 18:15:27.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041325208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041362917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.242" endtime="20201029 18:15:27.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041325208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041362917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.595" endtime="20201029 18:15:27.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.614" endtime="20201029 18:15:27.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.234" endtime="20201029 18:15:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.229" endtime="20201029 18:15:27.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.631" level="INFO">${RESULT} = [{'diff': 3.7708999999996884e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.8361000000000645e-05}, {'diff': 3.802800000000245e-05}, {'diff': 3.8512999999996966e-05}, {'diff': 3.7861000000000145e-0...</msg>
<status status="PASS" starttime="20201029 18:15:27.622" endtime="20201029 18:15:27.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.641" level="INFO">${ACCURACY} = {'diff': [3.7708999999996884e-05, 3.8347000000001075e-05, 3.8361000000000645e-05, 3.802800000000245e-05, 3.8512999999996966e-05, 3.7861000000000145e-05, 3.830600000000184e-05, 3.852799999999601e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:15:27.633" endtime="20201029 18:15:27.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.651" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.649" endtime="20201029 18:15:27.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.657" level="INFO">VALUE: [3.7708999999996884e-05, 3.8347000000001075e-05, 3.8361000000000645e-05, 3.802800000000245e-05, 3.8512999999996966e-05, 3.7861000000000145e-05, 3.830600000000184e-05, 3.852799999999601e-05, 3.76659999999987e-05, 3.751399999999544e-05, 3.802800000000245e-05, 3.801399999999594e-05, 3.802799999999551e-05, 3.769399999999784e-05, 3.8513000000003905e-05, 3.769500000000425e-05, 3.770799999999741e-05, 3.76659999999987e-05, 3.802799999999551e-05, 3.767999999999827e-05, 3.81659999999992e-05, 3.7861000000000145e-05, 3.852800000000295e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.817999999999877e-05, 3.8347000000001075e-05, 3.8194999999997814e-05, 3.801399999999594e-05, 3.79859999999968e-05, 3.7874999999999714e-05, 3.852799999999601e-05, 3.751400000000238e-05, 3.82780000000027e-05, 3.784800000000005e-05, 3.804200000000202e-05, 3.802800000000245e-05, 3.8180999999998244e-05, 3.751400000000238e-05, 3.7847000000000575e-05, 3.805600000000159e-05, 3.834800000000055e-05, 3.823600000000399e-05, 3.8347000000001075e-05, 3.801400000000288e-05, 3.786199999999962e-05, 3.7680999999997744e-05, 3.801400000000288e-05, 3.819399999999834e-05, 3.802800000000245e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.654" endtime="20201029 18:15:27.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.642" endtime="20201029 18:15:27.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.671" endtime="20201029 18:15:27.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.665" endtime="20201029 18:15:27.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.663" endtime="20201029 18:15:27.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.173" endtime="20201029 18:15:27.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.172" endtime="20201029 18:15:27.697"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.720" endtime="20201029 18:15:27.737"></status>
</kw>
<msg timestamp="20201029 18:15:27.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.717" endtime="20201029 18:15:27.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.740" endtime="20201029 18:15:27.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.747" endtime="20201029 18:15:27.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.710" endtime="20201029 18:15:27.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.704" endtime="20201029 18:15:27.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.770" endtime="20201029 18:15:28.108"></status>
</kw>
<msg timestamp="20201029 18:15:28.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040925333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040970514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.767" endtime="20201029 18:15:28.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040925333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040970514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.118" endtime="20201029 18:15:28.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.137" endtime="20201029 18:15:28.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.760" endtime="20201029 18:15:28.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.755" endtime="20201029 18:15:28.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.154" level="INFO">${RESULT} = [{'diff': 4.5180999999998306e-05}, {'diff': 4.49860000000038e-05}, {'diff': 4.53060000000019e-05}, {'diff': 4.5333000000001566e-05}, {'diff': 4.44860000000033e-05}, {'diff': 4.499999999999643e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:28.145" endtime="20201029 18:15:28.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.165" level="INFO">${ACCURACY} = {'diff': [4.5180999999998306e-05, 4.49860000000038e-05, 4.53060000000019e-05, 4.5333000000001566e-05, 4.44860000000033e-05, 4.499999999999643e-05, 4.533299999999463e-05, 4.450000000000287e-05, 4.45700...</msg>
<status status="PASS" starttime="20201029 18:15:28.156" endtime="20201029 18:15:28.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.176" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.174" endtime="20201029 18:15:28.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.182" level="INFO">VALUE: [4.5180999999998306e-05, 4.49860000000038e-05, 4.53060000000019e-05, 4.5333000000001566e-05, 4.44860000000033e-05, 4.499999999999643e-05, 4.533299999999463e-05, 4.450000000000287e-05, 4.457000000000072e-05, 4.49860000000038e-05, 4.465200000000613e-05, 4.45139999999955e-05, 4.4638999999999096e-05, 4.473599999999661e-05, 4.5180999999998306e-05, 4.5333000000001566e-05, 4.451400000000244e-05, 4.4847000000000636e-05, 4.468000000000527e-05, 4.499999999999643e-05, 4.470799999999747e-05, 4.483400000000054e-05, 4.448599999999636e-05, 4.477700000000279e-05, 4.480500000000193e-05, 4.5152999999999166e-05, 4.4945000000004565e-05, 4.533400000000104e-05, 4.4681000000004745e-05, 4.5180999999998306e-05, 4.501299999999653e-05, 4.5347000000001136e-05, 4.449999999999593e-05, 4.466599999999876e-05, 4.5069000000001747e-05, 4.502800000000251e-05, 4.5347000000001136e-05, 4.534800000000061e-05, 4.4861000000000206e-05, 4.5166999999998736e-05, 4.5333000000001566e-05, 4.516599999999926e-05, 4.5347000000001136e-05, 4.4847000000000636e-05, 4.5013999999996e-05, 4.517999999999883e-05, 4.4847000000000636e-05, 4.5347000000001136e-05, 4.4874999999999776e-05, 4.530499999999549e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.178" endtime="20201029 18:15:28.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.167" endtime="20201029 18:15:28.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.194" endtime="20201029 18:15:28.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.190" endtime="20201029 18:15:28.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.187" endtime="20201029 18:15:28.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.699" endtime="20201029 18:15:28.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.698" endtime="20201029 18:15:28.219"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.242" endtime="20201029 18:15:28.260"></status>
</kw>
<msg timestamp="20201029 18:15:28.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.239" endtime="20201029 18:15:28.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.263" endtime="20201029 18:15:28.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.270" endtime="20201029 18:15:28.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.232" endtime="20201029 18:15:28.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.226" endtime="20201029 18:15:28.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.293" endtime="20201029 18:15:28.630"></status>
</kw>
<msg timestamp="20201029 18:15:28.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039872597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039921111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.290" endtime="20201029 18:15:28.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039872597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039921111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.640" endtime="20201029 18:15:28.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.658" endtime="20201029 18:15:28.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.283" endtime="20201029 18:15:28.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.278" endtime="20201029 18:15:28.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.680" level="INFO">${RESULT} = [{'diff': 4.85139999999995e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.836099999999677e-05}, {'diff': 4.929199999999939e-05}, {'diff': 4.8375000000003276e-05}, {'diff': 4.883299999999813e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:28.670" endtime="20201029 18:15:28.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.695" level="INFO">${ACCURACY} = {'diff': [4.85139999999995e-05, 4.845800000000122e-05, 4.836099999999677e-05, 4.929199999999939e-05, 4.8375000000003276e-05, 4.883299999999813e-05, 4.849999999999993e-05, 4.913899999999666e-05, 4.8819...</msg>
<status status="PASS" starttime="20201029 18:15:28.682" endtime="20201029 18:15:28.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.707" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.704" endtime="20201029 18:15:28.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.713" level="INFO">VALUE: [4.85139999999995e-05, 4.845800000000122e-05, 4.836099999999677e-05, 4.929199999999939e-05, 4.8375000000003276e-05, 4.883299999999813e-05, 4.849999999999993e-05, 4.913899999999666e-05, 4.88190000000055e-05, 4.856900000000525e-05, 4.879099999999942e-05, 4.93469999999982e-05, 4.862499999999659e-05, 4.8693999999994964e-05, 4.893099999999512e-05, 4.929199999999939e-05, 4.845800000000122e-05, 4.886100000000421e-05, 4.83469999999972e-05, 4.8415999999995574e-05, 4.911100000000446e-05, 4.845800000000122e-05, 4.902799999999957e-05, 4.844400000000165e-05, 4.880499999999899e-05, 4.929199999999939e-05, 4.9223000000001016e-05, 4.909700000000489e-05, 4.8679999999995394e-05, 4.899999999999349e-05, 4.859699999999745e-05, 4.868099999999487e-05, 4.926400000000025e-05, 4.920800000000197e-05, 4.9125000000004027e-05, 4.856899999999831e-05, 4.913899999999666e-05, 4.8415999999995574e-05, 4.8917000000002486e-05, 4.9195000000001876e-05, 4.898600000000086e-05, 4.909699999999795e-05, 4.902799999999957e-05, 4.925000000000068e-05, 4.911099999999752e-05, 4.837499999999634e-05, 4.8889000000003346e-05, 4.9014e-05, 4.906999999999828e-05, 4.9221999999994603e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.709" endtime="20201029 18:15:28.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.697" endtime="20201029 18:15:28.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.726" endtime="20201029 18:15:28.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.721" endtime="20201029 18:15:28.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.719" endtime="20201029 18:15:28.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.221" endtime="20201029 18:15:28.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.220" endtime="20201029 18:15:28.752"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.775" endtime="20201029 18:15:28.792"></status>
</kw>
<msg timestamp="20201029 18:15:28.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.771" endtime="20201029 18:15:28.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.796" endtime="20201029 18:15:28.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.802" endtime="20201029 18:15:28.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.764" endtime="20201029 18:15:28.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.758" endtime="20201029 18:15:28.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.826" endtime="20201029 18:15:29.168"></status>
</kw>
<msg timestamp="20201029 18:15:29.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040285111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040335097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.822" endtime="20201029 18:15:29.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040285111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040335097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.178" endtime="20201029 18:15:29.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.197" endtime="20201029 18:15:29.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.815" endtime="20201029 18:15:29.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.810" endtime="20201029 18:15:29.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.214" level="INFO">${RESULT} = [{'diff': 4.998600000000186e-05}, {'diff': 5.01940000000034e-05}, {'diff': 4.954199999999964e-05}, {'diff': 4.980599999999946e-05}, {'diff': 5.012499999999809e-05}, {'diff': 5.031900000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:29.205" endtime="20201029 18:15:29.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.224" level="INFO">${ACCURACY} = {'diff': [4.998600000000186e-05, 5.01940000000034e-05, 4.954199999999964e-05, 4.980599999999946e-05, 5.012499999999809e-05, 5.031900000000006e-05, 4.958299999999888e-05, 5.0153000000004166e-05, 4.9901...</msg>
<status status="PASS" starttime="20201029 18:15:29.216" endtime="20201029 18:15:29.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.235" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.232" endtime="20201029 18:15:29.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.240" level="INFO">VALUE: [4.998600000000186e-05, 5.01940000000034e-05, 4.954199999999964e-05, 4.980599999999946e-05, 5.012499999999809e-05, 5.031900000000006e-05, 4.958299999999888e-05, 5.0153000000004166e-05, 4.9901999999997504e-05, 5.009699999999895e-05, 4.977800000000032e-05, 4.952800000000007e-05, 4.972200000000204e-05, 5.025000000000168e-05, 5.022200000000254e-05, 4.938899999999691e-05, 4.986100000000521e-05, 4.9959000000002196e-05, 4.952800000000007e-05, 5.026400000000125e-05, 4.975000000000118e-05, 5.015299999999723e-05, 5.011099999999852e-05, 5.0223000000002016e-05, 5.012499999999809e-05, 4.9487000000000836e-05, 4.936100000000471e-05, 4.9625000000004527e-05, 4.959800000000486e-05, 4.950000000000093e-05, 5.0237000000001586e-05, 5.018099999999637e-05, 5.004200000000014e-05, 5.01940000000034e-05, 4.9707999999995534e-05, 5.018000000000383e-05, 5.027799999999388e-05, 4.9667000000003236e-05, 5.030500000000049e-05, 4.986099999999827e-05, 5.008399999999885e-05, 4.977800000000032e-05, 5.01669999999968e-05, 4.963899999999716e-05, 5.006999999999928e-05, 5.030599999999996e-05, 4.963899999999716e-05, 4.983400000000554e-05, 4.936099999999777e-05, 4.95140000000005e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.237" endtime="20201029 18:15:29.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.225" endtime="20201029 18:15:29.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.253" endtime="20201029 18:15:29.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.248" endtime="20201029 18:15:29.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.246" endtime="20201029 18:15:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.754" endtime="20201029 18:15:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.752" endtime="20201029 18:15:29.278"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.301" endtime="20201029 18:15:29.320"></status>
</kw>
<msg timestamp="20201029 18:15:29.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.297" endtime="20201029 18:15:29.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.324" endtime="20201029 18:15:29.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.330" endtime="20201029 18:15:29.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.290" endtime="20201029 18:15:29.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.284" endtime="20201029 18:15:29.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.354" endtime="20201029 18:15:29.693"></status>
</kw>
<msg timestamp="20201029 18:15:29.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041446931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041498194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.350" endtime="20201029 18:15:29.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041446931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041498194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.702" endtime="20201029 18:15:29.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.721" endtime="20201029 18:15:29.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.343" endtime="20201029 18:15:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.338" endtime="20201029 18:15:29.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.738" level="INFO">${RESULT} = [{'diff': 5.126300000000278e-05}, {'diff': 5.0651999999998254e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.076300000000228e-05}, {'diff': 5.129199999999445e-05}, {'diff': 5.052800000000107e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:29.729" endtime="20201029 18:15:29.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.748" level="INFO">${ACCURACY} = {'diff': [5.126300000000278e-05, 5.0651999999998254e-05, 5.112499999999909e-05, 5.076300000000228e-05, 5.129199999999445e-05, 5.052800000000107e-05, 5.074999999999524e-05, 5.061099999999902e-05, 5.038...</msg>
<status status="PASS" starttime="20201029 18:15:29.740" endtime="20201029 18:15:29.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.759" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.757" endtime="20201029 18:15:29.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.765" level="INFO">VALUE: [5.126300000000278e-05, 5.0651999999998254e-05, 5.112499999999909e-05, 5.076300000000228e-05, 5.129199999999445e-05, 5.052800000000107e-05, 5.074999999999524e-05, 5.061099999999902e-05, 5.038899999999791e-05, 5.112499999999909e-05, 5.0735999999995673e-05, 5.115299999999823e-05, 5.131900000000106e-05, 5.109699999999995e-05, 5.1221999999996604e-05, 5.115299999999823e-05, 5.086099999999927e-05, 5.1165999999998324e-05, 5.083300000000013e-05, 5.077800000000132e-05, 5.123600000000311e-05, 5.063899999999816e-05, 5.1193999999997464e-05, 5.036099999999877e-05, 5.1207999999997034e-05, 5.0721999999996104e-05, 5.0429999999997144e-05, 5.063899999999816e-05, 5.083300000000013e-05, 5.102699999999516e-05, 5.10270000000021e-05, 5.044400000000365e-05, 5.0403000000004416e-05, 5.133300000000063e-05, 5.0417000000003986e-05, 5.113899999999866e-05, 5.108300000000038e-05, 5.072200000000304e-05, 5.108300000000038e-05, 5.037499999999834e-05, 5.06669999999973e-05, 5.125000000000268e-05, 5.036099999999877e-05, 5.052699999999466e-05, 5.0945000000003626e-05, 5.072200000000304e-05, 5.058299999999988e-05, 5.0665999999997824e-05, 5.109699999999995e-05, 5.05140000000015e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.762" endtime="20201029 18:15:29.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.750" endtime="20201029 18:15:29.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.780" endtime="20201029 18:15:29.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.774" endtime="20201029 18:15:29.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.772" endtime="20201029 18:15:29.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.280" endtime="20201029 18:15:29.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.279" endtime="20201029 18:15:29.805"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.829" endtime="20201029 18:15:29.847"></status>
</kw>
<msg timestamp="20201029 18:15:29.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.825" endtime="20201029 18:15:29.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.850" endtime="20201029 18:15:29.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.856" endtime="20201029 18:15:29.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.818" endtime="20201029 18:15:29.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.812" endtime="20201029 18:15:29.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.880" endtime="20201029 18:15:30.219"></status>
</kw>
<msg timestamp="20201029 18:15:30.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040184625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040236708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.877" endtime="20201029 18:15:30.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040184625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040236708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.228" endtime="20201029 18:15:30.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.247" endtime="20201029 18:15:30.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.869" endtime="20201029 18:15:30.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.865" endtime="20201029 18:15:30.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.264" level="INFO">${RESULT} = [{'diff': 5.208300000000138e-05}, {'diff': 5.140299999999848e-05}, {'diff': 5.176299999999634e-05}, {'diff': 5.208300000000138e-05}, {'diff': 5.180600000000146e-05}, {'diff': 5.236099999999383e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:30.256" endtime="20201029 18:15:30.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.275" level="INFO">${ACCURACY} = {'diff': [5.208300000000138e-05, 5.140299999999848e-05, 5.176299999999634e-05, 5.208300000000138e-05, 5.180600000000146e-05, 5.236099999999383e-05, 5.175000000000318e-05, 5.187499999999984e-05, 5.1472...</msg>
<status status="PASS" starttime="20201029 18:15:30.267" endtime="20201029 18:15:30.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.286" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.284" endtime="20201029 18:15:30.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.292" level="INFO">VALUE: [5.208300000000138e-05, 5.140299999999848e-05, 5.176299999999634e-05, 5.208300000000138e-05, 5.180600000000146e-05, 5.236099999999383e-05, 5.175000000000318e-05, 5.187499999999984e-05, 5.147200000000379e-05, 5.175000000000318e-05, 5.147200000000379e-05, 5.236100000000077e-05, 5.183299999999419e-05, 5.202699999999616e-05, 5.205500000000224e-05, 5.211199999999999e-05, 5.159799999999992e-05, 5.186100000000027e-05, 5.212500000000009e-05, 5.137499999999934e-05, 5.1957999999997784e-05, 5.230600000000196e-05, 5.145800000000422e-05, 5.2193999999998464e-05, 5.233300000000163e-05, 5.1457999999997284e-05, 5.156900000000131e-05, 5.162499999999959e-05, 5.215299999999923e-05, 5.212500000000009e-05, 5.201399999999606e-05, 5.1695000000004376e-05, 5.205599999999477e-05, 5.197200000000429e-05, 5.155600000000121e-05, 5.186100000000027e-05, 5.193099999999812e-05, 5.136099999999977e-05, 5.152799999999513e-05, 5.183300000000113e-05, 5.176400000000275e-05, 5.197200000000429e-05, 5.176400000000275e-05, 5.233299999999469e-05, 5.1417000000004986e-05, 5.2263999999996313e-05, 5.223600000000411e-05, 5.2207999999998034e-05, 5.1985999999996924e-05, 5.136099999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.289" endtime="20201029 18:15:30.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.277" endtime="20201029 18:15:30.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.304" endtime="20201029 18:15:30.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.300" endtime="20201029 18:15:30.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.298" endtime="20201029 18:15:30.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.808" endtime="20201029 18:15:30.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.806" endtime="20201029 18:15:30.330"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.352" endtime="20201029 18:15:30.370"></status>
</kw>
<msg timestamp="20201029 18:15:30.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.349" endtime="20201029 18:15:30.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.373" endtime="20201029 18:15:30.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.380" endtime="20201029 18:15:30.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.342" endtime="20201029 18:15:30.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.336" endtime="20201029 18:15:30.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.403" endtime="20201029 18:15:30.743"></status>
</kw>
<msg timestamp="20201029 18:15:30.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039713389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039766417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.400" endtime="20201029 18:15:30.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039713389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039766417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.752" endtime="20201029 18:15:30.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.771" endtime="20201029 18:15:30.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.393" endtime="20201029 18:15:30.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.388" endtime="20201029 18:15:30.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.790" level="INFO">${RESULT} = [{'diff': 5.302799999999663e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.294499999999869e-05}, {'diff': 5.283300000000213e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.236100000000077e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:30.780" endtime="20201029 18:15:30.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.801" level="INFO">${ACCURACY} = {'diff': [5.302799999999663e-05, 5.240299999999948e-05, 5.294499999999869e-05, 5.283300000000213e-05, 5.26669999999993e-05, 5.236100000000077e-05, 5.247200000000479e-05, 5.311100000000152e-05, 5.28469...</msg>
<status status="PASS" starttime="20201029 18:15:30.792" endtime="20201029 18:15:30.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.813" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.810" endtime="20201029 18:15:30.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.818" level="INFO">VALUE: [5.302799999999663e-05, 5.240299999999948e-05, 5.294499999999869e-05, 5.283300000000213e-05, 5.26669999999993e-05, 5.236100000000077e-05, 5.247200000000479e-05, 5.311100000000152e-05, 5.284699999999476e-05, 5.233300000000163e-05, 5.2499999999996994e-05, 5.2985999999997924e-05, 5.331900000000306e-05, 5.329200000000339e-05, 5.315300000000023e-05, 5.334800000000167e-05, 5.2916000000000074e-05, 5.2959000000005196e-05, 5.279200000000289e-05, 5.304200000000314e-05, 5.25140000000035e-05, 5.2499999999996994e-05, 5.306999999999534e-05, 5.2693999999998964e-05, 5.2457999999998284e-05, 5.313900000000066e-05, 5.2985999999997924e-05, 5.277699999999691e-05, 5.251300000000403e-05, 5.2916000000000074e-05, 5.327699999999741e-05, 5.288900000000041e-05, 5.332000000000253e-05, 5.29869999999974e-05, 5.276400000000375e-05, 5.252699999999666e-05, 5.31669999999998e-05, 5.2388000000000434e-05, 5.277799999999638e-05, 5.305600000000271e-05, 5.270899999999801e-05, 5.257000000000178e-05, 5.248600000000436e-05, 5.312500000000109e-05, 5.302800000000357e-05, 5.262500000000059e-05, 5.28470000000017e-05, 5.236100000000077e-05, 5.313900000000066e-05, 5.33470000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.815" endtime="20201029 18:15:30.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.803" endtime="20201029 18:15:30.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.831" endtime="20201029 18:15:30.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.827" endtime="20201029 18:15:30.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.824" endtime="20201029 18:15:30.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.332" endtime="20201029 18:15:30.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.330" endtime="20201029 18:15:30.856"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.879" endtime="20201029 18:15:30.897"></status>
</kw>
<msg timestamp="20201029 18:15:30.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.876" endtime="20201029 18:15:30.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.901" endtime="20201029 18:15:30.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.907" endtime="20201029 18:15:30.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.869" endtime="20201029 18:15:30.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.863" endtime="20201029 18:15:30.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.931" endtime="20201029 18:15:31.271"></status>
</kw>
<msg timestamp="20201029 18:15:31.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040114042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040167972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.927" endtime="20201029 18:15:31.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040114042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040167972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.280" endtime="20201029 18:15:31.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.299" endtime="20201029 18:15:31.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.920" endtime="20201029 18:15:31.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.915" endtime="20201029 18:15:31.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.316" level="INFO">${RESULT} = [{'diff': 5.3930000000000644e-05}, {'diff': 5.361100000000202e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.406900000000381e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.361100000000202e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:31.308" endtime="20201029 18:15:31.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.326" level="INFO">${ACCURACY} = {'diff': [5.3930000000000644e-05, 5.361100000000202e-05, 5.393100000000012e-05, 5.406900000000381e-05, 5.4013999999998064e-05, 5.361100000000202e-05, 5.361100000000202e-05, 5.358299999999594e-05, 5.41...</msg>
<status status="PASS" starttime="20201029 18:15:31.319" endtime="20201029 18:15:31.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.337" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.335" endtime="20201029 18:15:31.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.342" level="INFO">VALUE: [5.3930000000000644e-05, 5.361100000000202e-05, 5.393100000000012e-05, 5.406900000000381e-05, 5.4013999999998064e-05, 5.361100000000202e-05, 5.361100000000202e-05, 5.358299999999594e-05, 5.412499999999515e-05, 5.3985999999998924e-05, 5.3693999999999964e-05, 5.401299999999859e-05, 5.3471999999998854e-05, 5.3443999999999714e-05, 5.427700000000535e-05, 5.4235999999999174e-05, 5.409700000000295e-05, 5.4277999999997883e-05, 5.3499999999997994e-05, 5.43470000000032e-05, 5.432000000000353e-05, 5.3945000000006627e-05, 5.422299999999908e-05, 5.337500000000134e-05, 5.3527999999997133e-05, 5.4277999999997883e-05, 5.351300000000503e-05, 5.411200000000199e-05, 5.4277999999997883e-05, 5.3957999999999784e-05, 5.4013999999998064e-05, 5.361099999999508e-05, 5.3959000000006196e-05, 5.3749999999998244e-05, 5.341700000000005e-05, 5.36670000000003e-05, 5.3527999999997133e-05, 5.354200000000364e-05, 5.3513999999997564e-05, 5.393100000000012e-05, 5.407000000000328e-05, 5.340300000000048e-05, 5.43340000000031e-05, 5.3721999999999104e-05, 5.413900000000166e-05, 5.381900000000356e-05, 5.386100000000227e-05, 5.4194000000000464e-05, 5.408300000000338e-05, 5.363900000000116e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.339" endtime="20201029 18:15:31.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.328" endtime="20201029 18:15:31.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.355" endtime="20201029 18:15:31.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.351" endtime="20201029 18:15:31.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.348" endtime="20201029 18:15:31.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.858" endtime="20201029 18:15:31.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.857" endtime="20201029 18:15:31.380"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.403" endtime="20201029 18:15:31.422"></status>
</kw>
<msg timestamp="20201029 18:15:31.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.400" endtime="20201029 18:15:31.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.426" endtime="20201029 18:15:31.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.432" endtime="20201029 18:15:31.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.393" endtime="20201029 18:15:31.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.387" endtime="20201029 18:15:31.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.456" endtime="20201029 18:15:31.797"></status>
</kw>
<msg timestamp="20201029 18:15:31.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041397431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041451847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.453" endtime="20201029 18:15:31.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041397431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041451847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.806" endtime="20201029 18:15:31.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.826" endtime="20201029 18:15:31.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.445" endtime="20201029 18:15:31.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.440" endtime="20201029 18:15:31.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.844" level="INFO">${RESULT} = [{'diff': 5.4416000000001574e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.441699999999411e-05}, {'diff': 5.486100000000327e-05}, {'diff': 5.529200000000539e-05}, {'diff': 5.4485999999999424e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:31.835" endtime="20201029 18:15:31.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.854" level="INFO">${ACCURACY} = {'diff': [5.4416000000001574e-05, 5.4735999999999674e-05, 5.441699999999411e-05, 5.486100000000327e-05, 5.529200000000539e-05, 5.4485999999999424e-05, 5.4527999999998134e-05, 5.4999999999999494e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:15:31.846" endtime="20201029 18:15:31.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.865" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.863" endtime="20201029 18:15:31.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.870" level="INFO">VALUE: [5.4416000000001574e-05, 5.4735999999999674e-05, 5.441699999999411e-05, 5.486100000000327e-05, 5.529200000000539e-05, 5.4485999999999424e-05, 5.4527999999998134e-05, 5.4999999999999494e-05, 5.5027999999998634e-05, 5.5277999999998884e-05, 5.493100000000112e-05, 5.5041999999998203e-05, 5.4485999999999424e-05, 5.5013999999999064e-05, 5.484699999999676e-05, 5.5208000000001034e-05, 5.469500000000044e-05, 5.481900000000456e-05, 5.436100000000277e-05, 5.484699999999676e-05, 5.4763999999998814e-05, 5.48470000000037e-05, 5.5236000000000174e-05, 5.438900000000191e-05, 5.4777999999998384e-05, 5.4749999999999244e-05, 5.463900000000216e-05, 5.455600000000421e-05, 5.441700000000105e-05, 5.440300000000148e-05, 5.4985999999999924e-05, 5.488900000000241e-05, 5.5249999999999744e-05, 5.5027999999998634e-05, 5.518099999999443e-05, 5.534800000000367e-05, 5.4958000000000784e-05, 5.457000000000378e-05, 5.461100000000302e-05, 5.4708000000000534e-05, 5.4401999999995065e-05, 5.515299999999529e-05, 5.463900000000216e-05, 5.443100000000062e-05, 5.5249999999999744e-05, 5.4735999999999674e-05, 5.461099999999608e-05, 5.4708000000000534e-05, 5.509799999999648e-05, 5.50549999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.867" endtime="20201029 18:15:31.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.856" endtime="20201029 18:15:31.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.885" endtime="20201029 18:15:31.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.879" endtime="20201029 18:15:31.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.876" endtime="20201029 18:15:31.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.382" endtime="20201029 18:15:31.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.381" endtime="20201029 18:15:31.910"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.933" endtime="20201029 18:15:31.951"></status>
</kw>
<msg timestamp="20201029 18:15:31.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.930" endtime="20201029 18:15:31.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.954" endtime="20201029 18:15:31.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.961" endtime="20201029 18:15:31.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.922" endtime="20201029 18:15:31.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.916" endtime="20201029 18:15:31.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.984" endtime="20201029 18:15:32.324"></status>
</kw>
<msg timestamp="20201029 18:15:32.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039993444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04004975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:31.981" endtime="20201029 18:15:32.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039993444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04004975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:32.333" endtime="20201029 18:15:32.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.352" endtime="20201029 18:15:32.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.974" endtime="20201029 18:15:32.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.969" endtime="20201029 18:15:32.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.369" level="INFO">${RESULT} = [{'diff': 5.6305999999999023e-05}, {'diff': 5.543100000000162e-05}, {'diff': 5.6194999999995e-05}, {'diff': 5.586100000000427e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.619500000000194e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:32.360" endtime="20201029 18:15:32.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.380" level="INFO">${ACCURACY} = {'diff': [5.6305999999999023e-05, 5.543100000000162e-05, 5.6194999999995e-05, 5.586100000000427e-05, 5.5486000000000424e-05, 5.619500000000194e-05, 5.633399999999816e-05, 5.5694000000001964e-05, 5.558...</msg>
<status status="PASS" starttime="20201029 18:15:32.371" endtime="20201029 18:15:32.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.391" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.389" endtime="20201029 18:15:32.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.396" level="INFO">VALUE: [5.6305999999999023e-05, 5.543100000000162e-05, 5.6194999999995e-05, 5.586100000000427e-05, 5.5486000000000424e-05, 5.619500000000194e-05, 5.633399999999816e-05, 5.5694000000001964e-05, 5.558299999999794e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.5401999999996066e-05, 5.611200000000399e-05, 5.583399999999766e-05, 5.58470000000047e-05, 5.6221999999994665e-05, 5.591700000000255e-05, 5.5930000000002644e-05, 5.6194000000002464e-05, 5.583299999999819e-05, 5.588899999999647e-05, 5.540300000000248e-05, 5.6000000000000494e-05, 5.6250000000000744e-05, 5.568100000000187e-05, 5.6264000000000314e-05, 5.602700000000016e-05, 5.6250000000000744e-05, 5.6055999999998773e-05, 5.615300000000323e-05, 5.543099999999468e-05, 5.541700000000205e-05, 5.561100000000402e-05, 5.581899999999862e-05, 5.55549999999988e-05, 5.609700000000495e-05, 5.533299999999769e-05, 5.5777999999999384e-05, 5.5930000000002644e-05, 5.565300000000273e-05, 5.607000000000528e-05, 5.5944000000002214e-05, 5.6264000000000314e-05, 5.5666000000002824e-05, 5.58340000000046e-05, 5.577800000000632e-05, 5.590300000000298e-05, 5.5499999999999994e-05, 5.537500000000334e-05, 5.5929999999995705e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.393" endtime="20201029 18:15:32.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.382" endtime="20201029 18:15:32.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.409" endtime="20201029 18:15:32.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.405" endtime="20201029 18:15:32.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.402" endtime="20201029 18:15:32.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.912" endtime="20201029 18:15:32.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.911" endtime="20201029 18:15:32.434"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.457" endtime="20201029 18:15:32.475"></status>
</kw>
<msg timestamp="20201029 18:15:32.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.454" endtime="20201029 18:15:32.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.479" endtime="20201029 18:15:32.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.485" endtime="20201029 18:15:32.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.447" endtime="20201029 18:15:32.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.441" endtime="20201029 18:15:32.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.509" endtime="20201029 18:15:32.846"></status>
</kw>
<msg timestamp="20201029 18:15:32.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039841556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039898222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.506" endtime="20201029 18:15:32.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039841556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039898222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.855" endtime="20201029 18:15:32.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.874" endtime="20201029 18:15:32.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.498" endtime="20201029 18:15:32.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.493" endtime="20201029 18:15:32.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.892" level="INFO">${RESULT} = [{'diff': 5.6665999999996886e-05}, {'diff': 5.691700000000355e-05}, {'diff': 5.6401999999997066e-05}, {'diff': 5.6764000000000814e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.636100000000477e-05...</msg>
<status status="PASS" starttime="20201029 18:15:32.883" endtime="20201029 18:15:32.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.903" level="INFO">${ACCURACY} = {'diff': [5.6665999999996886e-05, 5.691700000000355e-05, 5.6401999999997066e-05, 5.6764000000000814e-05, 5.6486000000001424e-05, 5.636100000000477e-05, 5.733299999999969e-05, 5.709699999999901e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:32.894" endtime="20201029 18:15:32.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.914" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.912" endtime="20201029 18:15:32.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.920" level="INFO">VALUE: [5.6665999999996886e-05, 5.691700000000355e-05, 5.6401999999997066e-05, 5.6764000000000814e-05, 5.6486000000001424e-05, 5.636100000000477e-05, 5.733299999999969e-05, 5.709699999999901e-05, 5.65549999999998e-05, 5.688900000000441e-05, 5.651300000000109e-05, 5.6500000000000994e-05, 5.711099999999858e-05, 5.63470000000052e-05, 5.6887999999997996e-05, 5.7028000000000634e-05, 5.697299999999489e-05, 5.641699999999611e-05, 5.66670000000033e-05, 5.6679999999996455e-05, 5.709699999999901e-05, 5.7194000000003464e-05, 5.7278000000000884e-05, 5.7306000000000024e-05, 5.712499999999815e-05, 5.6486000000001424e-05, 5.71670000000038e-05, 5.722300000000208e-05, 5.693100000000312e-05, 5.7278000000000884e-05, 5.6555999999999274e-05, 5.713899999999772e-05, 5.7319999999999593e-05, 5.6500000000000994e-05, 5.6805999999999524e-05, 5.70550000000003e-05, 5.6541999999999704e-05, 5.6486000000001424e-05, 5.7222000000002604e-05, 5.7235999999995235e-05, 5.6721999999995165e-05, 5.727699999999447e-05, 5.6929999999996705e-05, 5.6486000000001424e-05, 5.6972000000002354e-05, 5.6429999999996205e-05, 5.661099999999808e-05, 5.682000000000603e-05, 5.672300000000158e-05, 5.68749999999979e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.917" endtime="20201029 18:15:32.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.905" endtime="20201029 18:15:32.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.933" endtime="20201029 18:15:32.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.928" endtime="20201029 18:15:32.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.926" endtime="20201029 18:15:32.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.437" endtime="20201029 18:15:32.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.435" endtime="20201029 18:15:32.958"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.981" endtime="20201029 18:15:32.999"></status>
</kw>
<msg timestamp="20201029 18:15:33.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.978" endtime="20201029 18:15:33.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.003" endtime="20201029 18:15:33.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.009" endtime="20201029 18:15:33.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.970" endtime="20201029 18:15:33.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.965" endtime="20201029 18:15:33.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.033" endtime="20201029 18:15:33.373"></status>
</kw>
<msg timestamp="20201029 18:15:33.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040167403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.029" endtime="20201029 18:15:33.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040167403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040225222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.382" endtime="20201029 18:15:33.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.401" endtime="20201029 18:15:33.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.022" endtime="20201029 18:15:33.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.017" endtime="20201029 18:15:33.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.418" level="INFO">${RESULT} = [{'diff': 5.781900000000062e-05}, {'diff': 5.7443999999996775e-05}, {'diff': 5.741700000000405e-05}, {'diff': 5.7514000000001564e-05}, {'diff': 5.8194999999997e-05}, {'diff': 5.8013999999995125e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:33.410" endtime="20201029 18:15:33.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.428" level="INFO">${ACCURACY} = {'diff': [5.781900000000062e-05, 5.7443999999996775e-05, 5.741700000000405e-05, 5.7514000000001564e-05, 5.8194999999997e-05, 5.8013999999995125e-05, 5.790300000000498e-05, 5.747299999999539e-05, 5.763...</msg>
<status status="PASS" starttime="20201029 18:15:33.421" endtime="20201029 18:15:33.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.439" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.437" endtime="20201029 18:15:33.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.445" level="INFO">VALUE: [5.781900000000062e-05, 5.7443999999996775e-05, 5.741700000000405e-05, 5.7514000000001564e-05, 5.8194999999997e-05, 5.8013999999995125e-05, 5.790300000000498e-05, 5.747299999999539e-05, 5.7637999999998746e-05, 5.823700000000265e-05, 5.790299999999804e-05, 5.7542000000000704e-05, 5.7387999999998496e-05, 5.804100000000173e-05, 5.8137999999999246e-05, 5.7444000000003714e-05, 5.7916000000005075e-05, 5.8250000000002744e-05, 5.761099999999908e-05, 5.759799999999898e-05, 5.8028000000001634e-05, 5.8263999999995375e-05, 5.8249999999995805e-05, 5.831900000000112e-05, 5.8165999999998386e-05, 5.8207999999997095e-05, 5.8277999999994945e-05, 5.784699999999976e-05, 5.83619999999993e-05, 5.788899999999847e-05, 5.8207999999997095e-05, 5.801300000000259e-05, 5.754100000000123e-05, 5.754099999999429e-05, 5.8222000000003604e-05, 5.8179999999997956e-05, 5.7735999999995735e-05, 5.815299999999829e-05, 5.7528000000001134e-05, 5.752700000000166e-05, 5.745900000000276e-05, 5.7736000000002674e-05, 5.733299999999969e-05, 5.790299999999804e-05, 5.813899999999872e-05, 5.791700000000455e-05, 5.7499999999995055e-05, 5.8249999999995805e-05, 5.816699999999786e-05, 5.7806000000000524e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.441" endtime="20201029 18:15:33.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.430" endtime="20201029 18:15:33.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.457" endtime="20201029 18:15:33.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.453" endtime="20201029 18:15:33.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.450" endtime="20201029 18:15:33.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.960" endtime="20201029 18:15:33.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.959" endtime="20201029 18:15:33.482"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.505" endtime="20201029 18:15:33.529"></status>
</kw>
<msg timestamp="20201029 18:15:33.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.502" endtime="20201029 18:15:33.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.533" endtime="20201029 18:15:33.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.539" endtime="20201029 18:15:33.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.495" endtime="20201029 18:15:33.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.489" endtime="20201029 18:15:33.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.563" endtime="20201029 18:15:33.905"></status>
</kw>
<msg timestamp="20201029 18:15:33.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045689903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.559" endtime="20201029 18:15:33.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045689903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.915" endtime="20201029 18:15:33.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.934" endtime="20201029 18:15:33.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.552" endtime="20201029 18:15:33.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.547" endtime="20201029 18:15:33.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.952" level="INFO">${RESULT} = [{'diff': 5.888899999999947e-05}, {'diff': 5.8556000000001274e-05}, {'diff': 5.870899999999707e-05}, {'diff': 5.8943999999998276e-05}, {'diff': 5.8415999999998636e-05}, {'diff': 5.9263999999996375e-05...</msg>
<status status="PASS" starttime="20201029 18:15:33.943" endtime="20201029 18:15:33.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.962" level="INFO">${ACCURACY} = {'diff': [5.888899999999947e-05, 5.8556000000001274e-05, 5.870899999999707e-05, 5.8943999999998276e-05, 5.8415999999998636e-05, 5.9263999999996375e-05, 5.8570000000000844e-05, 5.8499999999996055e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:33.954" endtime="20201029 18:15:33.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.973" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.971" endtime="20201029 18:15:33.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.978" level="INFO">VALUE: [5.888899999999947e-05, 5.8556000000001274e-05, 5.870899999999707e-05, 5.8943999999998276e-05, 5.8415999999998636e-05, 5.9263999999996375e-05, 5.8570000000000844e-05, 5.8499999999996055e-05, 5.8401999999999066e-05, 5.9221999999997665e-05, 5.8707999999997595e-05, 5.891700000000555e-05, 5.902700000000316e-05, 5.8763999999995875e-05, 5.8972000000004354e-05, 5.9013999999996125e-05, 5.841699999999811e-05, 5.8457999999997345e-05, 5.8693999999998026e-05, 5.8693999999998026e-05, 5.843099999999768e-05, 5.9292000000002454e-05, 5.9347999999993795e-05, 5.863899999999922e-05, 5.911100000000058e-05, 5.8735999999996735e-05, 5.8820000000001094e-05, 5.940300000000648e-05, 5.858300000000094e-05, 5.8750000000003244e-05, 5.8820000000001094e-05, 5.8764000000002814e-05, 5.926300000000384e-05, 5.931900000000212e-05, 5.8957999999997845e-05, 5.9263999999996375e-05, 5.8834000000000664e-05, 5.8999999999996555e-05, 5.8999999999996555e-05, 5.840299999999854e-05, 5.884700000000076e-05, 5.9014000000003064e-05, 5.83749999999994e-05, 5.8542000000001704e-05, 5.888899999999947e-05, 5.861100000000008e-05, 5.9000000000003494e-05, 5.922300000000408e-05, 5.933300000000169e-05, 5.8985999999996985e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.975" endtime="20201029 18:15:33.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.964" endtime="20201029 18:15:33.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.997" endtime="20201029 18:15:34.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.991" endtime="20201029 18:15:34.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.988" endtime="20201029 18:15:34.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.484" endtime="20201029 18:15:34.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.483" endtime="20201029 18:15:34.022"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.045" endtime="20201029 18:15:34.063"></status>
</kw>
<msg timestamp="20201029 18:15:34.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.042" endtime="20201029 18:15:34.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.067" endtime="20201029 18:15:34.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.073" endtime="20201029 18:15:34.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.034" endtime="20201029 18:15:34.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.028" endtime="20201029 18:15:34.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.096" endtime="20201029 18:15:34.435"></status>
</kw>
<msg timestamp="20201029 18:15:34.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040207597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040267431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.093" endtime="20201029 18:15:34.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040207597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040267431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.445" endtime="20201029 18:15:34.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.464" endtime="20201029 18:15:34.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.086" endtime="20201029 18:15:34.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.081" endtime="20201029 18:15:34.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.481" level="INFO">${RESULT} = [{'diff': 5.9834000000001664e-05}, {'diff': 5.9862000000000803e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.9985999999997985e-05}, {'diff': 5.956899999999543e-05}, {'diff': 5.940299999999954e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:34.472" endtime="20201029 18:15:34.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.492" level="INFO">${ACCURACY} = {'diff': [5.9834000000001664e-05, 5.9862000000000803e-05, 5.93750000000004e-05, 5.9985999999997985e-05, 5.956899999999543e-05, 5.940299999999954e-05, 5.9665999999999886e-05, 5.9749999999997305e-05, 6....</msg>
<status status="PASS" starttime="20201029 18:15:34.483" endtime="20201029 18:15:34.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.503" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.501" endtime="20201029 18:15:34.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.508" level="INFO">VALUE: [5.9834000000001664e-05, 5.9862000000000803e-05, 5.93750000000004e-05, 5.9985999999997985e-05, 5.956899999999543e-05, 5.940299999999954e-05, 5.9665999999999886e-05, 5.9749999999997305e-05, 6.020899999999857e-05, 5.9999999999997555e-05, 5.9652000000000316e-05, 5.9347999999993795e-05, 5.9513999999996625e-05, 5.9527999999996195e-05, 5.997299999999789e-05, 5.9665999999999886e-05, 6.033299999999575e-05, 5.9415999999999636e-05, 5.9693999999999026e-05, 5.936100000000083e-05, 6.0041999999996265e-05, 6.0194999999999e-05, 5.9778000000003384e-05, 6.0070000000002344e-05, 6.0319999999995655e-05, 6.004099999999679e-05, 5.988900000000047e-05, 6.008300000000244e-05, 6.015300000000029e-05, 5.995900000000526e-05, 5.988900000000047e-05, 6.0207999999999096e-05, 5.9749999999997305e-05, 6.0056000000002774e-05, 6.0236000000005174e-05, 5.9556000000002274e-05, 5.988900000000047e-05, 5.959700000000151e-05, 5.986099999999439e-05, 5.9985999999997985e-05, 6.0056000000002774e-05, 6.029100000000398e-05, 6.0166000000000386e-05, 6.00550000000033e-05, 5.9749999999997305e-05, 6.0193999999999526e-05, 6.033300000000269e-05, 6.0179999999999956e-05, 6.015299999999335e-05, 5.993099999999918e-05]</msg>
<status status="PASS" starttime="20201029 18:15:34.505" endtime="20201029 18:15:34.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.494" endtime="20201029 18:15:34.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.521" endtime="20201029 18:15:34.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.517" endtime="20201029 18:15:34.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.514" endtime="20201029 18:15:34.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.024" endtime="20201029 18:15:34.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.023" endtime="20201029 18:15:34.546"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.569" endtime="20201029 18:15:34.587"></status>
</kw>
<msg timestamp="20201029 18:15:34.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.566" endtime="20201029 18:15:34.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.591" endtime="20201029 18:15:34.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.597" endtime="20201029 18:15:34.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.559" endtime="20201029 18:15:34.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.553" endtime="20201029 18:15:34.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.621" endtime="20201029 18:15:34.964"></status>
</kw>
<msg timestamp="20201029 18:15:34.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039874889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.617" endtime="20201029 18:15:34.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039874889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.973" endtime="20201029 18:15:34.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.992" endtime="20201029 18:15:34.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.610" endtime="20201029 18:15:34.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.605" endtime="20201029 18:15:34.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.010" level="INFO">${RESULT} = [{'diff': 6.112499999999521e-05}, {'diff': 6.091700000000061e-05}, {'diff': 6.065300000000079e-05}, {'diff': 6.129199999999752e-05}, {'diff': 6.12220000000066e-05}, {'diff': 6.094499999999975e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:35.001" endtime="20201029 18:15:35.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.021" level="INFO">${ACCURACY} = {'diff': [6.112499999999521e-05, 6.091700000000061e-05, 6.065300000000079e-05, 6.129199999999752e-05, 6.12220000000066e-05, 6.094499999999975e-05, 6.056899999999643e-05, 6.131999999999665e-05, 6.09719...</msg>
<status status="PASS" starttime="20201029 18:15:35.012" endtime="20201029 18:15:35.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.032" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.030" endtime="20201029 18:15:35.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.038" level="INFO">VALUE: [6.112499999999521e-05, 6.091700000000061e-05, 6.065300000000079e-05, 6.129199999999752e-05, 6.12220000000066e-05, 6.094499999999975e-05, 6.056899999999643e-05, 6.131999999999665e-05, 6.0971999999999416e-05, 6.119399999999359e-05, 6.115200000000182e-05, 6.0805999999996585e-05, 6.131899999999718e-05, 6.056899999999643e-05, 6.133299999999675e-05, 6.12499999999988e-05, 6.122299999999914e-05, 6.0458000000006284e-05, 6.1195e-05, 6.0527999999997195e-05, 6.063900000000122e-05, 6.086100000000233e-05, 6.101300000000559e-05, 6.106900000000387e-05, 6.111100000000258e-05, 6.0763999999997875e-05, 6.088900000000147e-05, 6.116700000000086e-05, 6.06949999999995e-05, 6.0472000000005854e-05, 6.063900000000122e-05, 6.123600000000617e-05, 6.0834000000002664e-05, 6.0707999999999596e-05, 6.052699999999772e-05, 6.0999999999998555e-05, 6.038900000000097e-05, 6.1013999999998125e-05, 6.1195e-05, 6.13750000000024e-05, 6.068099999999993e-05, 6.0985999999998985e-05, 6.062500000000165e-05, 6.0499999999998055e-05, 6.106900000000387e-05, 6.0749999999998305e-05, 6.0735999999998735e-05, 6.1028000000004634e-05, 6.0485999999998485e-05, 6.03750000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.034" endtime="20201029 18:15:35.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.023" endtime="20201029 18:15:35.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.050" endtime="20201029 18:15:35.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.046" endtime="20201029 18:15:35.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.044" endtime="20201029 18:15:35.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.549" endtime="20201029 18:15:35.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.547" endtime="20201029 18:15:35.076"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.098" endtime="20201029 18:15:35.117"></status>
</kw>
<msg timestamp="20201029 18:15:35.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.095" endtime="20201029 18:15:35.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.120" endtime="20201029 18:15:35.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.127" endtime="20201029 18:15:35.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.088" endtime="20201029 18:15:35.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.082" endtime="20201029 18:15:35.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.150" endtime="20201029 18:15:35.490"></status>
</kw>
<msg timestamp="20201029 18:15:35.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039846472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039908806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.147" endtime="20201029 18:15:35.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039846472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039908806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.500" endtime="20201029 18:15:35.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.519" endtime="20201029 18:15:35.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.140" endtime="20201029 18:15:35.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.135" endtime="20201029 18:15:35.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.536" level="INFO">${RESULT} = [{'diff': 6.233399999999722e-05}, {'diff': 6.190200000000257e-05}, {'diff': 6.177800000000538e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.158400000000341e-05}, {'diff': 6.17080000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:35.527" endtime="20201029 18:15:35.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.546" level="INFO">${ACCURACY} = {'diff': [6.233399999999722e-05, 6.190200000000257e-05, 6.177800000000538e-05, 6.201399999999913e-05, 6.158400000000341e-05, 6.17080000000006e-05, 6.168100000000093e-05, 6.215300000000229e-05, 6.17640...</msg>
<status status="PASS" starttime="20201029 18:15:35.538" endtime="20201029 18:15:35.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.557" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.554" endtime="20201029 18:15:35.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.562" level="INFO">VALUE: [6.233399999999722e-05, 6.190200000000257e-05, 6.177800000000538e-05, 6.201399999999913e-05, 6.158400000000341e-05, 6.17080000000006e-05, 6.168100000000093e-05, 6.215300000000229e-05, 6.176400000000581e-05, 6.184700000000376e-05, 6.209699999999707e-05, 6.216700000000186e-05, 6.151299999999915e-05, 6.147199999999992e-05, 6.216700000000186e-05, 6.187499999999596e-05, 6.209699999999707e-05, 6.149999999999906e-05, 6.241700000000211e-05, 6.230499999999861e-05, 6.197200000000042e-05, 6.183299999999725e-05, 6.218099999999449e-05, 6.183299999999725e-05, 6.227800000000588e-05, 6.156900000000437e-05, 6.157000000000384e-05, 6.219400000000153e-05, 6.168000000000146e-05, 6.218099999999449e-05, 6.226400000000631e-05, 6.141700000000111e-05, 6.231900000000512e-05, 6.145800000000035e-05, 6.201399999999913e-05, 6.188900000000247e-05, 6.180599999999759e-05, 6.148599999999949e-05, 6.218099999999449e-05, 6.154199999999777e-05, 6.198599999999999e-05, 6.212500000000315e-05, 6.147299999999939e-05, 6.191600000000214e-05, 6.222200000000067e-05, 6.15279999999982e-05, 6.222200000000067e-05, 6.151299999999915e-05, 6.151299999999915e-05, 6.215200000000282e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.559" endtime="20201029 18:15:35.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.547" endtime="20201029 18:15:35.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.575" endtime="20201029 18:15:35.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.570" endtime="20201029 18:15:35.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.568" endtime="20201029 18:15:35.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.078" endtime="20201029 18:15:35.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.076" endtime="20201029 18:15:35.600"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.623" endtime="20201029 18:15:35.643"></status>
</kw>
<msg timestamp="20201029 18:15:35.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.620" endtime="20201029 18:15:35.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.646" endtime="20201029 18:15:35.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.652" endtime="20201029 18:15:35.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.612" endtime="20201029 18:15:35.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.606" endtime="20201029 18:15:35.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.676" endtime="20201029 18:15:36.015"></status>
</kw>
<msg timestamp="20201029 18:15:36.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041424514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041487667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.673" endtime="20201029 18:15:36.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041424514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041487667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.024" endtime="20201029 18:15:36.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.044" endtime="20201029 18:15:36.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.665" endtime="20201029 18:15:36.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.661" endtime="20201029 18:15:36.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.065" level="INFO">${RESULT} = [{'diff': 6.315299999999635e-05}, {'diff': 6.291700000000261e-05}, {'diff': 6.334699999999832e-05}, {'diff': 6.263899999999628e-05}, {'diff': 6.265299999999585e-05}, {'diff': 6.238900000000297e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:36.055" endtime="20201029 18:15:36.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.076" level="INFO">${ACCURACY} = {'diff': [6.315299999999635e-05, 6.291700000000261e-05, 6.334699999999832e-05, 6.263899999999628e-05, 6.265299999999585e-05, 6.238900000000297e-05, 6.254199999999877e-05, 6.313900000000372e-05, 6.2917...</msg>
<status status="PASS" starttime="20201029 18:15:36.067" endtime="20201029 18:15:36.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.088" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.085" endtime="20201029 18:15:36.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.093" level="INFO">VALUE: [6.315299999999635e-05, 6.291700000000261e-05, 6.334699999999832e-05, 6.263899999999628e-05, 6.265299999999585e-05, 6.238900000000297e-05, 6.254199999999877e-05, 6.313900000000372e-05, 6.291700000000261e-05, 6.313899999999678e-05, 6.319399999999559e-05, 6.334699999999832e-05, 6.331900000000612e-05, 6.254099999999929e-05, 6.300000000000056e-05, 6.243100000000168e-05, 6.281899999999868e-05, 6.256899999999843e-05, 6.305499999999936e-05, 6.272199999999423e-05, 6.238899999999603e-05, 6.300000000000056e-05, 6.245900000000082e-05, 6.28479999999973e-05, 6.244500000000125e-05, 6.312500000000415e-05, 6.265199999999638e-05, 6.309700000000501e-05, 6.291700000000261e-05, 6.283299999999825e-05, 6.291700000000261e-05, 6.283399999999773e-05, 6.273600000000074e-05, 6.318100000000243e-05, 6.304199999999927e-05, 6.290300000000304e-05, 6.247300000000039e-05, 6.316699999999592e-05, 6.244500000000125e-05, 6.327700000000047e-05, 6.316699999999592e-05, 6.293100000000218e-05, 6.25699999999979e-05, 6.256900000000537e-05, 6.322199999999473e-05, 6.27080000000016e-05, 6.238900000000297e-05, 6.286099999999739e-05, 6.281900000000562e-05, 6.237499999999646e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.090" endtime="20201029 18:15:36.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.078" endtime="20201029 18:15:36.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.107" endtime="20201029 18:15:36.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.102" endtime="20201029 18:15:36.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.099" endtime="20201029 18:15:36.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.602" endtime="20201029 18:15:36.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.601" endtime="20201029 18:15:36.133"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.156" endtime="20201029 18:15:36.174"></status>
</kw>
<msg timestamp="20201029 18:15:36.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.152" endtime="20201029 18:15:36.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.177" endtime="20201029 18:15:36.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.184" endtime="20201029 18:15:36.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.145" endtime="20201029 18:15:36.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.139" endtime="20201029 18:15:36.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.207" endtime="20201029 18:15:36.546"></status>
</kw>
<msg timestamp="20201029 18:15:36.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039782806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039846625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.204" endtime="20201029 18:15:36.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039782806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039846625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.556" endtime="20201029 18:15:36.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.574" endtime="20201029 18:15:36.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.197" endtime="20201029 18:15:36.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.192" endtime="20201029 18:15:36.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.592" level="INFO">${RESULT} = [{'diff': 6.381899999999968e-05}, {'diff': 6.347200000000192e-05}, {'diff': 6.397199999999548e-05}, {'diff': 6.369400000000303e-05}, {'diff': 6.37500000000013e-05}, {'diff': 6.409699999999907e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:36.583" endtime="20201029 18:15:36.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.602" level="INFO">${ACCURACY} = {'diff': [6.381899999999968e-05, 6.347200000000192e-05, 6.397199999999548e-05, 6.369400000000303e-05, 6.37500000000013e-05, 6.409699999999907e-05, 6.42500000000018e-05, 6.345900000000182e-05, 6.401400...</msg>
<status status="PASS" starttime="20201029 18:15:36.594" endtime="20201029 18:15:36.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.613" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.611" endtime="20201029 18:15:36.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.619" level="INFO">VALUE: [6.381899999999968e-05, 6.347200000000192e-05, 6.397199999999548e-05, 6.369400000000303e-05, 6.37500000000013e-05, 6.409699999999907e-05, 6.42500000000018e-05, 6.345900000000182e-05, 6.401400000000113e-05, 6.405599999999984e-05, 6.343100000000268e-05, 6.39159999999972e-05, 6.386099999999839e-05, 6.35280000000002e-05, 6.397200000000242e-05, 6.355599999999934e-05, 6.406899999999993e-05, 6.37500000000013e-05, 6.405500000000036e-05, 6.42080000000031e-05, 6.361099999999814e-05, 6.40829999999995e-05, 6.426400000000138e-05, 6.34029999999966e-05, 6.363900000000422e-05, 6.416700000000386e-05, 6.409799999999855e-05, 6.400000000000156e-05, 6.426400000000138e-05, 6.351299999999421e-05, 6.373600000000174e-05, 6.418099999999649e-05, 6.345899999999488e-05, 6.372200000000217e-05, 6.373600000000174e-05, 6.391700000000361e-05, 6.373600000000174e-05, 6.433299999999975e-05, 6.394399999999634e-05, 6.40280000000007e-05, 6.42359999999953e-05, 6.350000000000106e-05, 6.417999999999702e-05, 6.34029999999966e-05, 6.337499999999746e-05, 6.368099999999599e-05, 6.376299999999446e-05, 6.33479999999978e-05, 6.413800000000525e-05, 6.417999999999702e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.616" endtime="20201029 18:15:36.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.604" endtime="20201029 18:15:36.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.632" endtime="20201029 18:15:36.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.627" endtime="20201029 18:15:36.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.625" endtime="20201029 18:15:36.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.135" endtime="20201029 18:15:36.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.134" endtime="20201029 18:15:36.657"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.680" endtime="20201029 18:15:36.698"></status>
</kw>
<msg timestamp="20201029 18:15:36.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.676" endtime="20201029 18:15:36.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.702" endtime="20201029 18:15:36.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.708" endtime="20201029 18:15:36.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.669" endtime="20201029 18:15:36.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.663" endtime="20201029 18:15:36.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.732" endtime="20201029 18:15:37.073"></status>
</kw>
<msg timestamp="20201029 18:15:37.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039818278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039883264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.728" endtime="20201029 18:15:37.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039818278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039883264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.082" endtime="20201029 18:15:37.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.101" endtime="20201029 18:15:37.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.721" endtime="20201029 18:15:37.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.716" endtime="20201029 18:15:37.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.118" level="INFO">${RESULT} = [{'diff': 6.498600000000299e-05}, {'diff': 6.454200000000077e-05}, {'diff': 6.527800000000195e-05}, {'diff': 6.458399999999948e-05}, {'diff': 6.447300000000239e-05}, {'diff': 6.468100000000393e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:37.109" endtime="20201029 18:15:37.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.129" level="INFO">${ACCURACY} = {'diff': [6.498600000000299e-05, 6.454200000000077e-05, 6.527800000000195e-05, 6.458399999999948e-05, 6.447300000000239e-05, 6.468100000000393e-05, 6.501299999999571e-05, 6.477699999999503e-05, 6.4985...</msg>
<status status="PASS" starttime="20201029 18:15:37.120" endtime="20201029 18:15:37.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.140" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.138" endtime="20201029 18:15:37.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.146" level="INFO">VALUE: [6.498600000000299e-05, 6.454200000000077e-05, 6.527800000000195e-05, 6.458399999999948e-05, 6.447300000000239e-05, 6.468100000000393e-05, 6.501299999999571e-05, 6.477699999999503e-05, 6.498599999999605e-05, 6.526399999999544e-05, 6.502799999999476e-05, 6.515199999999888e-05, 6.491699999999767e-05, 6.480599999999365e-05, 6.527800000000195e-05, 6.512499999999921e-05, 6.476299999999546e-05, 6.50830000000005e-05, 6.463899999999828e-05, 6.473600000000274e-05, 6.530500000000161e-05, 6.515300000000529e-05, 6.474999999999537e-05, 6.455600000000034e-05, 6.479200000000102e-05, 6.516599999999845e-05, 6.447300000000239e-05, 6.526400000000238e-05, 6.47229999999957e-05, 6.531899999999424e-05, 6.516600000000539e-05, 6.442999999999727e-05, 6.484699999999982e-05, 6.459699999999957e-05, 6.462500000000565e-05, 6.497200000000342e-05, 6.534700000000032e-05, 6.476400000000188e-05, 6.481900000000068e-05, 6.476400000000188e-05, 6.505600000000084e-05, 6.447199999999598e-05, 6.522200000000367e-05, 6.445900000000282e-05, 6.529100000000204e-05, 6.518099999999749e-05, 6.50700000000004e-05, 6.487499999999896e-05, 6.52359999999963e-05, 6.512500000000615e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.143" endtime="20201029 18:15:37.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.131" endtime="20201029 18:15:37.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.159" endtime="20201029 18:15:37.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.154" endtime="20201029 18:15:37.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.152" endtime="20201029 18:15:37.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.659" endtime="20201029 18:15:37.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.658" endtime="20201029 18:15:37.184"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.207" endtime="20201029 18:15:37.225"></status>
</kw>
<msg timestamp="20201029 18:15:37.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.203" endtime="20201029 18:15:37.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.229" endtime="20201029 18:15:37.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.235" endtime="20201029 18:15:37.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.196" endtime="20201029 18:15:37.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.190" endtime="20201029 18:15:37.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.259" endtime="20201029 18:15:37.599"></status>
</kw>
<msg timestamp="20201029 18:15:37.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039875319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039941444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.255" endtime="20201029 18:15:37.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039875319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039941444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.609" endtime="20201029 18:15:37.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.627" endtime="20201029 18:15:37.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.248" endtime="20201029 18:15:37.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.243" endtime="20201029 18:15:37.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.645" level="INFO">${RESULT} = [{'diff': 6.612500000000021e-05}, {'diff': 6.615299999999935e-05}, {'diff': 6.549999999999612e-05}, {'diff': 6.566699999999842e-05}, {'diff': 6.598599999999705e-05}, {'diff': 6.611100000000064e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:37.636" endtime="20201029 18:15:37.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.654" level="INFO">${ACCURACY} = {'diff': [6.612500000000021e-05, 6.615299999999935e-05, 6.549999999999612e-05, 6.566699999999842e-05, 6.598599999999705e-05, 6.611100000000064e-05, 6.591699999999867e-05, 6.616700000000586e-05, 6.5445...</msg>
<status status="PASS" starttime="20201029 18:15:37.647" endtime="20201029 18:15:37.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.665" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.663" endtime="20201029 18:15:37.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.671" level="INFO">VALUE: [6.612500000000021e-05, 6.615299999999935e-05, 6.549999999999612e-05, 6.566699999999842e-05, 6.598599999999705e-05, 6.611100000000064e-05, 6.591699999999867e-05, 6.616700000000586e-05, 6.544500000000425e-05, 6.634699999999438e-05, 6.598599999999705e-05, 6.620799999999816e-05, 6.602799999999576e-05, 6.6277999999996e-05, 6.583300000000125e-05, 6.633399999999429e-05, 6.549999999999612e-05, 6.579200000000202e-05, 6.547199999999698e-05, 6.559800000000005e-05, 6.550000000000306e-05, 6.634700000000132e-05, 6.551399999999569e-05, 6.60830000000015e-05, 6.54029999999986e-05, 6.582000000000116e-05, 6.57229999999967e-05, 6.615299999999935e-05, 6.593099999999824e-05, 6.576399999999594e-05, 6.545799999999741e-05, 6.594399999999834e-05, 6.63480000000008e-05, 6.626400000000338e-05, 6.561100000000014e-05, 6.548600000000349e-05, 6.552700000000272e-05, 6.584700000000082e-05, 6.552799999999526e-05, 6.597199999999748e-05, 6.565200000000632e-05, 6.609700000000107e-05, 6.620799999999816e-05, 6.572199999999723e-05, 6.624999999999687e-05, 6.609800000000055e-05, 6.60830000000015e-05, 6.554200000000177e-05, 6.582000000000116e-05, 6.591699999999867e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.667" endtime="20201029 18:15:37.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.656" endtime="20201029 18:15:37.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.683" endtime="20201029 18:15:37.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.679" endtime="20201029 18:15:37.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.676" endtime="20201029 18:15:37.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.186" endtime="20201029 18:15:37.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.185" endtime="20201029 18:15:37.710"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.733" endtime="20201029 18:15:37.753"></status>
</kw>
<msg timestamp="20201029 18:15:37.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.729" endtime="20201029 18:15:37.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.756" endtime="20201029 18:15:37.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.762" endtime="20201029 18:15:37.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.722" endtime="20201029 18:15:37.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.716" endtime="20201029 18:15:37.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.786" endtime="20201029 18:15:38.125"></status>
</kw>
<msg timestamp="20201029 18:15:38.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042649528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04271675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:37.783" endtime="20201029 18:15:38.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042649528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04271675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.135" endtime="20201029 18:15:38.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.153" endtime="20201029 18:15:38.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.775" endtime="20201029 18:15:38.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.771" endtime="20201029 18:15:38.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.171" level="INFO">${RESULT} = [{'diff': 6.722199999999873e-05}, {'diff': 6.715200000000088e-05}, {'diff': 6.719499999999906e-05}, {'diff': 6.708399999999504e-05}, {'diff': 6.659699999999463e-05}, {'diff': 6.727800000000395e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:38.162" endtime="20201029 18:15:38.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.180" level="INFO">${ACCURACY} = {'diff': [6.722199999999873e-05, 6.715200000000088e-05, 6.719499999999906e-05, 6.708399999999504e-05, 6.659699999999463e-05, 6.727800000000395e-05, 6.674999999999737e-05, 6.648599999999755e-05, 6.6611...</msg>
<status status="PASS" starttime="20201029 18:15:38.173" endtime="20201029 18:15:38.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.191" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.189" endtime="20201029 18:15:38.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.196" level="INFO">VALUE: [6.722199999999873e-05, 6.715200000000088e-05, 6.719499999999906e-05, 6.708399999999504e-05, 6.659699999999463e-05, 6.727800000000395e-05, 6.674999999999737e-05, 6.648599999999755e-05, 6.661100000000114e-05, 6.681900000000268e-05, 6.676399999999694e-05, 6.691699999999967e-05, 6.726400000000438e-05, 6.680600000000259e-05, 6.677699999999703e-05, 6.705499999999642e-05, 6.702799999999676e-05, 6.658400000000148e-05, 6.683299999999531e-05, 6.72359999999983e-05, 6.681999999999522e-05, 6.648699999999702e-05, 6.655500000000286e-05, 6.667999999999952e-05, 6.701399999999719e-05, 6.737500000000146e-05, 6.719399999999959e-05, 6.738900000000103e-05, 6.641699999999917e-05, 6.711100000000164e-05, 6.697199999999848e-05, 6.677800000000345e-05, 6.708399999999504e-05, 6.729200000000352e-05, 6.644499999999831e-05, 6.715300000000035e-05, 6.663900000000028e-05, 6.71109999999947e-05, 6.734699999999538e-05, 6.688900000000053e-05, 6.713900000000078e-05, 6.672199999999823e-05, 6.651400000000363e-05, 6.704199999999633e-05, 6.682000000000216e-05, 6.684700000000182e-05, 6.644399999999884e-05, 6.724999999999787e-05, 6.667999999999952e-05, 6.655500000000286e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.193" endtime="20201029 18:15:38.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.182" endtime="20201029 18:15:38.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.211" endtime="20201029 18:15:38.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.205" endtime="20201029 18:15:38.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.202" endtime="20201029 18:15:38.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.712" endtime="20201029 18:15:38.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.710" endtime="20201029 18:15:38.236"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.259" endtime="20201029 18:15:38.278"></status>
</kw>
<msg timestamp="20201029 18:15:38.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.256" endtime="20201029 18:15:38.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.281" endtime="20201029 18:15:38.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.287" endtime="20201029 18:15:38.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.248" endtime="20201029 18:15:38.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.243" endtime="20201029 18:15:38.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.311" endtime="20201029 18:15:38.648"></status>
</kw>
<msg timestamp="20201029 18:15:38.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040371611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040439236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.308" endtime="20201029 18:15:38.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040371611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040439236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.658" endtime="20201029 18:15:38.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.676" endtime="20201029 18:15:38.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.301" endtime="20201029 18:15:38.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.296" endtime="20201029 18:15:38.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.694" level="INFO">${RESULT} = [{'diff': 6.762500000000171e-05}, {'diff': 6.833300000000375e-05}, {'diff': 6.815299999999441e-05}, {'diff': 6.834699999999638e-05}, {'diff': 6.812500000000221e-05}, {'diff': 6.816700000000092e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:38.685" endtime="20201029 18:15:38.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.709" level="INFO">${ACCURACY} = {'diff': [6.762500000000171e-05, 6.833300000000375e-05, 6.815299999999441e-05, 6.834699999999638e-05, 6.812500000000221e-05, 6.816700000000092e-05, 6.762500000000171e-05, 6.834699999999638e-05, 6.8125...</msg>
<status status="PASS" starttime="20201029 18:15:38.696" endtime="20201029 18:15:38.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.720" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.717" endtime="20201029 18:15:38.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.725" level="INFO">VALUE: [6.762500000000171e-05, 6.833300000000375e-05, 6.815299999999441e-05, 6.834699999999638e-05, 6.812500000000221e-05, 6.816700000000092e-05, 6.762500000000171e-05, 6.834699999999638e-05, 6.812500000000221e-05, 6.770799999999966e-05, 6.802799999999776e-05, 6.79030000000011e-05, 6.819500000000006e-05, 6.819500000000006e-05, 6.808400000000298e-05, 6.758399999999554e-05, 6.745899999999888e-05, 6.798599999999905e-05, 6.799999999999862e-05, 6.794400000000034e-05, 6.797199999999948e-05, 6.769400000000009e-05, 6.76109999999952e-05, 6.770799999999966e-05, 6.744500000000625e-05, 6.808400000000298e-05, 6.777799999999751e-05, 6.798599999999905e-05, 6.812499999999527e-05, 6.754200000000377e-05, 6.769499999999956e-05, 6.820800000000016e-05, 6.788800000000206e-05, 6.829100000000504e-05, 6.761100000000214e-05, 6.806899999999699e-05, 6.787500000000196e-05, 6.793100000000024e-05, 6.813800000000231e-05, 6.787500000000196e-05, 6.749999999999812e-05, 6.743099999999974e-05, 6.81109999999957e-05, 6.745899999999888e-05, 6.837500000000246e-05, 6.744399999999984e-05, 6.76109999999952e-05, 6.737500000000146e-05, 6.737499999999452e-05, 6.758399999999554e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.722" endtime="20201029 18:15:38.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.711" endtime="20201029 18:15:38.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.738" endtime="20201029 18:15:38.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.733" endtime="20201029 18:15:38.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.731" endtime="20201029 18:15:38.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.238" endtime="20201029 18:15:38.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.237" endtime="20201029 18:15:38.763"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.786" endtime="20201029 18:15:38.804"></status>
</kw>
<msg timestamp="20201029 18:15:38.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.782" endtime="20201029 18:15:38.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.808" endtime="20201029 18:15:38.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.814" endtime="20201029 18:15:38.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.775" endtime="20201029 18:15:38.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.769" endtime="20201029 18:15:38.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.838" endtime="20201029 18:15:39.176"></status>
</kw>
<msg timestamp="20201029 18:15:39.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039726375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.834" endtime="20201029 18:15:39.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039726375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.186" endtime="20201029 18:15:39.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.205" endtime="20201029 18:15:39.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.827" endtime="20201029 18:15:39.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.822" endtime="20201029 18:15:39.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.222" level="INFO">${RESULT} = [{'diff': 6.843100000000074e-05}, {'diff': 6.8583000000004e-05}, {'diff': 6.888900000000253e-05}, {'diff': 6.862500000000271e-05}, {'diff': 6.851299999999921e-05}, {'diff': 6.872200000000023e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:39.213" endtime="20201029 18:15:39.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.233" level="INFO">${ACCURACY} = {'diff': [6.843100000000074e-05, 6.8583000000004e-05, 6.888900000000253e-05, 6.862500000000271e-05, 6.851299999999921e-05, 6.872200000000023e-05, 6.915299999999541e-05, 6.849999999999912e-05, 6.852799...</msg>
<status status="PASS" starttime="20201029 18:15:39.224" endtime="20201029 18:15:39.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.244" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.242" endtime="20201029 18:15:39.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.250" level="INFO">VALUE: [6.843100000000074e-05, 6.8583000000004e-05, 6.888900000000253e-05, 6.862500000000271e-05, 6.851299999999921e-05, 6.872200000000023e-05, 6.915299999999541e-05, 6.849999999999912e-05, 6.852799999999826e-05, 6.893100000000124e-05, 6.915300000000235e-05, 6.84030000000016e-05, 6.90830000000045e-05, 6.887500000000296e-05, 6.908299999999756e-05, 6.865299999999491e-05, 6.927699999999953e-05, 6.866600000000195e-05, 6.911100000000364e-05, 6.890199999999569e-05, 6.881899999999774e-05, 6.874999999999937e-05, 6.844500000000031e-05, 6.927799999999901e-05, 6.850000000000606e-05, 6.930599999999815e-05, 6.862499999999577e-05, 6.861100000000314e-05, 6.869500000000056e-05, 6.855499999999792e-05, 6.86109999999962e-05, 6.863900000000228e-05, 6.916600000000245e-05, 6.919500000000106e-05, 6.879199999999808e-05, 6.931999999999772e-05, 6.906899999999799e-05, 6.841700000000117e-05, 6.844400000000084e-05, 6.899999999999962e-05, 6.848599999999955e-05, 6.845899999999988e-05, 6.877800000000545e-05, 6.931899999999824e-05, 6.899999999999962e-05, 6.847299999999945e-05, 6.931899999999824e-05, 6.898600000000005e-05, 6.920900000000063e-05, 6.849999999999912e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.247" endtime="20201029 18:15:39.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.235" endtime="20201029 18:15:39.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.267" endtime="20201029 18:15:39.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.262" endtime="20201029 18:15:39.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.260" endtime="20201029 18:15:39.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.765" endtime="20201029 18:15:39.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.764" endtime="20201029 18:15:39.292"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.315" endtime="20201029 18:15:39.333"></status>
</kw>
<msg timestamp="20201029 18:15:39.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.311" endtime="20201029 18:15:39.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.337" endtime="20201029 18:15:39.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.343" endtime="20201029 18:15:39.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.304" endtime="20201029 18:15:39.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.298" endtime="20201029 18:15:39.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.367" endtime="20201029 18:15:39.707"></status>
</kw>
<msg timestamp="20201029 18:15:39.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03977475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039844319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:39.363" endtime="20201029 18:15:39.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03977475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039844319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:39.717" endtime="20201029 18:15:39.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.736" endtime="20201029 18:15:39.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.356" endtime="20201029 18:15:39.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.351" endtime="20201029 18:15:39.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.753" level="INFO">${RESULT} = [{'diff': 6.956900000000543e-05}, {'diff': 7.038899999999709e-05}, {'diff': 6.963899999999634e-05}, {'diff': 7.038900000000403e-05}, {'diff': 6.990199999999669e-05}, {'diff': 7.02360000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:39.744" endtime="20201029 18:15:39.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.763" level="INFO">${ACCURACY} = {'diff': [6.956900000000543e-05, 7.038899999999709e-05, 6.963899999999634e-05, 7.038900000000403e-05, 6.990199999999669e-05, 7.02360000000013e-05, 6.948600000000055e-05, 6.95559999999984e-05, 7.023600...</msg>
<status status="PASS" starttime="20201029 18:15:39.755" endtime="20201029 18:15:39.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.774" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.771" endtime="20201029 18:15:39.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.779" level="INFO">VALUE: [6.956900000000543e-05, 7.038899999999709e-05, 6.963899999999634e-05, 7.038900000000403e-05, 6.990199999999669e-05, 7.02360000000013e-05, 6.948600000000055e-05, 6.95559999999984e-05, 7.02360000000013e-05, 6.998600000000105e-05, 6.997199999999454e-05, 6.975000000000037e-05, 7.012499999999727e-05, 6.958299999999806e-05, 7.020900000000163e-05, 7.012499999999727e-05, 6.967999999999558e-05, 7.017999999999608e-05, 7.026400000000044e-05, 7.001400000000019e-05, 7.001400000000019e-05, 6.970799999999472e-05, 7.001400000000019e-05, 6.984799999999736e-05, 6.976399999999994e-05, 6.99030000000031e-05, 6.994500000000181e-05, 6.995900000000138e-05, 6.97909999999996e-05, 6.979199999999908e-05, 6.958399999999754e-05, 6.97909999999996e-05, 7.033299999999881e-05, 6.997199999999454e-05, 6.988900000000353e-05, 7.020899999999469e-05, 7.008299999999856e-05, 6.958399999999754e-05, 6.980499999999917e-05, 7.016700000000292e-05, 7.023599999999436e-05, 6.945800000000141e-05, 7.001400000000019e-05, 7.018000000000302e-05, 7.013899999999684e-05, 7.027800000000001e-05, 7.029199999999958e-05, 7.020900000000163e-05, 6.962499999999677e-05, 6.951399999999969e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.776" endtime="20201029 18:15:39.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.764" endtime="20201029 18:15:39.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.792" endtime="20201029 18:15:39.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.787" endtime="20201029 18:15:39.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.785" endtime="20201029 18:15:39.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.294" endtime="20201029 18:15:39.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.293" endtime="20201029 18:15:39.817"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.840" endtime="20201029 18:15:39.860"></status>
</kw>
<msg timestamp="20201029 18:15:39.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.836" endtime="20201029 18:15:39.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.863" endtime="20201029 18:15:39.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.870" endtime="20201029 18:15:39.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.829" endtime="20201029 18:15:39.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.823" endtime="20201029 18:15:39.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.893" endtime="20201029 18:15:40.233"></status>
</kw>
<msg timestamp="20201029 18:15:40.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041471153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.890" endtime="20201029 18:15:40.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041471153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.242" endtime="20201029 18:15:40.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.261" endtime="20201029 18:15:40.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.883" endtime="20201029 18:15:40.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.878" endtime="20201029 18:15:40.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.278" level="INFO">${RESULT} = [{'diff': 7.105500000000042e-05}, {'diff': 7.10559999999999e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.05689999999995e-05}, {'diff': 7.088899999999759e-05}, {'diff': 7.081899999999974e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:40.269" endtime="20201029 18:15:40.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.288" level="INFO">${ACCURACY} = {'diff': [7.105500000000042e-05, 7.10559999999999e-05, 7.050000000000112e-05, 7.05689999999995e-05, 7.088899999999759e-05, 7.081899999999974e-05, 7.069500000000256e-05, 7.06109999999982e-05, 7.0791000...</msg>
<status status="PASS" starttime="20201029 18:15:40.280" endtime="20201029 18:15:40.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.298" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.296" endtime="20201029 18:15:40.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.304" level="INFO">VALUE: [7.105500000000042e-05, 7.10559999999999e-05, 7.050000000000112e-05, 7.05689999999995e-05, 7.088899999999759e-05, 7.081899999999974e-05, 7.069500000000256e-05, 7.06109999999982e-05, 7.07910000000006e-05, 7.087500000000496e-05, 7.112500000000521e-05, 7.109700000000607e-05, 7.10559999999999e-05, 7.094499999999587e-05, 7.12639999999945e-05, 7.041700000000317e-05, 7.093000000000377e-05, 7.11109999999987e-05, 7.070800000000266e-05, 7.083299999999931e-05, 7.095899999999544e-05, 7.06109999999982e-05, 7.086099999999845e-05, 7.133399999999929e-05, 7.13189999999933e-05, 7.097300000000195e-05, 7.083399999999879e-05, 7.133299999999981e-05, 7.137500000000546e-05, 7.118099999999655e-05, 7.116699999999698e-05, 7.041700000000317e-05, 7.141700000000417e-05, 7.040299999999666e-05, 7.109699999999913e-05, 7.133399999999929e-05, 7.109699999999913e-05, 7.100000000000162e-05, 7.058299999999906e-05, 7.043000000000327e-05, 7.077700000000103e-05, 7.07910000000006e-05, 7.109699999999913e-05, 7.041699999999623e-05, 7.086099999999845e-05, 7.10559999999999e-05, 7.131900000000024e-05, 7.10559999999999e-05, 7.090299999999716e-05, 7.069400000000309e-05]</msg>
<status status="PASS" starttime="20201029 18:15:40.301" endtime="20201029 18:15:40.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.289" endtime="20201029 18:15:40.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.318" endtime="20201029 18:15:40.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.313" endtime="20201029 18:15:40.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.310" endtime="20201029 18:15:40.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.819" endtime="20201029 18:15:40.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.818" endtime="20201029 18:15:40.344"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.366" endtime="20201029 18:15:40.385"></status>
</kw>
<msg timestamp="20201029 18:15:40.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.363" endtime="20201029 18:15:40.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.388" endtime="20201029 18:15:40.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.395" endtime="20201029 18:15:40.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.356" endtime="20201029 18:15:40.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.350" endtime="20201029 18:15:40.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.418" endtime="20201029 18:15:40.775"></status>
</kw>
<msg timestamp="20201029 18:15:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039721792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039793389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.415" endtime="20201029 18:15:40.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039721792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039793389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.784" endtime="20201029 18:15:40.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.803" endtime="20201029 18:15:40.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.408" endtime="20201029 18:15:40.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.403" endtime="20201029 18:15:40.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.821" level="INFO">${RESULT} = [{'diff': 7.159699999999963e-05}, {'diff': 7.168100000000399e-05}, {'diff': 7.199999999999568e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.204100000000185e-05}, {'diff': 7.183300000000031e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:40.812" endtime="20201029 18:15:40.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.832" level="INFO">${ACCURACY} = {'diff': [7.159699999999963e-05, 7.168100000000399e-05, 7.199999999999568e-05, 7.237499999999952e-05, 7.204100000000185e-05, 7.183300000000031e-05, 7.143000000000427e-05, 7.226400000000244e-05, 7.1514...</msg>
<status status="PASS" starttime="20201029 18:15:40.823" endtime="20201029 18:15:40.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.842" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.840" endtime="20201029 18:15:40.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.848" level="INFO">VALUE: [7.159699999999963e-05, 7.168100000000399e-05, 7.199999999999568e-05, 7.237499999999952e-05, 7.204100000000185e-05, 7.183300000000031e-05, 7.143000000000427e-05, 7.226400000000244e-05, 7.151400000000169e-05, 7.154200000000083e-05, 7.145800000000341e-05, 7.186099999999945e-05, 7.230500000000167e-05, 7.191699999999773e-05, 7.161100000000614e-05, 7.154200000000083e-05, 7.188899999999859e-05, 7.23189999999943e-05, 7.155500000000092e-05, 7.159699999999963e-05, 7.209700000000013e-05, 7.169400000000409e-05, 7.145800000000341e-05, 7.180600000000065e-05, 7.182000000000022e-05, 7.17910000000016e-05, 7.184699999999988e-05, 7.145800000000341e-05, 7.213899999999884e-05, 7.176400000000194e-05, 7.209700000000013e-05, 7.17360000000028e-05, 7.137499999999852e-05, 7.182000000000022e-05, 7.223599999999636e-05, 7.216699999999798e-05, 7.150000000000212e-05, 7.219399999999765e-05, 7.202800000000176e-05, 7.151400000000169e-05, 7.169499999999662e-05, 7.149999999999518e-05, 7.17360000000028e-05, 7.232000000000072e-05, 7.169400000000409e-05, 7.19030000000051e-05, 7.202800000000176e-05, 7.21109999999997e-05, 7.136099999999895e-05, 7.195800000000391e-05]</msg>
<status status="PASS" starttime="20201029 18:15:40.845" endtime="20201029 18:15:40.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.833" endtime="20201029 18:15:40.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.860" endtime="20201029 18:15:40.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.856" endtime="20201029 18:15:40.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.853" endtime="20201029 18:15:40.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.346" endtime="20201029 18:15:40.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.344" endtime="20201029 18:15:40.885"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.910" endtime="20201029 18:15:40.928"></status>
</kw>
<msg timestamp="20201029 18:15:40.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.906" endtime="20201029 18:15:40.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.932" endtime="20201029 18:15:40.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.938" endtime="20201029 18:15:40.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.898" endtime="20201029 18:15:40.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.892" endtime="20201029 18:15:40.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.961" endtime="20201029 18:15:41.298"></status>
</kw>
<msg timestamp="20201029 18:15:41.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040968889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041042111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.958" endtime="20201029 18:15:41.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040968889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041042111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.308" endtime="20201029 18:15:41.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.326" endtime="20201029 18:15:41.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.951" endtime="20201029 18:15:41.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.946" endtime="20201029 18:15:41.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.343" level="INFO">${RESULT} = [{'diff': 7.322199999999779e-05}, {'diff': 7.34439999999989e-05}, {'diff': 7.301399999999625e-05}, {'diff': 7.259700000000063e-05}, {'diff': 7.319400000000559e-05}, {'diff': 7.30969999999942e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:41.335" endtime="20201029 18:15:41.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.355" level="INFO">${ACCURACY} = {'diff': [7.322199999999779e-05, 7.34439999999989e-05, 7.301399999999625e-05, 7.259700000000063e-05, 7.319400000000559e-05, 7.30969999999942e-05, 7.327800000000301e-05, 7.27230000000037e-05, 7.2486000...</msg>
<status status="PASS" starttime="20201029 18:15:41.346" endtime="20201029 18:15:41.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.366" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.363" endtime="20201029 18:15:41.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.371" level="INFO">VALUE: [7.322199999999779e-05, 7.34439999999989e-05, 7.301399999999625e-05, 7.259700000000063e-05, 7.319400000000559e-05, 7.30969999999942e-05, 7.327800000000301e-05, 7.27230000000037e-05, 7.248600000000355e-05, 7.32639999999965e-05, 7.286100000000045e-05, 7.288899999999959e-05, 7.248699999999608e-05, 7.297299999999701e-05, 7.25690000000015e-05, 7.266699999999848e-05, 7.313899999999984e-05, 7.313800000000037e-05, 7.236099999999995e-05, 7.243100000000474e-05, 7.295900000000438e-05, 7.272299999999676e-05, 7.329099999999616e-05, 7.27360000000038e-05, 7.318000000000602e-05, 7.281999999999428e-05, 7.300000000000362e-05, 7.274999999999643e-05, 7.324999999999693e-05, 7.3069000000002e-05, 7.243100000000474e-05, 7.291599999999926e-05, 7.266699999999848e-05, 7.32639999999965e-05, 7.322200000000473e-05, 7.308400000000104e-05, 7.304199999999539e-05, 7.292999999999883e-05, 7.240299999999866e-05, 7.308400000000104e-05, 7.270899999999719e-05, 7.254100000000235e-05, 7.291700000000567e-05, 7.313899999999984e-05, 7.298599999999711e-05, 7.313899999999984e-05, 7.259800000000011e-05, 7.290199999999969e-05, 7.258299999999412e-05, 7.262499999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.368" endtime="20201029 18:15:41.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.357" endtime="20201029 18:15:41.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.384" endtime="20201029 18:15:41.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.380" endtime="20201029 18:15:41.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.377" endtime="20201029 18:15:41.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.887" endtime="20201029 18:15:41.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.886" endtime="20201029 18:15:41.409"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.432" endtime="20201029 18:15:41.450"></status>
</kw>
<msg timestamp="20201029 18:15:41.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.428" endtime="20201029 18:15:41.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.453" endtime="20201029 18:15:41.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.460" endtime="20201029 18:15:41.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.421" endtime="20201029 18:15:41.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.415" endtime="20201029 18:15:41.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.483" endtime="20201029 18:15:41.821"></status>
</kw>
<msg timestamp="20201029 18:15:41.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039560472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.480" endtime="20201029 18:15:41.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039560472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.831" endtime="20201029 18:15:41.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.849" endtime="20201029 18:15:41.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.473" endtime="20201029 18:15:41.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.468" endtime="20201029 18:15:41.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.866" level="INFO">${RESULT} = [{'diff': 7.398599999999811e-05}, {'diff': 7.383300000000231e-05}, {'diff': 7.404199999999639e-05}, {'diff': 7.402799999999682e-05}, {'diff': 7.357000000000197e-05}, {'diff': 7.426299999999803e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:41.858" endtime="20201029 18:15:41.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.876" level="INFO">${ACCURACY} = {'diff': [7.398599999999811e-05, 7.383300000000231e-05, 7.404199999999639e-05, 7.402799999999682e-05, 7.357000000000197e-05, 7.426299999999803e-05, 7.413900000000084e-05, 7.397200000000548e-05, 7.4111...</msg>
<status status="PASS" starttime="20201029 18:15:41.869" endtime="20201029 18:15:41.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.887" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.884" endtime="20201029 18:15:41.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.892" level="INFO">VALUE: [7.398599999999811e-05, 7.383300000000231e-05, 7.404199999999639e-05, 7.402799999999682e-05, 7.357000000000197e-05, 7.426299999999803e-05, 7.413900000000084e-05, 7.397200000000548e-05, 7.41110000000017e-05, 7.416699999999998e-05, 7.365200000000044e-05, 7.369399999999915e-05, 7.35969999999947e-05, 7.355500000000292e-05, 7.349999999999718e-05, 7.384700000000188e-05, 7.340299999999966e-05, 7.380600000000265e-05, 7.336099999999401e-05, 7.401399999999725e-05, 7.418000000000008e-05, 7.430599999999621e-05, 7.374999999999743e-05, 7.36110000000012e-05, 7.358300000000206e-05, 7.341699999999923e-05, 7.368100000000599e-05, 7.345799999999847e-05, 7.340299999999966e-05, 7.401399999999725e-05, 7.412500000000127e-05, 7.429200000000358e-05, 7.345899999999794e-05, 7.341699999999923e-05, 7.348599999999761e-05, 7.379199999999614e-05, 7.361099999999426e-05, 7.357000000000197e-05, 7.434800000000186e-05, 7.42639999999975e-05, 7.365299999999991e-05, 7.357000000000197e-05, 7.419499999999912e-05, 7.36110000000012e-05, 7.347199999999804e-05, 7.375000000000437e-05, 7.380500000000317e-05, 7.39309999999993e-05, 7.336100000000095e-05, 7.401399999999725e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.889" endtime="20201029 18:15:41.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.878" endtime="20201029 18:15:41.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.905" endtime="20201029 18:15:41.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.900" endtime="20201029 18:15:41.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.898" endtime="20201029 18:15:41.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.411" endtime="20201029 18:15:41.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.410" endtime="20201029 18:15:41.930"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.952" endtime="20201029 18:15:41.972"></status>
</kw>
<msg timestamp="20201029 18:15:41.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.949" endtime="20201029 18:15:41.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.976" endtime="20201029 18:15:41.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.983" endtime="20201029 18:15:41.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.942" endtime="20201029 18:15:41.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.936" endtime="20201029 18:15:41.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.007" endtime="20201029 18:15:42.341"></status>
</kw>
<msg timestamp="20201029 18:15:42.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040900208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.004" endtime="20201029 18:15:42.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040900208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.351" endtime="20201029 18:15:42.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.369" endtime="20201029 18:15:42.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.997" endtime="20201029 18:15:42.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.992" endtime="20201029 18:15:42.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.386" level="INFO">${RESULT} = [{'diff': 7.49440000000004e-05}, {'diff': 7.473599999999886e-05}, {'diff': 7.497299999999901e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.513900000000184e-05}, {'diff': 7.502699999999835e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:42.378" endtime="20201029 18:15:42.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.396" level="INFO">${ACCURACY} = {'diff': [7.49440000000004e-05, 7.473599999999886e-05, 7.497299999999901e-05, 7.472199999999929e-05, 7.513900000000184e-05, 7.502699999999835e-05, 7.506899999999705e-05, 7.501399999999825e-05, 7.52089...</msg>
<status status="PASS" starttime="20201029 18:15:42.388" endtime="20201029 18:15:42.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.406" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.404" endtime="20201029 18:15:42.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.412" level="INFO">VALUE: [7.49440000000004e-05, 7.473599999999886e-05, 7.497299999999901e-05, 7.472199999999929e-05, 7.513900000000184e-05, 7.502699999999835e-05, 7.506899999999705e-05, 7.501399999999825e-05, 7.520899999999969e-05, 7.51110000000027e-05, 7.472199999999929e-05, 7.518100000000055e-05, 7.530599999999721e-05, 7.4763999999998e-05, 7.534699999999644e-05, 7.458300000000306e-05, 7.509800000000261e-05, 7.529099999999816e-05, 7.479099999999766e-05, 7.44439999999999e-05, 7.498599999999911e-05, 7.536100000000295e-05, 7.516700000000098e-05, 7.46110000000022e-05, 7.441600000000076e-05, 7.455500000000392e-05, 7.512500000000227e-05, 7.468100000000005e-05, 7.44309999999998e-05, 7.49440000000004e-05, 7.530600000000415e-05, 7.462499999999483e-05, 7.46110000000022e-05, 7.533400000000329e-05, 7.469400000000015e-05, 7.513900000000184e-05, 7.504099999999791e-05, 7.488899999999465e-05, 7.468100000000005e-05, 7.536099999999601e-05, 7.470799999999972e-05, 7.511200000000218e-05, 7.452700000000478e-05, 7.519400000000065e-05, 7.480500000000417e-05, 7.518100000000055e-05, 7.441600000000076e-05, 7.440300000000066e-05, 7.456899999999655e-05, 7.527799999999807e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.409" endtime="20201029 18:15:42.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.397" endtime="20201029 18:15:42.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.426" endtime="20201029 18:15:42.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.420" endtime="20201029 18:15:42.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.418" endtime="20201029 18:15:42.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.932" endtime="20201029 18:15:42.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.931" endtime="20201029 18:15:42.451"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.474" endtime="20201029 18:15:42.493"></status>
</kw>
<msg timestamp="20201029 18:15:42.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.471" endtime="20201029 18:15:42.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.496" endtime="20201029 18:15:42.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.502" endtime="20201029 18:15:42.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.463" endtime="20201029 18:15:42.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.458" endtime="20201029 18:15:42.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.525" endtime="20201029 18:15:42.861"></status>
</kw>
<msg timestamp="20201029 18:15:42.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039426694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039502361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.522" endtime="20201029 18:15:42.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039426694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039502361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.870" endtime="20201029 18:15:42.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.889" endtime="20201029 18:15:42.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.515" endtime="20201029 18:15:42.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.510" endtime="20201029 18:15:42.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.906" level="INFO">${RESULT} = [{'diff': 7.566700000000148e-05}, {'diff': 7.606899999999805e-05}, {'diff': 7.566700000000148e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.629099999999917e-05}, {'diff': 7.583400000000379e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:42.897" endtime="20201029 18:15:42.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.916" level="INFO">${ACCURACY} = {'diff': [7.566700000000148e-05, 7.606899999999805e-05, 7.566700000000148e-05, 7.59440000000014e-05, 7.629099999999917e-05, 7.583400000000379e-05, 7.597300000000001e-05, 7.595800000000097e-05, 7.60139...</msg>
<status status="PASS" starttime="20201029 18:15:42.908" endtime="20201029 18:15:42.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.927" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.925" endtime="20201029 18:15:42.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.933" level="INFO">VALUE: [7.566700000000148e-05, 7.606899999999805e-05, 7.566700000000148e-05, 7.59440000000014e-05, 7.629099999999917e-05, 7.583400000000379e-05, 7.597300000000001e-05, 7.595800000000097e-05, 7.601399999999925e-05, 7.602800000000576e-05, 7.608299999999762e-05, 7.55969999999967e-05, 7.551399999999875e-05, 7.573699999999933e-05, 7.569400000000115e-05, 7.588899999999565e-05, 7.563900000000234e-05, 7.537500000000252e-05, 7.53890000000021e-05, 7.597300000000001e-05, 7.595900000000044e-05, 7.54440000000009e-05, 7.567999999999464e-05, 7.569399999999421e-05, 7.62639999999995e-05, 7.597200000000054e-05, 7.62769999999996e-05, 7.555499999999798e-05, 7.570800000000072e-05, 7.537500000000252e-05, 7.602799999999882e-05, 7.586100000000345e-05, 7.559700000000363e-05, 7.54440000000009e-05, 7.558300000000406e-05, 7.630599999999821e-05, 7.594499999999393e-05, 7.555599999999746e-05, 7.537500000000252e-05, 7.620800000000122e-05, 7.634699999999744e-05, 7.586099999999651e-05, 7.587500000000302e-05, 7.545899999999994e-05, 7.630499999999873e-05, 7.586099999999651e-05, 7.618000000000208e-05, 7.552799999999832e-05, 7.62639999999995e-05, 7.548699999999908e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.930" endtime="20201029 18:15:42.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.918" endtime="20201029 18:15:42.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.945" endtime="20201029 18:15:42.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.941" endtime="20201029 18:15:42.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.938" endtime="20201029 18:15:42.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.453" endtime="20201029 18:15:42.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.452" endtime="20201029 18:15:42.970"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.993" endtime="20201029 18:15:43.012"></status>
</kw>
<msg timestamp="20201029 18:15:43.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.989" endtime="20201029 18:15:43.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.015" endtime="20201029 18:15:43.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.021" endtime="20201029 18:15:43.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.982" endtime="20201029 18:15:43.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.976" endtime="20201029 18:15:43.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.044" endtime="20201029 18:15:43.379"></status>
</kw>
<msg timestamp="20201029 18:15:43.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039425708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.041" endtime="20201029 18:15:43.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039425708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.388" endtime="20201029 18:15:43.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.407" endtime="20201029 18:15:43.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.034" endtime="20201029 18:15:43.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.029" endtime="20201029 18:15:43.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.425" level="INFO">${RESULT} = [{'diff': 7.729100000000017e-05}, {'diff': 7.659800000000411e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.68189999999988e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.65839999999976e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:43.416" endtime="20201029 18:15:43.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.436" level="INFO">${ACCURACY} = {'diff': [7.729100000000017e-05, 7.659800000000411e-05, 7.702799999999982e-05, 7.68189999999988e-05, 7.648600000000061e-05, 7.65839999999976e-05, 7.698600000000111e-05, 7.64440000000019e-05, 7.6846999...</msg>
<status status="PASS" starttime="20201029 18:15:43.427" endtime="20201029 18:15:43.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.447" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.444" endtime="20201029 18:15:43.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.452" level="INFO">VALUE: [7.729100000000017e-05, 7.659800000000411e-05, 7.702799999999982e-05, 7.68189999999988e-05, 7.648600000000061e-05, 7.65839999999976e-05, 7.698600000000111e-05, 7.64440000000019e-05, 7.684699999999794e-05, 7.65839999999976e-05, 7.697200000000154e-05, 7.647200000000104e-05, 7.652799999999932e-05, 7.697200000000154e-05, 7.716599999999657e-05, 7.684700000000488e-05, 7.640199999999625e-05, 7.650000000000018e-05, 7.687499999999708e-05, 7.690300000000316e-05, 7.684699999999794e-05, 7.719500000000212e-05, 7.669400000000215e-05, 7.680499999999923e-05, 7.702799999999982e-05, 7.654199999999889e-05, 7.736100000000495e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.711199999999724e-05, 7.698600000000111e-05, 7.640300000000266e-05, 7.686100000000445e-05, 7.70969999999982e-05, 7.716600000000351e-05, 7.680599999999871e-05, 7.65839999999976e-05, 7.722300000000126e-05, 7.638899999999615e-05, 7.651399999999975e-05, 7.670900000000119e-05, 7.722200000000179e-05, 7.634700000000438e-05, 7.65839999999976e-05, 7.7151999999997e-05, 7.719400000000265e-05, 7.670799999999478e-05, 7.640299999999572e-05, 7.702700000000035e-05, 7.711099999999776e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.449" endtime="20201029 18:15:43.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.437" endtime="20201029 18:15:43.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.465" endtime="20201029 18:15:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.460" endtime="20201029 18:15:43.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.458" endtime="20201029 18:15:43.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.972" endtime="20201029 18:15:43.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.971" endtime="20201029 18:15:43.490"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.512" endtime="20201029 18:15:43.531"></status>
</kw>
<msg timestamp="20201029 18:15:43.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.509" endtime="20201029 18:15:43.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.535" endtime="20201029 18:15:43.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.541" endtime="20201029 18:15:43.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.502" endtime="20201029 18:15:43.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.496" endtime="20201029 18:15:43.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.564" endtime="20201029 18:15:43.906"></status>
</kw>
<msg timestamp="20201029 18:15:43.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039386556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039464528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.561" endtime="20201029 18:15:43.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039386556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039464528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.915" endtime="20201029 18:15:43.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.934" endtime="20201029 18:15:43.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.553" endtime="20201029 18:15:43.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.549" endtime="20201029 18:15:43.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.951" level="INFO">${RESULT} = [{'diff': 7.79719999999956e-05}, {'diff': 7.740299999999672e-05}, {'diff': 7.81389999999979e-05}, {'diff': 7.831999999999978e-05}, {'diff': 7.791600000000426e-05}, {'diff': 7.809700000000613e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:43.942" endtime="20201029 18:15:43.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.960" level="INFO">${ACCURACY} = {'diff': [7.79719999999956e-05, 7.740299999999672e-05, 7.81389999999979e-05, 7.831999999999978e-05, 7.791600000000426e-05, 7.809700000000613e-05, 7.754199999999989e-05, 7.806999999999953e-05, 7.812500...</msg>
<status status="PASS" starttime="20201029 18:15:43.953" endtime="20201029 18:15:43.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.971" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.968" endtime="20201029 18:15:43.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.976" level="INFO">VALUE: [7.79719999999956e-05, 7.740299999999672e-05, 7.81389999999979e-05, 7.831999999999978e-05, 7.791600000000426e-05, 7.809700000000613e-05, 7.754199999999989e-05, 7.806999999999953e-05, 7.812500000000527e-05, 7.784699999999894e-05, 7.75969999999987e-05, 7.834800000000586e-05, 7.775000000000143e-05, 7.813800000000537e-05, 7.740299999999672e-05, 7.7764000000001e-05, 7.804100000000092e-05, 7.811099999999876e-05, 7.834699999999944e-05, 7.82770000000016e-05, 7.74440000000029e-05, 7.754200000000683e-05, 7.766700000000348e-05, 7.798599999999517e-05, 7.768100000000305e-05, 7.77770000000011e-05, 7.829100000000117e-05, 7.775000000000143e-05, 7.812499999999833e-05, 7.7764000000001e-05, 7.823600000000236e-05, 7.766699999999654e-05, 7.805599999999996e-05, 7.818099999999661e-05, 7.82640000000015e-05, 7.833399999999935e-05, 7.78189999999998e-05, 7.784699999999894e-05, 7.834799999999892e-05, 7.811099999999876e-05, 7.795900000000244e-05, 7.816699999999704e-05, 7.748600000000161e-05, 7.806900000000006e-05, 7.822200000000279e-05, 7.74719999999951e-05, 7.7458999999995e-05, 7.791700000000373e-05, 7.780599999999971e-05, 7.811199999999824e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.973" endtime="20201029 18:15:43.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.962" endtime="20201029 18:15:43.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.989" endtime="20201029 18:15:44.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.984" endtime="20201029 18:15:44.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.982" endtime="20201029 18:15:44.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.492" endtime="20201029 18:15:44.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.491" endtime="20201029 18:15:44.014"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.036" endtime="20201029 18:15:44.057"></status>
</kw>
<msg timestamp="20201029 18:15:44.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.033" endtime="20201029 18:15:44.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.060" endtime="20201029 18:15:44.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.066" endtime="20201029 18:15:44.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.026" endtime="20201029 18:15:44.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.020" endtime="20201029 18:15:44.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.090" endtime="20201029 18:15:44.427"></status>
</kw>
<msg timestamp="20201029 18:15:44.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041162986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.086" endtime="20201029 18:15:44.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041083861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041162986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.437" endtime="20201029 18:15:44.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.455" endtime="20201029 18:15:44.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.079" endtime="20201029 18:15:44.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.074" endtime="20201029 18:15:44.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.472" level="INFO">${RESULT} = [{'diff': 7.912499999999933e-05}, {'diff': 7.922200000000379e-05}, {'diff': 7.84169999999973e-05}, {'diff': 7.886099999999951e-05}, {'diff': 7.894399999999746e-05}, {'diff': 7.834700000000638e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:44.464" endtime="20201029 18:15:44.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.482" level="INFO">${ACCURACY} = {'diff': [7.912499999999933e-05, 7.922200000000379e-05, 7.84169999999973e-05, 7.886099999999951e-05, 7.894399999999746e-05, 7.834700000000638e-05, 7.872299999999582e-05, 7.922200000000379e-05, 7.84579...</msg>
<status status="PASS" starttime="20201029 18:15:44.474" endtime="20201029 18:15:44.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.493" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.490" endtime="20201029 18:15:44.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.498" level="INFO">VALUE: [7.912499999999933e-05, 7.922200000000379e-05, 7.84169999999973e-05, 7.886099999999951e-05, 7.894399999999746e-05, 7.834700000000638e-05, 7.872299999999582e-05, 7.922200000000379e-05, 7.845799999999653e-05, 7.880600000000071e-05, 7.84169999999973e-05, 7.858300000000012e-05, 7.911099999999976e-05, 7.89169999999978e-05, 7.894399999999746e-05, 7.900000000000268e-05, 7.925000000000293e-05, 7.929200000000164e-05, 7.888800000000612e-05, 7.836199999999849e-05, 7.872200000000329e-05, 7.90970000000002e-05, 7.911099999999976e-05, 7.905500000000149e-05, 7.93190000000013e-05, 7.89169999999978e-05, 7.890299999999822e-05, 7.922299999999632e-05, 7.925000000000293e-05, 7.845799999999653e-05, 7.893099999999736e-05, 7.938899999999915e-05, 7.927799999999513e-05, 7.884699999999994e-05, 7.841700000000423e-05, 7.870900000000319e-05, 7.893099999999736e-05, 7.912499999999933e-05, 7.875000000000243e-05, 7.855600000000046e-05, 7.934700000000044e-05, 7.933300000000088e-05, 7.92640000000025e-05, 7.918099999999761e-05, 7.898600000000311e-05, 7.851399999999481e-05, 7.858300000000012e-05, 7.83890000000051e-05, 7.836099999999901e-05, 7.88190000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.495" endtime="20201029 18:15:44.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.483" endtime="20201029 18:15:44.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.519" endtime="20201029 18:15:44.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.513" endtime="20201029 18:15:44.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.511" endtime="20201029 18:15:44.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.016" endtime="20201029 18:15:44.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.015" endtime="20201029 18:15:44.544"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.566" endtime="20201029 18:15:44.585"></status>
</kw>
<msg timestamp="20201029 18:15:44.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.563" endtime="20201029 18:15:44.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.589" endtime="20201029 18:15:44.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.595" endtime="20201029 18:15:44.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.556" endtime="20201029 18:15:44.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.550" endtime="20201029 18:15:44.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.618" endtime="20201029 18:15:44.953"></status>
</kw>
<msg timestamp="20201029 18:15:44.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039242583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039322181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.615" endtime="20201029 18:15:44.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039242583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039322181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.962" endtime="20201029 18:15:44.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.980" endtime="20201029 18:15:44.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.607" endtime="20201029 18:15:44.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.603" endtime="20201029 18:15:44.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.997" level="INFO">${RESULT} = [{'diff': 7.959800000000017e-05}, {'diff': 7.977799999999563e-05}, {'diff': 7.96389999999994e-05}, {'diff': 8.023599999999742e-05}, {'diff': 7.951399999999581e-05}, {'diff': 8.001400000000325e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:44.989" endtime="20201029 18:15:44.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.008" level="INFO">${ACCURACY} = {'diff': [7.959800000000017e-05, 7.977799999999563e-05, 7.96389999999994e-05, 8.023599999999742e-05, 7.951399999999581e-05, 8.001400000000325e-05, 7.967999999999864e-05, 7.986100000000051e-05, 7.99309...</msg>
<status status="PASS" starttime="20201029 18:15:45.000" endtime="20201029 18:15:45.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.019" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.017" endtime="20201029 18:15:45.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.025" level="INFO">VALUE: [7.959800000000017e-05, 7.977799999999563e-05, 7.96389999999994e-05, 8.023599999999742e-05, 7.951399999999581e-05, 8.001400000000325e-05, 7.967999999999864e-05, 7.986100000000051e-05, 7.993099999999836e-05, 8.006900000000206e-05, 8.031899999999537e-05, 8.001400000000325e-05, 7.958300000000113e-05, 7.981899999999487e-05, 7.994500000000487e-05, 7.984700000000094e-05, 8.020799999999828e-05, 8.005599999999502e-05, 8.03049999999958e-05, 7.94169999999983e-05, 7.99589999999975e-05, 7.96389999999994e-05, 7.997200000000454e-05, 8.036100000000101e-05, 8.004200000000239e-05, 7.974999999999649e-05, 8.02919999999957e-05, 7.999999999999674e-05, 7.957000000000103e-05, 7.963799999999993e-05, 8.03049999999958e-05, 8.027799999999613e-05, 7.941600000000576e-05, 7.954099999999548e-05, 7.998599999999717e-05, 7.937499999999958e-05, 7.99440000000054e-05, 7.954199999999495e-05, 7.977800000000257e-05, 8.0152e-05, 8.008299999999469e-05, 7.994499999999793e-05, 8.005499999999555e-05, 8.001399999999631e-05, 7.975000000000343e-05, 7.952800000000232e-05, 8.036100000000101e-05, 7.96389999999994e-05, 7.972199999999735e-05, 8.029200000000264e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.022" endtime="20201029 18:15:45.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.010" endtime="20201029 18:15:45.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.037" endtime="20201029 18:15:45.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.033" endtime="20201029 18:15:45.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.030" endtime="20201029 18:15:45.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.546" endtime="20201029 18:15:45.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.545" endtime="20201029 18:15:45.062"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.085" endtime="20201029 18:15:45.103"></status>
</kw>
<msg timestamp="20201029 18:15:45.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.081" endtime="20201029 18:15:45.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.107" endtime="20201029 18:15:45.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.113" endtime="20201029 18:15:45.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.074" endtime="20201029 18:15:45.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.068" endtime="20201029 18:15:45.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.137" endtime="20201029 18:15:45.472"></status>
</kw>
<msg timestamp="20201029 18:15:45.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039246, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039326486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:45.133" endtime="20201029 18:15:45.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039246, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039326486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:45.482" endtime="20201029 18:15:45.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.500" endtime="20201029 18:15:45.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.126" endtime="20201029 18:15:45.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.121" endtime="20201029 18:15:45.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.517" level="INFO">${RESULT} = [{'diff': 8.048599999999767e-05}, {'diff': 8.050000000000418e-05}, {'diff': 8.068099999999911e-05}, {'diff': 8.087500000000108e-05}, {'diff': 8.118099999999961e-05}, {'diff': 8.073600000000486e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:45.508" endtime="20201029 18:15:45.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.528" level="INFO">${ACCURACY} = {'diff': [8.048599999999767e-05, 8.050000000000418e-05, 8.068099999999911e-05, 8.087500000000108e-05, 8.118099999999961e-05, 8.073600000000486e-05, 8.126399999999756e-05, 8.083300000000238e-05, 8.0721...</msg>
<status status="PASS" starttime="20201029 18:15:45.519" endtime="20201029 18:15:45.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.539" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.537" endtime="20201029 18:15:45.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.545" level="INFO">VALUE: [8.048599999999767e-05, 8.050000000000418e-05, 8.068099999999911e-05, 8.087500000000108e-05, 8.118099999999961e-05, 8.073600000000486e-05, 8.126399999999756e-05, 8.083300000000238e-05, 8.072199999999835e-05, 8.118099999999961e-05, 8.05970000000017e-05, 8.049999999999724e-05, 8.099999999999774e-05, 8.05970000000017e-05, 8.11249999999944e-05, 8.076399999999706e-05, 8.086100000000151e-05, 8.059800000000117e-05, 8.115300000000047e-05, 8.116700000000004e-05, 8.077800000000357e-05, 8.10970000000022e-05, 8.084800000000142e-05, 8.058299999999519e-05, 8.101400000000425e-05, 8.120899999999875e-05, 8.104099999999698e-05, 8.094399999999946e-05, 8.101400000000425e-05, 8.073599999999792e-05, 8.083300000000238e-05, 8.099999999999774e-05, 8.055499999999605e-05, 8.138900000000115e-05, 8.043000000000633e-05, 8.06390000000004e-05, 8.101400000000425e-05, 8.112500000000133e-05, 8.094499999999893e-05, 8.044399999999896e-05, 8.106899999999612e-05, 8.098599999999817e-05, 8.068099999999911e-05, 8.115300000000047e-05, 8.065299999999997e-05, 8.098599999999817e-05, 8.099999999999774e-05, 8.10970000000022e-05, 8.136100000000202e-05, 8.131899999999637e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.542" endtime="20201029 18:15:45.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.530" endtime="20201029 18:15:45.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.557" endtime="20201029 18:15:45.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.553" endtime="20201029 18:15:45.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.550" endtime="20201029 18:15:45.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.064" endtime="20201029 18:15:45.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.063" endtime="20201029 18:15:45.582"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.605" endtime="20201029 18:15:45.624"></status>
</kw>
<msg timestamp="20201029 18:15:45.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.601" endtime="20201029 18:15:45.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.627" endtime="20201029 18:15:45.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.633" endtime="20201029 18:15:45.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.594" endtime="20201029 18:15:45.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.588" endtime="20201029 18:15:45.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.657" endtime="20201029 18:15:45.993"></status>
</kw>
<msg timestamp="20201029 18:15:46.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039249042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039331444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.653" endtime="20201029 18:15:46.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039249042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039331444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.003" endtime="20201029 18:15:46.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.022" endtime="20201029 18:15:46.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.646" endtime="20201029 18:15:46.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.642" endtime="20201029 18:15:46.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.039" level="INFO">${RESULT} = [{'diff': 8.240200000000225e-05}, {'diff': 8.211100000000277e-05}, {'diff': 8.211100000000277e-05}, {'diff': 8.201399999999831e-05}, {'diff': 8.206899999999712e-05}, {'diff': 8.233300000000388e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:46.030" endtime="20201029 18:15:46.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.048" level="INFO">${ACCURACY} = {'diff': [8.240200000000225e-05, 8.211100000000277e-05, 8.211100000000277e-05, 8.201399999999831e-05, 8.206899999999712e-05, 8.233300000000388e-05, 8.227799999999813e-05, 8.165300000000097e-05, 8.2138...</msg>
<status status="PASS" starttime="20201029 18:15:46.041" endtime="20201029 18:15:46.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.059" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.057" endtime="20201029 18:15:46.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.064" level="INFO">VALUE: [8.240200000000225e-05, 8.211100000000277e-05, 8.211100000000277e-05, 8.201399999999831e-05, 8.206899999999712e-05, 8.233300000000388e-05, 8.227799999999813e-05, 8.165300000000097e-05, 8.213899999999497e-05, 8.183400000000285e-05, 8.198599999999917e-05, 8.219500000000018e-05, 8.198599999999917e-05, 8.224999999999899e-05, 8.145799999999953e-05, 8.148599999999867e-05, 8.161100000000227e-05, 8.172299999999882e-05, 8.20269999999984e-05, 8.212500000000234e-05, 8.215299999999454e-05, 8.183299999999644e-05, 8.143000000000039e-05, 8.158299999999619e-05, 8.222199999999985e-05, 8.201399999999831e-05, 8.222199999999985e-05, 8.202799999999788e-05, 8.208300000000363e-05, 8.205599999999702e-05, 8.199999999999874e-05, 8.177800000000457e-05, 8.227699999999866e-05, 8.188900000000165e-05, 8.156899999999662e-05, 8.190300000000122e-05, 8.237499999999565e-05, 8.233299999999694e-05, 8.180600000000371e-05, 8.215300000000147e-05, 8.14170000000003e-05, 8.21669999999941e-05, 8.187500000000208e-05, 8.225000000000593e-05, 8.219500000000018e-05, 8.149999999999824e-05, 8.202799999999788e-05, 8.145799999999953e-05, 8.199999999999874e-05, 8.19589999999995e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.061" endtime="20201029 18:15:46.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.050" endtime="20201029 18:15:46.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.077" endtime="20201029 18:15:46.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.073" endtime="20201029 18:15:46.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.070" endtime="20201029 18:15:46.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.584" endtime="20201029 18:15:46.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.583" endtime="20201029 18:15:46.102"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.124" endtime="20201029 18:15:46.145"></status>
</kw>
<msg timestamp="20201029 18:15:46.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.121" endtime="20201029 18:15:46.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.148" endtime="20201029 18:15:46.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.154" endtime="20201029 18:15:46.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.114" endtime="20201029 18:15:46.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.108" endtime="20201029 18:15:46.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.178" endtime="20201029 18:15:46.552"></status>
</kw>
<msg timestamp="20201029 18:15:46.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040872417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.174" endtime="20201029 18:15:46.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040872417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.569" endtime="20201029 18:15:46.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.596" endtime="20201029 18:15:46.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.167" endtime="20201029 18:15:46.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.163" endtime="20201029 18:15:46.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.614" level="INFO">${RESULT} = [{'diff': 8.333400000000435e-05}, {'diff': 8.337499999999665e-05}, {'diff': 8.29720000000006e-05}, {'diff': 8.297300000000007e-05}, {'diff': 8.261099999999633e-05}, {'diff': 8.309699999999726e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:46.605" endtime="20201029 18:15:46.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.623" level="INFO">${ACCURACY} = {'diff': [8.333400000000435e-05, 8.337499999999665e-05, 8.29720000000006e-05, 8.297300000000007e-05, 8.261099999999633e-05, 8.309699999999726e-05, 8.320900000000075e-05, 8.309699999999726e-05, 8.33750...</msg>
<status status="PASS" starttime="20201029 18:15:46.616" endtime="20201029 18:15:46.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.634" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.632" endtime="20201029 18:15:46.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.639" level="INFO">VALUE: [8.333400000000435e-05, 8.337499999999665e-05, 8.29720000000006e-05, 8.297300000000007e-05, 8.261099999999633e-05, 8.309699999999726e-05, 8.320900000000075e-05, 8.309699999999726e-05, 8.337500000000359e-05, 8.3152000000003e-05, 8.323600000000042e-05, 8.299999999999974e-05, 8.326399999999956e-05, 8.304199999999845e-05, 8.326300000000009e-05, 8.244400000000096e-05, 8.302699999999941e-05, 8.24720000000001e-05, 8.265299999999504e-05, 8.241600000000182e-05, 8.269500000000068e-05, 8.273599999999992e-05, 8.244400000000096e-05, 8.258299999999719e-05, 8.244400000000096e-05, 8.330599999999827e-05, 8.322200000000085e-05, 8.313899999999597e-05, 8.257000000000403e-05, 8.273599999999992e-05, 8.273599999999992e-05, 8.237500000000259e-05, 8.265300000000197e-05, 8.24170000000013e-05, 8.273599999999992e-05, 8.244500000000043e-05, 8.323600000000042e-05, 8.32919999999987e-05, 8.298600000000017e-05, 8.287499999999615e-05, 8.273599999999992e-05, 8.33049999999988e-05, 8.305599999999802e-05, 8.241600000000182e-05, 8.315300000000247e-05, 8.273599999999992e-05, 8.252699999999891e-05, 8.319400000000171e-05, 8.273599999999992e-05, 8.311099999999683e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.636" endtime="20201029 18:15:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.625" endtime="20201029 18:15:46.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.653" endtime="20201029 18:15:46.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.647" endtime="20201029 18:15:46.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.645" endtime="20201029 18:15:46.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.104" endtime="20201029 18:15:46.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.103" endtime="20201029 18:15:46.678"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.701" endtime="20201029 18:15:46.722"></status>
</kw>
<msg timestamp="20201029 18:15:46.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.698" endtime="20201029 18:15:46.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.725" endtime="20201029 18:15:46.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.733" endtime="20201029 18:15:46.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.691" endtime="20201029 18:15:46.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.685" endtime="20201029 18:15:46.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.757" endtime="20201029 18:15:47.105"></status>
</kw>
<msg timestamp="20201029 18:15:47.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039325278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0394095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:46.754" endtime="20201029 18:15:47.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039325278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0394095, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:47.115" endtime="20201029 18:15:47.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.133" endtime="20201029 18:15:47.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.747" endtime="20201029 18:15:47.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.742" endtime="20201029 18:15:47.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.150" level="INFO">${RESULT} = [{'diff': 8.422200000000185e-05}, {'diff': 8.400000000000074e-05}, {'diff': 8.383300000000538e-05}, {'diff': 8.391699999999586e-05}, {'diff': 8.376400000000006e-05}, {'diff': 8.343000000000239e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:47.142" endtime="20201029 18:15:47.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.161" level="INFO">${ACCURACY} = {'diff': [8.422200000000185e-05, 8.400000000000074e-05, 8.383300000000538e-05, 8.391699999999586e-05, 8.376400000000006e-05, 8.343000000000239e-05, 8.366700000000254e-05, 8.355499999999905e-05, 8.3527...</msg>
<status status="PASS" starttime="20201029 18:15:47.152" endtime="20201029 18:15:47.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.172" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.170" endtime="20201029 18:15:47.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.177" level="INFO">VALUE: [8.422200000000185e-05, 8.400000000000074e-05, 8.383300000000538e-05, 8.391699999999586e-05, 8.376400000000006e-05, 8.343000000000239e-05, 8.366700000000254e-05, 8.355499999999905e-05, 8.352799999999938e-05, 8.386099999999758e-05, 8.398600000000117e-05, 8.348600000000067e-05, 8.440300000000373e-05, 8.404199999999945e-05, 8.43049999999998e-05, 8.341699999999536e-05, 8.340299999999579e-05, 8.377800000000657e-05, 8.413799999999749e-05, 8.411099999999783e-05, 8.41249999999974e-05, 8.348700000000014e-05, 8.36390000000034e-05, 8.427800000000013e-05, 8.41390000000039e-05, 8.437500000000459e-05, 8.397199999999466e-05, 8.41249999999974e-05, 8.438899999999722e-05, 8.365300000000297e-05, 8.422200000000185e-05, 8.386099999999758e-05, 8.376400000000006e-05, 8.400000000000074e-05, 8.369400000000221e-05, 8.438899999999722e-05, 8.398600000000117e-05, 8.36390000000034e-05, 8.401400000000031e-05, 8.415299999999654e-05, 8.369500000000168e-05, 8.401400000000031e-05, 8.420799999999534e-05, 8.398700000000064e-05, 8.348600000000067e-05, 8.390299999999629e-05, 8.365300000000297e-05, 8.402799999999988e-05, 8.368100000000211e-05, 8.390299999999629e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.174" endtime="20201029 18:15:47.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.163" endtime="20201029 18:15:47.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.190" endtime="20201029 18:15:47.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.185" endtime="20201029 18:15:47.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.183" endtime="20201029 18:15:47.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.681" endtime="20201029 18:15:47.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.680" endtime="20201029 18:15:47.215"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.238" endtime="20201029 18:15:47.259"></status>
</kw>
<msg timestamp="20201029 18:15:47.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.234" endtime="20201029 18:15:47.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.262" endtime="20201029 18:15:47.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.268" endtime="20201029 18:15:47.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.227" endtime="20201029 18:15:47.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.221" endtime="20201029 18:15:47.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.292" endtime="20201029 18:15:47.640"></status>
</kw>
<msg timestamp="20201029 18:15:47.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0398275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:47.288" endtime="20201029 18:15:47.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0398275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039912847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:47.649" endtime="20201029 18:15:47.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.667" endtime="20201029 18:15:47.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.281" endtime="20201029 18:15:47.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.276" endtime="20201029 18:15:47.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.685" level="INFO">${RESULT} = [{'diff': 8.53469999999995e-05}, {'diff': 8.530600000000027e-05}, {'diff': 8.526400000000156e-05}, {'diff': 8.508299999999969e-05}, {'diff': 8.520800000000328e-05}, {'diff': 8.502800000000088e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:47.676" endtime="20201029 18:15:47.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.696" level="INFO">${ACCURACY} = {'diff': [8.53469999999995e-05, 8.530600000000027e-05, 8.526400000000156e-05, 8.508299999999969e-05, 8.520800000000328e-05, 8.502800000000088e-05, 8.509699999999926e-05, 8.537499999999865e-05, 8.47920...</msg>
<status status="PASS" starttime="20201029 18:15:47.687" endtime="20201029 18:15:47.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.706" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.704" endtime="20201029 18:15:47.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.712" level="INFO">VALUE: [8.53469999999995e-05, 8.530600000000027e-05, 8.526400000000156e-05, 8.508299999999969e-05, 8.520800000000328e-05, 8.502800000000088e-05, 8.509699999999926e-05, 8.537499999999865e-05, 8.47920000000002e-05, 8.493099999999643e-05, 8.533300000000688e-05, 8.511099999999883e-05, 8.443000000000339e-05, 8.505600000000002e-05, 8.509699999999926e-05, 8.491600000000432e-05, 8.481999999999934e-05, 8.515299999999754e-05, 8.47920000000002e-05, 8.525000000000199e-05, 8.461099999999833e-05, 8.447300000000157e-05, 8.455500000000005e-05, 8.490300000000423e-05, 8.524999999999505e-05, 8.456899999999962e-05, 8.456899999999962e-05, 8.502700000000141e-05, 8.473600000000192e-05, 8.51249999999984e-05, 8.483299999999944e-05, 8.45970000000057e-05, 8.461099999999833e-05, 8.470800000000278e-05, 8.500000000000174e-05, 8.466700000000354e-05, 8.436200000000449e-05, 8.53469999999995e-05, 8.476400000000106e-05, 8.48050000000003e-05, 8.452800000000038e-05, 8.452800000000038e-05, 8.454199999999995e-05, 8.450000000000124e-05, 8.520899999999582e-05, 8.465199999999756e-05, 8.508299999999969e-05, 8.522200000000285e-05, 8.531999999999984e-05, 8.473600000000192e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.709" endtime="20201029 18:15:47.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.697" endtime="20201029 18:15:47.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.724" endtime="20201029 18:15:47.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.720" endtime="20201029 18:15:47.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.718" endtime="20201029 18:15:47.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.217" endtime="20201029 18:15:47.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.216" endtime="20201029 18:15:47.750"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.772" endtime="20201029 18:15:47.793"></status>
</kw>
<msg timestamp="20201029 18:15:47.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.769" endtime="20201029 18:15:47.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.797" endtime="20201029 18:15:47.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.803" endtime="20201029 18:15:47.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.762" endtime="20201029 18:15:47.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.756" endtime="20201029 18:15:47.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.826" endtime="20201029 18:15:48.176"></status>
</kw>
<msg timestamp="20201029 18:15:48.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039603042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039689208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.823" endtime="20201029 18:15:48.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039603042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039689208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.185" endtime="20201029 18:15:48.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.204" endtime="20201029 18:15:48.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.816" endtime="20201029 18:15:48.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.811" endtime="20201029 18:15:48.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.221" level="INFO">${RESULT} = [{'diff': 8.616599999999863e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.551400000000181e-05}, {'diff': 8.638899999999922e-05}, {'diff': 8.570900000000325e-05}, {'diff': 8.56249999999989e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:48.212" endtime="20201029 18:15:48.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.230" level="INFO">${ACCURACY} = {'diff': [8.616599999999863e-05, 8.636100000000008e-05, 8.551400000000181e-05, 8.638899999999922e-05, 8.570900000000325e-05, 8.56249999999989e-05, 8.627800000000213e-05, 8.540199999999831e-05, 8.54440...</msg>
<status status="PASS" starttime="20201029 18:15:48.223" endtime="20201029 18:15:48.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.241" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.239" endtime="20201029 18:15:48.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.246" level="INFO">VALUE: [8.616599999999863e-05, 8.636100000000008e-05, 8.551400000000181e-05, 8.638899999999922e-05, 8.570900000000325e-05, 8.56249999999989e-05, 8.627800000000213e-05, 8.540199999999831e-05, 8.544400000000396e-05, 8.555600000000052e-05, 8.637499999999965e-05, 8.590299999999829e-05, 8.563799999999899e-05, 8.580599999999383e-05, 8.600000000000274e-05, 8.538800000000568e-05, 8.552800000000138e-05, 8.634699999999357e-05, 8.562500000000584e-05, 8.563800000000593e-05, 8.631900000000137e-05, 8.545800000000353e-05, 8.551399999999487e-05, 8.558300000000019e-05, 8.593000000000489e-05, 8.555500000000105e-05, 8.56249999999989e-05, 8.591599999999838e-05, 8.554199999999401e-05, 8.554200000000095e-05, 8.575000000000249e-05, 8.58050000000013e-05, 8.595899999999657e-05, 8.584799999999948e-05, 8.540299999999779e-05, 8.63470000000005e-05, 8.622200000000385e-05, 8.624999999999605e-05, 8.61249999999994e-05, 8.544399999999702e-05, 8.573599999999598e-05, 8.615299999999854e-05, 8.605600000000102e-05, 8.551400000000181e-05, 8.555500000000105e-05, 8.56669999999976e-05, 8.561099999999933e-05, 8.631900000000137e-05, 8.59999999999958e-05, 8.561099999999933e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.243" endtime="20201029 18:15:48.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.232" endtime="20201029 18:15:48.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.259" endtime="20201029 18:15:48.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.254" endtime="20201029 18:15:48.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.252" endtime="20201029 18:15:48.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.752" endtime="20201029 18:15:48.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.751" endtime="20201029 18:15:48.284"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.306" endtime="20201029 18:15:48.329"></status>
</kw>
<msg timestamp="20201029 18:15:48.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.303" endtime="20201029 18:15:48.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.333" endtime="20201029 18:15:48.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.339" endtime="20201029 18:15:48.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.296" endtime="20201029 18:15:48.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.290" endtime="20201029 18:15:48.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.362" endtime="20201029 18:15:48.709"></status>
</kw>
<msg timestamp="20201029 18:15:48.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041204889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.359" endtime="20201029 18:15:48.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041204889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.719" endtime="20201029 18:15:48.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.737" endtime="20201029 18:15:48.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.352" endtime="20201029 18:15:48.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.347" endtime="20201029 18:15:48.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.754" level="INFO">${RESULT} = [{'diff': 8.676400000000306e-05}, {'diff': 8.6847000000001e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.716599999999963e-05}, {'diff': 8.645799999999759e-05}, {'diff': 8.680600000000177e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:48.745" endtime="20201029 18:15:48.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.763" level="INFO">${ACCURACY} = {'diff': [8.676400000000306e-05, 8.6847000000001e-05, 8.713899999999997e-05, 8.716599999999963e-05, 8.645799999999759e-05, 8.680600000000177e-05, 8.665199999999956e-05, 8.669499999999775e-05, 8.644499...</msg>
<status status="PASS" starttime="20201029 18:15:48.756" endtime="20201029 18:15:48.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.774" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.772" endtime="20201029 18:15:48.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.780" level="INFO">VALUE: [8.676400000000306e-05, 8.6847000000001e-05, 8.713899999999997e-05, 8.716599999999963e-05, 8.645799999999759e-05, 8.680600000000177e-05, 8.665199999999956e-05, 8.669499999999775e-05, 8.64449999999975e-05, 8.676299999999665e-05, 8.68050000000023e-05, 8.651399999999587e-05, 8.686100000000058e-05, 8.645799999999759e-05, 8.709800000000073e-05, 8.670799999999784e-05, 8.661100000000033e-05, 8.676299999999665e-05, 8.729100000000323e-05, 8.670799999999784e-05, 8.718099999999868e-05, 8.71669999999991e-05, 8.686100000000058e-05, 8.731899999999543e-05, 8.654200000000195e-05, 8.66249999999999e-05, 8.708300000000169e-05, 8.659700000000076e-05, 8.720799999999834e-05, 8.683300000000144e-05, 8.643100000000487e-05, 8.650000000000324e-05, 8.66249999999999e-05, 8.7332999999995e-05, 8.730600000000227e-05, 8.697199999999766e-05, 8.716599999999963e-05, 8.680499999999536e-05, 8.64869999999962e-05, 8.676400000000306e-05, 8.732000000000184e-05, 8.645799999999759e-05, 8.640299999999879e-05, 8.702800000000288e-05, 8.73050000000028e-05, 8.67370000000034e-05, 8.686100000000058e-05, 8.711100000000083e-05, 8.686200000000005e-05, 8.669399999999827e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.777" endtime="20201029 18:15:48.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.765" endtime="20201029 18:15:48.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.798" endtime="20201029 18:15:48.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.788" endtime="20201029 18:15:48.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.785" endtime="20201029 18:15:48.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.286" endtime="20201029 18:15:48.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.285" endtime="20201029 18:15:48.823"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.846" endtime="20201029 18:15:48.865"></status>
</kw>
<msg timestamp="20201029 18:15:48.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.842" endtime="20201029 18:15:48.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.868" endtime="20201029 18:15:48.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.874" endtime="20201029 18:15:48.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.835" endtime="20201029 18:15:48.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.829" endtime="20201029 18:15:48.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.898" endtime="20201029 18:15:49.232"></status>
</kw>
<msg timestamp="20201029 18:15:49.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039310806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.894" endtime="20201029 18:15:49.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039310806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.242" endtime="20201029 18:15:49.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.260" endtime="20201029 18:15:49.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.887" endtime="20201029 18:15:49.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.882" endtime="20201029 18:15:49.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.277" level="INFO">${RESULT} = [{'diff': 8.823699999999796e-05}, {'diff': 8.802700000000441e-05}, {'diff': 8.823599999999848e-05}, {'diff': 8.748700000000414e-05}, {'diff': 8.763900000000047e-05}, {'diff': 8.740299999999979e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:49.268" endtime="20201029 18:15:49.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.288" level="INFO">${ACCURACY} = {'diff': [8.823699999999796e-05, 8.802700000000441e-05, 8.823599999999848e-05, 8.748700000000414e-05, 8.763900000000047e-05, 8.740299999999979e-05, 8.815200000000106e-05, 8.811100000000183e-05, 8.8236...</msg>
<status status="PASS" starttime="20201029 18:15:49.279" endtime="20201029 18:15:49.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.299" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.296" endtime="20201029 18:15:49.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.304" level="INFO">VALUE: [8.823699999999796e-05, 8.802700000000441e-05, 8.823599999999848e-05, 8.748700000000414e-05, 8.763900000000047e-05, 8.740299999999979e-05, 8.815200000000106e-05, 8.811100000000183e-05, 8.823600000000542e-05, 8.780499999999636e-05, 8.788900000000072e-05, 8.752800000000338e-05, 8.784799999999454e-05, 8.758300000000219e-05, 8.791699999999986e-05, 8.827799999999719e-05, 8.76669999999996e-05, 8.824999999999805e-05, 8.805500000000355e-05, 8.743100000000587e-05, 8.748599999999773e-05, 8.742999999999945e-05, 8.752800000000338e-05, 8.738900000000022e-05, 8.786100000000158e-05, 8.768099999999918e-05, 8.757000000000209e-05, 8.82920000000037e-05, 8.752799999999644e-05, 8.76799999999997e-05, 8.793099999999943e-05, 8.74999999999973e-05, 8.763899999999353e-05, 8.777800000000363e-05, 8.834699999999557e-05, 8.7944999999999e-05, 8.765300000000004e-05, 8.745899999999807e-05, 8.82920000000037e-05, 8.79999999999978e-05, 8.745799999999859e-05, 8.808400000000216e-05, 8.74999999999973e-05, 8.805600000000302e-05, 8.79999999999978e-05, 8.751399999999687e-05, 8.761100000000133e-05, 8.819499999999925e-05, 8.744400000000596e-05, 8.805599999999608e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.301" endtime="20201029 18:15:49.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.290" endtime="20201029 18:15:49.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.316" endtime="20201029 18:15:49.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.312" endtime="20201029 18:15:49.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.310" endtime="20201029 18:15:49.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.825" endtime="20201029 18:15:49.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.824" endtime="20201029 18:15:49.341"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.364" endtime="20201029 18:15:49.383"></status>
</kw>
<msg timestamp="20201029 18:15:49.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.361" endtime="20201029 18:15:49.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.387" endtime="20201029 18:15:49.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.393" endtime="20201029 18:15:49.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.354" endtime="20201029 18:15:49.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.348" endtime="20201029 18:15:49.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.416" endtime="20201029 18:15:49.756"></status>
</kw>
<msg timestamp="20201029 18:15:49.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039182542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039271847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.413" endtime="20201029 18:15:49.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039182542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039271847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.765" endtime="20201029 18:15:49.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.783" endtime="20201029 18:15:49.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.406" endtime="20201029 18:15:49.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.401" endtime="20201029 18:15:49.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.801" level="INFO">${RESULT} = [{'diff': 8.930499999999786e-05}, {'diff': 8.93050000000048e-05}, {'diff': 8.898599999999923e-05}, {'diff': 8.905600000000402e-05}, {'diff': 8.905499999999761e-05}, {'diff': 8.929199999999776e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:49.792" endtime="20201029 18:15:49.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.812" level="INFO">${ACCURACY} = {'diff': [8.930499999999786e-05, 8.93050000000048e-05, 8.898599999999923e-05, 8.905600000000402e-05, 8.905499999999761e-05, 8.929199999999776e-05, 8.872199999999941e-05, 8.924999999999905e-05, 8.90559...</msg>
<status status="PASS" starttime="20201029 18:15:49.803" endtime="20201029 18:15:49.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.823" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.821" endtime="20201029 18:15:49.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.828" level="INFO">VALUE: [8.930499999999786e-05, 8.93050000000048e-05, 8.898599999999923e-05, 8.905600000000402e-05, 8.905499999999761e-05, 8.929199999999776e-05, 8.872199999999941e-05, 8.924999999999905e-05, 8.905599999999708e-05, 8.881900000000387e-05, 8.890199999999487e-05, 8.922199999999991e-05, 8.859700000000276e-05, 8.902799999999794e-05, 8.877799999999769e-05, 8.88050000000043e-05, 8.880600000000377e-05, 8.91250000000024e-05, 8.858300000000319e-05, 8.854099999999754e-05, 8.844400000000002e-05, 8.851399999999787e-05, 8.91670000000011e-05, 8.922299999999939e-05, 8.911099999999589e-05, 8.877799999999769e-05, 8.888900000000172e-05, 8.919400000000077e-05, 8.847199999999916e-05, 8.912499999999546e-05, 8.865200000000156e-05, 8.841600000000088e-05, 8.901399999999837e-05, 8.895800000000009e-05, 8.927799999999819e-05, 8.909800000000273e-05, 8.88199999999964e-05, 8.927800000000513e-05, 8.91529999999946e-05, 8.848599999999873e-05, 8.894399999999358e-05, 8.911100000000283e-05, 8.930599999999733e-05, 8.869400000000027e-05, 8.890299999999435e-05, 8.905499999999761e-05, 8.870899999999932e-05, 8.880499999999736e-05, 8.895800000000009e-05, 8.92920000000047e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.825" endtime="20201029 18:15:49.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.814" endtime="20201029 18:15:49.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.841" endtime="20201029 18:15:49.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.836" endtime="20201029 18:15:49.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.834" endtime="20201029 18:15:49.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.344" endtime="20201029 18:15:49.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.342" endtime="20201029 18:15:49.866"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.889" endtime="20201029 18:15:49.910"></status>
</kw>
<msg timestamp="20201029 18:15:49.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.885" endtime="20201029 18:15:49.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.913" endtime="20201029 18:15:49.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.919" endtime="20201029 18:15:49.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.878" endtime="20201029 18:15:49.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.872" endtime="20201029 18:15:49.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.943" endtime="20201029 18:15:50.282"></status>
</kw>
<msg timestamp="20201029 18:15:50.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039619278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039708833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.939" endtime="20201029 18:15:50.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039619278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039708833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.291" endtime="20201029 18:15:50.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.310" endtime="20201029 18:15:50.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.932" endtime="20201029 18:15:50.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.927" endtime="20201029 18:15:50.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.327" level="INFO">${RESULT} = [{'diff': 8.955499999999811e-05}, {'diff': 9.036100000000408e-05}, {'diff': 8.994400000000152e-05}, {'diff': 8.955599999999758e-05}, {'diff': 9.002799999999894e-05}, {'diff': 9.030599999999833e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:50.318" endtime="20201029 18:15:50.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.336" level="INFO">${ACCURACY} = {'diff': [8.955499999999811e-05, 9.036100000000408e-05, 8.994400000000152e-05, 8.955599999999758e-05, 9.002799999999894e-05, 9.030599999999833e-05, 8.959700000000376e-05, 9.036099999999714e-05, 9.0208...</msg>
<status status="PASS" starttime="20201029 18:15:50.329" endtime="20201029 18:15:50.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.347" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.345" endtime="20201029 18:15:50.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.352" level="INFO">VALUE: [8.955499999999811e-05, 9.036100000000408e-05, 8.994400000000152e-05, 8.955599999999758e-05, 9.002799999999894e-05, 9.030599999999833e-05, 8.959700000000376e-05, 9.036099999999714e-05, 9.020800000000134e-05, 8.943100000000093e-05, 8.994400000000152e-05, 8.987499999999621e-05, 8.984699999999707e-05, 9.004100000000598e-05, 8.976399999999912e-05, 9.009699999999732e-05, 8.94450000000005e-05, 9.029199999999876e-05, 8.995799999999415e-05, 8.969500000000075e-05, 8.99869999999997e-05, 8.977800000000563e-05, 9.023600000000048e-05, 9.005599999999808e-05, 9.008299999999775e-05, 9.019500000000125e-05, 8.965199999999562e-05, 8.952799999999844e-05, 8.995800000000109e-05, 9.005599999999808e-05, 8.96250000000029e-05, 8.969500000000075e-05, 8.941700000000136e-05, 8.938899999999528e-05, 9.025000000000005e-05, 8.981899999999793e-05, 8.941599999999494e-05, 8.983399999999697e-05, 9.011100000000383e-05, 9.006899999999818e-05, 9.033400000000441e-05, 8.95129999999994e-05, 8.974999999999955e-05, 8.968100000000118e-05, 8.981900000000487e-05, 9.020800000000134e-05, 8.98199999999974e-05, 8.951399999999887e-05, 8.961199999999586e-05, 8.970800000000084e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.349" endtime="20201029 18:15:50.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.338" endtime="20201029 18:15:50.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.365" endtime="20201029 18:15:50.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.360" endtime="20201029 18:15:50.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.358" endtime="20201029 18:15:50.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.868" endtime="20201029 18:15:50.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.867" endtime="20201029 18:15:50.390"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.412" endtime="20201029 18:15:50.433"></status>
</kw>
<msg timestamp="20201029 18:15:50.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.409" endtime="20201029 18:15:50.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.436" endtime="20201029 18:15:50.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.443" endtime="20201029 18:15:50.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.402" endtime="20201029 18:15:50.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.396" endtime="20201029 18:15:50.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.467" endtime="20201029 18:15:50.804"></status>
</kw>
<msg timestamp="20201029 18:15:50.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040788181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040878583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.464" endtime="20201029 18:15:50.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040788181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040878583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.813" endtime="20201029 18:15:50.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.832" endtime="20201029 18:15:50.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.456" endtime="20201029 18:15:50.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.451" endtime="20201029 18:15:50.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.849" level="INFO">${RESULT} = [{'diff': 9.040200000000331e-05}, {'diff': 9.126400000000062e-05}, {'diff': 9.076400000000012e-05}, {'diff': 9.058399999999772e-05}, {'diff': 9.088899999999678e-05}, {'diff': 9.048600000000073e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:50.840" endtime="20201029 18:15:50.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.858" level="INFO">${ACCURACY} = {'diff': [9.040200000000331e-05, 9.126400000000062e-05, 9.076400000000012e-05, 9.058399999999772e-05, 9.088899999999678e-05, 9.048600000000073e-05, 9.056899999999868e-05, 9.076400000000012e-05, 9.0875...</msg>
<status status="PASS" starttime="20201029 18:15:50.851" endtime="20201029 18:15:50.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.869" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.867" endtime="20201029 18:15:50.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.874" level="INFO">VALUE: [9.040200000000331e-05, 9.126400000000062e-05, 9.076400000000012e-05, 9.058399999999772e-05, 9.088899999999678e-05, 9.048600000000073e-05, 9.056899999999868e-05, 9.076400000000012e-05, 9.087500000000415e-05, 9.077700000000022e-05, 9.045800000000159e-05, 9.118100000000268e-05, 9.077799999999969e-05, 9.095900000000157e-05, 9.101400000000037e-05, 9.062499999999696e-05, 9.093100000000243e-05, 9.126399999999368e-05, 9.129199999999976e-05, 9.069400000000227e-05, 9.070899999999438e-05, 9.140300000000379e-05, 9.054200000000595e-05, 9.130599999999933e-05, 9.044399999999508e-05, 9.105599999999908e-05, 9.104100000000004e-05, 9.075000000000055e-05, 9.062499999999696e-05, 9.06670000000026e-05, 9.070800000000184e-05, 9.069399999999533e-05, 9.08329999999985e-05, 9.052799999999944e-05, 9.057000000000509e-05, 9.044400000000202e-05, 9.123600000000148e-05, 9.098600000000123e-05, 9.043099999999499e-05, 9.040299999999585e-05, 9.090300000000329e-05, 9.088900000000372e-05, 9.108399999999822e-05, 9.048600000000073e-05, 9.105599999999908e-05, 9.113899999999703e-05, 9.10000000000008e-05, 9.119399999999583e-05, 9.06529999999961e-05, 9.111100000000483e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.871" endtime="20201029 18:15:50.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.860" endtime="20201029 18:15:50.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.888" endtime="20201029 18:15:50.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.882" endtime="20201029 18:15:50.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.880" endtime="20201029 18:15:50.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.392" endtime="20201029 18:15:50.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.391" endtime="20201029 18:15:50.913"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.936" endtime="20201029 18:15:50.955"></status>
</kw>
<msg timestamp="20201029 18:15:50.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.932" endtime="20201029 18:15:50.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.959" endtime="20201029 18:15:50.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.965" endtime="20201029 18:15:50.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.925" endtime="20201029 18:15:50.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.920" endtime="20201029 18:15:50.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.988" endtime="20201029 18:15:51.325"></status>
</kw>
<msg timestamp="20201029 18:15:51.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039429583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.985" endtime="20201029 18:15:51.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039429583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.335" endtime="20201029 18:15:51.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.353" endtime="20201029 18:15:51.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.978" endtime="20201029 18:15:51.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.973" endtime="20201029 18:15:51.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.374" level="INFO">${RESULT} = [{'diff': 9.213899999999803e-05}, {'diff': 9.147200000000216e-05}, {'diff': 9.159799999999829e-05}, {'diff': 9.230600000000033e-05}, {'diff': 9.238899999999828e-05}, {'diff': 9.14450000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:51.364" endtime="20201029 18:15:51.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.384" level="INFO">${ACCURACY} = {'diff': [9.213899999999803e-05, 9.147200000000216e-05, 9.159799999999829e-05, 9.230600000000033e-05, 9.238899999999828e-05, 9.14450000000025e-05, 9.184799999999854e-05, 9.211099999999889e-05, 9.17920...</msg>
<status status="PASS" starttime="20201029 18:15:51.376" endtime="20201029 18:15:51.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.395" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.393" endtime="20201029 18:15:51.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.401" level="INFO">VALUE: [9.213899999999803e-05, 9.147200000000216e-05, 9.159799999999829e-05, 9.230600000000033e-05, 9.238899999999828e-05, 9.14450000000025e-05, 9.184799999999854e-05, 9.211099999999889e-05, 9.179200000000026e-05, 9.237499999999871e-05, 9.23199999999999e-05, 9.197200000000266e-05, 9.183399999999897e-05, 9.144399999999608e-05, 9.18199999999994e-05, 9.229100000000129e-05, 9.218100000000368e-05, 9.15130000000014e-05, 9.147200000000216e-05, 9.241699999999742e-05, 9.156899999999968e-05, 9.195800000000309e-05, 9.219499999999631e-05, 9.159699999999882e-05, 9.177799999999375e-05, 9.186099999999864e-05, 9.177800000000069e-05, 9.198600000000223e-05, 9.197199999999572e-05, 9.165300000000404e-05, 9.209699999999932e-05, 9.226400000000162e-05, 9.183399999999897e-05, 9.176400000000112e-05, 9.158399999999872e-05, 9.215300000000454e-05, 9.223600000000248e-05, 9.148600000000173e-05, 9.184699999999907e-05, 9.236099999999914e-05, 9.193099999999649e-05, 9.208299999999975e-05, 9.219399999999683e-05, 9.158299999999925e-05, 9.168099999999624e-05, 9.190199999999787e-05, 9.190300000000429e-05, 9.16529999999971e-05, 9.234799999999904e-05, 9.187499999999821e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.398" endtime="20201029 18:15:51.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.386" endtime="20201029 18:15:51.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.413" endtime="20201029 18:15:51.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.409" endtime="20201029 18:15:51.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.406" endtime="20201029 18:15:51.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.915" endtime="20201029 18:15:51.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.914" endtime="20201029 18:15:51.438"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.461" endtime="20201029 18:15:51.481"></status>
</kw>
<msg timestamp="20201029 18:15:51.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.458" endtime="20201029 18:15:51.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.484" endtime="20201029 18:15:51.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.491" endtime="20201029 18:15:51.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.451" endtime="20201029 18:15:51.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.445" endtime="20201029 18:15:51.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.515" endtime="20201029 18:15:51.850"></status>
</kw>
<msg timestamp="20201029 18:15:51.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039423694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039516319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.512" endtime="20201029 18:15:51.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039423694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039516319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.860" endtime="20201029 18:15:51.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.878" endtime="20201029 18:15:51.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.504" endtime="20201029 18:15:51.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.499" endtime="20201029 18:15:51.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.896" level="INFO">${RESULT} = [{'diff': 9.262499999999896e-05}, {'diff': 9.304200000000151e-05}, {'diff': 9.252700000000197e-05}, {'diff': 9.275000000000255e-05}, {'diff': 9.313899999999903e-05}, {'diff': 9.334700000000057e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:51.887" endtime="20201029 18:15:51.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.907" level="INFO">${ACCURACY} = {'diff': [9.262499999999896e-05, 9.304200000000151e-05, 9.252700000000197e-05, 9.275000000000255e-05, 9.313899999999903e-05, 9.334700000000057e-05, 9.325000000000305e-05, 9.25000000000023e-05, 9.27360...</msg>
<status status="PASS" starttime="20201029 18:15:51.898" endtime="20201029 18:15:51.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.917" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.915" endtime="20201029 18:15:51.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.923" level="INFO">VALUE: [9.262499999999896e-05, 9.304200000000151e-05, 9.252700000000197e-05, 9.275000000000255e-05, 9.313899999999903e-05, 9.334700000000057e-05, 9.325000000000305e-05, 9.25000000000023e-05, 9.273600000000298e-05, 9.251400000000187e-05, 9.275000000000255e-05, 9.338899999999928e-05, 9.269399999999733e-05, 9.273600000000298e-05, 9.302800000000194e-05, 9.272199999999647e-05, 9.320800000000434e-05, 9.327700000000272e-05, 9.316700000000511e-05, 9.330500000000186e-05, 9.261099999999939e-05, 9.326400000000262e-05, 9.333399999999353e-05, 9.243099999999699e-05, 9.24859999999958e-05, 9.291599999999844e-05, 9.273600000000298e-05, 9.286199999999911e-05, 9.298600000000323e-05, 9.258399999999972e-05, 9.295799999999715e-05, 9.247199999999622e-05, 9.27079999999969e-05, 9.313899999999903e-05, 9.276400000000212e-05, 9.277700000000222e-05, 9.288899999999878e-05, 9.288899999999878e-05, 9.319399999999783e-05, 9.338899999999928e-05, 9.245800000000359e-05, 9.240299999999785e-05, 9.327800000000219e-05, 9.324999999999611e-05, 9.297199999999672e-05, 9.257000000000015e-05, 9.25000000000023e-05, 9.309799999999979e-05, 9.309700000000032e-05, 9.240300000000479e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.920" endtime="20201029 18:15:51.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.908" endtime="20201029 18:15:51.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.935" endtime="20201029 18:15:51.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.931" endtime="20201029 18:15:51.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.929" endtime="20201029 18:15:51.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.440" endtime="20201029 18:15:51.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.439" endtime="20201029 18:15:51.960"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.983" endtime="20201029 18:15:52.003"></status>
</kw>
<msg timestamp="20201029 18:15:52.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.980" endtime="20201029 18:15:52.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.006" endtime="20201029 18:15:52.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.013" endtime="20201029 18:15:52.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.973" endtime="20201029 18:15:52.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.967" endtime="20201029 18:15:52.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.036" endtime="20201029 18:15:52.373"></status>
</kw>
<msg timestamp="20201029 18:15:52.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039492681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039586917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.032" endtime="20201029 18:15:52.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039492681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039586917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.383" endtime="20201029 18:15:52.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.401" endtime="20201029 18:15:52.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.025" endtime="20201029 18:15:52.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.021" endtime="20201029 18:15:52.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.418" level="INFO">${RESULT} = [{'diff': 9.423599999999754e-05}, {'diff': 9.374999999999661e-05}, {'diff': 9.413800000000055e-05}, {'diff': 9.387500000000021e-05}, {'diff': 9.386100000000064e-05}, {'diff': 9.395900000000457e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:52.410" endtime="20201029 18:15:52.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.428" level="INFO">${ACCURACY} = {'diff': [9.423599999999754e-05, 9.374999999999661e-05, 9.413800000000055e-05, 9.387500000000021e-05, 9.386100000000064e-05, 9.395900000000457e-05, 9.395799999999815e-05, 9.420800000000534e-05, 9.4361...</msg>
<status status="PASS" starttime="20201029 18:15:52.420" endtime="20201029 18:15:52.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.438" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.436" endtime="20201029 18:15:52.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.444" level="INFO">VALUE: [9.423599999999754e-05, 9.374999999999661e-05, 9.413800000000055e-05, 9.387500000000021e-05, 9.386100000000064e-05, 9.395900000000457e-05, 9.395799999999815e-05, 9.420800000000534e-05, 9.436100000000114e-05, 9.366699999999867e-05, 9.351399999999593e-05, 9.436100000000114e-05, 9.354200000000201e-05, 9.427699999999678e-05, 9.422299999999745e-05, 9.405500000000261e-05, 9.393099999999849e-05, 9.413900000000003e-05, 9.381900000000193e-05, 9.352800000000244e-05, 9.417999999999926e-05, 9.351399999999593e-05, 9.359800000000029e-05, 9.40409999999961e-05, 9.355600000000158e-05, 9.42079999999984e-05, 9.384800000000054e-05, 9.369400000000527e-05, 9.38200000000014e-05, 9.426399999999668e-05, 9.354199999999507e-05, 9.33879999999998e-05, 9.384800000000054e-05, 9.37079999999979e-05, 9.39859999999973e-05, 9.357000000000115e-05, 9.419400000000577e-05, 9.401399999999643e-05, 9.436100000000114e-05, 9.359800000000029e-05, 9.429100000000329e-05, 9.38330000000015e-05, 9.437500000000071e-05, 9.338899999999928e-05, 9.343099999999799e-05, 9.358299999999431e-05, 9.413900000000003e-05, 9.354100000000254e-05, 9.438900000000028e-05, 9.399999999999686e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.441" endtime="20201029 18:15:52.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.429" endtime="20201029 18:15:52.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.456" endtime="20201029 18:15:52.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.452" endtime="20201029 18:15:52.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.450" endtime="20201029 18:15:52.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.963" endtime="20201029 18:15:52.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.961" endtime="20201029 18:15:52.481"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.504" endtime="20201029 18:15:52.527"></status>
</kw>
<msg timestamp="20201029 18:15:52.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.501" endtime="20201029 18:15:52.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.530" endtime="20201029 18:15:52.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.537" endtime="20201029 18:15:52.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.493" endtime="20201029 18:15:52.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.488" endtime="20201029 18:15:52.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.561" endtime="20201029 18:15:52.897"></status>
</kw>
<msg timestamp="20201029 18:15:52.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041076889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041172028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.558" endtime="20201029 18:15:52.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041076889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041172028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.907" endtime="20201029 18:15:52.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.925" endtime="20201029 18:15:52.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.550" endtime="20201029 18:15:52.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.545" endtime="20201029 18:15:52.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.943" level="INFO">${RESULT} = [{'diff': 9.513900000000103e-05}, {'diff': 9.490200000000087e-05}, {'diff': 9.480600000000283e-05}, {'diff': 9.477799999999675e-05}, {'diff': 9.474999999999761e-05}, {'diff': 9.484699999999513e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:52.934" endtime="20201029 18:15:52.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.952" level="INFO">${ACCURACY} = {'diff': [9.513900000000103e-05, 9.490200000000087e-05, 9.480600000000283e-05, 9.477799999999675e-05, 9.474999999999761e-05, 9.484699999999513e-05, 9.529099999999735e-05, 9.501399999999743e-05, 9.4861...</msg>
<status status="PASS" starttime="20201029 18:15:52.945" endtime="20201029 18:15:52.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.963" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.960" endtime="20201029 18:15:52.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.968" level="INFO">VALUE: [9.513900000000103e-05, 9.490200000000087e-05, 9.480600000000283e-05, 9.477799999999675e-05, 9.474999999999761e-05, 9.484699999999513e-05, 9.529099999999735e-05, 9.501399999999743e-05, 9.486100000000164e-05, 9.444499999999856e-05, 9.504199999999657e-05, 9.520899999999888e-05, 9.479200000000326e-05, 9.509700000000232e-05, 9.477799999999675e-05, 9.495799999999915e-05, 9.46530000000001e-05, 9.45130000000044e-05, 9.494499999999906e-05, 9.48330000000025e-05, 9.518099999999974e-05, 9.506999999999571e-05, 9.448600000000473e-05, 9.505600000000308e-05, 9.525000000000505e-05, 9.509800000000179e-05, 9.531999999999596e-05, 9.447199999999822e-05, 9.512499999999452e-05, 9.454200000000301e-05, 9.512500000000146e-05, 9.483400000000197e-05, 9.536100000000214e-05, 9.486100000000164e-05, 9.480499999999642e-05, 9.472199999999847e-05, 9.475000000000455e-05, 9.51530000000006e-05, 9.504199999999657e-05, 9.456900000000268e-05, 9.462500000000096e-05, 9.509700000000232e-05, 9.508400000000222e-05, 9.454199999999607e-05, 9.440299999999985e-05, 9.537500000000171e-05, 9.504199999999657e-05, 9.48880000000013e-05, 9.454199999999607e-05, 9.51530000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.965" endtime="20201029 18:15:52.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.954" endtime="20201029 18:15:52.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.987" endtime="20201029 18:15:53.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.981" endtime="20201029 18:15:53.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.974" endtime="20201029 18:15:53.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.483" endtime="20201029 18:15:53.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.482" endtime="20201029 18:15:53.014"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.040" endtime="20201029 18:15:53.060"></status>
</kw>
<msg timestamp="20201029 18:15:53.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.036" endtime="20201029 18:15:53.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.063" endtime="20201029 18:15:53.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.069" endtime="20201029 18:15:53.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.029" endtime="20201029 18:15:53.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.022" endtime="20201029 18:15:53.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.093" endtime="20201029 18:15:53.434"></status>
</kw>
<msg timestamp="20201029 18:15:53.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043459153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.090" endtime="20201029 18:15:53.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043459153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.443" endtime="20201029 18:15:53.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.462" endtime="20201029 18:15:53.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.082" endtime="20201029 18:15:53.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.078" endtime="20201029 18:15:53.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.479" level="INFO">${RESULT} = [{'diff': 9.641700000000142e-05}, {'diff': 9.63479999999961e-05}, {'diff': 9.587499999999527e-05}, {'diff': 9.587500000000221e-05}, {'diff': 9.569400000000033e-05}, {'diff': 9.594400000000058e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:53.470" endtime="20201029 18:15:53.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.490" level="INFO">${ACCURACY} = {'diff': [9.641700000000142e-05, 9.63479999999961e-05, 9.587499999999527e-05, 9.587500000000221e-05, 9.569400000000033e-05, 9.594400000000058e-05, 9.641700000000142e-05, 9.557000000000315e-05, 9.55549...</msg>
<status status="PASS" starttime="20201029 18:15:53.481" endtime="20201029 18:15:53.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.501" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.498" endtime="20201029 18:15:53.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.506" level="INFO">VALUE: [9.641700000000142e-05, 9.63479999999961e-05, 9.587499999999527e-05, 9.587500000000221e-05, 9.569400000000033e-05, 9.594400000000058e-05, 9.641700000000142e-05, 9.557000000000315e-05, 9.555499999999717e-05, 9.548600000000573e-05, 9.620899999999988e-05, 9.562499999999502e-05, 9.557000000000315e-05, 9.609700000000332e-05, 9.616700000000117e-05, 9.55409999999976e-05, 9.566699999999373e-05, 9.572199999999947e-05, 9.615200000000212e-05, 9.634700000000357e-05, 9.629199999999782e-05, 9.627799999999825e-05, 9.572299999999895e-05, 9.569400000000033e-05, 9.6027999999998e-05, 9.547199999999922e-05, 9.61660000000017e-05, 9.634700000000357e-05, 9.622299999999945e-05, 9.631899999999749e-05, 9.569499999999981e-05, 9.580600000000383e-05, 9.559699999999588e-05, 9.573599999999904e-05, 9.588900000000178e-05, 9.623600000000648e-05, 9.555600000000358e-05, 9.558299999999631e-05, 9.537499999999477e-05, 9.606899999999724e-05, 9.599999999999886e-05, 9.594400000000058e-05, 9.570899999999938e-05, 9.618000000000126e-05, 9.59159999999945e-05, 9.586100000000264e-05, 9.55000000000053e-05, 9.549999999999836e-05, 9.613900000000203e-05, 9.629200000000476e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.503" endtime="20201029 18:15:53.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.492" endtime="20201029 18:15:53.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.519" endtime="20201029 18:15:53.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.514" endtime="20201029 18:15:53.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.512" endtime="20201029 18:15:53.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.017" endtime="20201029 18:15:53.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.015" endtime="20201029 18:15:53.544"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.568" endtime="20201029 18:15:53.588"></status>
</kw>
<msg timestamp="20201029 18:15:53.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.564" endtime="20201029 18:15:53.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.593" endtime="20201029 18:15:53.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.599" endtime="20201029 18:15:53.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.557" endtime="20201029 18:15:53.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.550" endtime="20201029 18:15:53.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.623" endtime="20201029 18:15:53.961"></status>
</kw>
<msg timestamp="20201029 18:15:53.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041005792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041102722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.620" endtime="20201029 18:15:53.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041005792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041102722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.970" endtime="20201029 18:15:53.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.989" endtime="20201029 18:15:53.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.612" endtime="20201029 18:15:53.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.608" endtime="20201029 18:15:53.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.006" level="INFO">${RESULT} = [{'diff': 9.693000000000201e-05}, {'diff': 9.708299999999781e-05}, {'diff': 9.722200000000097e-05}, {'diff': 9.65279999999985e-05}, {'diff': 9.697200000000072e-05}, {'diff': 9.694499999999412e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:53.998" endtime="20201029 18:15:54.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.022" level="INFO">${ACCURACY} = {'diff': [9.693000000000201e-05, 9.708299999999781e-05, 9.722200000000097e-05, 9.65279999999985e-05, 9.697200000000072e-05, 9.694499999999412e-05, 9.649999999999936e-05, 9.701299999999996e-05, 9.70969...</msg>
<status status="PASS" starttime="20201029 18:15:54.009" endtime="20201029 18:15:54.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.032" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.030" endtime="20201029 18:15:54.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.038" level="INFO">VALUE: [9.693000000000201e-05, 9.708299999999781e-05, 9.722200000000097e-05, 9.65279999999985e-05, 9.697200000000072e-05, 9.694499999999412e-05, 9.649999999999936e-05, 9.701299999999996e-05, 9.709699999999738e-05, 9.655599999999764e-05, 9.677699999999928e-05, 9.672200000000047e-05, 9.688799999999637e-05, 9.695800000000115e-05, 9.731999999999796e-05, 9.661099999999645e-05, 9.7027999999999e-05, 9.66660000000022e-05, 9.645800000000065e-05, 9.640300000000185e-05, 9.672200000000047e-05, 9.68609999999967e-05, 9.649999999999936e-05, 9.71809999999948e-05, 9.691600000000244e-05, 9.730600000000533e-05, 9.673600000000004e-05, 9.64859999999998e-05, 9.729200000000576e-05, 9.647200000000022e-05, 9.695900000000063e-05, 9.69860000000003e-05, 9.655599999999764e-05, 9.680600000000483e-05, 9.727800000000619e-05, 9.727699999999978e-05, 9.68059999999979e-05, 9.683299999999756e-05, 9.666699999999473e-05, 9.701399999999943e-05, 9.64729999999997e-05, 9.722200000000097e-05, 9.640199999999544e-05, 9.680600000000483e-05, 9.687500000000321e-05, 9.706899999999824e-05, 9.723600000000054e-05, 9.722200000000097e-05, 9.701399999999943e-05, 9.709700000000432e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.035" endtime="20201029 18:15:54.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.023" endtime="20201029 18:15:54.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.050" endtime="20201029 18:15:54.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.046" endtime="20201029 18:15:54.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.044" endtime="20201029 18:15:54.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.546" endtime="20201029 18:15:54.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.545" endtime="20201029 18:15:54.075"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.098" endtime="20201029 18:15:54.118"></status>
</kw>
<msg timestamp="20201029 18:15:54.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.095" endtime="20201029 18:15:54.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.121" endtime="20201029 18:15:54.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.128" endtime="20201029 18:15:54.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.088" endtime="20201029 18:15:54.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.082" endtime="20201029 18:15:54.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.151" endtime="20201029 18:15:54.489"></status>
</kw>
<msg timestamp="20201029 18:15:54.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039556083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039653694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.148" endtime="20201029 18:15:54.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039556083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039653694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.498" endtime="20201029 18:15:54.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.517" endtime="20201029 18:15:54.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.141" endtime="20201029 18:15:54.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.136" endtime="20201029 18:15:54.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.534" level="INFO">${RESULT} = [{'diff': 9.761100000000439e-05}, {'diff': 9.772200000000147e-05}, {'diff': 9.837500000000471e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.745900000000113e-05}, {'diff': 9.76939999999954e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:54.525" endtime="20201029 18:15:54.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.543" level="INFO">${ACCURACY} = {'diff': [9.761100000000439e-05, 9.772200000000147e-05, 9.837500000000471e-05, 9.773600000000104e-05, 9.745900000000113e-05, 9.76939999999954e-05, 9.762499999999702e-05, 9.776400000000018e-05, 9.83199...</msg>
<status status="PASS" starttime="20201029 18:15:54.536" endtime="20201029 18:15:54.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.554" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.552" endtime="20201029 18:15:54.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.559" level="INFO">VALUE: [9.761100000000439e-05, 9.772200000000147e-05, 9.837500000000471e-05, 9.773600000000104e-05, 9.745900000000113e-05, 9.76939999999954e-05, 9.762499999999702e-05, 9.776400000000018e-05, 9.831999999999896e-05, 9.83609999999982e-05, 9.827700000000078e-05, 9.801400000000043e-05, 9.765299999999616e-05, 9.801400000000043e-05, 9.751399999999993e-05, 9.83609999999982e-05, 9.755599999999864e-05, 9.831899999999949e-05, 9.794500000000206e-05, 9.791699999999598e-05, 9.768000000000276e-05, 9.805599999999914e-05, 9.772200000000147e-05, 9.836199999999767e-05, 9.83059999999994e-05, 9.78609999999977e-05, 9.769400000000233e-05, 9.769400000000233e-05, 9.833299999999906e-05, 9.805599999999914e-05, 9.758299999999831e-05, 9.787500000000421e-05, 9.754200000000601e-05, 9.819400000000283e-05, 9.794500000000206e-05, 9.759699999999788e-05, 9.816699999999623e-05, 9.777799999999975e-05, 9.800000000000086e-05, 9.8028e-05, 9.816699999999623e-05, 9.77359999999941e-05, 9.763899999999659e-05, 9.837499999999777e-05, 9.777799999999975e-05, 9.74860000000008e-05, 9.842999999999658e-05, 9.83059999999994e-05, 9.822300000000145e-05, 9.755499999999917e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.556" endtime="20201029 18:15:54.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.545" endtime="20201029 18:15:54.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.572" endtime="20201029 18:15:54.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.567" endtime="20201029 18:15:54.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.565" endtime="20201029 18:15:54.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.077" endtime="20201029 18:15:54.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.076" endtime="20201029 18:15:54.597"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.622" endtime="20201029 18:15:54.643"></status>
</kw>
<msg timestamp="20201029 18:15:54.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.618" endtime="20201029 18:15:54.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.647" endtime="20201029 18:15:54.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.653" endtime="20201029 18:15:54.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.610" endtime="20201029 18:15:54.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.604" endtime="20201029 18:15:54.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.676" endtime="20201029 18:15:55.012"></status>
</kw>
<msg timestamp="20201029 18:15:55.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04326175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043361167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:54.673" endtime="20201029 18:15:55.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04326175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043361167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:55.022" endtime="20201029 18:15:55.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.040" endtime="20201029 18:15:55.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.666" endtime="20201029 18:15:55.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.661" endtime="20201029 18:15:55.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.057" level="INFO">${RESULT} = [{'diff': 9.941699999999748e-05}, {'diff': 9.888899999999784e-05}, {'diff': 9.842999999999658e-05}, {'diff': 9.912499999999852e-05}, {'diff': 9.876400000000118e-05}, {'diff': 9.913899999999809e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:55.049" endtime="20201029 18:15:55.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.067" level="INFO">${ACCURACY} = {'diff': [9.941699999999748e-05, 9.888899999999784e-05, 9.842999999999658e-05, 9.912499999999852e-05, 9.876400000000118e-05, 9.913899999999809e-05, 9.891700000000392e-05, 9.858399999999878e-05, 9.9333...</msg>
<status status="PASS" starttime="20201029 18:15:55.060" endtime="20201029 18:15:55.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.077" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.075" endtime="20201029 18:15:55.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.083" level="INFO">VALUE: [9.941699999999748e-05, 9.888899999999784e-05, 9.842999999999658e-05, 9.912499999999852e-05, 9.876400000000118e-05, 9.913899999999809e-05, 9.891700000000392e-05, 9.858399999999878e-05, 9.933300000000006e-05, 9.901400000000143e-05, 9.844399999999615e-05, 9.91660000000047e-05, 9.900000000000186e-05, 9.900000000000186e-05, 9.89860000000023e-05, 9.848599999999486e-05, 9.900000000000186e-05, 9.859799999999835e-05, 9.854200000000007e-05, 9.886199999999817e-05, 9.931900000000049e-05, 9.934699999999963e-05, 9.929200000000082e-05, 9.859699999999888e-05, 9.855599999999964e-05, 9.91809999999968e-05, 9.875000000000161e-05, 9.874999999999468e-05, 9.930500000000092e-05, 9.855599999999964e-05, 9.912500000000546e-05, 9.920900000000288e-05, 9.940299999999791e-05, 9.940299999999791e-05, 9.88609999999987e-05, 9.84860000000018e-05, 9.873600000000204e-05, 9.891699999999698e-05, 9.912499999999852e-05, 9.938899999999834e-05, 9.924999999999518e-05, 9.911099999999895e-05, 9.870899999999544e-05, 9.92359999999956e-05, 9.894499999999612e-05, 9.862500000000496e-05, 9.84860000000018e-05, 9.877700000000128e-05, 9.91939999999969e-05, 9.874999999999468e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.080" endtime="20201029 18:15:55.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.068" endtime="20201029 18:15:55.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.102" endtime="20201029 18:15:55.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.096" endtime="20201029 18:15:55.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.094" endtime="20201029 18:15:55.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.600" endtime="20201029 18:15:55.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.598" endtime="20201029 18:15:55.127"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.150" endtime="20201029 18:15:55.170"></status>
</kw>
<msg timestamp="20201029 18:15:55.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.147" endtime="20201029 18:15:55.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.173" endtime="20201029 18:15:55.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.180" endtime="20201029 18:15:55.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.139" endtime="20201029 18:15:55.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.134" endtime="20201029 18:15:55.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.203" endtime="20201029 18:15:55.538"></status>
</kw>
<msg timestamp="20201029 18:15:55.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039575681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039675542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.200" endtime="20201029 18:15:55.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039575681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039675542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.548" endtime="20201029 18:15:55.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.566" endtime="20201029 18:15:55.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.192" endtime="20201029 18:15:55.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.187" endtime="20201029 18:15:55.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.583" level="INFO">${RESULT} = [{'diff': 9.98609999999997e-05}, {'diff': 9.947199999999629e-05}, {'diff': 9.957000000000021e-05}, {'diff': 9.993100000000449e-05}, {'diff': 0.00010034700000000063}, {'diff': 0.00010034700000000063}, ...</msg>
<status status="PASS" starttime="20201029 18:15:55.574" endtime="20201029 18:15:55.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.594" level="INFO">${ACCURACY} = {'diff': [9.98609999999997e-05, 9.947199999999629e-05, 9.957000000000021e-05, 9.993100000000449e-05, 0.00010034700000000063, 0.00010034700000000063, 9.962499999999902e-05, 9.95689999999938e-05, 0.0001...</msg>
<status status="PASS" starttime="20201029 18:15:55.585" endtime="20201029 18:15:55.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.605" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.603" endtime="20201029 18:15:55.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.610" level="INFO">VALUE: [9.98609999999997e-05, 9.947199999999629e-05, 9.957000000000021e-05, 9.993100000000449e-05, 0.00010034700000000063, 0.00010034700000000063, 9.962499999999902e-05, 9.95689999999938e-05, 0.00010026299999999627, 0.00010007000000000071, 9.983300000000056e-05, 9.987499999999927e-05, 9.988899999999884e-05, 0.00010012499999999952, 0.00010040199999999944, 9.974999999999568e-05, 9.95280000000015e-05, 0.00010013899999999909, 9.962499999999902e-05, 0.00010033300000000106, 9.976400000000218e-05, 9.966699999999773e-05, 9.94730000000027e-05, 9.970799999999697e-05, 0.00010015199999999919, 0.00010001400000000243, 0.00010027799999999532, 0.0001001939999999979, 0.00010007000000000071, 9.945900000000313e-05, 9.965299999999816e-05, 0.00010012499999999952, 9.944500000000356e-05, 0.00010024999999999618, 0.00010037499999999977, 9.980500000000142e-05, 0.00010018000000000526, 9.980500000000142e-05, 9.973600000000304e-05, 9.959699999999988e-05, 9.966599999999826e-05, 0.00010032000000000096, 9.952700000000203e-05, 9.950000000000236e-05, 9.96530000000051e-05, 9.998599999999636e-05, 0.00010023600000000354, 9.965199999999869e-05, 9.980499999999448e-05, 9.96809999999973e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.607" endtime="20201029 18:15:55.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.596" endtime="20201029 18:15:55.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.623" endtime="20201029 18:15:55.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.618" endtime="20201029 18:15:55.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.616" endtime="20201029 18:15:55.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.129" endtime="20201029 18:15:55.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.128" endtime="20201029 18:15:55.648"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.672" endtime="20201029 18:15:55.692"></status>
</kw>
<msg timestamp="20201029 18:15:55.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.668" endtime="20201029 18:15:55.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.695" endtime="20201029 18:15:55.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.702" endtime="20201029 18:15:55.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.661" endtime="20201029 18:15:55.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.655" endtime="20201029 18:15:55.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.725" endtime="20201029 18:15:56.064"></status>
</kw>
<msg timestamp="20201029 18:15:56.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041074431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041175319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.722" endtime="20201029 18:15:56.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041074431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041175319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.073" endtime="20201029 18:15:56.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.091" endtime="20201029 18:15:56.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.715" endtime="20201029 18:15:56.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.710" endtime="20201029 18:15:56.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.108" level="INFO">${RESULT} = [{'diff': 0.00010088800000000037}, {'diff': 0.00010049999999999643}, {'diff': 0.00010062500000000002}, {'diff': 0.0001013610000000012}, {'diff': 0.000101028000000003}, {'diff': 0.0001006809999999983},...</msg>
<status status="PASS" starttime="20201029 18:15:56.099" endtime="20201029 18:15:56.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.119" level="INFO">${ACCURACY} = {'diff': [0.00010088800000000037, 0.00010049999999999643, 0.00010062500000000002, 0.0001013610000000012, 0.000101028000000003, 0.0001006809999999983, 0.00010073600000000404, 0.0001011939999999989, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:56.110" endtime="20201029 18:15:56.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.130" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.127" endtime="20201029 18:15:56.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.135" level="INFO">VALUE: [0.00010088800000000037, 0.00010049999999999643, 0.00010062500000000002, 0.0001013610000000012, 0.000101028000000003, 0.0001006809999999983, 0.00010073600000000404, 0.0001011939999999989, 0.00010133300000000206, 0.0001009730000000042, 0.00010115299999999966, 0.00010090299999999941, 0.00010063899999999959, 0.00010109800000000085, 0.00010102699999999659, 0.00010104200000000257, 0.00010107000000000171, 0.00010118100000000574, 0.00010123600000000454, 0.00010144499999999862, 0.00010116699999999923, 0.00010117999999999933, 0.00010087500000000027, 0.00010124999999999718, 0.00010073600000000404, 0.00010051400000000293, 0.00010062500000000002, 0.00010129100000000335, 0.00010131999999999503, 0.00010081900000000199, 0.00010120900000000488, 0.00010059700000000088, 0.000101416, 0.00010105500000000267, 0.00010126399999999675, 0.00010094399999999865, 0.00010047199999999729, 0.00010091699999999898, 0.00010105500000000267, 0.00010076400000000318, 0.00010116700000000617, 0.00010144399999999915, 0.00010094499999999812, 0.00010106900000000224, 0.00010044499999999762, 0.00010058299999999437, 0.00010116599999999976, 0.00010108300000000181, 0.00010079200000000232, 0.00010077799999999582]</msg>
<status status="PASS" starttime="20201029 18:15:56.132" endtime="20201029 18:15:56.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.120" endtime="20201029 18:15:56.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.147" endtime="20201029 18:15:56.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.143" endtime="20201029 18:15:56.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.140" endtime="20201029 18:15:56.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.650" endtime="20201029 18:15:56.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.649" endtime="20201029 18:15:56.172"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.195" endtime="20201029 18:15:56.215"></status>
</kw>
<msg timestamp="20201029 18:15:56.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.192" endtime="20201029 18:15:56.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.219" endtime="20201029 18:15:56.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.225" endtime="20201029 18:15:56.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.185" endtime="20201029 18:15:56.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.179" endtime="20201029 18:15:56.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.248" endtime="20201029 18:15:56.586"></status>
</kw>
<msg timestamp="20201029 18:15:56.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039553722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039656056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.245" endtime="20201029 18:15:56.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039553722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039656056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.595" endtime="20201029 18:15:56.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.613" endtime="20201029 18:15:56.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.237" endtime="20201029 18:15:56.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.233" endtime="20201029 18:15:56.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.630" level="INFO">${RESULT} = [{'diff': 0.00010233400000000253}, {'diff': 0.00010206900000000324}, {'diff': 0.00010211100000000195}, {'diff': 0.00010194499999999912}, {'diff': 0.00010155600000000264}, {'diff': 0.000102097999999994...</msg>
<status status="PASS" starttime="20201029 18:15:56.621" endtime="20201029 18:15:56.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.639" level="INFO">${ACCURACY} = {'diff': [0.00010233400000000253, 0.00010206900000000324, 0.00010211100000000195, 0.00010194499999999912, 0.00010155600000000264, 0.00010209799999999492, 0.00010145799999999872, 0.00010152700000000403...</msg>
<status status="PASS" starttime="20201029 18:15:56.632" endtime="20201029 18:15:56.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.650" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.648" endtime="20201029 18:15:56.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.655" level="INFO">VALUE: [0.00010233400000000253, 0.00010206900000000324, 0.00010211100000000195, 0.00010194499999999912, 0.00010155600000000264, 0.00010209799999999492, 0.00010145799999999872, 0.00010152700000000403, 0.00010145899999999819, 0.00010241700000000048, 0.00010240300000000091, 0.00010204200000000357, 0.00010175000000000461, 0.00010148699999999733, 0.00010213900000000109, 0.00010233300000000306, 0.00010222199999999904, 0.00010172200000000547, 0.00010197200000000572, 0.00010158300000000231, 0.00010222199999999904, 0.00010219499999999937, 0.00010207000000000271, 0.00010199999999999793, 0.0001018610000000017, 0.0001016939999999994, 0.00010143099999999905, 0.00010208299999999587, 0.00010236099999999526, 0.00010216600000000076, 0.00010227800000000425, 0.00010173600000000504, 0.00010184699999999519, 0.00010222200000000597, 0.00010213900000000109, 0.00010181899999999605, 0.00010212500000000152, 0.00010220799999999947, 0.00010234700000000263, 0.0001023060000000034, 0.0001022359999999986, 0.00010229199999999689, 0.00010167999999999983, 0.00010194499999999912, 0.00010225000000000511, 0.00010145899999999819, 0.00010187500000000127, 0.00010209800000000185, 0.00010224999999999818, 0.0001020139999999975]</msg>
<status status="PASS" starttime="20201029 18:15:56.652" endtime="20201029 18:15:56.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.641" endtime="20201029 18:15:56.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.668" endtime="20201029 18:15:56.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.664" endtime="20201029 18:15:56.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.661" endtime="20201029 18:15:56.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.174" endtime="20201029 18:15:56.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.173" endtime="20201029 18:15:56.694"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.717" endtime="20201029 18:15:56.739"></status>
</kw>
<msg timestamp="20201029 18:15:56.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.714" endtime="20201029 18:15:56.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.742" endtime="20201029 18:15:56.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.749" endtime="20201029 18:15:56.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.707" endtime="20201029 18:15:56.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.701" endtime="20201029 18:15:56.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.772" endtime="20201029 18:15:57.108"></status>
</kw>
<msg timestamp="20201029 18:15:57.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041852125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041955333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.769" endtime="20201029 18:15:57.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041852125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041955333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.117" endtime="20201029 18:15:57.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.135" endtime="20201029 18:15:57.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.761" endtime="20201029 18:15:57.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.757" endtime="20201029 18:15:57.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.152" level="INFO">${RESULT} = [{'diff': 0.00010320800000000047}, {'diff': 0.00010258400000000278}, {'diff': 0.00010322200000000004}, {'diff': 0.00010327800000000525}, {'diff': 0.00010298599999999936}, {'diff': 0.000103137999999995...</msg>
<status status="PASS" starttime="20201029 18:15:57.143" endtime="20201029 18:15:57.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.161" level="INFO">${ACCURACY} = {'diff': [0.00010320800000000047, 0.00010258400000000278, 0.00010322200000000004, 0.00010327800000000525, 0.00010298599999999936, 0.00010313799999999568, 0.00010326399999999875, 0.00010315299999999472...</msg>
<status status="PASS" starttime="20201029 18:15:57.154" endtime="20201029 18:15:57.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.172" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.170" endtime="20201029 18:15:57.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.177" level="INFO">VALUE: [0.00010320800000000047, 0.00010258400000000278, 0.00010322200000000004, 0.00010327800000000525, 0.00010298599999999936, 0.00010313799999999568, 0.00010326399999999875, 0.00010315299999999472, 0.00010327799999999832, 0.000103416000000002, 0.00010331999999999703, 0.00010245799999999972, 0.00010287499999999533, 0.00010293100000000055, 0.00010251300000000546, 0.00010340300000000191, 0.00010311099999999601, 0.00010313900000000209, 0.00010334700000000363, 0.00010298699999999883, 0.00010297299999999926, 0.00010294400000000065, 0.00010293100000000055, 0.00010337500000000277, 0.00010248599999999886, 0.00010240300000000091, 0.00010231899999999655, 0.00010302799999999807, 0.00010313900000000209, 0.00010302799999999807, 0.0001026940000000004, 0.00010291700000000098, 0.00010336099999999626, 0.00010247199999999929, 0.00010240300000000091, 0.0001026940000000004, 0.00010277699999999834, 0.00010258300000000331, 0.00010319500000000037, 0.00010302699999999859, 0.00010316699999999429, 0.00010265200000000169, 0.00010259699999999594, 0.00010261100000000245, 0.00010334700000000363, 0.00010319500000000037, 0.0001031940000000009, 0.00010280599999999696, 0.0001032359999999996, 0.00010251400000000493]</msg>
<status status="PASS" starttime="20201029 18:15:57.175" endtime="20201029 18:15:57.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.163" endtime="20201029 18:15:57.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.191" endtime="20201029 18:15:57.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.186" endtime="20201029 18:15:57.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.183" endtime="20201029 18:15:57.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.696" endtime="20201029 18:15:57.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.695" endtime="20201029 18:15:57.216"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.239" endtime="20201029 18:15:57.259"></status>
</kw>
<msg timestamp="20201029 18:15:57.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.236" endtime="20201029 18:15:57.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.263" endtime="20201029 18:15:57.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.269" endtime="20201029 18:15:57.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.229" endtime="20201029 18:15:57.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.223" endtime="20201029 18:15:57.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.292" endtime="20201029 18:15:57.629"></status>
</kw>
<msg timestamp="20201029 18:15:57.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039373486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039477792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.289" endtime="20201029 18:15:57.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039373486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039477792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.639" endtime="20201029 18:15:57.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.657" endtime="20201029 18:15:57.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.282" endtime="20201029 18:15:57.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.277" endtime="20201029 18:15:57.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.674" level="INFO">${RESULT} = [{'diff': 0.00010430599999999846}, {'diff': 0.00010399999999999993}, {'diff': 0.00010412499999999658}, {'diff': 0.00010419500000000137}, {'diff': 0.0001038610000000037}, {'diff': 0.0001038609999999967...</msg>
<status status="PASS" starttime="20201029 18:15:57.665" endtime="20201029 18:15:57.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.684" level="INFO">${ACCURACY} = {'diff': [0.00010430599999999846, 0.00010399999999999993, 0.00010412499999999658, 0.00010419500000000137, 0.0001038610000000037, 0.00010386099999999676, 0.00010388799999999643, 0.00010399999999999993,...</msg>
<status status="PASS" starttime="20201029 18:15:57.676" endtime="20201029 18:15:57.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.695" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.693" endtime="20201029 18:15:57.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.701" level="INFO">VALUE: [0.00010430599999999846, 0.00010399999999999993, 0.00010412499999999658, 0.00010419500000000137, 0.0001038610000000037, 0.00010386099999999676, 0.00010388799999999643, 0.00010399999999999993, 0.00010359700000000388, 0.00010434699999999769, 0.00010408300000000481, 0.00010377799999999882, 0.00010384700000000413, 0.00010354199999999814, 0.00010399999999999993, 0.000103513999999999, 0.00010429199999999889, 0.00010376399999999925, 0.00010354199999999814, 0.00010361099999999651, 0.00010415200000000319, 0.00010383299999999762, 0.00010415300000000266, 0.00010369399999999446, 0.00010383400000000403, 0.00010394400000000165, 0.00010436099999999726, 0.00010420800000000147, 0.00010341700000000148, 0.00010408300000000481, 0.0001036940000000014, 0.00010391700000000198, 0.00010404199999999864, 0.00010426399999999975, 0.00010398600000000036, 0.0001038480000000036, 0.00010420800000000147, 0.00010380499999999848, 0.000103513999999999, 0.00010347200000000029, 0.00010381900000000499, 0.00010426400000000668, 0.00010355600000000464, 0.00010359800000000335, 0.00010376399999999925, 0.00010381999999999753, 0.00010388800000000337, 0.00010341699999999454, 0.00010390300000000241, 0.00010437500000000377]</msg>
<status status="PASS" starttime="20201029 18:15:57.698" endtime="20201029 18:15:57.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.686" endtime="20201029 18:15:57.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.714" endtime="20201029 18:15:57.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.710" endtime="20201029 18:15:57.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.707" endtime="20201029 18:15:57.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.219" endtime="20201029 18:15:57.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.217" endtime="20201029 18:15:57.740"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.763" endtime="20201029 18:15:57.783"></status>
</kw>
<msg timestamp="20201029 18:15:57.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.759" endtime="20201029 18:15:57.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.786" endtime="20201029 18:15:57.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.792" endtime="20201029 18:15:57.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.752" endtime="20201029 18:15:57.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.746" endtime="20201029 18:15:57.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.816" endtime="20201029 18:15:58.151"></status>
</kw>
<msg timestamp="20201029 18:15:58.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039997389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.813" endtime="20201029 18:15:58.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039997389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.161" endtime="20201029 18:15:58.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.178" endtime="20201029 18:15:58.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.805" endtime="20201029 18:15:58.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.801" endtime="20201029 18:15:58.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.196" level="INFO">${RESULT} = [{'diff': 0.00010509699999999844}, {'diff': 0.00010462499999999708}, {'diff': 0.00010537499999999783}, {'diff': 0.00010534799999999817}, {'diff': 0.00010534699999999869}, {'diff': 0.000104833000000005...</msg>
<status status="PASS" starttime="20201029 18:15:58.187" endtime="20201029 18:15:58.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.206" level="INFO">${ACCURACY} = {'diff': [0.00010509699999999844, 0.00010462499999999708, 0.00010537499999999783, 0.00010534799999999817, 0.00010534699999999869, 0.00010483300000000556, 0.00010487499999999733, 0.00010480599999999896...</msg>
<status status="PASS" starttime="20201029 18:15:58.198" endtime="20201029 18:15:58.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.217" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.215" endtime="20201029 18:15:58.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.223" level="INFO">VALUE: [0.00010509699999999844, 0.00010462499999999708, 0.00010537499999999783, 0.00010534799999999817, 0.00010534699999999869, 0.00010483300000000556, 0.00010487499999999733, 0.00010480599999999896, 0.000104514, 0.00010475000000000068, 0.00010463900000000359, 0.00010506999999999878, 0.00010454199999999914, 0.00010444500000000162, 0.00010449999999999349, 0.00010456999999999828, 0.00010537500000000477, 0.00010462500000000402, 0.00010480499999999948, 0.00010511099999999801, 0.00010522200000000204, 0.00010472200000000154, 0.00010512500000000452, 0.00010505499999999973, 0.00010511099999999801, 0.00010490300000000341, 0.00010475000000000068, 0.00010444400000000215, 0.00010494500000000212, 0.00010513899999999715, 0.0001048889999999969, 0.00010530599999999946, 0.00010525000000000118, 0.0001052360000000016, 0.0001047219999999946, 0.00010522200000000204, 0.00010443000000000258, 0.00010440300000000291, 0.00010491700000000298, 0.00010470800000000197, 0.00010537499999999783, 0.0001044019999999965, 0.00010512499999999758, 0.00010509699999999844, 0.00010493000000000308, 0.00010525000000000118, 0.00010502800000000007, 0.00010482000000000546, 0.00010529199999999989, 0.00010454099999999966]</msg>
<status status="PASS" starttime="20201029 18:15:58.220" endtime="20201029 18:15:58.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.208" endtime="20201029 18:15:58.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.235" endtime="20201029 18:15:58.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.231" endtime="20201029 18:15:58.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.228" endtime="20201029 18:15:58.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.742" endtime="20201029 18:15:58.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.741" endtime="20201029 18:15:58.260"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.283" endtime="20201029 18:15:58.303"></status>
</kw>
<msg timestamp="20201029 18:15:58.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.279" endtime="20201029 18:15:58.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.306" endtime="20201029 18:15:58.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.313" endtime="20201029 18:15:58.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.272" endtime="20201029 18:15:58.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.266" endtime="20201029 18:15:58.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.336" endtime="20201029 18:15:58.674"></status>
</kw>
<msg timestamp="20201029 18:15:58.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03927525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039381333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:58.332" endtime="20201029 18:15:58.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03927525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039381333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:58.684" endtime="20201029 18:15:58.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.702" endtime="20201029 18:15:58.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.325" endtime="20201029 18:15:58.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.321" endtime="20201029 18:15:58.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.718" level="INFO">${RESULT} = [{'diff': 0.00010608299999999987}, {'diff': 0.00010615199999999825}, {'diff': 0.00010548599999999492}, {'diff': 0.0001057360000000021}, {'diff': 0.00010634699999999969}, {'diff': 0.0001055829999999993...</msg>
<status status="PASS" starttime="20201029 18:15:58.710" endtime="20201029 18:15:58.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.728" level="INFO">${ACCURACY} = {'diff': [0.00010608299999999987, 0.00010615199999999825, 0.00010548599999999492, 0.0001057360000000021, 0.00010634699999999969, 0.00010558299999999937, 0.0001056810000000033, 0.0001058889999999979, 0...</msg>
<status status="PASS" starttime="20201029 18:15:58.721" endtime="20201029 18:15:58.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.739" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.736" endtime="20201029 18:15:58.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.745" level="INFO">VALUE: [0.00010608299999999987, 0.00010615199999999825, 0.00010548599999999492, 0.0001057360000000021, 0.00010634699999999969, 0.00010558299999999937, 0.0001056810000000033, 0.0001058889999999979, 0.00010590299999999747, 0.00010612499999999858, 0.00010563799999999818, 0.00010627800000000132, 0.00010615300000000466, 0.0001060690000000003, 0.00010558399999999885, 0.00010637499999999883, 0.00010608299999999987, 0.0001060560000000002, 0.0001058339999999991, 0.00010619500000000337, 0.0001061940000000039, 0.00010629199999999395, 0.00010618099999999686, 0.00010552700000000109, 0.00010555500000000023, 0.00010612499999999858, 0.00010575000000000168, 0.00010643099999999711, 0.000105514000000001, 0.00010633300000000012, 0.00010581900000000005, 0.00010605500000000073, 0.00010618099999999686, 0.00010587499999999833, 0.0001058339999999991, 0.00010575000000000168, 0.00010613799999999868, 0.00010566699999999679, 0.00010638799999999893, 0.00010583299999999962, 0.00010584699999999919, 0.00010604200000000064, 0.00010563900000000459, 0.00010611099999999901, 0.00010584699999999919, 0.00010600000000000193, 0.00010561099999999851, 0.00010543000000000358, 0.00010633300000000012, 0.00010555500000000023]</msg>
<status status="PASS" starttime="20201029 18:15:58.741" endtime="20201029 18:15:58.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.729" endtime="20201029 18:15:58.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.758" endtime="20201029 18:15:58.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.753" endtime="20201029 18:15:58.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.751" endtime="20201029 18:15:58.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.262" endtime="20201029 18:15:58.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.261" endtime="20201029 18:15:58.784"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.807" endtime="20201029 18:15:58.835"></status>
</kw>
<msg timestamp="20201029 18:15:58.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.803" endtime="20201029 18:15:58.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.838" endtime="20201029 18:15:58.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.844" endtime="20201029 18:15:58.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.796" endtime="20201029 18:15:58.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.790" endtime="20201029 18:15:58.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.868" endtime="20201029 18:15:59.216"></status>
</kw>
<msg timestamp="20201029 18:15:59.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046162278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046269292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.865" endtime="20201029 18:15:59.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046162278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046269292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.225" endtime="20201029 18:15:59.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.243" endtime="20201029 18:15:59.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.857" endtime="20201029 18:15:59.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.853" endtime="20201029 18:15:59.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.260" level="INFO">${RESULT} = [{'diff': 0.00010701399999999556}, {'diff': 0.0001070560000000012}, {'diff': 0.00010659699999999994}, {'diff': 0.00010724999999999624}, {'diff': 0.00010687499999999933}, {'diff': 0.0001072500000000031...</msg>
<status status="PASS" starttime="20201029 18:15:59.251" endtime="20201029 18:15:59.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.269" level="INFO">${ACCURACY} = {'diff': [0.00010701399999999556, 0.0001070560000000012, 0.00010659699999999994, 0.00010724999999999624, 0.00010687499999999933, 0.00010725000000000318, 0.00010712499999999958, 0.0001068889999999989, ...</msg>
<status status="PASS" starttime="20201029 18:15:59.262" endtime="20201029 18:15:59.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.280" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.277" endtime="20201029 18:15:59.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.285" level="INFO">VALUE: [0.00010701399999999556, 0.0001070560000000012, 0.00010659699999999994, 0.00010724999999999624, 0.00010687499999999933, 0.00010725000000000318, 0.00010712499999999958, 0.0001068889999999989, 0.00010719399999999796, 0.0001070419999999947, 0.00010683300000000062, 0.00010663899999999865, 0.00010712499999999958, 0.0001070690000000013, 0.00010726399999999581, 0.00010652700000000209, 0.00010680500000000148, 0.00010640299999999797, 0.00010640300000000491, 0.00010645799999999678, 0.00010679200000000139, 0.00010715299999999872, 0.00010680499999999454, 0.00010686099999999976, 0.00010734700000000069, 0.00010691699999999804, 0.00010650000000000243, 0.00010715299999999872, 0.00010694499999999718, 0.00010717999999999839, 0.00010680500000000148, 0.00010657000000000028, 0.00010731900000000155, 0.00010737499999999983, 0.000107208999999997, 0.0001072219999999971, 0.00010658300000000037, 0.00010711100000000001, 0.00010649999999999549, 0.00010644399999999721, 0.00010690299999999847, 0.0001065690000000008, 0.00010711100000000001, 0.0001066810000000043, 0.00010665299999999822, 0.00010683300000000062, 0.00010647200000000329, 0.00010712499999999958, 0.00010644400000000415, 0.00010734699999999375]</msg>
<status status="PASS" starttime="20201029 18:15:59.282" endtime="20201029 18:15:59.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.271" endtime="20201029 18:15:59.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.299" endtime="20201029 18:15:59.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.293" endtime="20201029 18:15:59.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.291" endtime="20201029 18:15:59.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.786" endtime="20201029 18:15:59.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.785" endtime="20201029 18:15:59.324"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.347" endtime="20201029 18:15:59.367"></status>
</kw>
<msg timestamp="20201029 18:15:59.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.344" endtime="20201029 18:15:59.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.371" endtime="20201029 18:15:59.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.377" endtime="20201029 18:15:59.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.336" endtime="20201029 18:15:59.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.331" endtime="20201029 18:15:59.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.400" endtime="20201029 18:15:59.735"></status>
</kw>
<msg timestamp="20201029 18:15:59.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039652542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039760625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.397" endtime="20201029 18:15:59.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039652542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039760625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.745" endtime="20201029 18:15:59.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.763" endtime="20201029 18:15:59.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.389" endtime="20201029 18:15:59.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.385" endtime="20201029 18:15:59.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.780" level="INFO">${RESULT} = [{'diff': 0.00010808300000000187}, {'diff': 0.00010815200000000025}, {'diff': 0.0001078889999999999}, {'diff': 0.00010823599999999767}, {'diff': 0.0001075560000000017}, {'diff': 0.00010815200000000025...</msg>
<status status="PASS" starttime="20201029 18:15:59.771" endtime="20201029 18:15:59.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.791" level="INFO">${ACCURACY} = {'diff': [0.00010808300000000187, 0.00010815200000000025, 0.0001078889999999999, 0.00010823599999999767, 0.0001075560000000017, 0.00010815200000000025, 0.00010795899999999775, 0.00010809700000000144, ...</msg>
<status status="PASS" starttime="20201029 18:15:59.782" endtime="20201029 18:15:59.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.803" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.800" endtime="20201029 18:15:59.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.808" level="INFO">VALUE: [0.00010808300000000187, 0.00010815200000000025, 0.0001078889999999999, 0.00010823599999999767, 0.0001075560000000017, 0.00010815200000000025, 0.00010795899999999775, 0.00010809700000000144, 0.00010752799999999563, 0.00010786100000000076, 0.00010752800000000257, 0.00010797200000000479, 0.00010819399999999896, 0.00010820799999999853, 0.00010770799999999803, 0.00010748599999999692, 0.00010777799999999588, 0.00010811099999999407, 0.00010830600000000246, 0.00010761100000000051, 0.00010780500000000248, 0.00010754200000000214, 0.00010841699999999954, 0.00010819499999999843, 0.00010784700000000119, 0.0001080690000000023, 0.0001075419999999952, 0.00010791700000000598, 0.00010747200000000429, 0.00010800000000000393, 0.00010825000000000418, 0.00010809800000000092, 0.00010847199999999835, 0.00010755500000000223, 0.00010779200000000239, 0.0001077219999999976, 0.00010811100000000101, 0.0001075560000000017, 0.00010830600000000246, 0.00010770799999999803, 0.00010768099999999836, 0.00010811100000000101, 0.00010812499999999364, 0.00010822200000000504, 0.00010770900000000444, 0.00010841600000000007, 0.00010744500000000462, 0.00010844499999999868, 0.00010799999999999699, 0.00010743099999999811]</msg>
<status status="PASS" starttime="20201029 18:15:59.805" endtime="20201029 18:15:59.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.793" endtime="20201029 18:15:59.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.821" endtime="20201029 18:15:59.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.816" endtime="20201029 18:15:59.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.814" endtime="20201029 18:15:59.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.326" endtime="20201029 18:15:59.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.325" endtime="20201029 18:15:59.846"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.869" endtime="20201029 18:15:59.890"></status>
</kw>
<msg timestamp="20201029 18:15:59.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.865" endtime="20201029 18:15:59.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.894" endtime="20201029 18:15:59.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.900" endtime="20201029 18:15:59.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.858" endtime="20201029 18:15:59.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.852" endtime="20201029 18:15:59.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.923" endtime="20201029 18:16:00.260"></status>
</kw>
<msg timestamp="20201029 18:16:00.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039854569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.920" endtime="20201029 18:16:00.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039854569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.269" endtime="20201029 18:16:00.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.287" endtime="20201029 18:16:00.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.913" endtime="20201029 18:16:00.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.908" endtime="20201029 18:16:00.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.304" level="INFO">${RESULT} = [{'diff': 0.00010941600000000107}, {'diff': 0.00010844499999999868}, {'diff': 0.00010873599999999817}, {'diff': 0.0001085549999999963}, {'diff': 0.0001084020000000005}, {'diff': 0.00010899999999999799...</msg>
<status status="PASS" starttime="20201029 18:16:00.296" endtime="20201029 18:16:00.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.315" level="INFO">${ACCURACY} = {'diff': [0.00010941600000000107, 0.00010844499999999868, 0.00010873599999999817, 0.0001085549999999963, 0.0001084020000000005, 0.00010899999999999799, 0.00010920799999999953, 0.00010869500000000587, ...</msg>
<status status="PASS" starttime="20201029 18:16:00.307" endtime="20201029 18:16:00.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.326" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.324" endtime="20201029 18:16:00.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.332" level="INFO">VALUE: [0.00010941600000000107, 0.00010844499999999868, 0.00010873599999999817, 0.0001085549999999963, 0.0001084020000000005, 0.00010899999999999799, 0.00010920799999999953, 0.00010869500000000587, 0.00010884700000000219, 0.00010873599999999817, 0.00010873599999999817, 0.00010876399999999731, 0.00010849999999999749, 0.00010902800000000407, 0.00010888800000000143, 0.00010854200000000314, 0.00010888899999999396, 0.00010876400000000425, 0.00010866699999999979, 0.00010887499999999439, 0.00010866600000000032, 0.00010918099999999986, 0.00010916599999999388, 0.00010852700000000409, 0.00010933299999999618, 0.00010920799999999953, 0.00010940300000000097, 0.00010934699999999575, 0.00010877700000000434, 0.00010934799999999523, 0.00010919499999999943, 0.0001092219999999991, 0.0001087769999999974, 0.00010931999999999609, 0.0001090690000000033, 0.00010915200000000125, 0.0001092219999999991, 0.00010915300000000072, 0.00010931900000000355, 0.00010918099999999986, 0.00010887500000000133, 0.00010855599999999577, 0.00010915300000000072, 0.00010890300000000047, 0.00010912499999999464, 0.00010854099999999672, 0.0001092219999999991, 0.00010916700000000029, 0.00010862499999999414, 0.00010911100000000201]</msg>
<status status="PASS" starttime="20201029 18:16:00.328" endtime="20201029 18:16:00.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.317" endtime="20201029 18:16:00.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.349" endtime="20201029 18:16:00.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.344" endtime="20201029 18:16:00.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.342" endtime="20201029 18:16:00.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.848" endtime="20201029 18:16:00.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.847" endtime="20201029 18:16:00.374"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.396" endtime="20201029 18:16:00.417"></status>
</kw>
<msg timestamp="20201029 18:16:00.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.393" endtime="20201029 18:16:00.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.420" endtime="20201029 18:16:00.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.426" endtime="20201029 18:16:00.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.386" endtime="20201029 18:16:00.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.380" endtime="20201029 18:16:00.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.450" endtime="20201029 18:16:00.794"></status>
</kw>
<msg timestamp="20201029 18:16:00.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039443958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039554153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.446" endtime="20201029 18:16:00.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039443958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039554153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.804" endtime="20201029 18:16:00.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.822" endtime="20201029 18:16:00.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.439" endtime="20201029 18:16:00.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.434" endtime="20201029 18:16:00.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.840" level="INFO">${RESULT} = [{'diff': 0.00011019500000000043}, {'diff': 0.0001098890000000019}, {'diff': 0.00011040300000000197}, {'diff': 0.00011001300000000602}, {'diff': 0.00010973699999999864}, {'diff': 0.0001101529999999947...</msg>
<status status="PASS" starttime="20201029 18:16:00.831" endtime="20201029 18:16:00.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.849" level="INFO">${ACCURACY} = {'diff': [0.00011019500000000043, 0.0001098890000000019, 0.00011040300000000197, 0.00011001300000000602, 0.00010973699999999864, 0.00011015299999999478, 0.00010955599999999677, 0.00010977800000000482,...</msg>
<status status="PASS" starttime="20201029 18:16:00.842" endtime="20201029 18:16:00.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.860" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.858" endtime="20201029 18:16:00.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.866" level="INFO">VALUE: [0.00011019500000000043, 0.0001098890000000019, 0.00011040300000000197, 0.00011001300000000602, 0.00010973699999999864, 0.00011015299999999478, 0.00010955599999999677, 0.00010977800000000482, 0.00010963899999999471, 0.00011008300000000387, 0.00010990300000000147, 0.00010954100000000466, 0.00011036100000000326, 0.00011043000000000164, 0.00011032000000000403, 0.00011013899999999521, 0.00011033399999999666, 0.00011045800000000078, 0.00011031999999999709, 0.00011049999999999949, 0.00011001399999999856, 0.0001097769999999984, 0.000109596999999996, 0.00010974999999999874, 0.0001100549999999978, 0.00011024999999999924, 0.00010999999999999899, 0.00010997199999999985, 0.00010965300000000122, 0.00010979200000000439, 0.00010962500000000208, 0.00011020800000000053, 0.00011034800000000317, 0.00010984799999999573, 0.00010952699999999815, 0.00011024999999999924, 0.00011047200000000035, 0.00011030499999999804, 0.00010951399999999806, 0.00010986100000000276, 0.00010945799999999978, 0.00010962499999999514, 0.00011011100000000301, 0.00011002799999999813, 0.0001103890000000024, 0.00011033399999999666, 0.0001095690000000038, 0.0001103890000000024, 0.00010983300000000362, 0.00010949999999999849]</msg>
<status status="PASS" starttime="20201029 18:16:00.863" endtime="20201029 18:16:00.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.851" endtime="20201029 18:16:00.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.878" endtime="20201029 18:16:00.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.874" endtime="20201029 18:16:00.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.872" endtime="20201029 18:16:00.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.376" endtime="20201029 18:16:00.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.375" endtime="20201029 18:16:00.904"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.926" endtime="20201029 18:16:00.948"></status>
</kw>
<msg timestamp="20201029 18:16:00.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.923" endtime="20201029 18:16:00.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.952" endtime="20201029 18:16:00.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.958" endtime="20201029 18:16:00.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.916" endtime="20201029 18:16:00.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.910" endtime="20201029 18:16:00.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.984" endtime="20201029 18:16:01.339"></status>
</kw>
<msg timestamp="20201029 18:16:01.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041158222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041268694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.980" endtime="20201029 18:16:01.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041158222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041268694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.348" endtime="20201029 18:16:01.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.367" endtime="20201029 18:16:01.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.972" endtime="20201029 18:16:01.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.966" endtime="20201029 18:16:01.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.386" level="INFO">${RESULT} = [{'diff': 0.00011047200000000035}, {'diff': 0.0001107220000000006}, {'diff': 0.00011072300000000007}, {'diff': 0.0001110969999999975}, {'diff': 0.00011102800000000607}, {'diff': 0.00011091700000000204...</msg>
<status status="PASS" starttime="20201029 18:16:01.375" endtime="20201029 18:16:01.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.396" level="INFO">${ACCURACY} = {'diff': [0.00011047200000000035, 0.0001107220000000006, 0.00011072300000000007, 0.0001110969999999975, 0.00011102800000000607, 0.00011091700000000204, 0.00011061099999999657, 0.00011051399999999906, ...</msg>
<status status="PASS" starttime="20201029 18:16:01.388" endtime="20201029 18:16:01.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.407" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.405" endtime="20201029 18:16:01.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.413" level="INFO">VALUE: [0.00011047200000000035, 0.0001107220000000006, 0.00011072300000000007, 0.0001110969999999975, 0.00011102800000000607, 0.00011091700000000204, 0.00011061099999999657, 0.00011051399999999906, 0.00011068000000000189, 0.00011051399999999906, 0.00011088800000000343, 0.00011080599999999802, 0.00011120800000000153, 0.00011131899999999861, 0.00011134699999999775, 0.00011145900000000125, 0.00011130599999999852, 0.00011112499999999664, 0.00011068000000000189, 0.00011048699999999939, 0.00011111100000000401, 0.00011106899999999836, 0.00011101300000000008, 0.00011047199999999341, 0.00011134699999999775, 0.00011112500000000358, 0.0001108890000000029, 0.00011077799999999888, 0.00011069400000000146, 0.00011087499999999639, 0.00011062500000000308, 0.00011109700000000444, 0.00011080499999999854, 0.00011105500000000573, 0.0001112769999999999, 0.00011066699999999485, 0.00011113899999999621, 0.00011116700000000229, 0.00011113900000000315, 0.00011048599999999992, 0.0001113619999999968, 0.00011112500000000358, 0.00011065300000000222, 0.00011140300000000297, 0.00011115299999999578, 0.00011058299999999743, 0.00011091599999999563, 0.00011137499999999689, 0.00011080599999999802, 0.00011051299999999958]</msg>
<status status="PASS" starttime="20201029 18:16:01.409" endtime="20201029 18:16:01.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.398" endtime="20201029 18:16:01.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.427" endtime="20201029 18:16:01.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.421" endtime="20201029 18:16:01.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.418" endtime="20201029 18:16:01.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.906" endtime="20201029 18:16:01.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.905" endtime="20201029 18:16:01.452"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.475" endtime="20201029 18:16:01.495"></status>
</kw>
<msg timestamp="20201029 18:16:01.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.471" endtime="20201029 18:16:01.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.499" endtime="20201029 18:16:01.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.505" endtime="20201029 18:16:01.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.464" endtime="20201029 18:16:01.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.458" endtime="20201029 18:16:01.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.529" endtime="20201029 18:16:01.880"></status>
</kw>
<msg timestamp="20201029 18:16:01.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039796431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039907917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.525" endtime="20201029 18:16:01.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039796431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039907917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.889" endtime="20201029 18:16:01.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.907" endtime="20201029 18:16:01.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.518" endtime="20201029 18:16:01.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.513" endtime="20201029 18:16:01.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.925" level="INFO">${RESULT} = [{'diff': 0.00011148600000000092}, {'diff': 0.00011197200000000185}, {'diff': 0.00011161099999999757}, {'diff': 0.00011231899999999961}, {'diff': 0.00011158300000000537}, {'diff': 0.000111874999999997...</msg>
<status status="PASS" starttime="20201029 18:16:01.916" endtime="20201029 18:16:01.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.935" level="INFO">${ACCURACY} = {'diff': [0.00011148600000000092, 0.00011197200000000185, 0.00011161099999999757, 0.00011231899999999961, 0.00011158300000000537, 0.00011187499999999739, 0.00011157000000000528, 0.00011187499999999739...</msg>
<status status="PASS" starttime="20201029 18:16:01.927" endtime="20201029 18:16:01.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.946" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.944" endtime="20201029 18:16:01.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.951" level="INFO">VALUE: [0.00011148600000000092, 0.00011197200000000185, 0.00011161099999999757, 0.00011231899999999961, 0.00011158300000000537, 0.00011187499999999739, 0.00011157000000000528, 0.00011187499999999739, 0.00011158399999999791, 0.00011163900000000365, 0.00011170899999999456, 0.00011219400000000296, 0.00011186099999999782, 0.00011184699999999825, 0.00011229100000000047, 0.0001120419999999997, 0.00011169400000000246, 0.00011220899999999506, 0.00011241700000000354, 0.0001120969999999985, 0.00011165300000000322, 0.00011180599999999902, 0.00011218099999999592, 0.0001117220000000016, 0.00011237500000000483, 0.00011234700000000569, 0.00011181999999999859, 0.00011208299999999893, 0.0001120969999999985, 0.00011187500000000433, 0.00011202800000000013, 0.00011187499999999739, 0.00011245800000000278, 0.00011230500000000004, 0.00011201400000000056, 0.00011179200000000639, 0.00011223600000000167, 0.00011144400000000221, 0.00011152800000000657, 0.00011195800000000228, 0.00011181899999999911, 0.00011147200000000135, 0.00011162499999999714, 0.00011225000000000124, 0.00011156999999999834, 0.0001120419999999997, 0.0001120969999999985, 0.00011148700000000039, 0.0001120419999999997, 0.00011213900000000415]</msg>
<status status="PASS" starttime="20201029 18:16:01.948" endtime="20201029 18:16:01.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.937" endtime="20201029 18:16:01.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.967" endtime="20201029 18:16:01.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.961" endtime="20201029 18:16:01.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.958" endtime="20201029 18:16:01.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.454" endtime="20201029 18:16:01.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.453" endtime="20201029 18:16:01.994"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.027" endtime="20201029 18:16:02.050"></status>
</kw>
<msg timestamp="20201029 18:16:02.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.021" endtime="20201029 18:16:02.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.054" endtime="20201029 18:16:02.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.063" endtime="20201029 18:16:02.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.012" endtime="20201029 18:16:02.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.004" endtime="20201029 18:16:02.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.093" endtime="20201029 18:16:02.446"></status>
</kw>
<msg timestamp="20201029 18:16:02.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052422875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052535917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.090" endtime="20201029 18:16:02.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052422875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052535917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.456" endtime="20201029 18:16:02.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.474" endtime="20201029 18:16:02.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.079" endtime="20201029 18:16:02.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.073" endtime="20201029 18:16:02.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.491" level="INFO">${RESULT} = [{'diff': 0.0001130420000000007}, {'diff': 0.00011294399999999677}, {'diff': 0.0001130969999999995}, {'diff': 0.0001125420000000002}, {'diff': 0.00011334699999999975}, {'diff': 0.00011332000000000009}...</msg>
<status status="PASS" starttime="20201029 18:16:02.482" endtime="20201029 18:16:02.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.502" level="INFO">${ACCURACY} = {'diff': [0.0001130420000000007, 0.00011294399999999677, 0.0001130969999999995, 0.0001125420000000002, 0.00011334699999999975, 0.00011332000000000009, 0.0001124299999999967, 0.0001129169999999971, 0.0...</msg>
<status status="PASS" starttime="20201029 18:16:02.493" endtime="20201029 18:16:02.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.514" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.511" endtime="20201029 18:16:02.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.519" level="INFO">VALUE: [0.0001130420000000007, 0.00011294399999999677, 0.0001130969999999995, 0.0001125420000000002, 0.00011334699999999975, 0.00011332000000000009, 0.0001124299999999967, 0.0001129169999999971, 0.00011315299999999778, 0.00011325000000000224, 0.00011265299999999728, 0.00011295900000000275, 0.00011320799999999659, 0.00011284699999999925, 0.00011330600000000052, 0.00011254100000000072, 0.0001129169999999971, 0.00011258299999999943, 0.0001125420000000002, 0.00011297200000000285, 0.00011302799999999419, 0.0001130420000000007, 0.00011252800000000063, 0.00011248600000000192, 0.00011311099999999907, 0.00011301300000000208, 0.00011275000000000174, 0.00011318000000000439, 0.0001130969999999995, 0.00011247200000000235, 0.00011338899999999846, 0.00011266699999999685, 0.00011286100000000576, 0.00011308399999999941, 0.0001130969999999995, 0.00011261100000000551, 0.00011319499999999649, 0.0001130420000000007, 0.00011313900000000515, 0.00011336099999999932, 0.00011315299999999778, 0.00011287500000000533, 0.00011341599999999813, 0.00011245899999999531, 0.00011306900000000036, 0.00011298599999999548, 0.00011254100000000072, 0.00011269399999999652, 0.000113209000000003, 0.0001129169999999971]</msg>
<status status="PASS" starttime="20201029 18:16:02.516" endtime="20201029 18:16:02.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.504" endtime="20201029 18:16:02.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.532" endtime="20201029 18:16:02.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.527" endtime="20201029 18:16:02.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.525" endtime="20201029 18:16:02.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.998" endtime="20201029 18:16:02.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.996" endtime="20201029 18:16:02.557"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.580" endtime="20201029 18:16:02.601"></status>
</kw>
<msg timestamp="20201029 18:16:02.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.577" endtime="20201029 18:16:02.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.604" endtime="20201029 18:16:02.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.611" endtime="20201029 18:16:02.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.569" endtime="20201029 18:16:02.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.564" endtime="20201029 18:16:02.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.634" endtime="20201029 18:16:02.980"></status>
</kw>
<msg timestamp="20201029 18:16:02.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040496944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.631" endtime="20201029 18:16:02.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040496944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.990" endtime="20201029 18:16:03.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.009" endtime="20201029 18:16:03.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.624" endtime="20201029 18:16:03.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.619" endtime="20201029 18:16:03.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.026" level="INFO">${RESULT} = [{'diff': 0.00011347200000000335}, {'diff': 0.00011386099999999982}, {'diff': 0.00011433300000000118}, {'diff': 0.000113597}, {'diff': 0.00011440299999999903}, {'diff': 0.00011356899999999392}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:16:03.018" endtime="20201029 18:16:03.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.036" level="INFO">${ACCURACY} = {'diff': [0.00011347200000000335, 0.00011386099999999982, 0.00011433300000000118, 0.000113597, 0.00011440299999999903, 0.00011356899999999392, 0.00011430500000000204, 0.00011447199999999741, 0.0001139...</msg>
<status status="PASS" starttime="20201029 18:16:03.028" endtime="20201029 18:16:03.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.047" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.044" endtime="20201029 18:16:03.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.052" level="INFO">VALUE: [0.00011347200000000335, 0.00011386099999999982, 0.00011433300000000118, 0.000113597, 0.00011440299999999903, 0.00011356899999999392, 0.00011430500000000204, 0.00011447199999999741, 0.00011393099999999767, 0.00011384700000000025, 0.00011351399999999512, 0.00011373600000000317, 0.00011369500000000393, 0.0001137499999999958, 0.00011390299999999853, 0.00011438799999999999, 0.00011416599999999888, 0.00011448600000000392, 0.00011430600000000152, 0.0001142499999999963, 0.00011361099999999957, 0.00011382000000000059, 0.00011350000000000249, 0.0001144169999999986, 0.00011368099999999742, 0.00011404100000000222, 0.00011388899999999896, 0.00011430600000000152, 0.0001140970000000005, 0.00011356900000000086, 0.00011361099999999957, 0.00011422199999999716, 0.00011416599999999888, 0.00011367999999999795, 0.00011363899999999871, 0.00011440299999999903, 0.0001138619999999993, 0.00011366700000000479, 0.000114209000000004, 0.00011445799999999784, 0.00011408400000000041, 0.00011418100000000486, 0.00011433400000000066, 0.00011348600000000292, 0.0001137499999999958, 0.00011365299999999828, 0.00011443100000000511, 0.00011418099999999792, 0.00011441700000000554, 0.00011430600000000152]</msg>
<status status="PASS" starttime="20201029 18:16:03.049" endtime="20201029 18:16:03.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.037" endtime="20201029 18:16:03.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.065" endtime="20201029 18:16:03.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.060" endtime="20201029 18:16:03.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.058" endtime="20201029 18:16:03.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.559" endtime="20201029 18:16:03.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.558" endtime="20201029 18:16:03.090"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.113" endtime="20201029 18:16:03.138"></status>
</kw>
<msg timestamp="20201029 18:16:03.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.110" endtime="20201029 18:16:03.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.141" endtime="20201029 18:16:03.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.147" endtime="20201029 18:16:03.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.102" endtime="20201029 18:16:03.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.097" endtime="20201029 18:16:03.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.171" endtime="20201029 18:16:03.524"></status>
</kw>
<msg timestamp="20201029 18:16:03.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041778236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.168" endtime="20201029 18:16:03.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041778236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.533" endtime="20201029 18:16:03.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.552" endtime="20201029 18:16:03.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.160" endtime="20201029 18:16:03.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.155" endtime="20201029 18:16:03.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.569" level="INFO">${RESULT} = [{'diff': 0.00011444499999999774}, {'diff': 0.00011451399999999612}, {'diff': 0.00011476399999999637}, {'diff': 0.00011469500000000493}, {'diff': 0.00011527799999999644}, {'diff': 0.000115083000000001...</msg>
<status status="PASS" starttime="20201029 18:16:03.560" endtime="20201029 18:16:03.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.578" level="INFO">${ACCURACY} = {'diff': [0.00011444499999999774, 0.00011451399999999612, 0.00011476399999999637, 0.00011469500000000493, 0.00011527799999999644, 0.00011508300000000193, 0.00011455600000000177, 0.00011444399999999827...</msg>
<status status="PASS" starttime="20201029 18:16:03.571" endtime="20201029 18:16:03.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.589" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.587" endtime="20201029 18:16:03.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.595" level="INFO">VALUE: [0.00011444499999999774, 0.00011451399999999612, 0.00011476399999999637, 0.00011469500000000493, 0.00011527799999999644, 0.00011508300000000193, 0.00011455600000000177, 0.00011444399999999827, 0.00011533400000000166, 0.00011494399999999877, 0.00011494399999999877, 0.00011473599999999723, 0.00011530599999999558, 0.00011532000000000209, 0.0001145550000000023, 0.00011461100000000057, 0.00011538900000000046, 0.00011494500000000518, 0.000114597000000001, 0.00011505600000000227, 0.00011536099999999438, 0.00011441599999999913, 0.00011523600000000467, 0.0001150550000000028, 0.00011531900000000261, 0.00011443099999999817, 0.00011538899999999352, 0.0001154169999999996, 0.00011484800000000073, 0.00011516699999999935, 0.00011506900000000236, 0.00011515299999999978, 0.00011449999999999655, 0.0001153750000000009, 0.00011481900000000211, 0.00011448600000000392, 0.0001150970000000015, 0.00011507000000000184, 0.00011493099999999867, 0.00011534700000000175, 0.00011517999999999945, 0.00011497299999999738, 0.00011500000000000399, 0.00011468099999999842, 0.00011529200000000295, 0.00011445800000000478, 0.00011529199999999601, 0.0001148750000000004, 0.00011470799999999809, 0.00011515299999999978]</msg>
<status status="PASS" starttime="20201029 18:16:03.592" endtime="20201029 18:16:03.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.580" endtime="20201029 18:16:03.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.610" endtime="20201029 18:16:03.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.604" endtime="20201029 18:16:03.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.601" endtime="20201029 18:16:03.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.092" endtime="20201029 18:16:03.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.091" endtime="20201029 18:16:03.635"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.658" endtime="20201029 18:16:03.681"></status>
</kw>
<msg timestamp="20201029 18:16:03.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.655" endtime="20201029 18:16:03.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.684" endtime="20201029 18:16:03.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.691" endtime="20201029 18:16:03.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.647" endtime="20201029 18:16:03.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.642" endtime="20201029 18:16:03.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.714" endtime="20201029 18:16:04.070"></status>
</kw>
<msg timestamp="20201029 18:16:04.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040077444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040193569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.711" endtime="20201029 18:16:04.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040077444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040193569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.080" endtime="20201029 18:16:04.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.098" endtime="20201029 18:16:04.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.703" endtime="20201029 18:16:04.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.699" endtime="20201029 18:16:04.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.116" level="INFO">${RESULT} = [{'diff': 0.00011612500000000164}, {'diff': 0.00011561100000000157}, {'diff': 0.00011569399999999952}, {'diff': 0.00011641600000000113}, {'diff': 0.0001157770000000044}, {'diff': 0.0001163610000000023...</msg>
<status status="PASS" starttime="20201029 18:16:04.107" endtime="20201029 18:16:04.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.131" level="INFO">${ACCURACY} = {'diff': [0.00011612500000000164, 0.00011561100000000157, 0.00011569399999999952, 0.00011641600000000113, 0.0001157770000000044, 0.00011636100000000232, 0.00011580500000000354, 0.00011616700000000035,...</msg>
<status status="PASS" starttime="20201029 18:16:04.118" endtime="20201029 18:16:04.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.142" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.140" endtime="20201029 18:16:04.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.147" level="INFO">VALUE: [0.00011612500000000164, 0.00011561100000000157, 0.00011569399999999952, 0.00011641600000000113, 0.0001157770000000044, 0.00011636100000000232, 0.00011580500000000354, 0.00011616700000000035, 0.00011608300000000293, 0.00011558399999999497, 0.00011631999999999615, 0.00011594499999999924, 0.00011544399999999927, 0.00011622199999999916, 0.00011636100000000232, 0.0001164170000000006, 0.000115597000000002, 0.00011609800000000198, 0.00011544399999999927, 0.00011586100000000182, 0.00011548600000000492, 0.00011563900000000071, 0.00011573599999999823, 0.00011561100000000157, 0.00011584699999999531, 0.00011590300000000053, 0.00011634700000000275, 0.00011638900000000146, 0.00011638900000000146, 0.00011627699999999797, 0.00011583399999999522, 0.00011594399999999977, 0.00011595799999999934, 0.00011601399999999762, 0.00011605600000000327, 0.00011611100000000207, 0.0001157499999999978, 0.00011605599999999633, 0.00011619499999999949, 0.00011613899999999427, 0.00011634700000000275, 0.00011602800000000413, 0.00011608400000000241, 0.00011638900000000146, 0.00011602799999999719, 0.00011627800000000438, 0.00011605599999999633, 0.00011555499999999636, 0.00011619400000000002, 0.00011547299999999788]</msg>
<status status="PASS" starttime="20201029 18:16:04.144" endtime="20201029 18:16:04.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.133" endtime="20201029 18:16:04.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.160" endtime="20201029 18:16:04.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.156" endtime="20201029 18:16:04.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.153" endtime="20201029 18:16:04.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.637" endtime="20201029 18:16:04.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.636" endtime="20201029 18:16:04.186"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.209" endtime="20201029 18:16:04.232"></status>
</kw>
<msg timestamp="20201029 18:16:04.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.206" endtime="20201029 18:16:04.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.236" endtime="20201029 18:16:04.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.242" endtime="20201029 18:16:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.198" endtime="20201029 18:16:04.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.192" endtime="20201029 18:16:04.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.266" endtime="20201029 18:16:04.615"></status>
</kw>
<msg timestamp="20201029 18:16:04.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040781681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.263" endtime="20201029 18:16:04.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040781681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.624" endtime="20201029 18:16:04.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.643" endtime="20201029 18:16:04.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.255" endtime="20201029 18:16:04.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.251" endtime="20201029 18:16:04.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.660" level="INFO">${RESULT} = [{'diff': 0.00011654199999999726}, {'diff': 0.00011688899999999502}, {'diff': 0.00011718100000000092}, {'diff': 0.00011643100000000017}, {'diff': 0.00011726399999999887}, {'diff': 0.000117304999999998...</msg>
<status status="PASS" starttime="20201029 18:16:04.651" endtime="20201029 18:16:04.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.672" level="INFO">${ACCURACY} = {'diff': [0.00011654199999999726, 0.00011688899999999502, 0.00011718100000000092, 0.00011643100000000017, 0.00011726399999999887, 0.0001173049999999981, 0.00011661200000000205, 0.00011722200000000016,...</msg>
<status status="PASS" starttime="20201029 18:16:04.663" endtime="20201029 18:16:04.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.683" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.681" endtime="20201029 18:16:04.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.688" level="INFO">VALUE: [0.00011654199999999726, 0.00011688899999999502, 0.00011718100000000092, 0.00011643100000000017, 0.00011726399999999887, 0.0001173049999999981, 0.00011661200000000205, 0.00011722200000000016, 0.00011684800000000273, 0.00011723599999999973, 0.00011695800000000034, 0.00011715299999999484, 0.00011701399999999862, 0.00011741699999999466, 0.00011715300000000178, 0.00011656899999999693, 0.0001172499999999993, 0.0001165420000000042, 0.00011711099999999613, 0.00011736100000000332, 0.00011733399999999672, 0.00011738900000000246, 0.00011670899999999956, 0.00011694500000000024, 0.00011729099999999854, 0.00011679199999999751, 0.00011702699999999872, 0.00011647199999999941, 0.000116597000000003, 0.00011719500000000049, 0.00011688899999999502, 0.00011659699999999606, 0.0001164170000000006, 0.0001170699999999969, 0.00011681900000000411, 0.00011668100000000042, 0.00011697199999999991, 0.00011722200000000016, 0.00011708399999999647, 0.0001167499999999988, 0.00011706899999999743, 0.00011643100000000017, 0.00011651399999999812, 0.00011718100000000092, 0.00011648599999999898, 0.00011679099999999804, 0.00011686100000000282, 0.00011693100000000067, 0.00011651399999999812, 0.00011730600000000452]</msg>
<status status="PASS" starttime="20201029 18:16:04.685" endtime="20201029 18:16:04.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.673" endtime="20201029 18:16:04.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.701" endtime="20201029 18:16:04.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.697" endtime="20201029 18:16:04.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.694" endtime="20201029 18:16:04.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.188" endtime="20201029 18:16:04.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.187" endtime="20201029 18:16:04.726"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.750" endtime="20201029 18:16:04.773"></status>
</kw>
<msg timestamp="20201029 18:16:04.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.746" endtime="20201029 18:16:04.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.776" endtime="20201029 18:16:04.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.783" endtime="20201029 18:16:04.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.739" endtime="20201029 18:16:04.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.733" endtime="20201029 18:16:04.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.811" endtime="20201029 18:16:05.162"></status>
</kw>
<msg timestamp="20201029 18:16:05.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0403805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040498403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:04.807" endtime="20201029 18:16:05.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0403805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040498403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:05.171" endtime="20201029 18:16:05.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.190" endtime="20201029 18:16:05.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.800" endtime="20201029 18:16:05.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.794" endtime="20201029 18:16:05.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.207" level="INFO">${RESULT} = [{'diff': 0.00011790300000000253}, {'diff': 0.00011748599999999998}, {'diff': 0.00011802799999999919}, {'diff': 0.00011776399999999937}, {'diff': 0.00011800000000000005}, {'diff': 0.000117847999999996...</msg>
<status status="PASS" starttime="20201029 18:16:05.198" endtime="20201029 18:16:05.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.216" level="INFO">${ACCURACY} = {'diff': [0.00011790300000000253, 0.00011748599999999998, 0.00011802799999999919, 0.00011776399999999937, 0.00011800000000000005, 0.00011784799999999679, 0.0001181950000000015, 0.00011751399999999912,...</msg>
<status status="PASS" starttime="20201029 18:16:05.209" endtime="20201029 18:16:05.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.226" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.224" endtime="20201029 18:16:05.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.232" level="INFO">VALUE: [0.00011790300000000253, 0.00011748599999999998, 0.00011802799999999919, 0.00011776399999999937, 0.00011800000000000005, 0.00011784799999999679, 0.0001181950000000015, 0.00011751399999999912, 0.00011837499999999695, 0.00011829199999999901, 0.00011797200000000091, 0.00011743100000000117, 0.00011782000000000459, 0.00011797300000000038, 0.00011749999999999955, 0.00011833299999999825, 0.00011802799999999919, 0.00011748599999999998, 0.00011842999999999576, 0.00011749999999999955, 0.00011769399999999458, 0.00011766699999999491, 0.00011822300000000063, 0.00011779199999999851, 0.0001178049999999986, 0.0001178750000000034, 0.00011830600000000552, 0.00011765300000000228, 0.00011776399999999937, 0.00011749999999999955, 0.00011808400000000441, 0.00011744400000000127, 0.00011794500000000124, 0.00011776399999999937, 0.00011801399999999962, 0.000118082999999998, 0.00011798600000000048, 0.00011748599999999998, 0.0001177499999999998, 0.00011752799999999869, 0.00011836099999999738, 0.00011788899999999602, 0.00011794400000000177, 0.00011794400000000177, 0.000117597000000004, 0.00011836099999999738, 0.00011822200000000116, 0.00011784799999999679, 0.00011770800000000109, 0.00011755599999999783]</msg>
<status status="PASS" starttime="20201029 18:16:05.229" endtime="20201029 18:16:05.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.217" endtime="20201029 18:16:05.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.244" endtime="20201029 18:16:05.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.240" endtime="20201029 18:16:05.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.237" endtime="20201029 18:16:05.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.728" endtime="20201029 18:16:05.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.727" endtime="20201029 18:16:05.269"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.292" endtime="20201029 18:16:05.315"></status>
</kw>
<msg timestamp="20201029 18:16:05.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.288" endtime="20201029 18:16:05.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.318" endtime="20201029 18:16:05.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.324" endtime="20201029 18:16:05.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.281" endtime="20201029 18:16:05.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.276" endtime="20201029 18:16:05.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.348" endtime="20201029 18:16:05.684"></status>
</kw>
<msg timestamp="20201029 18:16:05.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041220625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.344" endtime="20201029 18:16:05.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041220625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041339639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.693" endtime="20201029 18:16:05.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.711" endtime="20201029 18:16:05.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.337" endtime="20201029 18:16:05.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.332" endtime="20201029 18:16:05.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.728" level="INFO">${RESULT} = [{'diff': 0.00011901400000000062}, {'diff': 0.00011908399999999847}, {'diff': 0.000119082999999999}, {'diff': 0.00011897300000000138}, {'diff': 0.00011933299999999925}, {'diff': 0.0001189170000000031}...</msg>
<status status="PASS" starttime="20201029 18:16:05.720" endtime="20201029 18:16:05.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.737" level="INFO">${ACCURACY} = {'diff': [0.00011901400000000062, 0.00011908399999999847, 0.000119082999999999, 0.00011897300000000138, 0.00011933299999999925, 0.0001189170000000031, 0.00011927800000000044, 0.00011870800000000209, 0...</msg>
<status status="PASS" starttime="20201029 18:16:05.730" endtime="20201029 18:16:05.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.748" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.746" endtime="20201029 18:16:05.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.753" level="INFO">VALUE: [0.00011901400000000062, 0.00011908399999999847, 0.000119082999999999, 0.00011897300000000138, 0.00011933299999999925, 0.0001189170000000031, 0.00011927800000000044, 0.00011870800000000209, 0.00011895800000000234, 0.00011854099999999979, 0.00011927800000000044, 0.000118597000000005, 0.00011866699999999591, 0.0001183750000000039, 0.0001194029999999971, 0.00011922200000000216, 0.00011850000000000055, 0.00011934699999999882, 0.00011880599999999908, 0.00011879199999999951, 0.00011919400000000302, 0.00011861100000000457, 0.00011850000000000055, 0.00011909699999999857, 0.00011941699999999666, 0.00011859699999999807, 0.00011915300000000378, 0.00011894399999999583, 0.00011907000000000584, 0.0001184579999999949, 0.00011883299999999875, 0.00011916700000000335, 0.00011901400000000062, 0.00011938900000000446, 0.00011909699999999857, 0.0001192500000000013, 0.00011926400000000087, 0.00011920900000000206, 0.00011929200000000001, 0.00011842999999999576, 0.00011891599999999669, 0.00011850000000000055, 0.00011922200000000216, 0.00011936199999999786, 0.00011865200000000381, 0.0001185829999999985, 0.00011940199999999762, 0.00011912500000000464, 0.00011852700000000022, 0.00011898700000000095]</msg>
<status status="PASS" starttime="20201029 18:16:05.750" endtime="20201029 18:16:05.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.739" endtime="20201029 18:16:05.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.767" endtime="20201029 18:16:05.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.761" endtime="20201029 18:16:05.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.759" endtime="20201029 18:16:05.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.271" endtime="20201029 18:16:05.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.270" endtime="20201029 18:16:05.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.713" endtime="20201029 18:16:05.793"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:12.588" endtime="20201029 18:16:05.794" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.811" endtime="20201029 18:16:05.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.807" endtime="20201029 18:16:05.834"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.867" endtime="20201029 18:16:05.882"></status>
</kw>
<msg timestamp="20201029 18:16:05.884" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.864" endtime="20201029 18:16:05.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.890" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.886" endtime="20201029 18:16:05.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.896" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:05.892" endtime="20201029 18:16:05.897"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:05.857" endtime="20201029 18:16:05.899"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:05.850" endtime="20201029 18:16:05.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.848" endtime="20201029 18:16:05.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:05.909" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:05.908" endtime="20201029 18:16:05.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.903" endtime="20201029 18:16:05.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.846" endtime="20201029 18:16:05.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.844" endtime="20201029 18:16:05.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.913" endtime="20201029 18:16:05.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.840" endtime="20201029 18:16:05.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.836" endtime="20201029 18:16:05.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.804" endtime="20201029 18:16:05.920"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.946" endtime="20201029 18:16:05.961"></status>
</kw>
<msg timestamp="20201029 18:16:05.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.943" endtime="20201029 18:16:05.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.964" endtime="20201029 18:16:05.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.971" endtime="20201029 18:16:05.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.933" endtime="20201029 18:16:05.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.928" endtime="20201029 18:16:05.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.995" endtime="20201029 18:16:06.342"></status>
</kw>
<msg timestamp="20201029 18:16:06.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126825514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126847208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.992" endtime="20201029 18:16:06.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126825514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126847208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.352" endtime="20201029 18:16:06.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.370" endtime="20201029 18:16:06.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.984" endtime="20201029 18:16:06.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.979" endtime="20201029 18:16:06.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.387" level="INFO">${RESULT} = [{'diff': 2.1693999999988778e-05}, {'diff': 2.1750000000014813e-05}, {'diff': 2.1847000000019268e-05}, {'diff': 2.1847999999990986e-05}, {'diff': 2.1236000000007804e-05}, {'diff': 2.106900000001244e-0...</msg>
<status status="PASS" starttime="20201029 18:16:06.379" endtime="20201029 18:16:06.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.397" level="INFO">${ACCURACY} = {'diff': [2.1693999999988778e-05, 2.1750000000014813e-05, 2.1847000000019268e-05, 2.1847999999990986e-05, 2.1236000000007804e-05, 2.106900000001244e-05, 2.1514000000000255e-05, 2.1069999999984157e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:06.389" endtime="20201029 18:16:06.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.408" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.405" endtime="20201029 18:16:06.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.415" level="INFO">VALUE: [2.1693999999988778e-05, 2.1750000000014813e-05, 2.1847000000019268e-05, 2.1847999999990986e-05, 2.1236000000007804e-05, 2.106900000001244e-05, 2.1514000000000255e-05, 2.1069999999984157e-05, 2.1694000000016533e-05, 2.158400000001892e-05, 2.159700000001208e-05, 2.1415999999996327e-05, 2.1583999999991166e-05, 2.1916999999982423e-05, 2.17369999999939e-05, 2.0916999999981423e-05, 2.136099999999752e-05, 2.1583000000019448e-05, 2.1583000000019448e-05, 2.1250000000000435e-05, 2.091599999998195e-05, 2.1764000000007444e-05, 2.122299999998689e-05, 2.1264000000020822e-05, 2.1722000000001795e-05, 2.1263999999993066e-05, 2.1569999999998535e-05, 2.1583000000019448e-05, 2.140300000000317e-05, 2.1332999999984503e-05, 2.179200000002046e-05, 2.1222000000015173e-05, 2.1250000000000435e-05, 2.140300000000317e-05, 2.1930000000003336e-05, 2.1582999999991692e-05, 2.1222000000015173e-05, 2.1430000000016713e-05, 2.106900000001244e-05, 2.1722000000001795e-05, 2.1903000000017547e-05, 2.140199999997594e-05, 2.1264000000020822e-05, 2.1084000000004544e-05, 2.1903000000017547e-05, 2.1500000000007624e-05, 2.1069999999984157e-05, 2.1250000000000435e-05, 2.1916000000010705e-05, 2.1958000000016353e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.412" endtime="20201029 18:16:06.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.399" endtime="20201029 18:16:06.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.426" endtime="20201029 18:16:06.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.422" endtime="20201029 18:16:06.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.420" endtime="20201029 18:16:06.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.923" endtime="20201029 18:16:06.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.922" endtime="20201029 18:16:06.451"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.474" endtime="20201029 18:16:06.489"></status>
</kw>
<msg timestamp="20201029 18:16:06.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.471" endtime="20201029 18:16:06.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.493" endtime="20201029 18:16:06.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.499" endtime="20201029 18:16:06.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.463" endtime="20201029 18:16:06.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.458" endtime="20201029 18:16:06.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.522" endtime="20201029 18:16:06.858"></status>
</kw>
<msg timestamp="20201029 18:16:06.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040036208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.519" endtime="20201029 18:16:06.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040036208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.867" endtime="20201029 18:16:06.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.886" endtime="20201029 18:16:06.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.512" endtime="20201029 18:16:06.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.507" endtime="20201029 18:16:06.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.903" level="INFO">${RESULT} = [{'diff': 2.1915999999996827e-05}, {'diff': 2.112499999999684e-05}, {'diff': 2.1901999999997257e-05}, {'diff': 2.1069999999998035e-05}, {'diff': 2.1235999999993926e-05}, {'diff': 2.1277999999999575e-0...</msg>
<status status="PASS" starttime="20201029 18:16:06.894" endtime="20201029 18:16:06.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.914" level="INFO">${ACCURACY} = {'diff': [2.1915999999996827e-05, 2.112499999999684e-05, 2.1901999999997257e-05, 2.1069999999998035e-05, 2.1235999999993926e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.123700000000034e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:06.905" endtime="20201029 18:16:06.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.925" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.922" endtime="20201029 18:16:06.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.930" level="INFO">VALUE: [2.1915999999996827e-05, 2.112499999999684e-05, 2.1901999999997257e-05, 2.1069999999998035e-05, 2.1235999999993926e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.123700000000034e-05, 2.19169999999963e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.1236000000000865e-05, 2.1235999999993926e-05, 2.1235999999993926e-05, 2.1749999999993996e-05, 2.1069999999998035e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.1264000000000005e-05, 2.1750000000000935e-05, 2.190299999999673e-05, 2.1097999999997175e-05, 2.1415999999996327e-05, 2.141700000000274e-05, 2.173700000000084e-05, 2.1569000000006e-05, 2.1402000000003696e-05, 2.14169999999958e-05, 2.1264000000000005e-05, 2.158300000000557e-05, 2.1236000000000865e-05, 2.1027999999999325e-05, 2.108299999999813e-05, 2.1943999999995967e-05, 2.14169999999958e-05, 2.1570000000005474e-05, 2.1264000000000005e-05, 2.1235999999993926e-05, 2.19169999999963e-05, 2.1264000000000005e-05, 2.106899999999856e-05, 2.1861999999997495e-05, 2.123700000000034e-05, 2.1430000000002836e-05, 2.1250000000000435e-05, 2.1708000000002226e-05, 2.173700000000084e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.927" endtime="20201029 18:16:06.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.915" endtime="20201029 18:16:06.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.942" endtime="20201029 18:16:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.937" endtime="20201029 18:16:06.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.935" endtime="20201029 18:16:06.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.453" endtime="20201029 18:16:06.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.452" endtime="20201029 18:16:06.967"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.990" endtime="20201029 18:16:07.005"></status>
</kw>
<msg timestamp="20201029 18:16:07.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.987" endtime="20201029 18:16:07.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.009" endtime="20201029 18:16:07.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.015" endtime="20201029 18:16:07.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.980" endtime="20201029 18:16:07.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.973" endtime="20201029 18:16:07.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.040" endtime="20201029 18:16:07.383"></status>
</kw>
<msg timestamp="20201029 18:16:07.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040341194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.036" endtime="20201029 18:16:07.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040341194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.393" endtime="20201029 18:16:07.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.411" endtime="20201029 18:16:07.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.029" endtime="20201029 18:16:07.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.024" endtime="20201029 18:16:07.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.428" level="INFO">${RESULT} = [{'diff': 2.108299999999813e-05}, {'diff': 2.138899999999666e-05}, {'diff': 2.1236000000000865e-05}, {'diff': 2.143100000000231e-05}, {'diff': 2.0888000000003626e-05}, {'diff': 2.193100000000281e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:07.420" endtime="20201029 18:16:07.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.439" level="INFO">${ACCURACY} = {'diff': [2.108299999999813e-05, 2.138899999999666e-05, 2.1236000000000865e-05, 2.143100000000231e-05, 2.0888000000003626e-05, 2.193100000000281e-05, 2.1055999999998465e-05, 2.173700000000084e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 18:16:07.430" endtime="20201029 18:16:07.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.450" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.448" endtime="20201029 18:16:07.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.456" level="INFO">VALUE: [2.108299999999813e-05, 2.138899999999666e-05, 2.1236000000000865e-05, 2.143100000000231e-05, 2.0888000000003626e-05, 2.193100000000281e-05, 2.1055999999998465e-05, 2.173700000000084e-05, 2.126300000000053e-05, 2.090299999999573e-05, 2.156899999999906e-05, 2.1958000000002476e-05, 2.106899999999856e-05, 2.1569999999998535e-05, 2.188899999999716e-05, 2.140299999999623e-05, 2.1236000000000865e-05, 2.141700000000274e-05, 2.1236000000000865e-05, 2.1208000000001725e-05, 2.190299999999673e-05, 2.155499999999949e-05, 2.1735999999994426e-05, 2.1069999999998035e-05, 2.1069999999998035e-05, 2.1722000000001795e-05, 2.094499999999444e-05, 2.161100000000471e-05, 2.14169999999958e-05, 2.1750000000000935e-05, 2.140299999999623e-05, 2.176300000000103e-05, 2.1069999999998035e-05, 2.1069999999998035e-05, 2.1750000000000935e-05, 2.1472000000001545e-05, 2.115299999999598e-05, 2.1250000000000435e-05, 2.1221999999994356e-05, 2.188899999999716e-05, 2.140299999999623e-05, 2.1930000000003336e-05, 2.10969999999977e-05, 2.1527999999999825e-05, 2.1901999999997257e-05, 2.1764000000000505e-05, 2.190299999999673e-05, 2.1764000000000505e-05, 2.1665999999996577e-05, 2.105499999999899e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.453" endtime="20201029 18:16:07.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.441" endtime="20201029 18:16:07.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.467" endtime="20201029 18:16:07.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.463" endtime="20201029 18:16:07.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.461" endtime="20201029 18:16:07.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.969" endtime="20201029 18:16:07.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.968" endtime="20201029 18:16:07.493"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.516" endtime="20201029 18:16:07.532"></status>
</kw>
<msg timestamp="20201029 18:16:07.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.513" endtime="20201029 18:16:07.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.536" endtime="20201029 18:16:07.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.542" endtime="20201029 18:16:07.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.505" endtime="20201029 18:16:07.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.500" endtime="20201029 18:16:07.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.565" endtime="20201029 18:16:07.916"></status>
</kw>
<msg timestamp="20201029 18:16:07.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040243583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.562" endtime="20201029 18:16:07.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040243583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.926" endtime="20201029 18:16:07.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.944" endtime="20201029 18:16:07.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.555" endtime="20201029 18:16:07.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.550" endtime="20201029 18:16:07.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.962" level="INFO">${RESULT} = [{'diff': 2.161099999999777e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.1569999999998535e-05}, {'diff': 2.1208000000001725e-05}, {'diff': 2.14169999999958e-05}, {'diff': 2.108299999999813e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:07.953" endtime="20201029 18:16:07.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.971" level="INFO">${ACCURACY} = {'diff': [2.161099999999777e-05, 2.1250000000000435e-05, 2.1569999999998535e-05, 2.1208000000001725e-05, 2.14169999999958e-05, 2.108299999999813e-05, 2.194500000000238e-05, 2.158299999999863e-05, 2.12...</msg>
<status status="PASS" starttime="20201029 18:16:07.964" endtime="20201029 18:16:07.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.982" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.980" endtime="20201029 18:16:07.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.987" level="INFO">VALUE: [2.161099999999777e-05, 2.1250000000000435e-05, 2.1569999999998535e-05, 2.1208000000001725e-05, 2.14169999999958e-05, 2.108299999999813e-05, 2.194500000000238e-05, 2.158299999999863e-05, 2.1264000000000005e-05, 2.122300000000077e-05, 2.1236000000000865e-05, 2.140299999999623e-05, 2.141700000000274e-05, 2.191700000000324e-05, 2.1708000000002226e-05, 2.141700000000274e-05, 2.1722000000001795e-05, 2.10690000000055e-05, 2.1250000000000435e-05, 2.194500000000238e-05, 2.143100000000231e-05, 2.1750000000000935e-05, 2.190300000000367e-05, 2.104099999999942e-05, 2.1070000000004974e-05, 2.090300000000267e-05, 2.19169999999963e-05, 2.1236000000000865e-05, 2.1778000000000075e-05, 2.193100000000281e-05, 2.1736000000001365e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.1569999999998535e-05, 2.193099999999587e-05, 2.108300000000507e-05, 2.159700000000514e-05, 2.116700000000249e-05, 2.1250000000000435e-05, 2.1750000000000935e-05, 2.123700000000034e-05, 2.108300000000507e-05, 2.141700000000274e-05, 2.1416000000003266e-05, 2.158299999999863e-05, 2.1915999999996827e-05, 2.108299999999813e-05, 2.106899999999856e-05, 2.1764000000000505e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.984" endtime="20201029 18:16:07.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.973" endtime="20201029 18:16:07.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.000" endtime="20201029 18:16:08.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.996" endtime="20201029 18:16:08.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.993" endtime="20201029 18:16:08.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.495" endtime="20201029 18:16:08.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.494" endtime="20201029 18:16:08.025"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.048" endtime="20201029 18:16:08.065"></status>
</kw>
<msg timestamp="20201029 18:16:08.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.045" endtime="20201029 18:16:08.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.068" endtime="20201029 18:16:08.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.075" endtime="20201029 18:16:08.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.037" endtime="20201029 18:16:08.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.032" endtime="20201029 18:16:08.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.099" endtime="20201029 18:16:08.434"></status>
</kw>
<msg timestamp="20201029 18:16:08.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041476236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041497806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.096" endtime="20201029 18:16:08.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041476236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041497806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.443" endtime="20201029 18:16:08.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.462" endtime="20201029 18:16:08.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.089" endtime="20201029 18:16:08.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.084" endtime="20201029 18:16:08.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.479" level="INFO">${RESULT} = [{'diff': 2.1569999999998535e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.1416000000003266e-05}, {'diff': 2.1415999999996327e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.140300000000317e-0...</msg>
<status status="PASS" starttime="20201029 18:16:08.470" endtime="20201029 18:16:08.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.488" level="INFO">${ACCURACY} = {'diff': [2.1569999999998535e-05, 2.1250000000000435e-05, 2.1416000000003266e-05, 2.1415999999996327e-05, 2.1264000000000005e-05, 2.140300000000317e-05, 2.156899999999906e-05, 2.1083999999997605e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:08.481" endtime="20201029 18:16:08.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.499" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.497" endtime="20201029 18:16:08.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.504" level="INFO">VALUE: [2.1569999999998535e-05, 2.1250000000000435e-05, 2.1416000000003266e-05, 2.1415999999996327e-05, 2.1264000000000005e-05, 2.140300000000317e-05, 2.156899999999906e-05, 2.1083999999997605e-05, 2.108299999999813e-05, 2.112500000000378e-05, 2.190300000000367e-05, 2.106899999999856e-05, 2.122300000000077e-05, 2.10969999999977e-05, 2.190299999999673e-05, 2.1235999999993926e-05, 2.1915999999996827e-05, 2.1458000000001975e-05, 2.183300000000582e-05, 2.1722000000001795e-05, 2.106899999999856e-05, 2.194500000000238e-05, 2.156899999999906e-05, 2.08890000000031e-05, 2.14169999999958e-05, 2.1069999999998035e-05, 2.162500000000428e-05, 2.1916000000003766e-05, 2.195900000000195e-05, 2.191700000000324e-05, 2.1430000000002836e-05, 2.1083999999997605e-05, 2.140299999999623e-05, 2.1736000000001365e-05, 2.1249999999993496e-05, 2.1264000000000005e-05, 2.1764000000000505e-05, 2.1930000000003336e-05, 2.14169999999958e-05, 2.108300000000507e-05, 2.1888000000004626e-05, 2.158300000000557e-05, 2.14169999999958e-05, 2.1930000000003336e-05, 2.113900000000335e-05, 2.1250000000000435e-05, 2.1083999999997605e-05, 2.1930000000003336e-05, 2.156899999999906e-05, 2.15969999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.501" endtime="20201029 18:16:08.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.490" endtime="20201029 18:16:08.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.518" endtime="20201029 18:16:08.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.513" endtime="20201029 18:16:08.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.510" endtime="20201029 18:16:08.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.027" endtime="20201029 18:16:08.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.026" endtime="20201029 18:16:08.543"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.566" endtime="20201029 18:16:08.581"></status>
</kw>
<msg timestamp="20201029 18:16:08.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.563" endtime="20201029 18:16:08.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.584" endtime="20201029 18:16:08.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.591" endtime="20201029 18:16:08.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.555" endtime="20201029 18:16:08.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.550" endtime="20201029 18:16:08.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.614" endtime="20201029 18:16:08.949"></status>
</kw>
<msg timestamp="20201029 18:16:08.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039507681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039529097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.611" endtime="20201029 18:16:08.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039507681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039529097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.959" endtime="20201029 18:16:08.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.977" endtime="20201029 18:16:08.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.603" endtime="20201029 18:16:08.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.599" endtime="20201029 18:16:08.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.995" level="INFO">${RESULT} = [{'diff': 2.1415999999996327e-05}, {'diff': 2.1611999999997245e-05}, {'diff': 2.1722000000001795e-05}, {'diff': 2.108299999999813e-05}, {'diff': 2.140300000000317e-05}, {'diff': 2.1763999999993566e-05...</msg>
<status status="PASS" starttime="20201029 18:16:08.986" endtime="20201029 18:16:08.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.010" level="INFO">${ACCURACY} = {'diff': [2.1415999999996327e-05, 2.1611999999997245e-05, 2.1722000000001795e-05, 2.108299999999813e-05, 2.140300000000317e-05, 2.1763999999993566e-05, 2.19169999999963e-05, 2.108299999999813e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 18:16:08.997" endtime="20201029 18:16:09.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.021" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.018" endtime="20201029 18:16:09.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.026" level="INFO">VALUE: [2.1415999999996327e-05, 2.1611999999997245e-05, 2.1722000000001795e-05, 2.108299999999813e-05, 2.140300000000317e-05, 2.1763999999993566e-05, 2.19169999999963e-05, 2.108299999999813e-05, 2.108300000000507e-05, 2.1944000000002906e-05, 2.1694000000002656e-05, 2.1929999999996397e-05, 2.1778000000000075e-05, 2.1083999999997605e-05, 2.1735999999994426e-05, 2.1736000000001365e-05, 2.1750000000000935e-05, 2.1415999999996327e-05, 2.1264000000000005e-05, 2.190300000000367e-05, 2.108300000000507e-05, 2.1208000000001725e-05, 2.19169999999963e-05, 2.1736000000001365e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.191700000000324e-05, 2.17770000000006e-05, 2.123700000000034e-05, 2.108300000000507e-05, 2.140300000000317e-05, 2.090299999999573e-05, 2.158299999999863e-05, 2.1583999999998105e-05, 2.1416000000003266e-05, 2.1055999999998465e-05, 2.15969999999982e-05, 2.1736000000001365e-05, 2.18890000000041e-05, 2.141700000000274e-05, 2.1514000000000255e-05, 2.140300000000317e-05, 2.1569000000006e-05, 2.1098000000004113e-05, 2.1583999999998105e-05, 2.1944000000002906e-05, 2.193099999999587e-05, 2.1764000000000505e-05, 2.191700000000324e-05, 2.1764000000000505e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.023" endtime="20201029 18:16:09.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.011" endtime="20201029 18:16:09.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.038" endtime="20201029 18:16:09.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.034" endtime="20201029 18:16:09.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.032" endtime="20201029 18:16:09.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.545" endtime="20201029 18:16:09.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.544" endtime="20201029 18:16:09.063"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.086" endtime="20201029 18:16:09.101"></status>
</kw>
<msg timestamp="20201029 18:16:09.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.083" endtime="20201029 18:16:09.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.105" endtime="20201029 18:16:09.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.111" endtime="20201029 18:16:09.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.075" endtime="20201029 18:16:09.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.070" endtime="20201029 18:16:09.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.136" endtime="20201029 18:16:09.473"></status>
</kw>
<msg timestamp="20201029 18:16:09.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039461875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039483639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.132" endtime="20201029 18:16:09.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039461875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039483639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.482" endtime="20201029 18:16:09.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.501" endtime="20201029 18:16:09.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.125" endtime="20201029 18:16:09.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.120" endtime="20201029 18:16:09.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.518" level="INFO">${RESULT} = [{'diff': 2.1764000000000505e-05}, {'diff': 2.1416000000003266e-05}, {'diff': 2.1764000000000505e-05}, {'diff': 2.1749999999993996e-05}, {'diff': 2.140299999999623e-05}, {'diff': 2.159700000000514e-05...</msg>
<status status="PASS" starttime="20201029 18:16:09.509" endtime="20201029 18:16:09.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.529" level="INFO">${ACCURACY} = {'diff': [2.1764000000000505e-05, 2.1416000000003266e-05, 2.1764000000000505e-05, 2.1749999999993996e-05, 2.140299999999623e-05, 2.159700000000514e-05, 2.105500000000593e-05, 2.1070000000004974e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:09.520" endtime="20201029 18:16:09.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.540" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.538" endtime="20201029 18:16:09.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.545" level="INFO">VALUE: [2.1764000000000505e-05, 2.1416000000003266e-05, 2.1764000000000505e-05, 2.1749999999993996e-05, 2.140299999999623e-05, 2.159700000000514e-05, 2.105500000000593e-05, 2.1070000000004974e-05, 2.141700000000274e-05, 2.1250000000000435e-05, 2.090299999999573e-05, 2.1277999999999575e-05, 2.1764000000000505e-05, 2.090300000000267e-05, 2.1930000000003336e-05, 2.176300000000103e-05, 2.10690000000055e-05, 2.1401999999996757e-05, 2.1514000000000255e-05, 2.1750000000000935e-05, 2.1555999999998965e-05, 2.1084000000004544e-05, 2.1472000000001545e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.1750000000000935e-05, 2.180499999999974e-05, 2.1750000000000935e-05, 2.1833999999998355e-05, 2.159700000000514e-05, 2.1750000000000935e-05, 2.123700000000034e-05, 2.1722000000001795e-05, 2.1236000000000865e-05, 2.115299999999598e-05, 2.1736000000001365e-05, 2.1722000000001795e-05, 2.14169999999958e-05, 2.108299999999813e-05, 2.156899999999906e-05, 2.1264000000000005e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.1236000000000865e-05, 2.1569999999998535e-05, 2.108300000000507e-05, 2.191700000000324e-05, 2.108299999999813e-05, 2.1401999999996757e-05, 2.106899999999856e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.542" endtime="20201029 18:16:09.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.531" endtime="20201029 18:16:09.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.558" endtime="20201029 18:16:09.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.553" endtime="20201029 18:16:09.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.551" endtime="20201029 18:16:09.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.065" endtime="20201029 18:16:09.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.064" endtime="20201029 18:16:09.583"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.605" endtime="20201029 18:16:09.620"></status>
</kw>
<msg timestamp="20201029 18:16:09.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.602" endtime="20201029 18:16:09.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.624" endtime="20201029 18:16:09.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.630" endtime="20201029 18:16:09.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.595" endtime="20201029 18:16:09.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.589" endtime="20201029 18:16:09.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.653" endtime="20201029 18:16:09.990"></status>
</kw>
<msg timestamp="20201029 18:16:09.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039423236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:09.650" endtime="20201029 18:16:09.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039423236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:10.000" endtime="20201029 18:16:10.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.019" endtime="20201029 18:16:10.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.643" endtime="20201029 18:16:10.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.638" endtime="20201029 18:16:10.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.036" level="INFO">${RESULT} = [{'diff': 2.8236000000000927e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.8096999999997763e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.858300000000563e-05}, {'diff': 2.8750000000000997e-0...</msg>
<status status="PASS" starttime="20201029 18:16:10.027" endtime="20201029 18:16:10.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.045" level="INFO">${ACCURACY} = {'diff': [2.8236000000000927e-05, 2.8750000000000997e-05, 2.8096999999997763e-05, 2.8750000000000997e-05, 2.858300000000563e-05, 2.8750000000000997e-05, 2.8555999999999027e-05, 2.8402999999996292e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:10.038" endtime="20201029 18:16:10.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.056" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.054" endtime="20201029 18:16:10.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.061" level="INFO">VALUE: [2.8236000000000927e-05, 2.8750000000000997e-05, 2.8096999999997763e-05, 2.8750000000000997e-05, 2.858300000000563e-05, 2.8750000000000997e-05, 2.8555999999999027e-05, 2.8402999999996292e-05, 2.8582999999998693e-05, 2.811100000000427e-05, 2.8055999999998527e-05, 2.891599999999689e-05, 2.8083999999997666e-05, 2.8444000000002467e-05, 2.8250000000000497e-05, 2.8610999999997833e-05, 2.84170000000028e-05, 2.8832999999998943e-05, 2.8096999999997763e-05, 2.8902999999996792e-05, 2.8555999999999027e-05, 2.8527000000000413e-05, 2.8250000000000497e-05, 2.8764000000000567e-05, 2.890300000000373e-05, 2.890300000000373e-05, 2.8222000000001357e-05, 2.8290999999999733e-05, 2.840199999999682e-05, 2.8097999999997236e-05, 2.8070000000005035e-05, 2.8902000000004258e-05, 2.8250000000000497e-05, 2.8582999999998693e-05, 2.8250000000000497e-05, 2.8056000000005465e-05, 2.8750000000000997e-05, 2.840300000000323e-05, 2.8416000000003327e-05, 2.8222000000001357e-05, 2.840300000000323e-05, 2.808300000000513e-05, 2.8582999999998693e-05, 2.8638999999996972e-05, 2.8416999999995862e-05, 2.89170000000033e-05, 2.8596999999998263e-05, 2.8972000000002107e-05, 2.8055999999998527e-05, 2.840199999999682e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.058" endtime="20201029 18:16:10.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.047" endtime="20201029 18:16:10.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.074" endtime="20201029 18:16:10.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.070" endtime="20201029 18:16:10.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.067" endtime="20201029 18:16:10.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.585" endtime="20201029 18:16:10.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.584" endtime="20201029 18:16:10.099"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.121" endtime="20201029 18:16:10.139"></status>
</kw>
<msg timestamp="20201029 18:16:10.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.118" endtime="20201029 18:16:10.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.143" endtime="20201029 18:16:10.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.149" endtime="20201029 18:16:10.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.111" endtime="20201029 18:16:10.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.105" endtime="20201029 18:16:10.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.174" endtime="20201029 18:16:10.508"></status>
</kw>
<msg timestamp="20201029 18:16:10.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.171" endtime="20201029 18:16:10.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.518" endtime="20201029 18:16:10.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.536" endtime="20201029 18:16:10.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.163" endtime="20201029 18:16:10.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.158" endtime="20201029 18:16:10.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.554" level="INFO">${RESULT} = [{'diff': 2.8582999999998693e-05}, {'diff': 2.8958999999995072e-05}, {'diff': 2.8569999999998597e-05}, {'diff': 2.886100000000502e-05}, {'diff': 2.8791999999999707e-05}, {'diff': 2.8555999999999027e-0...</msg>
<status status="PASS" starttime="20201029 18:16:10.545" endtime="20201029 18:16:10.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.563" level="INFO">${ACCURACY} = {'diff': [2.8582999999998693e-05, 2.8958999999995072e-05, 2.8569999999998597e-05, 2.886100000000502e-05, 2.8791999999999707e-05, 2.8555999999999027e-05, 2.8236000000000927e-05, 2.8236000000000927e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:10.556" endtime="20201029 18:16:10.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.574" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.572" endtime="20201029 18:16:10.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.579" level="INFO">VALUE: [2.8582999999998693e-05, 2.8958999999995072e-05, 2.8569999999998597e-05, 2.886100000000502e-05, 2.8791999999999707e-05, 2.8555999999999027e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.8235999999993988e-05, 2.8082999999998193e-05, 2.8055999999998527e-05, 2.8402000000003758e-05, 2.811100000000427e-05, 2.822300000000083e-05, 2.8402999999996292e-05, 2.8416000000003327e-05, 2.8916999999996362e-05, 2.8416999999995862e-05, 2.820900000000126e-05, 2.8416999999995862e-05, 2.8416999999995862e-05, 2.8388999999996722e-05, 2.84170000000028e-05, 2.891599999999689e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.82370000000004e-05, 2.89170000000033e-05, 2.890300000000373e-05, 2.8902999999996792e-05, 2.8082999999998193e-05, 2.8402999999996292e-05, 2.8069000000005562e-05, 2.8068999999998623e-05, 2.8902999999996792e-05, 2.8568999999999123e-05, 2.8235999999993988e-05, 2.8735999999994488e-05, 2.8568999999999123e-05, 2.8764000000000567e-05, 2.8069999999998096e-05, 2.840199999999682e-05, 2.8069999999998096e-05, 2.8846999999998513e-05, 2.8110999999997333e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8402000000003758e-05, 2.8264000000000067e-05, 2.890300000000373e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.576" endtime="20201029 18:16:10.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.565" endtime="20201029 18:16:10.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.593" endtime="20201029 18:16:10.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.587" endtime="20201029 18:16:10.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.585" endtime="20201029 18:16:10.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.101" endtime="20201029 18:16:10.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.100" endtime="20201029 18:16:10.623"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.653" endtime="20201029 18:16:10.671"></status>
</kw>
<msg timestamp="20201029 18:16:10.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.649" endtime="20201029 18:16:10.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.675" endtime="20201029 18:16:10.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.681" endtime="20201029 18:16:10.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.641" endtime="20201029 18:16:10.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.633" endtime="20201029 18:16:10.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.705" endtime="20201029 18:16:11.063"></status>
</kw>
<msg timestamp="20201029 18:16:11.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050928153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050956306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.702" endtime="20201029 18:16:11.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050928153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050956306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.072" endtime="20201029 18:16:11.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.091" endtime="20201029 18:16:11.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.694" endtime="20201029 18:16:11.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.689" endtime="20201029 18:16:11.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.109" level="INFO">${RESULT} = [{'diff': 2.815300000000298e-05}, {'diff': 2.888900000000416e-05}, {'diff': 2.811100000000427e-05}, {'diff': 2.8083999999997666e-05}, {'diff': 2.8554999999999553e-05}, {'diff': 2.840300000000323e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:11.100" endtime="20201029 18:16:11.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.120" level="INFO">${ACCURACY} = {'diff': [2.815300000000298e-05, 2.888900000000416e-05, 2.811100000000427e-05, 2.8083999999997666e-05, 2.8554999999999553e-05, 2.840300000000323e-05, 2.87370000000009e-05, 2.8054999999999053e-05, 2.89...</msg>
<status status="PASS" starttime="20201029 18:16:11.111" endtime="20201029 18:16:11.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.131" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.129" endtime="20201029 18:16:11.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.137" level="INFO">VALUE: [2.815300000000298e-05, 2.888900000000416e-05, 2.811100000000427e-05, 2.8083999999997666e-05, 2.8554999999999553e-05, 2.840300000000323e-05, 2.87370000000009e-05, 2.8054999999999053e-05, 2.893100000000287e-05, 2.890300000000373e-05, 2.8736000000001427e-05, 2.8068999999998623e-05, 2.8554999999999553e-05, 2.841599999999639e-05, 2.8069999999998096e-05, 2.8554999999999553e-05, 2.8540999999999983e-05, 2.8902999999996792e-05, 2.8902999999996792e-05, 2.8611999999997306e-05, 2.8402000000003758e-05, 2.8554999999999553e-05, 2.8360999999997583e-05, 2.8054999999999053e-05, 2.890199999999732e-05, 2.8902999999996792e-05, 2.8596999999998263e-05, 2.890300000000373e-05, 2.8721999999994918e-05, 2.8041999999998957e-05, 2.8570000000005535e-05, 2.891599999999689e-05, 2.8069999999998096e-05, 2.8555999999999027e-05, 2.8888000000004688e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8888999999997222e-05, 2.8430999999995432e-05, 2.8416999999995862e-05, 2.872300000000133e-05, 2.8430999999995432e-05, 2.8110999999997333e-05, 2.8069999999998096e-05, 2.8110999999997333e-05, 2.8596999999998263e-05, 2.8569999999998597e-05, 2.840300000000323e-05, 2.87370000000009e-05, 2.8055999999998527e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.134" endtime="20201029 18:16:11.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.122" endtime="20201029 18:16:11.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.150" endtime="20201029 18:16:11.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.145" endtime="20201029 18:16:11.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.143" endtime="20201029 18:16:11.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.627" endtime="20201029 18:16:11.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.625" endtime="20201029 18:16:11.176"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.202" endtime="20201029 18:16:11.217"></status>
</kw>
<msg timestamp="20201029 18:16:11.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.198" endtime="20201029 18:16:11.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.221" endtime="20201029 18:16:11.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.227" endtime="20201029 18:16:11.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.189" endtime="20201029 18:16:11.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.183" endtime="20201029 18:16:11.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.252" endtime="20201029 18:16:11.598"></status>
</kw>
<msg timestamp="20201029 18:16:11.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044048111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044076694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.247" endtime="20201029 18:16:11.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044048111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044076694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.607" endtime="20201029 18:16:11.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.626" endtime="20201029 18:16:11.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.240" endtime="20201029 18:16:11.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.235" endtime="20201029 18:16:11.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.643" level="INFO">${RESULT} = [{'diff': 2.8582999999998693e-05}, {'diff': 2.8763999999993628e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8971999999995168e-05}, {'diff': 2.8888999999997222e-05}, {'diff': 2.8082999999998193e-...</msg>
<status status="PASS" starttime="20201029 18:16:11.634" endtime="20201029 18:16:11.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.654" level="INFO">${ACCURACY} = {'diff': [2.8582999999998693e-05, 2.8763999999993628e-05, 2.8527999999999887e-05, 2.8971999999995168e-05, 2.8888999999997222e-05, 2.8082999999998193e-05, 2.8124999999996902e-05, 2.8832999999998943e-05...</msg>
<status status="PASS" starttime="20201029 18:16:11.645" endtime="20201029 18:16:11.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.670" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.664" endtime="20201029 18:16:11.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.676" level="INFO">VALUE: [2.8582999999998693e-05, 2.8763999999993628e-05, 2.8527999999999887e-05, 2.8971999999995168e-05, 2.8888999999997222e-05, 2.8082999999998193e-05, 2.8124999999996902e-05, 2.8832999999998943e-05, 2.822300000000083e-05, 2.8736000000001427e-05, 2.8361999999997056e-05, 2.8736000000001427e-05, 2.8568999999999123e-05, 2.8582999999998693e-05, 2.8374999999997152e-05, 2.8263000000000593e-05, 2.808300000000513e-05, 2.8070000000005035e-05, 2.8735999999994488e-05, 2.8902999999996792e-05, 2.8194000000002217e-05, 2.8582999999998693e-05, 2.891599999999689e-05, 2.89170000000033e-05, 2.808300000000513e-05, 2.8250000000000497e-05, 2.842999999999596e-05, 2.858300000000563e-05, 2.8013999999999817e-05, 2.840199999999682e-05, 2.819399999999528e-05, 2.8416000000003327e-05, 2.8277999999999637e-05, 2.8555999999999027e-05, 2.840300000000323e-05, 2.8570000000005535e-05, 2.8540999999999983e-05, 2.8569999999998597e-05, 2.8791999999999707e-05, 2.8902999999996792e-05, 2.8972000000002107e-05, 2.8514000000000317e-05, 2.8264000000000067e-05, 2.8110999999997333e-05, 2.89170000000033e-05, 2.8236000000000927e-05, 2.8222999999993892e-05, 2.8569999999998597e-05, 2.8958000000002537e-05, 2.8763000000001093e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.672" endtime="20201029 18:16:11.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.656" endtime="20201029 18:16:11.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.700" endtime="20201029 18:16:11.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.689" endtime="20201029 18:16:11.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.684" endtime="20201029 18:16:11.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.178" endtime="20201029 18:16:11.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.177" endtime="20201029 18:16:11.729"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.752" endtime="20201029 18:16:11.767"></status>
</kw>
<msg timestamp="20201029 18:16:11.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.748" endtime="20201029 18:16:11.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.771" endtime="20201029 18:16:11.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.777" endtime="20201029 18:16:11.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.741" endtime="20201029 18:16:11.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.735" endtime="20201029 18:16:11.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.802" endtime="20201029 18:16:12.145"></status>
</kw>
<msg timestamp="20201029 18:16:12.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040474639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.799" endtime="20201029 18:16:12.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040474639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.158" endtime="20201029 18:16:12.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.178" endtime="20201029 18:16:12.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.790" endtime="20201029 18:16:12.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.785" endtime="20201029 18:16:12.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.199" level="INFO">${RESULT} = [{'diff': 2.8054999999999053e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.8056000000005465e-05}, {'diff': 2.866700000000305e-05}, {'diff': 2.841599999999639e-05}, {'diff': 2.8750000000000997e-05...</msg>
<status status="PASS" starttime="20201029 18:16:12.189" endtime="20201029 18:16:12.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.211" level="INFO">${ACCURACY} = {'diff': [2.8054999999999053e-05, 2.8750000000000997e-05, 2.8056000000005465e-05, 2.866700000000305e-05, 2.841599999999639e-05, 2.8750000000000997e-05, 2.8736000000001427e-05, 2.8305999999998777e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:12.202" endtime="20201029 18:16:12.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.223" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.220" endtime="20201029 18:16:12.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.228" level="INFO">VALUE: [2.8054999999999053e-05, 2.8750000000000997e-05, 2.8056000000005465e-05, 2.866700000000305e-05, 2.841599999999639e-05, 2.8750000000000997e-05, 2.8736000000001427e-05, 2.8305999999998777e-05, 2.8430000000002897e-05, 2.8568999999999123e-05, 2.8930999999995932e-05, 2.8902999999996792e-05, 2.840199999999682e-05, 2.8541999999999457e-05, 2.8236000000000927e-05, 2.891599999999689e-05, 2.8055999999998527e-05, 2.841599999999639e-05, 2.8084000000004605e-05, 2.808300000000513e-05, 2.8514000000000317e-05, 2.8582999999998693e-05, 2.89170000000033e-05, 2.8235999999993988e-05, 2.8069999999998096e-05, 2.8055999999998527e-05, 2.8360999999997583e-05, 2.8750000000000997e-05, 2.843100000000237e-05, 2.867999999999621e-05, 2.8736000000001427e-05, 2.8082999999998193e-05, 2.8083999999997666e-05, 2.8902999999996792e-05, 2.8083999999997666e-05, 2.8082999999998193e-05, 2.8236000000000927e-05, 2.841599999999639e-05, 2.8750000000000997e-05, 2.8902000000004258e-05, 2.8916999999996362e-05, 2.8556000000005966e-05, 2.8208000000001787e-05, 2.8388999999996722e-05, 2.858300000000563e-05, 2.8736000000001427e-05, 2.844500000000194e-05, 2.8750000000000997e-05, 2.8749999999994058e-05, 2.840300000000323e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.225" endtime="20201029 18:16:12.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.213" endtime="20201029 18:16:12.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.242" endtime="20201029 18:16:12.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.237" endtime="20201029 18:16:12.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.235" endtime="20201029 18:16:12.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.731" endtime="20201029 18:16:12.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.730" endtime="20201029 18:16:12.267"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.290" endtime="20201029 18:16:12.307"></status>
</kw>
<msg timestamp="20201029 18:16:12.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.287" endtime="20201029 18:16:12.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.311" endtime="20201029 18:16:12.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.317" endtime="20201029 18:16:12.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.279" endtime="20201029 18:16:12.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.274" endtime="20201029 18:16:12.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.341" endtime="20201029 18:16:12.677"></status>
</kw>
<msg timestamp="20201029 18:16:12.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041748375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.337" endtime="20201029 18:16:12.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041748375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.687" endtime="20201029 18:16:12.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.705" endtime="20201029 18:16:12.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.330" endtime="20201029 18:16:12.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.325" endtime="20201029 18:16:12.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.722" level="INFO">${RESULT} = [{'diff': 2.8568999999999123e-05}, {'diff': 2.8110999999997333e-05}, {'diff': 2.892999999999646e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.888900000000416e-05...</msg>
<status status="PASS" starttime="20201029 18:16:12.714" endtime="20201029 18:16:12.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.732" level="INFO">${ACCURACY} = {'diff': [2.8568999999999123e-05, 2.8110999999997333e-05, 2.892999999999646e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.888900000000416e-05, 2.8888999999997222e-05, 2.8750000000000997e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:12.725" endtime="20201029 18:16:12.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.745" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.743" endtime="20201029 18:16:12.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.752" level="INFO">VALUE: [2.8568999999999123e-05, 2.8110999999997333e-05, 2.892999999999646e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.888900000000416e-05, 2.8888999999997222e-05, 2.8750000000000997e-05, 2.838900000000366e-05, 2.8069000000005562e-05, 2.8084000000004605e-05, 2.8735999999994488e-05, 2.8527999999999887e-05, 2.841599999999639e-05, 2.8054999999999053e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.891599999999689e-05, 2.82370000000004e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8736000000001427e-05, 2.8082999999998193e-05, 2.8764000000000567e-05, 2.8040999999999483e-05, 2.8305000000006242e-05, 2.8250000000000497e-05, 2.8110999999997333e-05, 2.8235999999993988e-05, 2.8736000000001427e-05, 2.8902999999996792e-05, 2.8124999999996902e-05, 2.8235999999993988e-05, 2.8596999999998263e-05, 2.8902999999996792e-05, 2.84170000000028e-05, 2.8568999999999123e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8083999999997666e-05, 2.80970000000047e-05, 2.8388999999996722e-05, 2.8069000000005562e-05, 2.8527999999999887e-05, 2.8902000000004258e-05, 2.8874999999997653e-05, 2.8236000000000927e-05, 2.8736000000001427e-05, 2.838900000000366e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.748" endtime="20201029 18:16:12.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.735" endtime="20201029 18:16:12.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.770" endtime="20201029 18:16:12.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.761" endtime="20201029 18:16:12.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.758" endtime="20201029 18:16:12.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.269" endtime="20201029 18:16:12.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.268" endtime="20201029 18:16:12.800"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.829" endtime="20201029 18:16:12.846"></status>
</kw>
<msg timestamp="20201029 18:16:12.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.825" endtime="20201029 18:16:12.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.850" endtime="20201029 18:16:12.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.858" endtime="20201029 18:16:12.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.816" endtime="20201029 18:16:12.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.808" endtime="20201029 18:16:12.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.888" endtime="20201029 18:16:13.240"></status>
</kw>
<msg timestamp="20201029 18:16:13.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051513014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051541111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.883" endtime="20201029 18:16:13.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051513014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051541111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.249" endtime="20201029 18:16:13.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.268" endtime="20201029 18:16:13.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.875" endtime="20201029 18:16:13.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.869" endtime="20201029 18:16:13.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.286" level="INFO">${RESULT} = [{'diff': 2.8096999999997763e-05}, {'diff': 2.8902999999996792e-05}, {'diff': 2.8070000000005035e-05}, {'diff': 2.8221999999994418e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8541999999999457e-...</msg>
<status status="PASS" starttime="20201029 18:16:13.277" endtime="20201029 18:16:13.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.297" level="INFO">${ACCURACY} = {'diff': [2.8096999999997763e-05, 2.8902999999996792e-05, 2.8070000000005035e-05, 2.8221999999994418e-05, 2.8264000000000067e-05, 2.8541999999999457e-05, 2.8236000000000927e-05, 2.8791999999999707e-05...</msg>
<status status="PASS" starttime="20201029 18:16:13.288" endtime="20201029 18:16:13.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.308" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.306" endtime="20201029 18:16:13.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.314" level="INFO">VALUE: [2.8096999999997763e-05, 2.8902999999996792e-05, 2.8070000000005035e-05, 2.8221999999994418e-05, 2.8264000000000067e-05, 2.8541999999999457e-05, 2.8236000000000927e-05, 2.8791999999999707e-05, 2.8040999999999483e-05, 2.8222000000001357e-05, 2.8902999999996792e-05, 2.8388999999996722e-05, 2.8735999999994488e-05, 2.8082999999998193e-05, 2.8527000000000413e-05, 2.8555999999999027e-05, 2.8055999999998527e-05, 2.8972000000002107e-05, 2.8540999999999983e-05, 2.8041999999998957e-05, 2.822300000000083e-05, 2.890199999999732e-05, 2.838900000000366e-05, 2.8736000000001427e-05, 2.8402999999996292e-05, 2.812500000000384e-05, 2.8902999999996792e-05, 2.8250000000000497e-05, 2.838900000000366e-05, 2.8554999999999553e-05, 2.8612000000004245e-05, 2.838900000000366e-05, 2.8236000000000927e-05, 2.8791999999999707e-05, 2.8582999999998693e-05, 2.8985999999994738e-05, 2.8236000000000927e-05, 2.8068999999998623e-05, 2.840300000000323e-05, 2.8541999999999457e-05, 2.8582999999998693e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.822300000000083e-05, 2.8305999999998777e-05, 2.8916000000003828e-05, 2.890199999999732e-05, 2.8069000000005562e-05, 2.8750000000000997e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.310" endtime="20201029 18:16:13.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.299" endtime="20201029 18:16:13.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.326" endtime="20201029 18:16:13.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.322" endtime="20201029 18:16:13.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.319" endtime="20201029 18:16:13.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.802" endtime="20201029 18:16:13.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.801" endtime="20201029 18:16:13.351"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.374" endtime="20201029 18:16:13.390"></status>
</kw>
<msg timestamp="20201029 18:16:13.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.371" endtime="20201029 18:16:13.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.393" endtime="20201029 18:16:13.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.399" endtime="20201029 18:16:13.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.363" endtime="20201029 18:16:13.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.358" endtime="20201029 18:16:13.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.422" endtime="20201029 18:16:13.762"></status>
</kw>
<msg timestamp="20201029 18:16:13.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039561292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039596361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.419" endtime="20201029 18:16:13.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039561292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039596361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.771" endtime="20201029 18:16:13.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.790" endtime="20201029 18:16:13.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.412" endtime="20201029 18:16:13.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.407" endtime="20201029 18:16:13.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.807" level="INFO">${RESULT} = [{'diff': 3.5068999999998685e-05}, {'diff': 3.588900000000422e-05}, {'diff': 3.590300000000379e-05}, {'diff': 3.572199999999498e-05}, {'diff': 3.508399999999773e-05}, {'diff': 3.570800000000235e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:13.798" endtime="20201029 18:16:13.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.818" level="INFO">${ACCURACY} = {'diff': [3.5068999999998685e-05, 3.588900000000422e-05, 3.590300000000379e-05, 3.572199999999498e-05, 3.508399999999773e-05, 3.570800000000235e-05, 3.5554999999999615e-05, 3.5555000000006554e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:16:13.809" endtime="20201029 18:16:13.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.832" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.829" endtime="20201029 18:16:13.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.837" level="INFO">VALUE: [3.5068999999998685e-05, 3.588900000000422e-05, 3.590300000000379e-05, 3.572199999999498e-05, 3.508399999999773e-05, 3.570800000000235e-05, 3.5554999999999615e-05, 3.5555000000006554e-05, 3.505599999999859e-05, 3.5388999999996784e-05, 3.5388999999996784e-05, 3.588800000000475e-05, 3.538900000000372e-05, 3.5554999999999615e-05, 3.537500000000415e-05, 3.572200000000192e-05, 3.5888999999997284e-05, 3.5332999999998504e-05, 3.570900000000182e-05, 3.5888999999997284e-05, 3.555599999999909e-05, 3.5208999999994384e-05, 3.5388999999996784e-05, 3.5040999999999545e-05, 3.505599999999859e-05, 3.520799999999491e-05, 3.587500000000465e-05, 3.5832999999999005e-05, 3.5402999999996354e-05, 3.555599999999909e-05, 3.518100000000218e-05, 3.5402999999996354e-05, 3.573600000000149e-05, 3.5402999999996354e-05, 3.5888999999997284e-05, 3.538900000000372e-05, 3.538900000000372e-05, 3.520799999999491e-05, 3.5902999999996854e-05, 3.520900000000132e-05, 3.523600000000099e-05, 3.508399999999773e-05, 3.572200000000192e-05, 3.573600000000149e-05, 3.540199999999688e-05, 3.524999999999362e-05, 3.505599999999859e-05, 3.5888999999997284e-05, 3.543100000000243e-05, 3.522199999999448e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.834" endtime="20201029 18:16:13.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.821" endtime="20201029 18:16:13.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.850" endtime="20201029 18:16:13.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.846" endtime="20201029 18:16:13.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.843" endtime="20201029 18:16:13.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.353" endtime="20201029 18:16:13.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.352" endtime="20201029 18:16:13.875"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.898" endtime="20201029 18:16:13.916"></status>
</kw>
<msg timestamp="20201029 18:16:13.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.895" endtime="20201029 18:16:13.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.919" endtime="20201029 18:16:13.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.925" endtime="20201029 18:16:13.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.887" endtime="20201029 18:16:13.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.881" endtime="20201029 18:16:13.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.948" endtime="20201029 18:16:14.317"></status>
</kw>
<msg timestamp="20201029 18:16:14.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040070792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.945" endtime="20201029 18:16:14.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040070792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.326" endtime="20201029 18:16:14.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.345" endtime="20201029 18:16:14.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.938" endtime="20201029 18:16:14.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.933" endtime="20201029 18:16:14.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.362" level="INFO">${RESULT} = [{'diff': 3.572200000000192e-05}, {'diff': 3.520900000000132e-05}, {'diff': 3.590199999999738e-05}, {'diff': 3.523600000000099e-05}, {'diff': 3.556999999999866e-05}, {'diff': 3.5610999999997894e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:14.354" endtime="20201029 18:16:14.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.372" level="INFO">${ACCURACY} = {'diff': [3.572200000000192e-05, 3.520900000000132e-05, 3.590199999999738e-05, 3.523600000000099e-05, 3.556999999999866e-05, 3.5610999999997894e-05, 3.543100000000243e-05, 3.586100000000508e-05, 3.572...</msg>
<status status="PASS" starttime="20201029 18:16:14.365" endtime="20201029 18:16:14.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.383" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.380" endtime="20201029 18:16:14.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.388" level="INFO">VALUE: [3.572200000000192e-05, 3.520900000000132e-05, 3.590199999999738e-05, 3.523600000000099e-05, 3.556999999999866e-05, 3.5610999999997894e-05, 3.543100000000243e-05, 3.586100000000508e-05, 3.572300000000139e-05, 3.540300000000329e-05, 3.573599999999455e-05, 3.500000000000031e-05, 3.5402999999996354e-05, 3.5888999999997284e-05, 3.540300000000329e-05, 3.522200000000142e-05, 3.555599999999909e-05, 3.5541000000000045e-05, 3.5888999999997284e-05, 3.540300000000329e-05, 3.588900000000422e-05, 3.591700000000336e-05, 3.558399999999823e-05, 3.572199999999498e-05, 3.555599999999909e-05, 3.525000000000056e-05, 3.590300000000379e-05, 3.6013000000001405e-05, 3.573600000000149e-05, 3.5569000000006123e-05, 3.5944999999995564e-05, 3.520800000000185e-05, 3.5846999999998574e-05, 3.552799999999995e-05, 3.5916999999996424e-05, 3.573599999999455e-05, 3.540199999999688e-05, 3.573600000000149e-05, 3.5124999999996964e-05, 3.505599999999859e-05, 3.540300000000329e-05, 3.525000000000056e-05, 3.5388999999996784e-05, 3.572300000000139e-05, 3.590300000000379e-05, 3.506999999999816e-05, 3.570799999999541e-05, 3.569400000000278e-05, 3.5388999999996784e-05, 3.504200000000596e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.385" endtime="20201029 18:16:14.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.374" endtime="20201029 18:16:14.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.401" endtime="20201029 18:16:14.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.396" endtime="20201029 18:16:14.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.394" endtime="20201029 18:16:14.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.877" endtime="20201029 18:16:14.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.876" endtime="20201029 18:16:14.426"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.449" endtime="20201029 18:16:14.468"></status>
</kw>
<msg timestamp="20201029 18:16:14.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.445" endtime="20201029 18:16:14.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.471" endtime="20201029 18:16:14.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.477" endtime="20201029 18:16:14.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.438" endtime="20201029 18:16:14.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.432" endtime="20201029 18:16:14.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.501" endtime="20201029 18:16:14.849"></status>
</kw>
<msg timestamp="20201029 18:16:14.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041476458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041511847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.497" endtime="20201029 18:16:14.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041476458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041511847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.858" endtime="20201029 18:16:14.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.877" endtime="20201029 18:16:14.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.490" endtime="20201029 18:16:14.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.485" endtime="20201029 18:16:14.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.894" level="INFO">${RESULT} = [{'diff': 3.5388999999996784e-05}, {'diff': 3.558399999999823e-05}, {'diff': 3.570800000000235e-05}, {'diff': 3.5082999999998254e-05}, {'diff': 3.505599999999859e-05}, {'diff': 3.573600000000149e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:14.885" endtime="20201029 18:16:14.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.903" level="INFO">${ACCURACY} = {'diff': [3.5388999999996784e-05, 3.558399999999823e-05, 3.570800000000235e-05, 3.5082999999998254e-05, 3.505599999999859e-05, 3.573600000000149e-05, 3.523600000000099e-05, 3.570800000000235e-05, 3.56...</msg>
<status status="PASS" starttime="20201029 18:16:14.896" endtime="20201029 18:16:14.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.914" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.912" endtime="20201029 18:16:14.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.920" level="INFO">VALUE: [3.5388999999996784e-05, 3.558399999999823e-05, 3.570800000000235e-05, 3.5082999999998254e-05, 3.505599999999859e-05, 3.573600000000149e-05, 3.523600000000099e-05, 3.570800000000235e-05, 3.569400000000278e-05, 3.520800000000185e-05, 3.555599999999909e-05, 3.540300000000329e-05, 3.5874999999997714e-05, 3.523600000000099e-05, 3.5888999999997284e-05, 3.5902999999996854e-05, 3.5040999999999545e-05, 3.522199999999448e-05, 3.605599999999959e-05, 3.5541000000000045e-05, 3.590200000000432e-05, 3.523700000000046e-05, 3.522199999999448e-05, 3.572300000000139e-05, 3.5040999999999545e-05, 3.54580000000021e-05, 3.5054999999999115e-05, 3.5055000000006054e-05, 3.523600000000099e-05, 3.540300000000329e-05, 3.588900000000422e-05, 3.540200000000382e-05, 3.50700000000051e-05, 3.59450000000025e-05, 3.555599999999909e-05, 3.5360999999997644e-05, 3.6041000000000545e-05, 3.538900000000372e-05, 3.5554999999999615e-05, 3.52779999999997e-05, 3.6055000000000115e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.5874999999997714e-05, 3.5582999999998755e-05, 3.518000000000271e-05, 3.5374999999997214e-05, 3.505599999999859e-05, 3.522200000000142e-05, 3.5541000000000045e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.916" endtime="20201029 18:16:14.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.905" endtime="20201029 18:16:14.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.934" endtime="20201029 18:16:14.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.928" endtime="20201029 18:16:14.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.925" endtime="20201029 18:16:14.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.428" endtime="20201029 18:16:14.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.427" endtime="20201029 18:16:14.959"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.982" endtime="20201029 18:16:14.999"></status>
</kw>
<msg timestamp="20201029 18:16:15.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.978" endtime="20201029 18:16:15.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.003" endtime="20201029 18:16:15.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.009" endtime="20201029 18:16:15.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.971" endtime="20201029 18:16:15.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.965" endtime="20201029 18:16:15.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.032" endtime="20201029 18:16:15.389"></status>
</kw>
<msg timestamp="20201029 18:16:15.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040107639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040143542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.029" endtime="20201029 18:16:15.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040107639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040143542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.398" endtime="20201029 18:16:15.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.416" endtime="20201029 18:16:15.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.022" endtime="20201029 18:16:15.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.017" endtime="20201029 18:16:15.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.434" level="INFO">${RESULT} = [{'diff': 3.5902999999996854e-05}, {'diff': 3.554199999999952e-05}, {'diff': 3.523600000000099e-05}, {'diff': 3.573600000000149e-05}, {'diff': 3.522300000000089e-05}, {'diff': 3.590300000000379e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:15.425" endtime="20201029 18:16:15.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.444" level="INFO">${ACCURACY} = {'diff': [3.5902999999996854e-05, 3.554199999999952e-05, 3.523600000000099e-05, 3.573600000000149e-05, 3.522300000000089e-05, 3.590300000000379e-05, 3.590300000000379e-05, 3.5638999999997034e-05, 3.50...</msg>
<status status="PASS" starttime="20201029 18:16:15.436" endtime="20201029 18:16:15.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.455" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.453" endtime="20201029 18:16:15.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.461" level="INFO">VALUE: [3.5902999999996854e-05, 3.554199999999952e-05, 3.523600000000099e-05, 3.573600000000149e-05, 3.522300000000089e-05, 3.590300000000379e-05, 3.590300000000379e-05, 3.5638999999997034e-05, 3.5040999999999545e-05, 3.534800000000449e-05, 3.5388999999996784e-05, 3.592999999999652e-05, 3.568100000000268e-05, 3.572300000000139e-05, 3.538900000000372e-05, 3.5068999999998685e-05, 3.522200000000142e-05, 3.531999999999841e-05, 3.5582999999998755e-05, 3.541700000000286e-05, 3.5874999999997714e-05, 3.588900000000422e-05, 3.5290999999999795e-05, 3.5124999999996964e-05, 3.505599999999859e-05, 3.505599999999859e-05, 3.5888999999997284e-05, 3.508300000000519e-05, 3.505599999999859e-05, 3.600000000000131e-05, 3.508399999999773e-05, 3.5582999999998755e-05, 3.570799999999541e-05, 3.534799999999755e-05, 3.569400000000278e-05, 3.5568999999999185e-05, 3.572199999999498e-05, 3.5360999999997644e-05, 3.5874999999997714e-05, 3.522200000000142e-05, 3.523600000000099e-05, 3.501399999999988e-05, 3.50700000000051e-05, 3.575000000000106e-05, 3.523600000000099e-05, 3.590199999999738e-05, 3.523600000000099e-05, 3.506999999999816e-05, 3.573599999999455e-05, 3.575000000000106e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.458" endtime="20201029 18:16:15.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.446" endtime="20201029 18:16:15.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.473" endtime="20201029 18:16:15.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.469" endtime="20201029 18:16:15.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.466" endtime="20201029 18:16:15.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.961" endtime="20201029 18:16:15.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.960" endtime="20201029 18:16:15.498"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.521" endtime="20201029 18:16:15.539"></status>
</kw>
<msg timestamp="20201029 18:16:15.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.518" endtime="20201029 18:16:15.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.542" endtime="20201029 18:16:15.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.548" endtime="20201029 18:16:15.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.511" endtime="20201029 18:16:15.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.505" endtime="20201029 18:16:15.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.571" endtime="20201029 18:16:15.920"></status>
</kw>
<msg timestamp="20201029 18:16:15.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039727167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.568" endtime="20201029 18:16:15.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039727167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.929" endtime="20201029 18:16:15.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.947" endtime="20201029 18:16:15.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.561" endtime="20201029 18:16:15.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.556" endtime="20201029 18:16:15.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.964" level="INFO">${RESULT} = [{'diff': 3.540199999999688e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.523600000000099e-05}, {'diff': 3.591700000000336e-05}, {'diff': 3.5568999999999185e-05}, {'diff': 3.577799999999326e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:15.956" endtime="20201029 18:16:15.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.976" level="INFO">${ACCURACY} = {'diff': [3.540199999999688e-05, 3.555599999999909e-05, 3.523600000000099e-05, 3.591700000000336e-05, 3.5568999999999185e-05, 3.577799999999326e-05, 3.573600000000149e-05, 3.526400000000013e-05, 3.573...</msg>
<status status="PASS" starttime="20201029 18:16:15.966" endtime="20201029 18:16:15.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.987" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.984" endtime="20201029 18:16:15.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.992" level="INFO">VALUE: [3.540199999999688e-05, 3.555599999999909e-05, 3.523600000000099e-05, 3.591700000000336e-05, 3.5568999999999185e-05, 3.577799999999326e-05, 3.573600000000149e-05, 3.526400000000013e-05, 3.573600000000149e-05, 3.5888999999997284e-05, 3.5874999999997714e-05, 3.556999999999866e-05, 3.594400000000303e-05, 3.554199999999952e-05, 3.5610999999997894e-05, 3.533300000000544e-05, 3.573600000000149e-05, 3.556999999999866e-05, 3.538900000000372e-05, 3.523600000000099e-05, 3.522200000000142e-05, 3.5054999999999115e-05, 3.556999999999866e-05, 3.52779999999997e-05, 3.572200000000192e-05, 3.509700000000476e-05, 3.559700000000526e-05, 3.505599999999859e-05, 3.523600000000099e-05, 3.523600000000099e-05, 3.5402999999996354e-05, 3.5040999999999545e-05, 3.5402999999996354e-05, 3.590300000000379e-05, 3.538900000000372e-05, 3.505599999999859e-05, 3.594400000000303e-05, 3.5582999999998755e-05, 3.5541000000000045e-05, 3.5596999999998324e-05, 3.5388999999996784e-05, 3.5722999999994454e-05, 3.573600000000149e-05, 3.5346999999998074e-05, 3.5346999999998074e-05, 3.573600000000149e-05, 3.587500000000465e-05, 3.526400000000013e-05, 3.572200000000192e-05, 3.5694999999995314e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.989" endtime="20201029 18:16:15.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.978" endtime="20201029 18:16:15.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.005" endtime="20201029 18:16:16.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.000" endtime="20201029 18:16:16.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.998" endtime="20201029 18:16:16.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.501" endtime="20201029 18:16:16.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.499" endtime="20201029 18:16:16.030"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.053" endtime="20201029 18:16:16.070"></status>
</kw>
<msg timestamp="20201029 18:16:16.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.050" endtime="20201029 18:16:16.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.074" endtime="20201029 18:16:16.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.080" endtime="20201029 18:16:16.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.042" endtime="20201029 18:16:16.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.036" endtime="20201029 18:16:16.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.103" endtime="20201029 18:16:16.460"></status>
</kw>
<msg timestamp="20201029 18:16:16.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039781889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.100" endtime="20201029 18:16:16.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039781889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.470" endtime="20201029 18:16:16.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.488" endtime="20201029 18:16:16.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.093" endtime="20201029 18:16:16.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.088" endtime="20201029 18:16:16.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.505" level="INFO">${RESULT} = [{'diff': 3.5916999999996424e-05}, {'diff': 3.525000000000056e-05}, {'diff': 3.5610999999997894e-05}, {'diff': 3.5374999999997214e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.5054999999999115e-05...</msg>
<status status="PASS" starttime="20201029 18:16:16.497" endtime="20201029 18:16:16.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.515" level="INFO">${ACCURACY} = {'diff': [3.5916999999996424e-05, 3.525000000000056e-05, 3.5610999999997894e-05, 3.5374999999997214e-05, 3.551400000000038e-05, 3.5054999999999115e-05, 3.505599999999859e-05, 3.5569000000006123e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:16:16.507" endtime="20201029 18:16:16.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.525" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.523" endtime="20201029 18:16:16.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.531" level="INFO">VALUE: [3.5916999999996424e-05, 3.525000000000056e-05, 3.5610999999997894e-05, 3.5374999999997214e-05, 3.551400000000038e-05, 3.5054999999999115e-05, 3.505599999999859e-05, 3.5569000000006123e-05, 3.5374999999997214e-05, 3.505599999999859e-05, 3.605599999999959e-05, 3.5790999999993356e-05, 3.5582999999998755e-05, 3.506999999999816e-05, 3.572199999999498e-05, 3.570799999999541e-05, 3.588900000000422e-05, 3.572199999999498e-05, 3.5874999999997714e-05, 3.523600000000099e-05, 3.555599999999909e-05, 3.520799999999491e-05, 3.518100000000218e-05, 3.5860999999998144e-05, 3.5402999999996354e-05, 3.5680999999995744e-05, 3.5888999999997284e-05, 3.522200000000142e-05, 3.570799999999541e-05, 3.526400000000013e-05, 3.576400000000063e-05, 3.5360999999997644e-05, 3.575000000000106e-05, 3.538900000000372e-05, 3.573600000000149e-05, 3.522300000000089e-05, 3.537500000000415e-05, 3.552799999999995e-05, 3.572200000000192e-05, 3.569500000000225e-05, 3.588900000000422e-05, 3.5416999999995924e-05, 3.6041000000000545e-05, 3.5902999999996854e-05, 3.523600000000099e-05, 3.502799999999945e-05, 3.522200000000142e-05, 3.5568999999999185e-05, 3.537500000000415e-05, 3.543000000000296e-05]</msg>
<status status="PASS" starttime="20201029 18:16:16.528" endtime="20201029 18:16:16.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.516" endtime="20201029 18:16:16.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.548" endtime="20201029 18:16:16.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.544" endtime="20201029 18:16:16.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.541" endtime="20201029 18:16:16.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.032" endtime="20201029 18:16:16.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.031" endtime="20201029 18:16:16.573"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.596" endtime="20201029 18:16:16.615"></status>
</kw>
<msg timestamp="20201029 18:16:16.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.592" endtime="20201029 18:16:16.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.618" endtime="20201029 18:16:16.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.625" endtime="20201029 18:16:16.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.585" endtime="20201029 18:16:16.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.579" endtime="20201029 18:16:16.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.648" endtime="20201029 18:16:16.998"></status>
</kw>
<msg timestamp="20201029 18:16:17.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04131225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0413475, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:16.645" endtime="20201029 18:16:17.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04131225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0413475, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:17.008" endtime="20201029 18:16:17.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.027" endtime="20201029 18:16:17.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.637" endtime="20201029 18:16:17.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.633" endtime="20201029 18:16:17.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.044" level="INFO">${RESULT} = [{'diff': 3.525000000000056e-05}, {'diff': 3.586100000000508e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.540300000000329e-05}, {'diff': 3.5568999999999185e-05}, {'diff': 3.523599999999405e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:17.035" endtime="20201029 18:16:17.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.053" level="INFO">${ACCURACY} = {'diff': [3.525000000000056e-05, 3.586100000000508e-05, 3.555599999999909e-05, 3.540300000000329e-05, 3.5568999999999185e-05, 3.523599999999405e-05, 3.522200000000142e-05, 3.56250000000044e-05, 3.5722...</msg>
<status status="PASS" starttime="20201029 18:16:17.046" endtime="20201029 18:16:17.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.064" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.062" endtime="20201029 18:16:17.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.070" level="INFO">VALUE: [3.525000000000056e-05, 3.586100000000508e-05, 3.555599999999909e-05, 3.540300000000329e-05, 3.5568999999999185e-05, 3.523599999999405e-05, 3.522200000000142e-05, 3.56250000000044e-05, 3.572200000000192e-05, 3.5763000000001155e-05, 3.526400000000013e-05, 3.5040999999999545e-05, 3.5402999999996354e-05, 3.543100000000243e-05, 3.5388999999996784e-05, 3.573600000000149e-05, 3.504199999999902e-05, 3.5916999999996424e-05, 3.522200000000142e-05, 3.5874999999997714e-05, 3.570900000000182e-05, 3.522199999999448e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.573599999999455e-05, 3.569500000000225e-05, 3.5040999999999545e-05, 3.538900000000372e-05, 3.5916999999996424e-05, 3.570800000000235e-05, 3.5874999999997714e-05, 3.5902999999996854e-05, 3.5916999999996424e-05, 3.5569000000006123e-05, 3.563900000000397e-05, 3.51250000000039e-05, 3.541700000000286e-05, 3.5374999999997214e-05, 3.588799999999781e-05, 3.587500000000465e-05, 3.522200000000142e-05, 3.5054999999999115e-05, 3.5388999999996784e-05, 3.552799999999995e-05, 3.522199999999448e-05, 3.523700000000046e-05, 3.5026999999999975e-05, 3.5888999999997284e-05, 3.566700000000311e-05, 3.504199999999902e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.067" endtime="20201029 18:16:17.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.055" endtime="20201029 18:16:17.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.084" endtime="20201029 18:16:17.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.078" endtime="20201029 18:16:17.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.075" endtime="20201029 18:16:17.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.575" endtime="20201029 18:16:17.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.574" endtime="20201029 18:16:17.109"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.131" endtime="20201029 18:16:17.149"></status>
</kw>
<msg timestamp="20201029 18:16:17.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.128" endtime="20201029 18:16:17.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.153" endtime="20201029 18:16:17.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.159" endtime="20201029 18:16:17.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.121" endtime="20201029 18:16:17.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.115" endtime="20201029 18:16:17.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.182" endtime="20201029 18:16:17.530"></status>
</kw>
<msg timestamp="20201029 18:16:17.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039679792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039722569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.179" endtime="20201029 18:16:17.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039679792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039722569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.540" endtime="20201029 18:16:17.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.558" endtime="20201029 18:16:17.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.172" endtime="20201029 18:16:17.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.167" endtime="20201029 18:16:17.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.575" level="INFO">${RESULT} = [{'diff': 4.277700000000079e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.2554999999999676e-05}, {'diff': 4.2860999999998206e-05}, {'diff': 4.222200000000148e-05}, {'diff': 4.2445000000002064e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:17.566" endtime="20201029 18:16:17.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.586" level="INFO">${ACCURACY} = {'diff': [4.277700000000079e-05, 4.254199999999958e-05, 4.2554999999999676e-05, 4.2860999999998206e-05, 4.222200000000148e-05, 4.2445000000002064e-05, 4.252800000000001e-05, 4.270800000000241e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 18:16:17.577" endtime="20201029 18:16:17.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.597" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.595" endtime="20201029 18:16:17.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.602" level="INFO">VALUE: [4.277700000000079e-05, 4.254199999999958e-05, 4.2554999999999676e-05, 4.2860999999998206e-05, 4.222200000000148e-05, 4.2445000000002064e-05, 4.252800000000001e-05, 4.270800000000241e-05, 4.256999999999872e-05, 4.240200000000388e-05, 4.2874999999997776e-05, 4.2541000000000107e-05, 4.2402999999996416e-05, 4.2153000000003105e-05, 4.2903000000003855e-05, 4.288799999999787e-05, 4.257000000000566e-05, 4.2082999999998316e-05, 4.2430999999995556e-05, 4.2874999999997776e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.225000000000062e-05, 4.275000000000112e-05, 4.28059999999994e-05, 4.2403000000003355e-05, 4.205600000000559e-05, 4.2388999999996846e-05, 4.279199999999983e-05, 4.272200000000198e-05, 4.2208999999994445e-05, 4.255599999999915e-05, 4.204200000000602e-05, 4.204199999999908e-05, 4.1987000000000274e-05, 4.220799999999497e-05, 4.220800000000191e-05, 4.3055000000000176e-05, 4.2527000000000537e-05, 4.2709000000001884e-05, 4.2223000000000954e-05, 4.2332999999998566e-05, 4.252800000000001e-05, 4.2374999999997276e-05, 4.2389000000003785e-05, 4.2874999999997776e-05, 4.2389000000003785e-05, 4.272199999999504e-05, 4.2889000000004285e-05, 4.2389000000003785e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.599" endtime="20201029 18:16:17.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.588" endtime="20201029 18:16:17.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.615" endtime="20201029 18:16:17.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.611" endtime="20201029 18:16:17.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.608" endtime="20201029 18:16:17.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.111" endtime="20201029 18:16:17.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.110" endtime="20201029 18:16:17.640"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.669" endtime="20201029 18:16:17.687"></status>
</kw>
<msg timestamp="20201029 18:16:17.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.665" endtime="20201029 18:16:17.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.691" endtime="20201029 18:16:17.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.699" endtime="20201029 18:16:17.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.655" endtime="20201029 18:16:17.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.648" endtime="20201029 18:16:17.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.723" endtime="20201029 18:16:18.058"></status>
</kw>
<msg timestamp="20201029 18:16:18.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047028931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047071486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.719" endtime="20201029 18:16:18.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047028931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047071486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.067" endtime="20201029 18:16:18.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.085" endtime="20201029 18:16:18.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.712" endtime="20201029 18:16:18.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.707" endtime="20201029 18:16:18.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.103" level="INFO">${RESULT} = [{'diff': 4.2554999999999676e-05}, {'diff': 4.2667000000003175e-05}, {'diff': 4.2346999999998136e-05}, {'diff': 4.229199999999933e-05}, {'diff': 4.2708999999994945e-05}, {'diff': 4.2403000000003355e-0...</msg>
<status status="PASS" starttime="20201029 18:16:18.094" endtime="20201029 18:16:18.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.114" level="INFO">${ACCURACY} = {'diff': [4.2554999999999676e-05, 4.2667000000003175e-05, 4.2346999999998136e-05, 4.229199999999933e-05, 4.2708999999994945e-05, 4.2403000000003355e-05, 4.2695000000002314e-05, 4.238799999999737e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:18.105" endtime="20201029 18:16:18.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.125" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.122" endtime="20201029 18:16:18.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.130" level="INFO">VALUE: [4.2554999999999676e-05, 4.2667000000003175e-05, 4.2346999999998136e-05, 4.229199999999933e-05, 4.2708999999994945e-05, 4.2403000000003355e-05, 4.2695000000002314e-05, 4.238799999999737e-05, 4.2110999999997456e-05, 4.2931000000002995e-05, 4.2388999999996846e-05, 4.2723000000001454e-05, 4.222200000000148e-05, 4.2222999999994015e-05, 4.2403000000003355e-05, 4.204199999999908e-05, 4.305599999999965e-05, 4.231999999999847e-05, 4.204199999999908e-05, 4.2722999999994515e-05, 4.205599999999865e-05, 4.254199999999958e-05, 4.2554999999999676e-05, 4.2417000000002925e-05, 4.225000000000062e-05, 4.205600000000559e-05, 4.2082999999998316e-05, 4.202799999999951e-05, 4.2027000000000037e-05, 4.2874999999997776e-05, 4.270800000000241e-05, 4.2874999999997776e-05, 4.2153000000003105e-05, 4.2361000000004645e-05, 4.2874999999997776e-05, 4.26939999999959e-05, 4.2375000000004215e-05, 4.222200000000148e-05, 4.222200000000148e-05, 4.2888999999997346e-05, 4.2388999999996846e-05, 4.2374999999997276e-05, 4.222200000000148e-05, 4.254199999999958e-05, 4.2237000000000524e-05, 4.255599999999915e-05, 4.2319000000005935e-05, 4.2860999999998206e-05, 4.252800000000001e-05, 4.2695000000002314e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.127" endtime="20201029 18:16:18.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.116" endtime="20201029 18:16:18.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.143" endtime="20201029 18:16:18.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.138" endtime="20201029 18:16:18.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.136" endtime="20201029 18:16:18.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.642" endtime="20201029 18:16:18.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.641" endtime="20201029 18:16:18.168"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.190" endtime="20201029 18:16:18.206"></status>
</kw>
<msg timestamp="20201029 18:16:18.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.187" endtime="20201029 18:16:18.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.210" endtime="20201029 18:16:18.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.216" endtime="20201029 18:16:18.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.180" endtime="20201029 18:16:18.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.174" endtime="20201029 18:16:18.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.239" endtime="20201029 18:16:18.577"></status>
</kw>
<msg timestamp="20201029 18:16:18.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039706667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039749319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.236" endtime="20201029 18:16:18.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039706667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039749319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.586" endtime="20201029 18:16:18.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.605" endtime="20201029 18:16:18.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.229" endtime="20201029 18:16:18.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.224" endtime="20201029 18:16:18.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.622" level="INFO">${RESULT} = [{'diff': 4.265199999999719e-05}, {'diff': 4.272199999999504e-05}, {'diff': 4.270800000000241e-05}, {'diff': 4.2874999999997776e-05}, {'diff': 4.2860999999998206e-05}, {'diff': 4.270799999999547e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:18.613" endtime="20201029 18:16:18.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.631" level="INFO">${ACCURACY} = {'diff': [4.265199999999719e-05, 4.272199999999504e-05, 4.270800000000241e-05, 4.2874999999997776e-05, 4.2860999999998206e-05, 4.270799999999547e-05, 4.272199999999504e-05, 4.21660000000032e-05, 4.204...</msg>
<status status="PASS" starttime="20201029 18:16:18.624" endtime="20201029 18:16:18.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.642" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.640" endtime="20201029 18:16:18.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.647" level="INFO">VALUE: [4.265199999999719e-05, 4.272199999999504e-05, 4.270800000000241e-05, 4.2874999999997776e-05, 4.2860999999998206e-05, 4.270799999999547e-05, 4.272199999999504e-05, 4.21660000000032e-05, 4.204200000000602e-05, 4.222200000000148e-05, 4.2040999999999606e-05, 4.2360999999997706e-05, 4.2709000000001884e-05, 4.2195000000001814e-05, 4.2318999999998996e-05, 4.2861000000005145e-05, 4.2417000000002925e-05, 4.2860999999998206e-05, 4.269400000000284e-05, 4.2040999999999606e-05, 4.3055000000000176e-05, 4.254199999999958e-05, 4.2389000000003785e-05, 4.273600000000155e-05, 4.2554999999999676e-05, 4.220800000000191e-05, 4.254199999999958e-05, 4.2374999999997276e-05, 4.202799999999951e-05, 4.218000000000277e-05, 4.220799999999497e-05, 4.202799999999951e-05, 4.2888999999997346e-05, 4.2375000000004215e-05, 4.288800000000481e-05, 4.284799999999811e-05, 4.2374999999997276e-05, 4.252800000000001e-05, 4.202799999999951e-05, 4.2223000000000954e-05, 4.2319000000005935e-05, 4.2596999999998386e-05, 4.2195000000001814e-05, 4.2374999999997276e-05, 4.205600000000559e-05, 4.275000000000112e-05, 4.222199999999454e-05, 4.255599999999915e-05, 4.2860999999998206e-05, 4.2360999999997706e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.644" endtime="20201029 18:16:18.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.633" endtime="20201029 18:16:18.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.660" endtime="20201029 18:16:18.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.656" endtime="20201029 18:16:18.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.653" endtime="20201029 18:16:18.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.170" endtime="20201029 18:16:18.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.168" endtime="20201029 18:16:18.685"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.708" endtime="20201029 18:16:18.727"></status>
</kw>
<msg timestamp="20201029 18:16:18.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.704" endtime="20201029 18:16:18.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.731" endtime="20201029 18:16:18.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.737" endtime="20201029 18:16:18.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.697" endtime="20201029 18:16:18.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.691" endtime="20201029 18:16:18.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.760" endtime="20201029 18:16:19.110"></status>
</kw>
<msg timestamp="20201029 18:16:19.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041224931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041268014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.757" endtime="20201029 18:16:19.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041224931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041268014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.120" endtime="20201029 18:16:19.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.138" endtime="20201029 18:16:19.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.750" endtime="20201029 18:16:19.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.745" endtime="20201029 18:16:19.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.155" level="INFO">${RESULT} = [{'diff': 4.3082999999999316e-05}, {'diff': 4.2888999999997346e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.223600000000105e-05}, {'diff': 4.2360999999997706e-05}, {'diff': 4.254199999999958e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:19.146" endtime="20201029 18:16:19.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.165" level="INFO">${ACCURACY} = {'diff': [4.3082999999999316e-05, 4.2888999999997346e-05, 4.254199999999958e-05, 4.223600000000105e-05, 4.2360999999997706e-05, 4.254199999999958e-05, 4.220799999999497e-05, 4.259799999999786e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 18:16:19.157" endtime="20201029 18:16:19.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.176" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.173" endtime="20201029 18:16:19.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.181" level="INFO">VALUE: [4.3082999999999316e-05, 4.2888999999997346e-05, 4.254199999999958e-05, 4.223600000000105e-05, 4.2360999999997706e-05, 4.254199999999958e-05, 4.220799999999497e-05, 4.259799999999786e-05, 4.2389000000003785e-05, 4.244400000000259e-05, 4.2541000000000107e-05, 4.2874999999997776e-05, 4.2040999999999606e-05, 4.279199999999983e-05, 4.2403000000003355e-05, 4.205599999999865e-05, 4.272200000000198e-05, 4.3082999999999316e-05, 4.2374999999997276e-05, 4.2027000000000037e-05, 4.2389000000003785e-05, 4.202799999999951e-05, 4.2860999999998206e-05, 4.2209000000001384e-05, 4.218000000000277e-05, 4.250000000000087e-05, 4.227799999999976e-05, 4.2389000000003785e-05, 4.220799999999497e-05, 4.217999999999583e-05, 4.2389000000003785e-05, 4.255599999999915e-05, 4.2040999999999606e-05, 4.2875000000004715e-05, 4.2666999999996236e-05, 4.220799999999497e-05, 4.204199999999908e-05, 4.2874999999997776e-05, 4.2888999999997346e-05, 4.254199999999958e-05, 4.2874999999997776e-05, 4.252800000000001e-05, 4.252800000000001e-05, 4.3055000000000176e-05, 4.272200000000198e-05, 4.2040999999999606e-05, 4.2874999999997776e-05, 4.2709000000001884e-05, 4.232000000000541e-05, 4.2374999999997276e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.178" endtime="20201029 18:16:19.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.167" endtime="20201029 18:16:19.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.199" endtime="20201029 18:16:19.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.189" endtime="20201029 18:16:19.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.187" endtime="20201029 18:16:19.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.687" endtime="20201029 18:16:19.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.686" endtime="20201029 18:16:19.225"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.248" endtime="20201029 18:16:19.269"></status>
</kw>
<msg timestamp="20201029 18:16:19.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.244" endtime="20201029 18:16:19.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.274" endtime="20201029 18:16:19.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.282" endtime="20201029 18:16:19.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.237" endtime="20201029 18:16:19.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.231" endtime="20201029 18:16:19.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.310" endtime="20201029 18:16:19.660"></status>
</kw>
<msg timestamp="20201029 18:16:19.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042226847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042269375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.307" endtime="20201029 18:16:19.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042226847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042269375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.669" endtime="20201029 18:16:19.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.687" endtime="20201029 18:16:19.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.299" endtime="20201029 18:16:19.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.293" endtime="20201029 18:16:19.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.705" level="INFO">${RESULT} = [{'diff': 4.252800000000001e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.2375000000004215e-05}, {'diff': 4.258400000000523e-05}, {'diff': 4.2695000000002314e-05}, {'diff': 4.24860000000013e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:19.696" endtime="20201029 18:16:19.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.715" level="INFO">${ACCURACY} = {'diff': [4.252800000000001e-05, 4.254199999999958e-05, 4.2375000000004215e-05, 4.258400000000523e-05, 4.2695000000002314e-05, 4.24860000000013e-05, 4.252800000000001e-05, 4.220800000000191e-05, 4.236...</msg>
<status status="PASS" starttime="20201029 18:16:19.707" endtime="20201029 18:16:19.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.726" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.724" endtime="20201029 18:16:19.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.732" level="INFO">VALUE: [4.252800000000001e-05, 4.254199999999958e-05, 4.2375000000004215e-05, 4.258400000000523e-05, 4.2695000000002314e-05, 4.24860000000013e-05, 4.252800000000001e-05, 4.220800000000191e-05, 4.2360999999997706e-05, 4.254199999999958e-05, 4.2916999999996486e-05, 4.270799999999547e-05, 4.2152999999996166e-05, 4.202799999999951e-05, 4.252800000000001e-05, 4.2541000000000107e-05, 4.276400000000069e-05, 4.2874999999997776e-05, 4.243000000000302e-05, 4.2916999999996486e-05, 4.2931000000002995e-05, 4.222200000000148e-05, 4.270800000000241e-05, 4.255599999999915e-05, 4.2818999999999496e-05, 4.2389000000003785e-05, 4.250000000000087e-05, 4.2374999999997276e-05, 4.2375000000004215e-05, 4.220800000000191e-05, 4.2902999999996916e-05, 4.2889000000004285e-05, 4.2361000000004645e-05, 4.2554999999999676e-05, 4.240200000000388e-05, 4.202799999999951e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.2374999999997276e-05, 4.2417000000002925e-05, 4.220800000000191e-05, 4.257000000000566e-05, 4.2709000000001884e-05, 4.2889000000004285e-05, 4.2167000000002675e-05, 4.270800000000241e-05, 4.2666999999996236e-05, 4.2389000000003785e-05, 4.2054999999999176e-05, 4.2374999999997276e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.728" endtime="20201029 18:16:19.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.717" endtime="20201029 18:16:19.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.744" endtime="20201029 18:16:19.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.740" endtime="20201029 18:16:19.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.737" endtime="20201029 18:16:19.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.227" endtime="20201029 18:16:19.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.226" endtime="20201029 18:16:19.769"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.792" endtime="20201029 18:16:19.810"></status>
</kw>
<msg timestamp="20201029 18:16:19.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.789" endtime="20201029 18:16:19.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.813" endtime="20201029 18:16:19.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.820" endtime="20201029 18:16:19.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.781" endtime="20201029 18:16:19.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.776" endtime="20201029 18:16:19.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.844" endtime="20201029 18:16:20.193"></status>
</kw>
<msg timestamp="20201029 18:16:20.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039913597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.839" endtime="20201029 18:16:20.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039913597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.203" endtime="20201029 18:16:20.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.221" endtime="20201029 18:16:20.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.832" endtime="20201029 18:16:20.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.827" endtime="20201029 18:16:20.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.238" level="INFO">${RESULT} = [{'diff': 4.272200000000198e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.207000000000516e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.251300000000097e-05}, {'diff': 4.251300000000097e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:20.230" endtime="20201029 18:16:20.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.249" level="INFO">${ACCURACY} = {'diff': [4.272200000000198e-05, 4.2054999999999176e-05, 4.207000000000516e-05, 4.225000000000062e-05, 4.251300000000097e-05, 4.251300000000097e-05, 4.290199999999744e-05, 4.270800000000241e-05, 4.261...</msg>
<status status="PASS" starttime="20201029 18:16:20.240" endtime="20201029 18:16:20.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.260" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.258" endtime="20201029 18:16:20.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.266" level="INFO">VALUE: [4.272200000000198e-05, 4.2054999999999176e-05, 4.207000000000516e-05, 4.225000000000062e-05, 4.251300000000097e-05, 4.251300000000097e-05, 4.290199999999744e-05, 4.270800000000241e-05, 4.2611000000004895e-05, 4.223600000000105e-05, 4.2860999999998206e-05, 4.2903000000003855e-05, 4.256999999999872e-05, 4.272199999999504e-05, 4.2596999999998386e-05, 4.2860999999998206e-05, 4.223600000000105e-05, 4.272200000000198e-05, 4.206999999999822e-05, 4.2624999999997526e-05, 4.255599999999915e-05, 4.2375000000004215e-05, 4.300000000000137e-05, 4.223600000000105e-05, 4.222199999999454e-05, 4.220800000000191e-05, 4.2874999999997776e-05, 4.309799999999836e-05, 4.2541000000000107e-05, 4.270799999999547e-05, 4.2874999999997776e-05, 4.2736999999994085e-05, 4.2360999999997706e-05, 4.254199999999958e-05, 4.2874999999997776e-05, 4.2194999999994875e-05, 4.255600000000609e-05, 4.222199999999454e-05, 4.2791000000000357e-05, 4.2360999999997706e-05, 4.206999999999822e-05, 4.270800000000241e-05, 4.272200000000198e-05, 4.251400000000044e-05, 4.2389000000003785e-05, 4.223600000000105e-05, 4.2888999999997346e-05, 4.2554999999999676e-05, 4.292999999999658e-05, 4.222200000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.263" endtime="20201029 18:16:20.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.251" endtime="20201029 18:16:20.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.278" endtime="20201029 18:16:20.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.274" endtime="20201029 18:16:20.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.271" endtime="20201029 18:16:20.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.771" endtime="20201029 18:16:20.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.770" endtime="20201029 18:16:20.303"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.326" endtime="20201029 18:16:20.344"></status>
</kw>
<msg timestamp="20201029 18:16:20.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.323" endtime="20201029 18:16:20.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.347" endtime="20201029 18:16:20.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.353" endtime="20201029 18:16:20.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.316" endtime="20201029 18:16:20.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.310" endtime="20201029 18:16:20.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.377" endtime="20201029 18:16:20.721"></status>
</kw>
<msg timestamp="20201029 18:16:20.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039577833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039620194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.373" endtime="20201029 18:16:20.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039577833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039620194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.731" endtime="20201029 18:16:20.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.750" endtime="20201029 18:16:20.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.366" endtime="20201029 18:16:20.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.362" endtime="20201029 18:16:20.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.768" level="INFO">${RESULT} = [{'diff': 4.2360999999997706e-05}, {'diff': 4.290200000000438e-05}, {'diff': 4.272199999999504e-05}, {'diff': 4.2861000000005145e-05}, {'diff': 4.270799999999547e-05}, {'diff': 4.2889000000004285e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:20.759" endtime="20201029 18:16:20.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.778" level="INFO">${ACCURACY} = {'diff': [4.2360999999997706e-05, 4.290200000000438e-05, 4.272199999999504e-05, 4.2861000000005145e-05, 4.270799999999547e-05, 4.2889000000004285e-05, 4.2889000000004285e-05, 4.231999999999847e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:20.770" endtime="20201029 18:16:20.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.789" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.787" endtime="20201029 18:16:20.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.795" level="INFO">VALUE: [4.2360999999997706e-05, 4.290200000000438e-05, 4.272199999999504e-05, 4.2861000000005145e-05, 4.270799999999547e-05, 4.2889000000004285e-05, 4.2889000000004285e-05, 4.231999999999847e-05, 4.219400000000234e-05, 4.234800000000455e-05, 4.2209000000001384e-05, 4.21939999999954e-05, 4.2209000000001384e-05, 4.2860999999998206e-05, 4.272200000000198e-05, 4.2346999999998136e-05, 4.2917000000003425e-05, 4.2388999999996846e-05, 4.2374999999997276e-05, 4.252800000000001e-05, 4.273600000000155e-05, 4.2541000000000107e-05, 4.2374999999997276e-05, 4.2860999999998206e-05, 4.2555000000006615e-05, 4.19860000000008e-05, 4.2209000000001384e-05, 4.2875000000004715e-05, 4.2209000000001384e-05, 4.220800000000191e-05, 4.2874999999997776e-05, 4.270800000000241e-05, 4.276300000000122e-05, 4.2374999999997276e-05, 4.2375000000004215e-05, 4.222200000000148e-05, 4.252800000000001e-05, 4.2541000000000107e-05, 4.2360999999997706e-05, 4.3055000000000176e-05, 4.263799999999762e-05, 4.308399999999879e-05, 4.2694999999995376e-05, 4.2554999999999676e-05, 4.2388999999996846e-05, 4.2875000000004715e-05, 4.2723000000001454e-05, 4.2096999999997886e-05, 4.222200000000148e-05, 4.2874999999997776e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.792" endtime="20201029 18:16:20.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.780" endtime="20201029 18:16:20.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.808" endtime="20201029 18:16:20.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.803" endtime="20201029 18:16:20.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.801" endtime="20201029 18:16:20.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.305" endtime="20201029 18:16:20.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.304" endtime="20201029 18:16:20.833"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.857" endtime="20201029 18:16:20.875"></status>
</kw>
<msg timestamp="20201029 18:16:20.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.853" endtime="20201029 18:16:20.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.879" endtime="20201029 18:16:20.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.885" endtime="20201029 18:16:20.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.846" endtime="20201029 18:16:20.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.840" endtime="20201029 18:16:20.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.909" endtime="20201029 18:16:21.248"></status>
</kw>
<msg timestamp="20201029 18:16:21.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043325236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043374778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.906" endtime="20201029 18:16:21.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043325236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043374778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.258" endtime="20201029 18:16:21.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.276" endtime="20201029 18:16:21.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.898" endtime="20201029 18:16:21.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.894" endtime="20201029 18:16:21.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.293" level="INFO">${RESULT} = [{'diff': 4.954199999999964e-05}, {'diff': 4.9375000000004277e-05}, {'diff': 4.934799999999767e-05}, {'diff': 4.936099999999777e-05}, {'diff': 4.972200000000204e-05}, {'diff': 4.987500000000478e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:21.285" endtime="20201029 18:16:21.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.303" level="INFO">${ACCURACY} = {'diff': [4.954199999999964e-05, 4.9375000000004277e-05, 4.934799999999767e-05, 4.936099999999777e-05, 4.972200000000204e-05, 4.987500000000478e-05, 4.9903000000003916e-05, 4.922200000000154e-05, 4.98...</msg>
<status status="PASS" starttime="20201029 18:16:21.296" endtime="20201029 18:16:21.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.314" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.311" endtime="20201029 18:16:21.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.319" level="INFO">VALUE: [4.954199999999964e-05, 4.9375000000004277e-05, 4.934799999999767e-05, 4.936099999999777e-05, 4.972200000000204e-05, 4.987500000000478e-05, 4.9903000000003916e-05, 4.922200000000154e-05, 4.987500000000478e-05, 4.9375000000004277e-05, 4.91940000000024e-05, 4.9375000000004277e-05, 4.91940000000024e-05, 5.008399999999885e-05, 4.958399999999835e-05, 4.988899999999741e-05, 4.904199999999914e-05, 4.926299999999384e-05, 4.9375000000004277e-05, 4.952800000000007e-05, 4.954199999999964e-05, 4.904199999999914e-05, 4.904099999999967e-05, 4.9209000000001446e-05, 4.9401999999997004e-05, 4.948600000000136e-05, 4.936099999999777e-05, 4.940200000000394e-05, 4.990299999999698e-05, 4.9195000000001876e-05, 4.937499999999734e-05, 4.926400000000025e-05, 5.005599999999971e-05, 4.988899999999741e-05, 4.954199999999964e-05, 4.938899999999691e-05, 4.987500000000478e-05, 4.9167000000002736e-05, 4.936100000000471e-05, 4.9181000000002306e-05, 4.956900000000625e-05, 5.002800000000057e-05, 4.986099999999827e-05, 4.9695000000002376e-05, 4.955499999999974e-05, 4.954199999999964e-05, 4.925000000000068e-05, 4.990299999999698e-05, 4.970899999999501e-05, 4.988899999999741e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.316" endtime="20201029 18:16:21.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.305" endtime="20201029 18:16:21.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.333" endtime="20201029 18:16:21.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.327" endtime="20201029 18:16:21.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.325" endtime="20201029 18:16:21.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.835" endtime="20201029 18:16:21.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.834" endtime="20201029 18:16:21.358"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.381" endtime="20201029 18:16:21.399"></status>
</kw>
<msg timestamp="20201029 18:16:21.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.377" endtime="20201029 18:16:21.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.403" endtime="20201029 18:16:21.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.409" endtime="20201029 18:16:21.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.370" endtime="20201029 18:16:21.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.365" endtime="20201029 18:16:21.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.432" endtime="20201029 18:16:21.770"></status>
</kw>
<msg timestamp="20201029 18:16:21.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039541931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.429" endtime="20201029 18:16:21.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039541931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.780" endtime="20201029 18:16:21.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.798" endtime="20201029 18:16:21.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.422" endtime="20201029 18:16:21.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.417" endtime="20201029 18:16:21.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.815" level="INFO">${RESULT} = [{'diff': 8.980499999999836e-05}, {'diff': 8.994400000000152e-05}, {'diff': 8.984700000000401e-05}, {'diff': 8.986100000000358e-05}, {'diff': 8.977799999999869e-05}, {'diff': 8.998600000000023e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:21.806" endtime="20201029 18:16:21.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.826" level="INFO">${ACCURACY} = {'diff': [8.980499999999836e-05, 8.994400000000152e-05, 8.984700000000401e-05, 8.986100000000358e-05, 8.977799999999869e-05, 8.998600000000023e-05, 8.934700000000351e-05, 8.954200000000495e-05, 8.9972...</msg>
<status status="PASS" starttime="20201029 18:16:21.817" endtime="20201029 18:16:21.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.837" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.835" endtime="20201029 18:16:21.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.842" level="INFO">VALUE: [8.980499999999836e-05, 8.994400000000152e-05, 8.984700000000401e-05, 8.986100000000358e-05, 8.977799999999869e-05, 8.998600000000023e-05, 8.934700000000351e-05, 8.954200000000495e-05, 8.997200000000066e-05, 9.015199999999612e-05, 8.981899999999793e-05, 8.997200000000066e-05, 8.934699999999657e-05, 8.958300000000419e-05, 8.987500000000315e-05, 8.990300000000229e-05, 9.009699999999732e-05, 9.023600000000048e-05, 8.923599999999948e-05, 8.962499999999596e-05, 9.002799999999894e-05, 8.938900000000222e-05, 9.019400000000177e-05, 8.924999999999905e-05, 8.930600000000427e-05, 8.937500000000265e-05, 8.92920000000047e-05, 8.938900000000222e-05, 9.01800000000022e-05, 8.969499999999381e-05, 8.938900000000222e-05, 9.008299999999775e-05, 8.981899999999793e-05, 8.934700000000351e-05, 8.954200000000495e-05, 8.926399999999862e-05, 8.930599999999733e-05, 8.931900000000437e-05, 8.965199999999562e-05, 8.958300000000419e-05, 8.981899999999793e-05, 9.008300000000469e-05, 8.924999999999905e-05, 8.944400000000102e-05, 8.98329999999975e-05, 8.947200000000016e-05, 9.006899999999818e-05, 9.007000000000459e-05, 8.938900000000222e-05, 8.973699999999946e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.839" endtime="20201029 18:16:21.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.828" endtime="20201029 18:16:21.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.861" endtime="20201029 18:16:21.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.856" endtime="20201029 18:16:21.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.854" endtime="20201029 18:16:21.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.360" endtime="20201029 18:16:21.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.359" endtime="20201029 18:16:21.886"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.908" endtime="20201029 18:16:21.927"></status>
</kw>
<msg timestamp="20201029 18:16:21.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.905" endtime="20201029 18:16:21.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.931" endtime="20201029 18:16:21.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.937" endtime="20201029 18:16:21.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.898" endtime="20201029 18:16:21.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.892" endtime="20201029 18:16:21.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.960" endtime="20201029 18:16:22.296"></status>
</kw>
<msg timestamp="20201029 18:16:22.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039648583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039739597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.957" endtime="20201029 18:16:22.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039648583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039739597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.305" endtime="20201029 18:16:22.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.324" endtime="20201029 18:16:22.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.950" endtime="20201029 18:16:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.945" endtime="20201029 18:16:22.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.341" level="INFO">${RESULT} = [{'diff': 9.101400000000037e-05}, {'diff': 9.045900000000107e-05}, {'diff': 9.117999999999626e-05}, {'diff': 9.112499999999746e-05}, {'diff': 9.08329999999985e-05}, {'diff': 9.108300000000569e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:22.332" endtime="20201029 18:16:22.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.352" level="INFO">${ACCURACY} = {'diff': [9.101400000000037e-05, 9.045900000000107e-05, 9.117999999999626e-05, 9.112499999999746e-05, 9.08329999999985e-05, 9.108300000000569e-05, 9.033399999999747e-05, 9.047200000000116e-05, 9.06110...</msg>
<status status="PASS" starttime="20201029 18:16:22.343" endtime="20201029 18:16:22.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.363" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.361" endtime="20201029 18:16:22.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.368" level="INFO">VALUE: [9.101400000000037e-05, 9.045900000000107e-05, 9.117999999999626e-05, 9.112499999999746e-05, 9.08329999999985e-05, 9.108300000000569e-05, 9.033399999999747e-05, 9.047200000000116e-05, 9.061100000000433e-05, 9.02920000000057e-05, 9.062499999999696e-05, 9.090299999999635e-05, 9.056900000000562e-05, 9.030599999999833e-05, 9.109699999999832e-05, 9.093100000000243e-05, 9.087499999999721e-05, 9.106899999999918e-05, 9.106899999999918e-05, 9.045900000000107e-05, 9.054099999999954e-05, 9.069400000000227e-05, 9.034699999999757e-05, 9.111099999999789e-05, 9.105599999999908e-05, 9.045900000000107e-05, 9.011099999999689e-05, 9.023699999999996e-05, 9.104100000000004e-05, 9.097200000000166e-05, 9.104199999999951e-05, 9.041699999999542e-05, 9.055499999999911e-05, 9.093100000000243e-05, 9.043100000000193e-05, 9.034699999999757e-05, 9.008400000000416e-05, 9.05130000000004e-05, 9.091699999999592e-05, 9.070800000000184e-05, 9.093000000000295e-05, 9.073599999999404e-05, 9.045799999999465e-05, 9.01250000000034e-05, 9.106899999999918e-05, 9.048600000000073e-05, 9.06670000000026e-05, 9.084699999999807e-05, 9.058299999999825e-05, 9.113899999999703e-05]</msg>
<status status="PASS" starttime="20201029 18:16:22.365" endtime="20201029 18:16:22.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.354" endtime="20201029 18:16:22.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.381" endtime="20201029 18:16:22.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.376" endtime="20201029 18:16:22.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.374" endtime="20201029 18:16:22.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.888" endtime="20201029 18:16:22.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.887" endtime="20201029 18:16:22.406"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.428" endtime="20201029 18:16:22.447"></status>
</kw>
<msg timestamp="20201029 18:16:22.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.425" endtime="20201029 18:16:22.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.451" endtime="20201029 18:16:22.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.457" endtime="20201029 18:16:22.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.418" endtime="20201029 18:16:22.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.412" endtime="20201029 18:16:22.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.480" endtime="20201029 18:16:22.819"></status>
</kw>
<msg timestamp="20201029 18:16:22.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039643125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039735278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.477" endtime="20201029 18:16:22.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039643125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039735278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.828" endtime="20201029 18:16:22.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.847" endtime="20201029 18:16:22.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.470" endtime="20201029 18:16:22.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.465" endtime="20201029 18:16:22.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.866" level="INFO">${RESULT} = [{'diff': 9.21529999999976e-05}, {'diff': 9.14870000000012e-05}, {'diff': 9.197200000000266e-05}, {'diff': 9.151400000000087e-05}, {'diff': 9.138900000000422e-05}, {'diff': 9.118099999999574e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:22.856" endtime="20201029 18:16:22.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.876" level="INFO">${ACCURACY} = {'diff': [9.21529999999976e-05, 9.14870000000012e-05, 9.197200000000266e-05, 9.151400000000087e-05, 9.138900000000422e-05, 9.118099999999574e-05, 9.161100000000533e-05, 9.122199999999497e-05, 9.179200...</msg>
<status status="PASS" starttime="20201029 18:16:22.868" endtime="20201029 18:16:22.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.887" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.884" endtime="20201029 18:16:22.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.892" level="INFO">VALUE: [9.21529999999976e-05, 9.14870000000012e-05, 9.197200000000266e-05, 9.151400000000087e-05, 9.138900000000422e-05, 9.118099999999574e-05, 9.161100000000533e-05, 9.122199999999497e-05, 9.179200000000026e-05, 9.206999999999965e-05, 9.18199999999994e-05, 9.120800000000234e-05, 9.136099999999814e-05, 9.119399999999583e-05, 9.187500000000515e-05, 9.16250000000049e-05, 9.127800000000019e-05, 9.165199999999762e-05, 9.195799999999615e-05, 9.172200000000241e-05, 9.120800000000234e-05, 9.198600000000223e-05, 9.204100000000104e-05, 9.163899999999753e-05, 9.20000000000018e-05, 9.126399999999368e-05, 9.162499999999796e-05, 9.18879999999983e-05, 9.163899999999753e-05, 9.187499999999821e-05, 9.123700000000096e-05, 9.129199999999976e-05, 9.19859999999953e-05, 9.138899999999728e-05, 9.123600000000148e-05, 9.154100000000054e-05, 9.13879999999978e-05, 9.138899999999728e-05, 9.16529999999971e-05, 9.151400000000087e-05, 9.158299999999925e-05, 9.15000000000013e-05, 9.177800000000069e-05, 9.140299999999685e-05, 9.161100000000533e-05, 9.173599999999504e-05, 9.186099999999864e-05, 9.154200000000001e-05, 9.188900000000472e-05, 9.130499999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:16:22.889" endtime="20201029 18:16:22.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.877" endtime="20201029 18:16:22.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.905" endtime="20201029 18:16:22.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.900" endtime="20201029 18:16:22.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.898" endtime="20201029 18:16:22.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.408" endtime="20201029 18:16:22.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.407" endtime="20201029 18:16:22.930"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.952" endtime="20201029 18:16:22.974"></status>
</kw>
<msg timestamp="20201029 18:16:22.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.949" endtime="20201029 18:16:22.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.978" endtime="20201029 18:16:22.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.984" endtime="20201029 18:16:22.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.942" endtime="20201029 18:16:22.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.936" endtime="20201029 18:16:22.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.008" endtime="20201029 18:16:23.355"></status>
</kw>
<msg timestamp="20201029 18:16:23.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041232458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041325528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.004" endtime="20201029 18:16:23.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041232458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041325528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.364" endtime="20201029 18:16:23.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.383" endtime="20201029 18:16:23.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.997" endtime="20201029 18:16:23.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.992" endtime="20201029 18:16:23.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.400" level="INFO">${RESULT} = [{'diff': 9.307000000000065e-05}, {'diff': 9.249999999999536e-05}, {'diff': 9.245800000000359e-05}, {'diff': 9.299999999999586e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.311099999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:23.391" endtime="20201029 18:16:23.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.410" level="INFO">${ACCURACY} = {'diff': [9.307000000000065e-05, 9.249999999999536e-05, 9.245800000000359e-05, 9.299999999999586e-05, 9.309700000000032e-05, 9.311099999999989e-05, 9.234699999999957e-05, 9.297199999999672e-05, 9.2388...</msg>
<status status="PASS" starttime="20201029 18:16:23.402" endtime="20201029 18:16:23.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.421" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.418" endtime="20201029 18:16:23.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.427" level="INFO">VALUE: [9.307000000000065e-05, 9.249999999999536e-05, 9.245800000000359e-05, 9.299999999999586e-05, 9.309700000000032e-05, 9.311099999999989e-05, 9.234699999999957e-05, 9.297199999999672e-05, 9.238899999999828e-05, 9.236099999999914e-05, 9.279200000000126e-05, 9.252700000000197e-05, 9.243000000000445e-05, 9.2333e-05, 9.305500000000161e-05, 9.318099999999774e-05, 9.255600000000058e-05, 9.254200000000101e-05, 9.24859999999958e-05, 9.25000000000023e-05, 9.288899999999878e-05, 9.304199999999457e-05, 9.302800000000194e-05, 9.269399999999733e-05, 9.294499999999706e-05, 9.256900000000068e-05, 9.234799999999904e-05, 9.315300000000554e-05, 9.226400000000162e-05, 9.238899999999828e-05, 9.273600000000298e-05, 9.263899999999853e-05, 9.222300000000239e-05, 9.25000000000023e-05, 9.223600000000248e-05, 9.313899999999903e-05, 9.315199999999912e-05, 9.26659999999982e-05, 9.299999999999586e-05, 9.237499999999871e-05, 9.294399999999758e-05, 9.31250000000064e-05, 9.230500000000086e-05, 9.277799999999475e-05, 9.219400000000377e-05, 9.308300000000075e-05, 9.234699999999957e-05, 9.227699999999478e-05, 9.326400000000262e-05, 9.25130000000024e-05]</msg>
<status status="PASS" starttime="20201029 18:16:23.423" endtime="20201029 18:16:23.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.411" endtime="20201029 18:16:23.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.447" endtime="20201029 18:16:23.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.438" endtime="20201029 18:16:23.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.434" endtime="20201029 18:16:23.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.932" endtime="20201029 18:16:23.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.931" endtime="20201029 18:16:23.478"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.509" endtime="20201029 18:16:23.528"></status>
</kw>
<msg timestamp="20201029 18:16:23.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.505" endtime="20201029 18:16:23.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.531" endtime="20201029 18:16:23.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.537" endtime="20201029 18:16:23.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.495" endtime="20201029 18:16:23.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.488" endtime="20201029 18:16:23.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.561" endtime="20201029 18:16:23.960"></status>
</kw>
<msg timestamp="20201029 18:16:23.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053397333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053490833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.558" endtime="20201029 18:16:23.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053397333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053490833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.970" endtime="20201029 18:16:23.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.988" endtime="20201029 18:16:23.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.551" endtime="20201029 18:16:23.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.546" endtime="20201029 18:16:23.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.006" level="INFO">${RESULT} = [{'diff': 9.35000000000033e-05}, {'diff': 9.409700000000132e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.376399999999618e-05}, {'diff': 9.345800000000459e-05}, {'diff': 9.373599999999704e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:23.997" endtime="20201029 18:16:24.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.017" level="INFO">${ACCURACY} = {'diff': [9.35000000000033e-05, 9.409700000000132e-05, 9.367999999999876e-05, 9.376399999999618e-05, 9.345800000000459e-05, 9.373599999999704e-05, 9.337499999999971e-05, 9.34859999999968e-05, 9.370799...</msg>
<status status="PASS" starttime="20201029 18:16:24.008" endtime="20201029 18:16:24.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.028" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.025" endtime="20201029 18:16:24.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.033" level="INFO">VALUE: [9.35000000000033e-05, 9.409700000000132e-05, 9.367999999999876e-05, 9.376399999999618e-05, 9.345800000000459e-05, 9.373599999999704e-05, 9.337499999999971e-05, 9.34859999999968e-05, 9.37079999999979e-05, 9.40409999999961e-05, 9.361100000000039e-05, 9.337499999999971e-05, 9.43059999999954e-05, 9.375000000000355e-05, 9.34859999999968e-05, 9.354200000000201e-05, 9.372299999999695e-05, 9.334700000000057e-05, 9.338899999999928e-05, 9.340300000000579e-05, 9.379100000000279e-05, 9.327800000000219e-05, 9.361100000000039e-05, 9.365199999999962e-05, 9.412500000000046e-05, 9.393100000000543e-05, 9.420900000000482e-05, 9.372299999999695e-05, 9.352700000000297e-05, 9.409699999999438e-05, 9.37079999999979e-05, 9.393099999999849e-05, 9.340299999999885e-05, 9.398600000000423e-05, 9.362499999999996e-05, 9.348600000000373e-05, 9.409800000000079e-05, 9.390299999999935e-05, 9.324999999999611e-05, 9.383399999999403e-05, 9.361100000000039e-05, 9.411100000000089e-05, 9.409800000000079e-05, 9.427800000000319e-05, 9.377700000000322e-05, 9.334800000000004e-05, 9.362499999999996e-05, 9.329200000000176e-05, 9.402800000000294e-05, 9.369399999999833e-05]</msg>
<status status="PASS" starttime="20201029 18:16:24.030" endtime="20201029 18:16:24.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.019" endtime="20201029 18:16:24.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.046" endtime="20201029 18:16:24.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.042" endtime="20201029 18:16:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.039" endtime="20201029 18:16:24.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.481" endtime="20201029 18:16:24.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.479" endtime="20201029 18:16:24.071"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.094" endtime="20201029 18:16:24.113"></status>
</kw>
<msg timestamp="20201029 18:16:24.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.091" endtime="20201029 18:16:24.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.116" endtime="20201029 18:16:24.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.123" endtime="20201029 18:16:24.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.083" endtime="20201029 18:16:24.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.077" endtime="20201029 18:16:24.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.146" endtime="20201029 18:16:24.485"></status>
</kw>
<msg timestamp="20201029 18:16:24.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040038556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.143" endtime="20201029 18:16:24.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039943528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040038556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.495" endtime="20201029 18:16:24.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.513" endtime="20201029 18:16:24.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.135" endtime="20201029 18:16:24.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.131" endtime="20201029 18:16:24.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.530" level="INFO">${RESULT} = [{'diff': 9.502800000000394e-05}, {'diff': 9.463800000000105e-05}, {'diff': 9.44859999999978e-05}, {'diff': 9.44859999999978e-05}, {'diff': 9.443099999999899e-05}, {'diff': 9.479099999999685e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:24.521" endtime="20201029 18:16:24.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.545" level="INFO">${ACCURACY} = {'diff': [9.502800000000394e-05, 9.463800000000105e-05, 9.44859999999978e-05, 9.44859999999978e-05, 9.443099999999899e-05, 9.479099999999685e-05, 9.487500000000121e-05, 9.493000000000001e-05, 9.434700...</msg>
<status status="PASS" starttime="20201029 18:16:24.532" endtime="20201029 18:16:24.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.556" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.554" endtime="20201029 18:16:24.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.562" level="INFO">VALUE: [9.502800000000394e-05, 9.463800000000105e-05, 9.44859999999978e-05, 9.44859999999978e-05, 9.443099999999899e-05, 9.479099999999685e-05, 9.487500000000121e-05, 9.493000000000001e-05, 9.434700000000157e-05, 9.483399999999503e-05, 9.443099999999899e-05, 9.458400000000172e-05, 9.472199999999847e-05, 9.48330000000025e-05, 9.488899999999384e-05, 9.506900000000318e-05, 9.43880000000008e-05, 9.508300000000275e-05, 9.467999999999976e-05, 9.491699999999992e-05, 9.469499999999881e-05, 9.45279999999965e-05, 9.46530000000001e-05, 9.490200000000087e-05, 9.449999999999736e-05, 9.443099999999899e-05, 9.508400000000222e-05, 9.502699999999753e-05, 9.469499999999881e-05, 9.457000000000215e-05, 9.522299999999845e-05, 9.455500000000311e-05, 9.505600000000308e-05, 9.469499999999881e-05, 9.433400000000147e-05, 9.470899999999838e-05, 9.474999999999761e-05, 9.515299999999366e-05, 9.499999999999786e-05, 9.526399999999768e-05, 9.505600000000308e-05, 9.509800000000179e-05, 9.438900000000028e-05, 9.50000000000048e-05, 9.456900000000268e-05, 9.484700000000207e-05, 9.495799999999915e-05, 9.469499999999881e-05, 9.524999999999811e-05, 9.461100000000139e-05]</msg>
<status status="PASS" starttime="20201029 18:16:24.558" endtime="20201029 18:16:24.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.547" endtime="20201029 18:16:24.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.574" endtime="20201029 18:16:24.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.570" endtime="20201029 18:16:24.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.567" endtime="20201029 18:16:24.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.073" endtime="20201029 18:16:24.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.072" endtime="20201029 18:16:24.599"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.622" endtime="20201029 18:16:24.640"></status>
</kw>
<msg timestamp="20201029 18:16:24.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.618" endtime="20201029 18:16:24.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.644" endtime="20201029 18:16:24.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.650" endtime="20201029 18:16:24.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.611" endtime="20201029 18:16:24.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.605" endtime="20201029 18:16:24.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.675" endtime="20201029 18:16:25.011"></status>
</kw>
<msg timestamp="20201029 18:16:25.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039464292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039559569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.672" endtime="20201029 18:16:25.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039464292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039559569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.021" endtime="20201029 18:16:25.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.039" endtime="20201029 18:16:25.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.664" endtime="20201029 18:16:25.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.659" endtime="20201029 18:16:25.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.057" level="INFO">${RESULT} = [{'diff': 9.527700000000472e-05}, {'diff': 9.574999999999861e-05}, {'diff': 9.61530000000016e-05}, {'diff': 9.555599999999664e-05}, {'diff': 9.680600000000483e-05}, {'diff': 9.557000000000315e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:25.048" endtime="20201029 18:16:25.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.066" level="INFO">${ACCURACY} = {'diff': [9.527700000000472e-05, 9.574999999999861e-05, 9.61530000000016e-05, 9.555599999999664e-05, 9.680600000000483e-05, 9.557000000000315e-05, 9.623599999999954e-05, 9.620899999999988e-05, 9.59869...</msg>
<status status="PASS" starttime="20201029 18:16:25.059" endtime="20201029 18:16:25.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.077" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.075" endtime="20201029 18:16:25.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.082" level="INFO">VALUE: [9.527700000000472e-05, 9.574999999999861e-05, 9.61530000000016e-05, 9.555599999999664e-05, 9.680600000000483e-05, 9.557000000000315e-05, 9.623599999999954e-05, 9.620899999999988e-05, 9.598699999999877e-05, 9.64859999999998e-05, 9.547199999999922e-05, 9.691600000000244e-05, 9.555600000000358e-05, 9.623599999999954e-05, 9.626399999999868e-05, 9.686199999999617e-05, 9.567999999999383e-05, 9.644400000000108e-05, 9.548699999999827e-05, 9.609699999999638e-05, 9.701400000000637e-05, 9.616700000000117e-05, 9.573599999999904e-05, 9.692999999999508e-05, 9.543000000000051e-05, 9.538900000000128e-05, 9.706900000000518e-05, 9.701399999999943e-05, 9.636100000000314e-05, 9.543099999999999e-05, 9.708399999999728e-05, 9.563900000000153e-05, 9.713900000000303e-05, 9.543099999999999e-05, 9.591700000000092e-05, 9.626399999999868e-05, 9.676399999999918e-05, 9.559700000000282e-05, 9.649999999999936e-05, 9.695800000000115e-05, 9.549999999999836e-05, 9.569400000000033e-05, 9.63609999999962e-05, 9.538900000000128e-05, 9.679199999999832e-05, 9.613900000000203e-05, 9.576400000000512e-05, 9.53609999999952e-05, 9.60409999999981e-05, 9.594500000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:16:25.079" endtime="20201029 18:16:25.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.068" endtime="20201029 18:16:25.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.095" endtime="20201029 18:16:25.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.090" endtime="20201029 18:16:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.088" endtime="20201029 18:16:25.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.601" endtime="20201029 18:16:25.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.600" endtime="20201029 18:16:25.120"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.142" endtime="20201029 18:16:25.163"></status>
</kw>
<msg timestamp="20201029 18:16:25.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.139" endtime="20201029 18:16:25.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.166" endtime="20201029 18:16:25.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.172" endtime="20201029 18:16:25.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.132" endtime="20201029 18:16:25.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.126" endtime="20201029 18:16:25.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.195" endtime="20201029 18:16:25.531"></status>
</kw>
<msg timestamp="20201029 18:16:25.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041011069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041107514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.192" endtime="20201029 18:16:25.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041011069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041107514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.541" endtime="20201029 18:16:25.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.559" endtime="20201029 18:16:25.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.185" endtime="20201029 18:16:25.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.180" endtime="20201029 18:16:25.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.576" level="INFO">${RESULT} = [{'diff': 9.644500000000056e-05}, {'diff': 9.776300000000071e-05}, {'diff': 9.800000000000086e-05}, {'diff': 9.636100000000314e-05}, {'diff': 9.795900000000163e-05}, {'diff': 9.737499999999677e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:25.567" endtime="20201029 18:16:25.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.586" level="INFO">${ACCURACY} = {'diff': [9.644500000000056e-05, 9.776300000000071e-05, 9.800000000000086e-05, 9.636100000000314e-05, 9.795900000000163e-05, 9.737499999999677e-05, 9.795800000000215e-05, 9.663900000000253e-05, 9.7277...</msg>
<status status="PASS" starttime="20201029 18:16:25.578" endtime="20201029 18:16:25.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.596" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.594" endtime="20201029 18:16:25.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.602" level="INFO">VALUE: [9.644500000000056e-05, 9.776300000000071e-05, 9.800000000000086e-05, 9.636100000000314e-05, 9.795900000000163e-05, 9.737499999999677e-05, 9.795800000000215e-05, 9.663900000000253e-05, 9.727799999999925e-05, 9.794400000000258e-05, 9.698699999999977e-05, 9.815299999999666e-05, 9.787500000000421e-05, 9.793000000000301e-05, 9.7415999999996e-05, 9.79730000000012e-05, 9.781900000000593e-05, 9.819500000000231e-05, 9.791699999999598e-05, 9.811100000000489e-05, 9.64859999999998e-05, 9.725000000000011e-05, 9.684700000000407e-05, 9.725000000000011e-05, 9.766699999999573e-05, 9.67359999999931e-05, 9.801400000000043e-05, 9.673600000000004e-05, 9.788899999999684e-05, 9.637500000000271e-05, 9.763900000000353e-05, 9.776400000000018e-05, 9.737499999999677e-05, 9.783399999999803e-05, 9.736100000000414e-05, 9.761200000000386e-05, 9.733299999999806e-05, 9.767999999999583e-05, 9.72080000000014e-05, 9.734699999999763e-05, 9.72080000000014e-05, 9.775000000000061e-05, 9.720900000000088e-05, 9.811099999999795e-05, 9.748700000000027e-05, 9.683400000000397e-05, 9.811100000000489e-05, 9.745799999999472e-05, 9.708399999999728e-05, 9.783299999999856e-05]</msg>
<status status="PASS" starttime="20201029 18:16:25.599" endtime="20201029 18:16:25.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.587" endtime="20201029 18:16:25.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.616" endtime="20201029 18:16:25.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.610" endtime="20201029 18:16:25.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.608" endtime="20201029 18:16:25.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.122" endtime="20201029 18:16:25.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.121" endtime="20201029 18:16:25.641"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.663" endtime="20201029 18:16:25.682"></status>
</kw>
<msg timestamp="20201029 18:16:25.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.660" endtime="20201029 18:16:25.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.686" endtime="20201029 18:16:25.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.693" endtime="20201029 18:16:25.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.653" endtime="20201029 18:16:25.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.647" endtime="20201029 18:16:25.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.717" endtime="20201029 18:16:26.061"></status>
</kw>
<msg timestamp="20201029 18:16:26.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039519125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039617542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.714" endtime="20201029 18:16:26.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039519125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039617542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.070" endtime="20201029 18:16:26.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.089" endtime="20201029 18:16:26.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.706" endtime="20201029 18:16:26.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.701" endtime="20201029 18:16:26.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.106" level="INFO">${RESULT} = [{'diff': 9.841699999999648e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.916699999999723e-05}, {'diff': 9.888899999999784e-05}, {'diff': 9.868100000000324e-05}, {'diff': 9.818100000000274e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:26.097" endtime="20201029 18:16:26.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.117" level="INFO">${ACCURACY} = {'diff': [9.841699999999648e-05, 9.854200000000007e-05, 9.916699999999723e-05, 9.888899999999784e-05, 9.868100000000324e-05, 9.818100000000274e-05, 9.822300000000145e-05, 9.829199999999982e-05, 9.8707...</msg>
<status status="PASS" starttime="20201029 18:16:26.108" endtime="20201029 18:16:26.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.127" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.125" endtime="20201029 18:16:26.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.133" level="INFO">VALUE: [9.841699999999648e-05, 9.854200000000007e-05, 9.916699999999723e-05, 9.888899999999784e-05, 9.868100000000324e-05, 9.818100000000274e-05, 9.822300000000145e-05, 9.829199999999982e-05, 9.870799999999597e-05, 9.897200000000272e-05, 9.849999999999443e-05, 9.883299999999956e-05, 9.877799999999382e-05, 9.872300000000195e-05, 9.82359999999946e-05, 9.908299999999981e-05, 9.88609999999987e-05, 9.858299999999931e-05, 9.84860000000018e-05, 9.863899999999759e-05, 9.843000000000351e-05, 9.906900000000024e-05, 9.92080000000034e-05, 9.909699999999938e-05, 9.862500000000496e-05, 9.877800000000075e-05, 9.863799999999812e-05, 9.908299999999981e-05, 9.890299999999741e-05, 9.825000000000111e-05, 9.83609999999982e-05, 9.862499999999802e-05, 9.829199999999982e-05, 9.859699999999888e-05, 9.820799999999547e-05, 9.886100000000564e-05, 9.811099999999795e-05, 9.915299999999766e-05, 9.822300000000145e-05, 9.83479999999981e-05, 9.88479999999986e-05, 9.897199999999579e-05, 9.854200000000007e-05, 9.886199999999817e-05, 9.816699999999623e-05, 9.909699999999938e-05, 9.887499999999827e-05, 9.855500000000017e-05, 9.843099999999605e-05, 9.854200000000007e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.130" endtime="20201029 18:16:26.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.118" endtime="20201029 18:16:26.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.145" endtime="20201029 18:16:26.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.141" endtime="20201029 18:16:26.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.139" endtime="20201029 18:16:26.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.643" endtime="20201029 18:16:26.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.642" endtime="20201029 18:16:26.171"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.219" endtime="20201029 18:16:26.240"></status>
</kw>
<msg timestamp="20201029 18:16:26.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.214" endtime="20201029 18:16:26.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.243" endtime="20201029 18:16:26.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.250" endtime="20201029 18:16:26.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.200" endtime="20201029 18:16:26.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.184" endtime="20201029 18:16:26.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.273" endtime="20201029 18:16:26.622"></status>
</kw>
<msg timestamp="20201029 18:16:26.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065795458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065895306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.270" endtime="20201029 18:16:26.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065795458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065895306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.631" endtime="20201029 18:16:26.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.650" endtime="20201029 18:16:26.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.262" endtime="20201029 18:16:26.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.258" endtime="20201029 18:16:26.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.667" level="INFO">${RESULT} = [{'diff': 9.98479999999996e-05}, {'diff': 9.98889999999919e-05}, {'diff': 0.0001000689999999943}, {'diff': 9.990299999999841e-05}, {'diff': 9.9513999999995e-05}, {'diff': 9.945799999999672e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:16:26.658" endtime="20201029 18:16:26.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.678" level="INFO">${ACCURACY} = {'diff': [9.98479999999996e-05, 9.98889999999919e-05, 0.0001000689999999943, 9.990299999999841e-05, 9.9513999999995e-05, 9.945799999999672e-05, 9.997199999998985e-05, 9.961099999999945e-05, 9.98190000...</msg>
<status status="PASS" starttime="20201029 18:16:26.669" endtime="20201029 18:16:26.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.689" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.687" endtime="20201029 18:16:26.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.695" level="INFO">VALUE: [9.98479999999996e-05, 9.98889999999919e-05, 0.0001000689999999943, 9.990299999999841e-05, 9.9513999999995e-05, 9.945799999999672e-05, 9.997199999998985e-05, 9.961099999999945e-05, 9.981900000000099e-05, 9.927799999999432e-05, 9.927699999999484e-05, 9.994400000000458e-05, 9.97080000000039e-05, 0.0001001939999999979, 9.993099999999755e-05, 9.984700000000013e-05, 9.941600000000494e-05, 0.00010001400000000937, 9.965299999999122e-05, 9.91939999999969e-05, 9.967999999999089e-05, 9.927700000000872e-05, 0.00010008300000000081, 9.997200000000372e-05, 0.00010005600000000114, 9.962499999999208e-05, 0.0001000139999999955, 0.00010002700000000253, 9.965299999999122e-05, 9.963799999999912e-05, 9.966599999999826e-05, 9.945899999999619e-05, 9.973700000000252e-05, 9.947199999998935e-05, 9.973600000000304e-05, 9.991699999999104e-05, 9.979199999998745e-05, 9.945899999999619e-05, 9.927799999999432e-05, 9.991600000000544e-05, 9.966699999999773e-05, 9.966599999999826e-05, 9.975000000000955e-05, 9.940299999999791e-05, 9.922299999999551e-05, 9.998600000001023e-05, 0.0001000689999999943, 9.981900000000099e-05, 9.968000000000476e-05, 9.96939999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.692" endtime="20201029 18:16:26.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.680" endtime="20201029 18:16:26.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.707" endtime="20201029 18:16:26.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.703" endtime="20201029 18:16:26.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.700" endtime="20201029 18:16:26.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.173" endtime="20201029 18:16:26.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.171" endtime="20201029 18:16:26.733"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.757" endtime="20201029 18:16:26.777"></status>
</kw>
<msg timestamp="20201029 18:16:26.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.753" endtime="20201029 18:16:26.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.781" endtime="20201029 18:16:26.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.788" endtime="20201029 18:16:26.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.746" endtime="20201029 18:16:26.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.740" endtime="20201029 18:16:26.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.812" endtime="20201029 18:16:27.166"></status>
</kw>
<msg timestamp="20201029 18:16:27.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041288333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.808" endtime="20201029 18:16:27.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041288333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.175" endtime="20201029 18:16:27.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.194" endtime="20201029 18:16:27.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.801" endtime="20201029 18:16:27.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.796" endtime="20201029 18:16:27.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.211" level="INFO">${RESULT} = [{'diff': 0.000100513999999996}, {'diff': 0.00010061100000000045}, {'diff': 0.00010074999999999668}, {'diff': 0.00010019400000000483}, {'diff': 0.00010019499999999737}, {'diff': 0.00010015299999999866...</msg>
<status status="PASS" starttime="20201029 18:16:27.202" endtime="20201029 18:16:27.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.220" level="INFO">${ACCURACY} = {'diff': [0.000100513999999996, 0.00010061100000000045, 0.00010074999999999668, 0.00010019400000000483, 0.00010019499999999737, 0.00010015299999999866, 0.00010033400000000053, 0.00010084700000000113, ...</msg>
<status status="PASS" starttime="20201029 18:16:27.213" endtime="20201029 18:16:27.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.230" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.228" endtime="20201029 18:16:27.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.236" level="INFO">VALUE: [0.000100513999999996, 0.00010061100000000045, 0.00010074999999999668, 0.00010019400000000483, 0.00010019499999999737, 0.00010015299999999866, 0.00010033400000000053, 0.00010084700000000113, 0.0001008610000000007, 0.00010048599999999686, 0.00010105600000000214, 0.00010098599999999736, 0.00010063899999999959, 0.00010105600000000214, 0.0001003610000000002, 0.00010094499999999812, 0.00010095799999999822, 0.0001003610000000002, 0.00010087500000000027, 0.00010076399999999625, 0.00010108300000000181, 0.0001008060000000019, 0.000100415999999999, 0.00010026400000000268, 0.000100415999999999, 0.0001009159999999995, 0.00010084700000000113, 0.00010050000000000336, 0.0001003610000000002, 0.00010030500000000192, 0.00010070799999999797, 0.00010112500000000052, 0.00010037500000000671, 0.00010079200000000232, 0.00010027800000000225, 0.00010063899999999959, 0.0001009860000000043, 0.00010108300000000181, 0.00010030500000000192, 0.0001003610000000002, 0.00010044500000000456, 0.0001003060000000014, 0.00010088899999999984, 0.0001001939999999979, 0.00010113900000000009, 0.00010062500000000002, 0.00010033300000000106, 0.00010040299999999891, 0.00010062500000000002, 0.00010111200000000042]</msg>
<status status="PASS" starttime="20201029 18:16:27.233" endtime="20201029 18:16:27.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.221" endtime="20201029 18:16:27.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.248" endtime="20201029 18:16:27.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.244" endtime="20201029 18:16:27.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.242" endtime="20201029 18:16:27.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.735" endtime="20201029 18:16:27.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.734" endtime="20201029 18:16:27.274"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.296" endtime="20201029 18:16:27.319"></status>
</kw>
<msg timestamp="20201029 18:16:27.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.293" endtime="20201029 18:16:27.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.322" endtime="20201029 18:16:27.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.328" endtime="20201029 18:16:27.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.286" endtime="20201029 18:16:27.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.280" endtime="20201029 18:16:27.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.352" endtime="20201029 18:16:27.701"></status>
</kw>
<msg timestamp="20201029 18:16:27.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041464944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041566681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.349" endtime="20201029 18:16:27.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041464944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041566681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.710" endtime="20201029 18:16:27.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.728" endtime="20201029 18:16:27.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.341" endtime="20201029 18:16:27.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.336" endtime="20201029 18:16:27.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.746" level="INFO">${RESULT} = [{'diff': 0.00010173700000000452}, {'diff': 0.00010176399999999725}, {'diff': 0.00010155499999999623}, {'diff': 0.00010149999999999743}, {'diff': 0.00010212500000000152}, {'diff': 0.000102041999999996...</msg>
<status status="PASS" starttime="20201029 18:16:27.737" endtime="20201029 18:16:27.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.755" level="INFO">${ACCURACY} = {'diff': [0.00010173700000000452, 0.00010176399999999725, 0.00010155499999999623, 0.00010149999999999743, 0.00010212500000000152, 0.00010204199999999664, 0.0001022080000000064, 0.00010209700000000238,...</msg>
<status status="PASS" starttime="20201029 18:16:27.748" endtime="20201029 18:16:27.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.767" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.764" endtime="20201029 18:16:27.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.772" level="INFO">VALUE: [0.00010173700000000452, 0.00010176399999999725, 0.00010155499999999623, 0.00010149999999999743, 0.00010212500000000152, 0.00010204199999999664, 0.0001022080000000064, 0.00010209700000000238, 0.00010142999999999958, 0.00010216700000000023, 0.00010212500000000152, 0.00010130500000000292, 0.00010179199999999639, 0.00010194500000000606, 0.00010216700000000023, 0.00010177799999999682, 0.0001013339999999946, 0.00010137500000000077, 0.00010170799999999897, 0.00010208299999999587, 0.00010177799999999682, 0.00010149999999999743, 0.00010131900000000249, 0.00010161100000000145, 0.00010181900000000299, 0.00010198700000000477, 0.00010124999999999718, 0.00010166699999999973, 0.00010133300000000206, 0.00010161100000000145, 0.00010212499999999458, 0.00010177799999999682, 0.00010197299999999826, 0.000101416, 0.00010155499999999623, 0.00010137500000000077, 0.0001013480000000011, 0.0001019160000000005, 0.00010145899999999819, 0.00010133299999999512, 0.00010194499999999912, 0.000102028000000004, 0.00010174999999999768, 0.00010148700000000427, 0.00010193000000000008, 0.00010154199999999614, 0.00010169499999999887, 0.00010179199999999639, 0.00010131899999999555, 0.00010197199999999879]</msg>
<status status="PASS" starttime="20201029 18:16:27.769" endtime="20201029 18:16:27.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.757" endtime="20201029 18:16:27.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.788" endtime="20201029 18:16:27.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.781" endtime="20201029 18:16:27.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.778" endtime="20201029 18:16:27.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.276" endtime="20201029 18:16:27.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.275" endtime="20201029 18:16:27.813"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.836" endtime="20201029 18:16:27.857"></status>
</kw>
<msg timestamp="20201029 18:16:27.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.833" endtime="20201029 18:16:27.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.860" endtime="20201029 18:16:27.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.867" endtime="20201029 18:16:27.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.825" endtime="20201029 18:16:27.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.820" endtime="20201029 18:16:27.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.890" endtime="20201029 18:16:28.238"></status>
</kw>
<msg timestamp="20201029 18:16:28.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039924278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040026708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.887" endtime="20201029 18:16:28.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039924278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040026708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.248" endtime="20201029 18:16:28.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.266" endtime="20201029 18:16:28.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.879" endtime="20201029 18:16:28.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.875" endtime="20201029 18:16:28.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.283" level="INFO">${RESULT} = [{'diff': 0.00010243000000000058}, {'diff': 0.00010291700000000098}, {'diff': 0.00010229099999999741}, {'diff': 0.00010274999999999868}, {'diff': 0.00010298599999999936}, {'diff': 0.000102278000000004...</msg>
<status status="PASS" starttime="20201029 18:16:28.274" endtime="20201029 18:16:28.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.294" level="INFO">${ACCURACY} = {'diff': [0.00010243000000000058, 0.00010291700000000098, 0.00010229099999999741, 0.00010274999999999868, 0.00010298599999999936, 0.00010227800000000425, 0.0001025410000000046, 0.00010299999999999893,...</msg>
<status status="PASS" starttime="20201029 18:16:28.285" endtime="20201029 18:16:28.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.305" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.302" endtime="20201029 18:16:28.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.310" level="INFO">VALUE: [0.00010243000000000058, 0.00010291700000000098, 0.00010229099999999741, 0.00010274999999999868, 0.00010298599999999936, 0.00010227800000000425, 0.0001025410000000046, 0.00010299999999999893, 0.00010230500000000392, 0.00010270899999999944, 0.000102513999999998, 0.00010244499999999962, 0.00010259699999999594, 0.00010261100000000245, 0.00010259699999999594, 0.00010306999999999678, 0.00010295899999999969, 0.00010234700000000263, 0.0001030559999999972, 0.00010270899999999944, 0.00010241700000000048, 0.00010252799999999757, 0.00010236099999999526, 0.00010238800000000187, 0.00010320800000000047, 0.00010265300000000116, 0.00010274999999999868, 0.0001023610000000022, 0.00010256999999999628, 0.00010263800000000212, 0.00010283300000000356, 0.00010313900000000209, 0.00010290300000000141, 0.00010240299999999397, 0.00010297199999999979, 0.00010324999999999918, 0.00010232000000000296, 0.00010313899999999515, 0.00010226399999999775, 0.0001027359999999991, 0.0001022359999999986, 0.00010258300000000331, 0.00010277699999999834, 0.00010266600000000126, 0.00010284700000000313, 0.00010258299999999637, 0.00010229200000000382, 0.00010227799999999732, 0.00010288900000000184, 0.00010297199999999979]</msg>
<status status="PASS" starttime="20201029 18:16:28.307" endtime="20201029 18:16:28.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.295" endtime="20201029 18:16:28.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.323" endtime="20201029 18:16:28.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.318" endtime="20201029 18:16:28.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.316" endtime="20201029 18:16:28.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.815" endtime="20201029 18:16:28.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.814" endtime="20201029 18:16:28.348"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.371" endtime="20201029 18:16:28.390"></status>
</kw>
<msg timestamp="20201029 18:16:28.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.367" endtime="20201029 18:16:28.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.394" endtime="20201029 18:16:28.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.400" endtime="20201029 18:16:28.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.360" endtime="20201029 18:16:28.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.354" endtime="20201029 18:16:28.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.424" endtime="20201029 18:16:28.762"></status>
</kw>
<msg timestamp="20201029 18:16:28.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040021722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.420" endtime="20201029 18:16:28.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040021722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.772" endtime="20201029 18:16:28.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.790" endtime="20201029 18:16:28.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.413" endtime="20201029 18:16:28.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.408" endtime="20201029 18:16:28.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.808" level="INFO">${RESULT} = [{'diff': 0.000104208999999994}, {'diff': 0.00010362500000000302}, {'diff': 0.00010369500000000087}, {'diff': 0.00010337500000000277}, {'diff': 0.0001035410000000056}, {'diff': 0.00010383299999999762}...</msg>
<status status="PASS" starttime="20201029 18:16:28.799" endtime="20201029 18:16:28.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.820" level="INFO">${ACCURACY} = {'diff': [0.000104208999999994, 0.00010362500000000302, 0.00010369500000000087, 0.00010337500000000277, 0.0001035410000000056, 0.00010383299999999762, 0.00010412499999999658, 0.00010352799999999857, 0...</msg>
<status status="PASS" starttime="20201029 18:16:28.811" endtime="20201029 18:16:28.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.831" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.829" endtime="20201029 18:16:28.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.836" level="INFO">VALUE: [0.000104208999999994, 0.00010362500000000302, 0.00010369500000000087, 0.00010337500000000277, 0.0001035410000000056, 0.00010383299999999762, 0.00010412499999999658, 0.00010352799999999857, 0.00010359700000000388, 0.00010402799999999907, 0.00010411099999999701, 0.00010363900000000259, 0.00010415299999999572, 0.00010380599999999796, 0.00010333300000000406, 0.00010376399999999925, 0.00010409799999999692, 0.00010324999999999918, 0.0001037360000000001, 0.00010349999999999943, 0.00010379199999999839, 0.00010334699999999669, 0.00010381999999999753, 0.00010359700000000388, 0.0001041810000000018, 0.0001038339999999971, 0.00010392999999999514, 0.00010380599999999796, 0.0001038060000000049, 0.0001040689999999983, 0.0001038610000000037, 0.00010379200000000532, 0.0001038060000000049, 0.00010427799999999932, 0.00010393100000000155, 0.00010347200000000029, 0.00010343100000000105, 0.0001041810000000018, 0.00010413899999999615, 0.00010359800000000335, 0.0001040689999999983, 0.00010354099999999866, 0.00010349999999999943, 0.00010362499999999608, 0.0001038889999999959, 0.00010361100000000345, 0.00010411199999999649, 0.00010381899999999805, 0.00010331900000000449, 0.00010390300000000241]</msg>
<status status="PASS" starttime="20201029 18:16:28.833" endtime="20201029 18:16:28.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.822" endtime="20201029 18:16:28.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.849" endtime="20201029 18:16:28.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.845" endtime="20201029 18:16:28.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.842" endtime="20201029 18:16:28.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.350" endtime="20201029 18:16:28.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.349" endtime="20201029 18:16:28.878"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.902" endtime="20201029 18:16:28.922"></status>
</kw>
<msg timestamp="20201029 18:16:28.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.899" endtime="20201029 18:16:28.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.925" endtime="20201029 18:16:28.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.932" endtime="20201029 18:16:28.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.891" endtime="20201029 18:16:28.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.886" endtime="20201029 18:16:28.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.955" endtime="20201029 18:16:29.296"></status>
</kw>
<msg timestamp="20201029 18:16:29.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045076222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045180958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.952" endtime="20201029 18:16:29.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045076222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045180958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.305" endtime="20201029 18:16:29.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.323" endtime="20201029 18:16:29.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.945" endtime="20201029 18:16:29.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.940" endtime="20201029 18:16:29.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.341" level="INFO">${RESULT} = [{'diff': 0.0001047360000000011}, {'diff': 0.00010462500000000402}, {'diff': 0.000104514}, {'diff': 0.00010441700000000248}, {'diff': 0.0001048339999999981}, {'diff': 0.00010475000000000068}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:16:29.332" endtime="20201029 18:16:29.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.350" level="INFO">${ACCURACY} = {'diff': [0.0001047360000000011, 0.00010462500000000402, 0.000104514, 0.00010441700000000248, 0.0001048339999999981, 0.00010475000000000068, 0.0001045689999999988, 0.00010484699999999819, 0.0001044310...</msg>
<status status="PASS" starttime="20201029 18:16:29.343" endtime="20201029 18:16:29.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.361" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.358" endtime="20201029 18:16:29.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.366" level="INFO">VALUE: [0.0001047360000000011, 0.00010462500000000402, 0.000104514, 0.00010441700000000248, 0.0001048339999999981, 0.00010475000000000068, 0.0001045689999999988, 0.00010484699999999819, 0.00010443100000000205, 0.00010500000000000093, 0.00010425000000000018, 0.00010473699999999364, 0.00010434699999999769, 0.0001046940000000024, 0.00010426399999999975, 0.00010518099999999586, 0.00010527800000000032, 0.00010466699999999579, 0.00010459800000000435, 0.00010440299999999597, 0.00010425000000000018, 0.00010433299999999812, 0.00010504100000000016, 0.00010500000000000093, 0.00010491699999999604, 0.00010465300000000316, 0.00010440300000000291, 0.00010502800000000007, 0.00010490299999999647, 0.00010518000000000333, 0.00010490299999999647, 0.00010508299999999887, 0.00010456999999999828, 0.00010437500000000377, 0.0001045559999999987, 0.00010452799999999957, 0.0001050140000000005, 0.00010429199999999889, 0.0001050140000000005, 0.00010522200000000204, 0.00010512499999999758, 0.00010484699999999819, 0.00010508399999999835, 0.00010504100000000016, 0.00010445800000000172, 0.000104901999999997, 0.00010445800000000172, 0.00010509699999999844, 0.0001048339999999981, 0.0001045689999999988]</msg>
<status status="PASS" starttime="20201029 18:16:29.363" endtime="20201029 18:16:29.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.352" endtime="20201029 18:16:29.369"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.379" endtime="20201029 18:16:29.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.374" endtime="20201029 18:16:29.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.372" endtime="20201029 18:16:29.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.881" endtime="20201029 18:16:29.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.879" endtime="20201029 18:16:29.404"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.436" endtime="20201029 18:16:29.468"></status>
</kw>
<msg timestamp="20201029 18:16:29.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.430" endtime="20201029 18:16:29.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.471" endtime="20201029 18:16:29.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.478" endtime="20201029 18:16:29.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.416" endtime="20201029 18:16:29.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.410" endtime="20201029 18:16:29.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.501" endtime="20201029 18:16:29.851"></status>
</kw>
<msg timestamp="20201029 18:16:29.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059180069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05928575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.498" endtime="20201029 18:16:29.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059180069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05928575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.860" endtime="20201029 18:16:29.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.878" endtime="20201029 18:16:29.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.491" endtime="20201029 18:16:29.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.486" endtime="20201029 18:16:29.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.896" level="INFO">${RESULT} = [{'diff': 0.00010568099999999636}, {'diff': 0.00010537499999999783}, {'diff': 0.00010545900000000219}, {'diff': 0.0001062360000000026}, {'diff': 0.00010579100000000091}, {'diff': 0.0001059860000000023...</msg>
<status status="PASS" starttime="20201029 18:16:29.887" endtime="20201029 18:16:29.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.905" level="INFO">${ACCURACY} = {'diff': [0.00010568099999999636, 0.00010537499999999783, 0.00010545900000000219, 0.0001062360000000026, 0.00010579100000000091, 0.00010598600000000236, 0.00010624999999999524, 0.00010534699999999869,...</msg>
<status status="PASS" starttime="20201029 18:16:29.898" endtime="20201029 18:16:29.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.915" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.913" endtime="20201029 18:16:29.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.921" level="INFO">VALUE: [0.00010568099999999636, 0.00010537499999999783, 0.00010545900000000219, 0.0001062360000000026, 0.00010579100000000091, 0.00010598600000000236, 0.00010624999999999524, 0.00010534699999999869, 0.00010530599999999946, 0.00010552700000000109, 0.00010572200000000254, 0.00010559699999999894, 0.00010581900000000005, 0.00010527800000000032, 0.00010527800000000032, 0.00010576400000000125, 0.0001058339999999991, 0.00010594399999999671, 0.00010625000000000218, 0.00010552800000000057, 0.00010540299999999697, 0.0001057089999999955, 0.00010547300000000176, 0.00010624999999999524, 0.00010540299999999697, 0.0001058339999999991, 0.0001055689999999998, 0.00010548600000000186, 0.0001055689999999998, 0.00010591599999999757, 0.0001060140000000015, 0.0001058339999999991, 0.00010627800000000132, 0.00010605499999999379, 0.00010536099999999826, 0.00010548700000000133, 0.00010540200000000444, 0.00010540300000000391, 0.00010536099999999826, 0.00010608300000000681, 0.0001053889999999974, 0.00010617999999999739, 0.00010529199999999295, 0.00010562499999999808, 0.00010563900000000459, 0.00010555600000000664, 0.00010541599999999707, 0.00010573699999999464, 0.00010527700000000084, 0.00010531899999999261]</msg>
<status status="PASS" starttime="20201029 18:16:29.918" endtime="20201029 18:16:29.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.906" endtime="20201029 18:16:29.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.935" endtime="20201029 18:16:29.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.929" endtime="20201029 18:16:29.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.926" endtime="20201029 18:16:29.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.406" endtime="20201029 18:16:29.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.405" endtime="20201029 18:16:29.960"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.984" endtime="20201029 18:16:30.005"></status>
</kw>
<msg timestamp="20201029 18:16:30.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.979" endtime="20201029 18:16:30.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.008" endtime="20201029 18:16:30.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.015" endtime="20201029 18:16:30.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.972" endtime="20201029 18:16:30.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.966" endtime="20201029 18:16:30.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.038" endtime="20201029 18:16:30.388"></status>
</kw>
<msg timestamp="20201029 18:16:30.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041190736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041297958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.035" endtime="20201029 18:16:30.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041190736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041297958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.397" endtime="20201029 18:16:30.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.415" endtime="20201029 18:16:30.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.027" endtime="20201029 18:16:30.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.023" endtime="20201029 18:16:30.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.432" level="INFO">${RESULT} = [{'diff': 0.00010722200000000404}, {'diff': 0.00010633300000000012}, {'diff': 0.00010648600000000286}, {'diff': 0.00010640200000000544}, {'diff': 0.00010650000000000243}, {'diff': 0.000106792000000001...</msg>
<status status="PASS" starttime="20201029 18:16:30.424" endtime="20201029 18:16:30.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.443" level="INFO">${ACCURACY} = {'diff': [0.00010722200000000404, 0.00010633300000000012, 0.00010648600000000286, 0.00010640200000000544, 0.00010650000000000243, 0.00010679200000000139, 0.00010702800000000207, 0.00010659699999999994...</msg>
<status status="PASS" starttime="20201029 18:16:30.435" endtime="20201029 18:16:30.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.454" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.452" endtime="20201029 18:16:30.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.459" level="INFO">VALUE: [0.00010722200000000404, 0.00010633300000000012, 0.00010648600000000286, 0.00010640200000000544, 0.00010650000000000243, 0.00010679200000000139, 0.00010702800000000207, 0.00010659699999999994, 0.00010644400000000415, 0.00010637499999999883, 0.00010693100000000455, 0.00010680500000000148, 0.00010650000000000243, 0.00010665299999999822, 0.0001072769999999959, 0.0001065690000000008, 0.00010677800000000182, 0.00010713799999999968, 0.00010652800000000157, 0.0001065560000000007, 0.00010661099999999951, 0.00010697199999999685, 0.00010676400000000225, 0.00010666700000000473, 0.00010645800000000372, 0.0001065560000000007, 0.0001063889999999984, 0.00010665299999999822, 0.00010688799999999943, 0.00010640299999999797, 0.00010637499999999883, 0.0001066810000000043, 0.00010691699999999804, 0.00010661099999999951, 0.00010652799999999463, 0.00010640299999999797, 0.00010669500000000387, 0.00010634699999999969, 0.00010716700000000523, 0.00010727800000000232, 0.00010683300000000062, 0.00010640300000000491, 0.00010725000000000318, 0.00010666699999999779, 0.00010661099999999951, 0.00010687499999999933, 0.00010636099999999926, 0.00010700000000000293, 0.0001065690000000008, 0.00010701399999999556]</msg>
<status status="PASS" starttime="20201029 18:16:30.456" endtime="20201029 18:16:30.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.445" endtime="20201029 18:16:30.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.472" endtime="20201029 18:16:30.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.467" endtime="20201029 18:16:30.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.465" endtime="20201029 18:16:30.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.962" endtime="20201029 18:16:30.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.961" endtime="20201029 18:16:30.497"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.520" endtime="20201029 18:16:30.539"></status>
</kw>
<msg timestamp="20201029 18:16:30.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.516" endtime="20201029 18:16:30.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.543" endtime="20201029 18:16:30.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.549" endtime="20201029 18:16:30.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.509" endtime="20201029 18:16:30.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.504" endtime="20201029 18:16:30.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.572" endtime="20201029 18:16:30.922"></status>
</kw>
<msg timestamp="20201029 18:16:30.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040002639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.569" endtime="20201029 18:16:30.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040002639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040110056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.931" endtime="20201029 18:16:30.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.949" endtime="20201029 18:16:30.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.562" endtime="20201029 18:16:30.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.557" endtime="20201029 18:16:30.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.966" level="INFO">${RESULT} = [{'diff': 0.00010741699999999854}, {'diff': 0.0001082219999999981}, {'diff': 0.0001078889999999999}, {'diff': 0.000107514000000003}, {'diff': 0.00010797199999999785}, {'diff': 0.00010744399999999821},...</msg>
<status status="PASS" starttime="20201029 18:16:30.957" endtime="20201029 18:16:30.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.977" level="INFO">${ACCURACY} = {'diff': [0.00010741699999999854, 0.0001082219999999981, 0.0001078889999999999, 0.000107514000000003, 0.00010797199999999785, 0.00010744399999999821, 0.00010777800000000282, 0.00010802699999999665, 0....</msg>
<status status="PASS" starttime="20201029 18:16:30.968" endtime="20201029 18:16:30.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.988" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.986" endtime="20201029 18:16:30.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.993" level="INFO">VALUE: [0.00010741699999999854, 0.0001082219999999981, 0.0001078889999999999, 0.000107514000000003, 0.00010797199999999785, 0.00010744399999999821, 0.00010777800000000282, 0.00010802699999999665, 0.00010820799999999853, 0.00010741699999999854, 0.00010747200000000429, 0.00010769499999999793, 0.00010795799999999828, 0.00010740299999999897, 0.0001075690000000018, 0.00010740299999999897, 0.00010777800000000282, 0.00010823599999999767, 0.00010748600000000386, 0.00010733300000000112, 0.00010783300000000162, 0.0001078889999999999, 0.00010733300000000112, 0.00010824999999999724, 0.00010736100000000026, 0.00010798600000000436, 0.00010783299999999468, 0.00010833299999999518, 0.00010792999999999914, 0.00010779199999999545, 0.00010779100000000291, 0.0001077360000000041, 0.00010794499999999818, 0.0001074019999999995, 0.00010802699999999665, 0.00010809700000000144, 0.00010752800000000257, 0.00010740299999999897, 0.00010781900000000205, 0.00010811100000000101, 0.00010772200000000454, 0.00010812499999999364, 0.0001078889999999999, 0.00010733300000000112, 0.00010787500000000033, 0.00010763899999999965, 0.0001078889999999999, 0.00010740299999999897, 0.00010793000000000608, 0.00010811100000000101]</msg>
<status status="PASS" starttime="20201029 18:16:30.990" endtime="20201029 18:16:30.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.979" endtime="20201029 18:16:30.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.006" endtime="20201029 18:16:31.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.002" endtime="20201029 18:16:31.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.999" endtime="20201029 18:16:31.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.499" endtime="20201029 18:16:31.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.498" endtime="20201029 18:16:31.031"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.054" endtime="20201029 18:16:31.075"></status>
</kw>
<msg timestamp="20201029 18:16:31.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.050" endtime="20201029 18:16:31.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.078" endtime="20201029 18:16:31.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.084" endtime="20201029 18:16:31.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.043" endtime="20201029 18:16:31.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.037" endtime="20201029 18:16:31.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.108" endtime="20201029 18:16:31.458"></status>
</kw>
<msg timestamp="20201029 18:16:31.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039508181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039617069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.104" endtime="20201029 18:16:31.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039508181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039617069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.467" endtime="20201029 18:16:31.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.485" endtime="20201029 18:16:31.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.097" endtime="20201029 18:16:31.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.092" endtime="20201029 18:16:31.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.502" level="INFO">${RESULT} = [{'diff': 0.00010888799999999449}, {'diff': 0.00010836100000000126}, {'diff': 0.00010915300000000072}, {'diff': 0.00010901399999999756}, {'diff': 0.00010850000000000443}, {'diff': 0.000109139000000001...</msg>
<status status="PASS" starttime="20201029 18:16:31.493" endtime="20201029 18:16:31.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.511" level="INFO">${ACCURACY} = {'diff': [0.00010888799999999449, 0.00010836100000000126, 0.00010915300000000072, 0.00010901399999999756, 0.00010850000000000443, 0.00010913900000000115, 0.00010902800000000407, 0.00010900000000000493...</msg>
<status status="PASS" starttime="20201029 18:16:31.504" endtime="20201029 18:16:31.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.522" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.520" endtime="20201029 18:16:31.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.527" level="INFO">VALUE: [0.00010888799999999449, 0.00010836100000000126, 0.00010915300000000072, 0.00010901399999999756, 0.00010850000000000443, 0.00010913900000000115, 0.00010902800000000407, 0.00010900000000000493, 0.0001085419999999962, 0.00010852800000000357, 0.00010923599999999867, 0.00010911100000000201, 0.00010865300000000022, 0.00010837500000000083, 0.00010908300000000287, 0.00010834699999999475, 0.00010884700000000219, 0.00010879099999999697, 0.0001092219999999991, 0.00010854099999999672, 0.00010877799999999688, 0.00010879199999999645, 0.00010870799999999903, 0.00010902800000000407, 0.00010912500000000158, 0.00010897199999999885, 0.000108514000000004, 0.00010908300000000287, 0.0001088890000000009, 0.00010906999999999584, 0.00010915300000000072, 0.00010844399999999921, 0.0001090690000000033, 0.00010869399999999946, 0.00010836100000000126, 0.00010869499999999893, 0.00010915300000000072, 0.00010825000000000418, 0.00010902799999999713, 0.00010827799999999638, 0.00010862500000000108, 0.0001090560000000032, 0.00010844499999999868, 0.0001092219999999991, 0.00010837500000000083, 0.00010873599999999817, 0.00010869399999999946, 0.00010915300000000072, 0.000109208999999999, 0.00010826400000000375]</msg>
<status status="PASS" starttime="20201029 18:16:31.524" endtime="20201029 18:16:31.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.513" endtime="20201029 18:16:31.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.540" endtime="20201029 18:16:31.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.535" endtime="20201029 18:16:31.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.533" endtime="20201029 18:16:31.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.033" endtime="20201029 18:16:31.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.032" endtime="20201029 18:16:31.565"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.587" endtime="20201029 18:16:31.609"></status>
</kw>
<msg timestamp="20201029 18:16:31.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.584" endtime="20201029 18:16:31.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.612" endtime="20201029 18:16:31.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.618" endtime="20201029 18:16:31.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.577" endtime="20201029 18:16:31.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.571" endtime="20201029 18:16:31.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.642" endtime="20201029 18:16:31.985"></status>
</kw>
<msg timestamp="20201029 18:16:31.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041381861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041492028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.638" endtime="20201029 18:16:31.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041381861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041492028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.994" endtime="20201029 18:16:32.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.012" endtime="20201029 18:16:32.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.631" endtime="20201029 18:16:32.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.626" endtime="20201029 18:16:32.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.029" level="INFO">${RESULT} = [{'diff': 0.00011016700000000129}, {'diff': 0.00011025000000000618}, {'diff': 0.00011016699999999435}, {'diff': 0.00011023599999999967}, {'diff': 0.00010970800000000003}, {'diff': 0.000109903000000001...</msg>
<status status="PASS" starttime="20201029 18:16:32.021" endtime="20201029 18:16:32.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.038" level="INFO">${ACCURACY} = {'diff': [0.00011016700000000129, 0.00011025000000000618, 0.00011016699999999435, 0.00011023599999999967, 0.00010970800000000003, 0.00010990300000000147, 0.0001100549999999978, 0.00010936100000000226,...</msg>
<status status="PASS" starttime="20201029 18:16:32.031" endtime="20201029 18:16:32.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.049" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.047" endtime="20201029 18:16:32.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.054" level="INFO">VALUE: [0.00011016700000000129, 0.00011025000000000618, 0.00011016699999999435, 0.00011023599999999967, 0.00010970800000000003, 0.00010990300000000147, 0.0001100549999999978, 0.00010936100000000226, 0.0001097089999999995, 0.0001100549999999978, 0.00011006899999999736, 0.00010936099999999532, 0.00010983299999999668, 0.00010941700000000054, 0.00011020800000000053, 0.00010966600000000132, 0.00010956999999999634, 0.00010962500000000208, 0.0001097219999999996, 0.00010976399999999831, 0.00011012499999999564, 0.00010976399999999831, 0.00010987499999999539, 0.00010952799999999763, 0.00010933399999999566, 0.00010995800000000028, 0.00010962499999999514, 0.0001097769999999984, 0.00010969400000000046, 0.00010949999999999849, 0.00011011100000000301, 0.00011023599999999967, 0.00010951399999999806, 0.00010959700000000294, 0.00010984700000000319, 0.00010997199999999985, 0.00010958300000000337, 0.00010995899999999975, 0.00011018100000000086, 0.0001098890000000019, 0.00011019400000000096, 0.00010972299999999907, 0.00010977799999999788, 0.00011008399999999641, 0.0001094020000000015, 0.00011015300000000172, 0.00010949999999999849, 0.00010951399999999806, 0.00010951399999999806, 0.00010962500000000208]</msg>
<status status="PASS" starttime="20201029 18:16:32.051" endtime="20201029 18:16:32.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.040" endtime="20201029 18:16:32.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.068" endtime="20201029 18:16:32.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.063" endtime="20201029 18:16:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.060" endtime="20201029 18:16:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.567" endtime="20201029 18:16:32.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.566" endtime="20201029 18:16:32.093"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.116" endtime="20201029 18:16:32.138"></status>
</kw>
<msg timestamp="20201029 18:16:32.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.113" endtime="20201029 18:16:32.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.141" endtime="20201029 18:16:32.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.147" endtime="20201029 18:16:32.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.106" endtime="20201029 18:16:32.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.100" endtime="20201029 18:16:32.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.171" endtime="20201029 18:16:32.518"></status>
</kw>
<msg timestamp="20201029 18:16:32.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039862681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039973764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.167" endtime="20201029 18:16:32.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039862681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039973764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.527" endtime="20201029 18:16:32.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.545" endtime="20201029 18:16:32.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.160" endtime="20201029 18:16:32.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.155" endtime="20201029 18:16:32.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.562" level="INFO">${RESULT} = [{'diff': 0.00011108300000000487}, {'diff': 0.00011061099999999657}, {'diff': 0.0001110969999999975}, {'diff': 0.00011116600000000282}, {'diff': 0.00011034800000000317}, {'diff': 0.0001110689999999983...</msg>
<status status="PASS" starttime="20201029 18:16:32.554" endtime="20201029 18:16:32.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.573" level="INFO">${ACCURACY} = {'diff': [0.00011108300000000487, 0.00011061099999999657, 0.0001110969999999975, 0.00011116600000000282, 0.00011034800000000317, 0.00011106899999999836, 0.00011074999999999974, 0.00011102699999999965,...</msg>
<status status="PASS" starttime="20201029 18:16:32.565" endtime="20201029 18:16:32.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.584" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.582" endtime="20201029 18:16:32.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.589" level="INFO">VALUE: [0.00011108300000000487, 0.00011061099999999657, 0.0001110969999999975, 0.00011116600000000282, 0.00011034800000000317, 0.00011106899999999836, 0.00011074999999999974, 0.00011102699999999965, 0.00011036100000000326, 0.00011094499999999424, 0.0001104299999999947, 0.00011083300000000462, 0.00011052799999999863, 0.00011120800000000153, 0.00011076399999999931, 0.0001103890000000024, 0.00011098600000000042, 0.00011093100000000161, 0.00011123600000000067, 0.00011077800000000582, 0.00011099999999999999, 0.00011106999999999784, 0.00011086100000000376, 0.00011119500000000143, 0.00011074999999999974, 0.00011106899999999836, 0.00011076399999999931, 0.00011052699999999915, 0.0001107090000000005, 0.00011073600000000017, 0.00011130499999999904, 0.00011102799999999913, 0.00011116700000000229, 0.00011123600000000067, 0.0001108340000000041, 0.00011040300000000197, 0.00011079100000000591, 0.0001108619999999963, 0.0001104020000000025, 0.00011068000000000189, 0.00011108399999999741, 0.00011063900000000265, 0.0001107769999999994, 0.00011095900000000075, 0.00011132000000000503, 0.00011036100000000326, 0.00011036099999999632, 0.00011066700000000179, 0.00011051399999999906, 0.00011120800000000153]</msg>
<status status="PASS" starttime="20201029 18:16:32.586" endtime="20201029 18:16:32.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.575" endtime="20201029 18:16:32.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.636" endtime="20201029 18:16:32.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.632" endtime="20201029 18:16:32.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.629" endtime="20201029 18:16:32.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.096" endtime="20201029 18:16:32.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.094" endtime="20201029 18:16:32.661"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.684" endtime="20201029 18:16:32.705"></status>
</kw>
<msg timestamp="20201029 18:16:32.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.681" endtime="20201029 18:16:32.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.709" endtime="20201029 18:16:32.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.715" endtime="20201029 18:16:32.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.673" endtime="20201029 18:16:32.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.668" endtime="20201029 18:16:32.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.738" endtime="20201029 18:16:33.086"></status>
</kw>
<msg timestamp="20201029 18:16:33.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039684722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039796333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.735" endtime="20201029 18:16:33.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039684722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039796333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.095" endtime="20201029 18:16:33.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.113" endtime="20201029 18:16:33.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.728" endtime="20201029 18:16:33.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.723" endtime="20201029 18:16:33.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.130" level="INFO">${RESULT} = [{'diff': 0.00011161100000000451}, {'diff': 0.00011190300000000347}, {'diff': 0.00011181899999999911}, {'diff': 0.00011131900000000555}, {'diff': 0.00011219399999999602}, {'diff': 0.000111917000000003...</msg>
<status status="PASS" starttime="20201029 18:16:33.121" endtime="20201029 18:16:33.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.141" level="INFO">${ACCURACY} = {'diff': [0.00011161100000000451, 0.00011190300000000347, 0.00011181899999999911, 0.00011131900000000555, 0.00011219399999999602, 0.00011191700000000304, 0.00011156899999999886, 0.00011195900000000175...</msg>
<status status="PASS" starttime="20201029 18:16:33.132" endtime="20201029 18:16:33.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.152" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.149" endtime="20201029 18:16:33.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.157" level="INFO">VALUE: [0.00011161100000000451, 0.00011190300000000347, 0.00011181899999999911, 0.00011131900000000555, 0.00011219399999999602, 0.00011191700000000304, 0.00011156899999999886, 0.00011195900000000175, 0.00011198600000000142, 0.00011133300000000512, 0.00011151300000000058, 0.0001117220000000016, 0.00011175000000000074, 0.00011133300000000512, 0.00011184799999999773, 0.00011133300000000512, 0.00011159700000000494, 0.0001122220000000021, 0.00011151400000000006, 0.00011154099999999972, 0.0001112220000000011, 0.0001114020000000035, 0.00011200000000000099, 0.00011152700000000015, 0.00011186100000000476, 0.00011226400000000081, 0.0001120419999999997, 0.00011201299999999415, 0.00011165299999999628, 0.00011180499999999954, 0.00011200000000000099, 0.00011216700000000329, 0.00011176400000000031, 0.0001115549999999993, 0.00011183299999999868, 0.0001117220000000016, 0.00011176400000000031, 0.00011225000000000124, 0.00011180499999999954, 0.00011201400000000056, 0.00011188799999999749, 0.00011184700000000519, 0.00011200000000000099, 0.0001115549999999993, 0.00011229199999999995, 0.00011158399999999791, 0.00011165300000000322, 0.00011137499999999689, 0.000112209000000002, 0.00011187499999999739]</msg>
<status status="PASS" starttime="20201029 18:16:33.154" endtime="20201029 18:16:33.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.142" endtime="20201029 18:16:33.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.170" endtime="20201029 18:16:33.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.165" endtime="20201029 18:16:33.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.163" endtime="20201029 18:16:33.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.663" endtime="20201029 18:16:33.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.662" endtime="20201029 18:16:33.195"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.217" endtime="20201029 18:16:33.237"></status>
</kw>
<msg timestamp="20201029 18:16:33.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.214" endtime="20201029 18:16:33.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.240" endtime="20201029 18:16:33.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.246" endtime="20201029 18:16:33.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.207" endtime="20201029 18:16:33.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.201" endtime="20201029 18:16:33.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.270" endtime="20201029 18:16:33.624"></status>
</kw>
<msg timestamp="20201029 18:16:33.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039559875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039672097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.266" endtime="20201029 18:16:33.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039559875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039672097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.633" endtime="20201029 18:16:33.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.651" endtime="20201029 18:16:33.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.259" endtime="20201029 18:16:33.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.254" endtime="20201029 18:16:33.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.668" level="INFO">${RESULT} = [{'diff': 0.0001122220000000021}, {'diff': 0.00011262500000000508}, {'diff': 0.0001127770000000014}, {'diff': 0.0001129169999999971}, {'diff': 0.00011233399999999866}, {'diff': 0.00011273599999999523}...</msg>
<status status="PASS" starttime="20201029 18:16:33.660" endtime="20201029 18:16:33.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.678" level="INFO">${ACCURACY} = {'diff': [0.0001122220000000021, 0.00011262500000000508, 0.0001127770000000014, 0.0001129169999999971, 0.00011233399999999866, 0.00011273599999999523, 0.00011215299999999678, 0.00011297199999999591, 0...</msg>
<status status="PASS" starttime="20201029 18:16:33.671" endtime="20201029 18:16:33.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.689" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.686" endtime="20201029 18:16:33.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.694" level="INFO">VALUE: [0.0001122220000000021, 0.00011262500000000508, 0.0001127770000000014, 0.0001129169999999971, 0.00011233399999999866, 0.00011273599999999523, 0.00011215299999999678, 0.00011297199999999591, 0.00011295800000000328, 0.00011301399999999462, 0.00011279200000000045, 0.00011236099999999832, 0.00011306999999999984, 0.00011261099999999857, 0.00011223600000000167, 0.00011277800000000088, 0.00011288899999999796, 0.00011319400000000396, 0.000112596999999999, 0.00011262499999999814, 0.00011229199999999995, 0.00011301300000000208, 0.00011240299999999703, 0.00011252800000000063, 0.00011261099999999857, 0.00011258299999999943, 0.00011241600000000407, 0.00011315299999999778, 0.00011298599999999548, 0.0001124299999999967, 0.00011234700000000569, 0.00011243099999999617, 0.00011258299999999943, 0.00011245800000000278, 0.00011237500000000483, 0.00011315299999999778, 0.00011263799999999824, 0.00011270800000000303, 0.00011230599999999952, 0.0001127220000000026, 0.00011248600000000192, 0.00011243099999999617, 0.00011312500000000558, 0.00011286099999999882, 0.0001125420000000002, 0.00011297199999999591, 0.00011312499999999864, 0.00011312499999999864, 0.0001130550000000008, 0.00011281999999999959]</msg>
<status status="PASS" starttime="20201029 18:16:33.691" endtime="20201029 18:16:33.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.679" endtime="20201029 18:16:33.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.707" endtime="20201029 18:16:33.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.702" endtime="20201029 18:16:33.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.700" endtime="20201029 18:16:33.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.197" endtime="20201029 18:16:33.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.195" endtime="20201029 18:16:33.732"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.755" endtime="20201029 18:16:33.776"></status>
</kw>
<msg timestamp="20201029 18:16:33.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.751" endtime="20201029 18:16:33.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.780" endtime="20201029 18:16:33.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.786" endtime="20201029 18:16:33.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.744" endtime="20201029 18:16:33.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.738" endtime="20201029 18:16:33.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.810" endtime="20201029 18:16:34.149"></status>
</kw>
<msg timestamp="20201029 18:16:34.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041630569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041743722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.807" endtime="20201029 18:16:34.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041630569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041743722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.158" endtime="20201029 18:16:34.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.177" endtime="20201029 18:16:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.799" endtime="20201029 18:16:34.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.794" endtime="20201029 18:16:34.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.194" level="INFO">${RESULT} = [{'diff': 0.00011315299999999778}, {'diff': 0.000113597}, {'diff': 0.00011411100000000007}, {'diff': 0.00011362499999999914}, {'diff': 0.00011318000000000439}, {'diff': 0.00011409799999999998}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:16:34.185" endtime="20201029 18:16:34.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.203" level="INFO">${ACCURACY} = {'diff': [0.00011315299999999778, 0.000113597, 0.00011411100000000007, 0.00011362499999999914, 0.00011318000000000439, 0.00011409799999999998, 0.00011352700000000215, 0.00011351399999999512, 0.0001134...</msg>
<status status="PASS" starttime="20201029 18:16:34.196" endtime="20201029 18:16:34.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.214" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.212" endtime="20201029 18:16:34.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.219" level="INFO">VALUE: [0.00011315299999999778, 0.000113597, 0.00011411100000000007, 0.00011362499999999914, 0.00011318000000000439, 0.00011409799999999998, 0.00011352700000000215, 0.00011351399999999512, 0.00011345799999999684, 0.00011333399999999966, 0.00011370800000000403, 0.0001137499999999958, 0.00011352699999999522, 0.00011347200000000335, 0.0001140970000000005, 0.00011423599999999673, 0.00011326400000000181, 0.00011348599999999598, 0.00011345800000000378, 0.00011402800000000213, 0.00011320800000000353, 0.00011384700000000025, 0.00011419400000000496, 0.00011333300000000018, 0.00011320799999999659, 0.0001138749999999994, 0.00011344399999999727, 0.00011395900000000375, 0.00011413899999999921, 0.00011375000000000274, 0.00011368000000000489, 0.00011348699999999545, 0.00011344499999999674, 0.00011373599999999623, 0.0001135420000000012, 0.00011347200000000335, 0.00011432000000000109, 0.0001133619999999988, 0.00011411100000000007, 0.00011429099999999554, 0.00011362499999999914, 0.00011423599999999673, 0.00011408400000000041, 0.0001135420000000012, 0.00011347199999999641, 0.00011416599999999888, 0.00011422199999999716, 0.00011362499999999914, 0.00011413899999999921, 0.00011387500000000633]</msg>
<status status="PASS" starttime="20201029 18:16:34.216" endtime="20201029 18:16:34.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.205" endtime="20201029 18:16:34.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.234" endtime="20201029 18:16:34.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.228" endtime="20201029 18:16:34.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.225" endtime="20201029 18:16:34.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.734" endtime="20201029 18:16:34.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.733" endtime="20201029 18:16:34.259"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.282" endtime="20201029 18:16:34.302"></status>
</kw>
<msg timestamp="20201029 18:16:34.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.278" endtime="20201029 18:16:34.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.305" endtime="20201029 18:16:34.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.312" endtime="20201029 18:16:34.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.271" endtime="20201029 18:16:34.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.265" endtime="20201029 18:16:34.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.335" endtime="20201029 18:16:34.675"></status>
</kw>
<msg timestamp="20201029 18:16:34.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040129931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040244722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.332" endtime="20201029 18:16:34.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040129931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040244722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.684" endtime="20201029 18:16:34.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.702" endtime="20201029 18:16:34.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.324" endtime="20201029 18:16:34.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.320" endtime="20201029 18:16:34.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.719" level="INFO">${RESULT} = [{'diff': 0.00011479099999999604}, {'diff': 0.00011522199999999816}, {'diff': 0.0001143749999999999}, {'diff': 0.00011449999999999655}, {'diff': 0.00011455600000000177}, {'diff': 0.0001144450000000046...</msg>
<status status="PASS" starttime="20201029 18:16:34.711" endtime="20201029 18:16:34.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.734" level="INFO">${ACCURACY} = {'diff': [0.00011479099999999604, 0.00011522199999999816, 0.0001143749999999999, 0.00011449999999999655, 0.00011455600000000177, 0.00011444500000000468, 0.00011447300000000382, 0.0001142220000000041, ...</msg>
<status status="PASS" starttime="20201029 18:16:34.721" endtime="20201029 18:16:34.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.745" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.743" endtime="20201029 18:16:34.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.751" level="INFO">VALUE: [0.00011479099999999604, 0.00011522199999999816, 0.0001143749999999999, 0.00011449999999999655, 0.00011455600000000177, 0.00011444500000000468, 0.00011447300000000382, 0.0001142220000000041, 0.00011454100000000272, 0.00011486099999999388, 0.0001150970000000015, 0.00011468099999999842, 0.00011468099999999842, 0.0001145420000000022, 0.0001152220000000051, 0.00011499999999999705, 0.0001148049999999956, 0.00011530599999999558, 0.00011430600000000152, 0.00011438899999999946, 0.00011465299999999928, 0.00011533400000000166, 0.00011444399999999827, 0.00011470799999999809, 0.00011499999999999705, 0.00011465299999999928, 0.00011445799999999784, 0.00011519499999999849, 0.00011468100000000536, 0.00011493100000000561, 0.00011463899999999971, 0.00011462500000000014, 0.00011468100000000536, 0.00011461100000000057, 0.00011441700000000554, 0.00011479200000000245, 0.00011495799999999834, 0.00011522199999999816, 0.00011456900000000186, 0.00011444499999999774, 0.00011434699999999381, 0.00011504199999999576, 0.0001144299999999987, 0.0001148750000000004, 0.00011526399999999687, 0.00011511100000000107, 0.0001145420000000022, 0.00011438899999999946, 0.00011502800000000313, 0.00011480600000000202]</msg>
<status status="PASS" starttime="20201029 18:16:34.748" endtime="20201029 18:16:34.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.736" endtime="20201029 18:16:34.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.763" endtime="20201029 18:16:34.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.759" endtime="20201029 18:16:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.757" endtime="20201029 18:16:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.261" endtime="20201029 18:16:34.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.260" endtime="20201029 18:16:34.788"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.812" endtime="20201029 18:16:34.832"></status>
</kw>
<msg timestamp="20201029 18:16:34.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.808" endtime="20201029 18:16:34.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.835" endtime="20201029 18:16:34.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.841" endtime="20201029 18:16:34.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.801" endtime="20201029 18:16:34.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.795" endtime="20201029 18:16:34.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.865" endtime="20201029 18:16:35.219"></status>
</kw>
<msg timestamp="20201029 18:16:35.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040008111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040123792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.861" endtime="20201029 18:16:35.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040008111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040123792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.228" endtime="20201029 18:16:35.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.246" endtime="20201029 18:16:35.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.854" endtime="20201029 18:16:35.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.849" endtime="20201029 18:16:35.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.263" level="INFO">${RESULT} = [{'diff': 0.00011568099999999942}, {'diff': 0.00011557000000000234}, {'diff': 0.00011547199999999841}, {'diff': 0.00011619499999999949}, {'diff': 0.00011565300000000028}, {'diff': 0.000115666999999999...</msg>
<status status="PASS" starttime="20201029 18:16:35.255" endtime="20201029 18:16:35.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.348" level="INFO">${ACCURACY} = {'diff': [0.00011568099999999942, 0.00011557000000000234, 0.00011547199999999841, 0.00011619499999999949, 0.00011565300000000028, 0.00011566699999999985, 0.00011597299999999838, 0.00011559699999999506...</msg>
<status status="PASS" starttime="20201029 18:16:35.266" endtime="20201029 18:16:35.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.359" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.357" endtime="20201029 18:16:35.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.365" level="INFO">VALUE: [0.00011568099999999942, 0.00011557000000000234, 0.00011547199999999841, 0.00011619499999999949, 0.00011565300000000028, 0.00011566699999999985, 0.00011597299999999838, 0.00011559699999999506, 0.0001158750000000014, 0.00011536099999999438, 0.00011576300000000483, 0.00011611100000000207, 0.00011584700000000225, 0.00011606899999999643, 0.00011597200000000585, 0.00011572299999999813, 0.00011586099999999488, 0.00011573599999999823, 0.00011570899999999856, 0.0001158049999999966, 0.00011599999999999805, 0.00011609699999999556, 0.00011599999999999805, 0.00011551399999999712, 0.0001159170000000001, 0.00011526300000000433, 0.00011593099999999967, 0.00011609699999999556, 0.00011550000000000449, 0.00011547199999999841, 0.00011630600000000352, 0.00011606899999999643, 0.00011513900000000021, 0.00011584800000000173, 0.0001158750000000014, 0.00011575000000000474, 0.00011602799999999719, 0.00011613900000000121, 0.00011558400000000191, 0.00011572199999999866, 0.00011599999999999805, 0.00011590300000000053, 0.0001158750000000014, 0.00011590300000000053, 0.0001158750000000014, 0.00011551399999999712, 0.00011576399999999737, 0.00011582000000000259, 0.00011598599999999848, 0.0001157499999999978]</msg>
<status status="PASS" starttime="20201029 18:16:35.362" endtime="20201029 18:16:35.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.350" endtime="20201029 18:16:35.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.377" endtime="20201029 18:16:35.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.373" endtime="20201029 18:16:35.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.371" endtime="20201029 18:16:35.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.791" endtime="20201029 18:16:35.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.789" endtime="20201029 18:16:35.403"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.426" endtime="20201029 18:16:35.448"></status>
</kw>
<msg timestamp="20201029 18:16:35.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.422" endtime="20201029 18:16:35.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.452" endtime="20201029 18:16:35.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.458" endtime="20201029 18:16:35.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.415" endtime="20201029 18:16:35.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.409" endtime="20201029 18:16:35.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.482" endtime="20201029 18:16:35.833"></status>
</kw>
<msg timestamp="20201029 18:16:35.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041213625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041330722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.479" endtime="20201029 18:16:35.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041213625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041330722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.842" endtime="20201029 18:16:35.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.860" endtime="20201029 18:16:35.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.471" endtime="20201029 18:16:35.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.467" endtime="20201029 18:16:35.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.877" level="INFO">${RESULT} = [{'diff': 0.0001170970000000035}, {'diff': 0.00011712500000000264}, {'diff': 0.00011670899999999956}, {'diff': 0.00011680599999999708}, {'diff': 0.00011662500000000214}, {'diff': 0.0001169299999999942...</msg>
<status status="PASS" starttime="20201029 18:16:35.869" endtime="20201029 18:16:35.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.887" level="INFO">${ACCURACY} = {'diff': [0.0001170970000000035, 0.00011712500000000264, 0.00011670899999999956, 0.00011680599999999708, 0.00011662500000000214, 0.00011692999999999426, 0.00011698599999999948, 0.00011655599999999683,...</msg>
<status status="PASS" starttime="20201029 18:16:35.880" endtime="20201029 18:16:35.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.897" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.895" endtime="20201029 18:16:35.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.904" level="INFO">VALUE: [0.0001170970000000035, 0.00011712500000000264, 0.00011670899999999956, 0.00011680599999999708, 0.00011662500000000214, 0.00011692999999999426, 0.00011698599999999948, 0.00011655599999999683, 0.00011720800000000059, 0.0001163750000000019, 0.00011658400000000291, 0.00011681900000000411, 0.00011634699999999581, 0.0001163750000000019, 0.00011641600000000113, 0.00011676399999999837, 0.00011636100000000232, 0.00011713900000000221, 0.0001164300000000007, 0.00011715300000000178, 0.00011657000000000334, 0.00011619400000000002, 0.00011629199999999701, 0.00011638899999999452, 0.00011677799999999794, 0.0001166249999999952, 0.00011648599999999898, 0.00011654199999999726, 0.00011699999999999905, 0.00011718100000000092, 0.0001165829999999965, 0.0001169170000000011, 0.00011654099999999779, 0.00011705499999999786, 0.00011649999999999855, 0.00011690300000000153, 0.00011666700000000085, 0.00011698599999999948, 0.00011620799999999959, 0.0001169300000000012, 0.00011676399999999837, 0.00011694500000000024, 0.0001163750000000019, 0.00011652800000000463, 0.00011629199999999701, 0.00011633399999999572, 0.00011651399999999812, 0.00011626400000000481, 0.0001161249999999947, 0.00011677799999999794]</msg>
<status status="PASS" starttime="20201029 18:16:35.900" endtime="20201029 18:16:35.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.888" endtime="20201029 18:16:35.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.917" endtime="20201029 18:16:35.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.912" endtime="20201029 18:16:35.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.910" endtime="20201029 18:16:35.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.405" endtime="20201029 18:16:35.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.404" endtime="20201029 18:16:35.942"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.965" endtime="20201029 18:16:35.985"></status>
</kw>
<msg timestamp="20201029 18:16:35.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.962" endtime="20201029 18:16:35.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.988" endtime="20201029 18:16:35.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.995" endtime="20201029 18:16:35.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.954" endtime="20201029 18:16:36.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.948" endtime="20201029 18:16:36.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.018" endtime="20201029 18:16:36.358"></status>
</kw>
<msg timestamp="20201029 18:16:36.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040147153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.015" endtime="20201029 18:16:36.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040147153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040265264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.368" endtime="20201029 18:16:36.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.386" endtime="20201029 18:16:36.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.008" endtime="20201029 18:16:36.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.003" endtime="20201029 18:16:36.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.403" level="INFO">${RESULT} = [{'diff': 0.00011811100000000407}, {'diff': 0.00011802799999999919}, {'diff': 0.00011782000000000459}, {'diff': 0.00011788900000000296}, {'diff': 0.00011755599999999783}, {'diff': 0.000117709000000000...</msg>
<status status="PASS" starttime="20201029 18:16:36.394" endtime="20201029 18:16:36.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.414" level="INFO">${ACCURACY} = {'diff': [0.00011811100000000407, 0.00011802799999999919, 0.00011782000000000459, 0.00011788900000000296, 0.00011755599999999783, 0.00011770900000000056, 0.0001181249999999967, 0.00011794399999999483,...</msg>
<status status="PASS" starttime="20201029 18:16:36.405" endtime="20201029 18:16:36.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.425" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.422" endtime="20201029 18:16:36.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.430" level="INFO">VALUE: [0.00011811100000000407, 0.00011802799999999919, 0.00011782000000000459, 0.00011788900000000296, 0.00011755599999999783, 0.00011770900000000056, 0.0001181249999999967, 0.00011794399999999483, 0.000117695000000001, 0.00011802799999999919, 0.00011743100000000117, 0.00011767999999999501, 0.00011751399999999912, 0.00011723599999999973, 0.00011800000000000005, 0.00011770900000000056, 0.00011780500000000554, 0.0001179170000000021, 0.00011766700000000185, 0.00011743099999999423, 0.00011763800000000324, 0.00011788899999999602, 0.0001173750000000029, 0.00011736099999999638, 0.00011755499999999836, 0.00011726399999999887, 0.00011729099999999854, 0.00011727800000000538, 0.00011827799999999944, 0.00011723599999999973, 0.00011747200000000041, 0.00011826399999999987, 0.0001179170000000021, 0.00011743100000000117, 0.00011798600000000048, 0.00011740300000000203, 0.00011819399999999508, 0.00011794400000000177, 0.00011826399999999987, 0.000117597000000004, 0.0001175829999999975, 0.00011783400000000416, 0.00011773600000000023, 0.00011776399999999937, 0.00011788900000000296, 0.00011779099999999904, 0.00011763900000000271, 0.0001176249999999962, 0.00011805599999999833, 0.00011816700000000235]</msg>
<status status="PASS" starttime="20201029 18:16:36.427" endtime="20201029 18:16:36.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.415" endtime="20201029 18:16:36.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.443" endtime="20201029 18:16:36.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.438" endtime="20201029 18:16:36.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.436" endtime="20201029 18:16:36.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.944" endtime="20201029 18:16:36.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.943" endtime="20201029 18:16:36.468"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.491" endtime="20201029 18:16:36.511"></status>
</kw>
<msg timestamp="20201029 18:16:36.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.487" endtime="20201029 18:16:36.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.514" endtime="20201029 18:16:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.521" endtime="20201029 18:16:36.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.480" endtime="20201029 18:16:36.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.474" endtime="20201029 18:16:36.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.544" endtime="20201029 18:16:36.883"></status>
</kw>
<msg timestamp="20201029 18:16:36.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040042111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040160944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.541" endtime="20201029 18:16:36.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040042111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040160944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.892" endtime="20201029 18:16:36.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.910" endtime="20201029 18:16:36.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.533" endtime="20201029 18:16:36.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.529" endtime="20201029 18:16:36.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.927" level="INFO">${RESULT} = [{'diff': 0.00011883299999999875}, {'diff': 0.00011823600000000073}, {'diff': 0.00011923600000000173}, {'diff': 0.00011819400000000202}, {'diff': 0.00011883399999999822}, {'diff': 0.000118596999999998...</msg>
<status status="PASS" starttime="20201029 18:16:36.918" endtime="20201029 18:16:36.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.938" level="INFO">${ACCURACY} = {'diff': [0.00011883299999999875, 0.00011823600000000073, 0.00011923600000000173, 0.00011819400000000202, 0.00011883399999999822, 0.00011859699999999807, 0.0001181950000000015, 0.00011820800000000159,...</msg>
<status status="PASS" starttime="20201029 18:16:36.929" endtime="20201029 18:16:36.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.949" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.947" endtime="20201029 18:16:36.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.954" level="INFO">VALUE: [0.00011883299999999875, 0.00011823600000000073, 0.00011923600000000173, 0.00011819400000000202, 0.00011883399999999822, 0.00011859699999999807, 0.0001181950000000015, 0.00011820800000000159, 0.00011845800000000184, 0.00011834700000000475, 0.0001189170000000031, 0.0001184029999999961, 0.00011926400000000087, 0.0001191950000000025, 0.00011915200000000431, 0.00011927800000000044, 0.00011841699999999566, 0.00011863899999999677, 0.00011884699999999832, 0.00011868100000000242, 0.00011894400000000277, 0.00011858399999999797, 0.00011819400000000202, 0.00011837499999999695, 0.00011888900000000396, 0.00011844400000000227, 0.00011886100000000482, 0.00011923600000000173, 0.00011834699999999782, 0.0001189579999999954, 0.00011834699999999782, 0.00011866600000000338, 0.00011907000000000584, 0.00011870900000000156, 0.00011823600000000073, 0.00011850000000000055, 0.00011859699999999807, 0.0001182500000000003, 0.00011886099999999789, 0.0001189300000000032, 0.00011895800000000234, 0.00011886099999999789, 0.0001187500000000008, 0.00011880599999999908, 0.0001193050000000001, 0.0001183750000000039, 0.0001187370000000007, 0.0001189579999999954, 0.00011841599999999619, 0.00011870799999999515]</msg>
<status status="PASS" starttime="20201029 18:16:36.951" endtime="20201029 18:16:36.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.940" endtime="20201029 18:16:36.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.967" endtime="20201029 18:16:36.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.963" endtime="20201029 18:16:36.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.960" endtime="20201029 18:16:36.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.470" endtime="20201029 18:16:36.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.469" endtime="20201029 18:16:36.992"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.015" endtime="20201029 18:16:37.036"></status>
</kw>
<msg timestamp="20201029 18:16:37.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.012" endtime="20201029 18:16:37.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.039" endtime="20201029 18:16:37.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.045" endtime="20201029 18:16:37.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.005" endtime="20201029 18:16:37.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.999" endtime="20201029 18:16:37.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.071" endtime="20201029 18:16:37.411"></status>
</kw>
<msg timestamp="20201029 18:16:37.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04038, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:16:37.066" endtime="20201029 18:16:37.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04038, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:16:37.420" endtime="20201029 18:16:37.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.438" endtime="20201029 18:16:37.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.058" endtime="20201029 18:16:37.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.053" endtime="20201029 18:16:37.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.456" level="INFO">${RESULT} = [{'diff': 0.00011987499999999846}, {'diff': 0.00011988899999999802}, {'diff': 0.0001193750000000049}, {'diff': 0.00011992999999999726}, {'diff': 0.00012018099999999698}, {'diff': 0.0001201659999999979...</msg>
<status status="PASS" starttime="20201029 18:16:37.447" endtime="20201029 18:16:37.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:37.465" level="INFO">${ACCURACY} = {'diff': [0.00011987499999999846, 0.00011988899999999802, 0.0001193750000000049, 0.00011992999999999726, 0.00012018099999999698, 0.00012016599999999794, 0.00011952800000000069, 0.00011955599999999983,...</msg>
<status status="PASS" starttime="20201029 18:16:37.458" endtime="20201029 18:16:37.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.476" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:16:37.474" endtime="20201029 18:16:37.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.481" level="INFO">VALUE: [0.00011987499999999846, 0.00011988899999999802, 0.0001193750000000049, 0.00011992999999999726, 0.00012018099999999698, 0.00012016599999999794, 0.00011952800000000069, 0.00011955599999999983, 0.00011948599999999504, 0.00011938799999999805, 0.0001200970000000065, 0.00012016700000000435, 0.00011917999999999651, 0.00011994400000000377, 0.00011955599999999983, 0.00011929100000000054, 0.00012011099999999914, 0.00011922200000000216, 0.00011981900000000018, 0.0001201249999999987, 0.0001193050000000001, 0.00011941699999999666, 0.00011950000000000155, 0.00011969499999999605, 0.00011973600000000223, 0.00011944500000000274, 0.00011926299999999446, 0.00011990300000000453, 0.00011986099999999889, 0.0001194029999999971, 0.0001200699999999999, 0.0001195829999999995, 0.00011938900000000446, 0.00011979200000000051, 0.00012004200000000076, 0.00012013899999999827, 0.0001200970000000065, 0.00011951400000000112, 0.0001201249999999987, 0.0001196249999999982, 0.00011927800000000044, 0.00011916699999999641, 0.00011929200000000001, 0.0001194170000000036, 0.00012011099999999914, 0.00011988900000000496, 0.00011961099999999864, 0.00011938799999999805, 0.00011963899999999777, 0.00011970800000000309]</msg>
<status status="PASS" starttime="20201029 18:16:37.478" endtime="20201029 18:16:37.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.467" endtime="20201029 18:16:37.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.494" endtime="20201029 18:16:37.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.490" endtime="20201029 18:16:37.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.487" endtime="20201029 18:16:37.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.994" endtime="20201029 18:16:37.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.993" endtime="20201029 18:16:37.519"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.543" endtime="20201029 18:16:37.564"></status>
</kw>
<msg timestamp="20201029 18:16:37.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.539" endtime="20201029 18:16:37.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.567" endtime="20201029 18:16:37.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.573" endtime="20201029 18:16:37.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.531" endtime="20201029 18:16:37.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.525" endtime="20201029 18:16:37.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.597" endtime="20201029 18:16:37.939"></status>
</kw>
<msg timestamp="20201029 18:16:37.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.594" endtime="20201029 18:16:37.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.949" endtime="20201029 18:16:37.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.972" endtime="20201029 18:16:37.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.586" endtime="20201029 18:16:37.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.582" endtime="20201029 18:16:37.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.996" level="INFO">${RESULT} = [{'diff': 0.00012101399999999568}, {'diff': 0.00012092999999999826}, {'diff': 0.00012088900000000596}, {'diff': 0.0001204029999999981}, {'diff': 0.00012041699999999766}, {'diff': 0.0001210690000000014...</msg>
<status status="PASS" starttime="20201029 18:16:37.983" endtime="20201029 18:16:37.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.010" level="INFO">${ACCURACY} = {'diff': [0.00012101399999999568, 0.00012092999999999826, 0.00012088900000000596, 0.0001204029999999981, 0.00012041699999999766, 0.00012106900000000143, 0.00012050000000000255, 0.00012036099999999939,...</msg>
<status status="PASS" starttime="20201029 18:16:38.000" endtime="20201029 18:16:38.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.022" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.019" endtime="20201029 18:16:38.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.027" level="INFO">VALUE: [0.00012101399999999568, 0.00012092999999999826, 0.00012088900000000596, 0.0001204029999999981, 0.00012041699999999766, 0.00012106900000000143, 0.00012050000000000255, 0.00012036099999999939, 0.00012050000000000255, 0.00012066599999999844, 0.00012058399999999997, 0.00012055600000000083, 0.00012045800000000384, 0.00012048600000000298, 0.00012048599999999604, 0.00012070899999999662, 0.00012032000000000015, 0.00012031900000000068, 0.00012041599999999819, 0.00012065300000000528, 0.00012048600000000298, 0.00012074999999999586, 0.00012087499999999946, 0.00012122199999999722, 0.00012029200000000101, 0.00012048600000000298, 0.00012081899999999424, 0.00012047200000000341, 0.0001211249999999997, 0.00012055600000000083, 0.00012090300000000553, 0.00012115299999999884, 0.00012113899999999928, 0.00012116699999999841, 0.00012092999999999826, 0.00012077700000000247, 0.00012061099999999964, 0.00012036099999999939, 0.00012043099999999723, 0.00012084700000000032, 0.000120695000000004, 0.0001209029999999986, 0.00012098600000000348, 0.00012115199999999937, 0.00012036199999999886, 0.00012031900000000068, 0.0001209170000000051, 0.00012072199999999672, 0.00012087499999999946, 0.00012130600000000158]</msg>
<status status="PASS" starttime="20201029 18:16:38.024" endtime="20201029 18:16:38.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.012" endtime="20201029 18:16:38.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.041" endtime="20201029 18:16:38.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.035" endtime="20201029 18:16:38.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.033" endtime="20201029 18:16:38.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.521" endtime="20201029 18:16:38.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.520" endtime="20201029 18:16:38.067"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.090" endtime="20201029 18:16:38.110"></status>
</kw>
<msg timestamp="20201029 18:16:38.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.086" endtime="20201029 18:16:38.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.114" endtime="20201029 18:16:38.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.120" endtime="20201029 18:16:38.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.079" endtime="20201029 18:16:38.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.073" endtime="20201029 18:16:38.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.145" endtime="20201029 18:16:38.484"></status>
</kw>
<msg timestamp="20201029 18:16:38.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040274556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040395861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.142" endtime="20201029 18:16:38.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040274556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040395861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.493" endtime="20201029 18:16:38.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.511" endtime="20201029 18:16:38.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.134" endtime="20201029 18:16:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.129" endtime="20201029 18:16:38.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.528" level="INFO">${RESULT} = [{'diff': 0.00012130499999999517}, {'diff': 0.00012141599999999919}, {'diff': 0.0001222500000000043}, {'diff': 0.00012199999999999711}, {'diff': 0.00012204099999999635}, {'diff': 0.0001223469999999948...</msg>
<status status="PASS" starttime="20201029 18:16:38.520" endtime="20201029 18:16:38.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.539" level="INFO">${ACCURACY} = {'diff': [0.00012130499999999517, 0.00012141599999999919, 0.0001222500000000043, 0.00012199999999999711, 0.00012204099999999635, 0.00012234699999999488, 0.00012201299999999721, 0.00012159800000000054,...</msg>
<status status="PASS" starttime="20201029 18:16:38.531" endtime="20201029 18:16:38.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.550" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.548" endtime="20201029 18:16:38.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.555" level="INFO">VALUE: [0.00012130499999999517, 0.00012141599999999919, 0.0001222500000000043, 0.00012199999999999711, 0.00012204099999999635, 0.00012234699999999488, 0.00012201299999999721, 0.00012159800000000054, 0.00012155600000000183, 0.0001216250000000002, 0.00012143099999999823, 0.00012166699999999891, 0.0001213050000000021, 0.00012149999999999661, 0.0001212500000000033, 0.00012220799999999865, 0.0001218329999999948, 0.00012130600000000158, 0.00012169399999999858, 0.00012137499999999996, 0.00012211100000000114, 0.00012142999999999876, 0.00012170900000000456, 0.00012141699999999866, 0.00012129200000000201, 0.0001214029999999991, 0.00012226399999999693, 0.00012215299999999985, 0.00012141599999999919, 0.00012190200000000012, 0.0001217229999999972, 0.00012140300000000603, 0.00012136100000000039, 0.00012133400000000072, 0.000122083000000002, 0.00012187500000000046, 0.00012187499999999352, 0.0001214029999999991, 0.00012132000000000115, 0.00012176400000000337, 0.00012174999999999686, 0.00012170799999999815, 0.00012220799999999865, 0.00012184800000000079, 0.00012229199999999607, 0.00012174999999999686, 0.00012216699999999941, 0.00012229100000000354, 0.00012116699999999841, 0.00012126399999999593]</msg>
<status status="PASS" starttime="20201029 18:16:38.552" endtime="20201029 18:16:38.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.541" endtime="20201029 18:16:38.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.569" endtime="20201029 18:16:38.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.564" endtime="20201029 18:16:38.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.561" endtime="20201029 18:16:38.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.069" endtime="20201029 18:16:38.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.068" endtime="20201029 18:16:38.594"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.617" endtime="20201029 18:16:38.637"></status>
</kw>
<msg timestamp="20201029 18:16:38.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.613" endtime="20201029 18:16:38.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.641" endtime="20201029 18:16:38.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.647" endtime="20201029 18:16:38.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.606" endtime="20201029 18:16:38.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.600" endtime="20201029 18:16:38.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.671" endtime="20201029 18:16:39.011"></status>
</kw>
<msg timestamp="20201029 18:16:39.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040027903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040150278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.667" endtime="20201029 18:16:39.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040027903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040150278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.021" endtime="20201029 18:16:39.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.039" endtime="20201029 18:16:39.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.660" endtime="20201029 18:16:39.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.655" endtime="20201029 18:16:39.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.056" level="INFO">${RESULT} = [{'diff': 0.00012237500000000096}, {'diff': 0.000122568999999996}, {'diff': 0.00012258399999999503}, {'diff': 0.00012269399999999958}, {'diff': 0.00012251400000000412}, {'diff': 0.00012286100000000189...</msg>
<status status="PASS" starttime="20201029 18:16:39.047" endtime="20201029 18:16:39.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.067" level="INFO">${ACCURACY} = {'diff': [0.00012237500000000096, 0.000122568999999996, 0.00012258399999999503, 0.00012269399999999958, 0.00012251400000000412, 0.00012286100000000189, 0.00012291700000000017, 0.00012238900000000053, ...</msg>
<status status="PASS" starttime="20201029 18:16:39.058" endtime="20201029 18:16:39.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.078" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.076" endtime="20201029 18:16:39.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.083" level="INFO">VALUE: [0.00012237500000000096, 0.000122568999999996, 0.00012258399999999503, 0.00012269399999999958, 0.00012251400000000412, 0.00012286100000000189, 0.00012291700000000017, 0.00012238900000000053, 0.0001222779999999965, 0.00012245899999999837, 0.00012266699999999991, 0.00012324999999999836, 0.00012301399999999768, 0.00012290200000000112, 0.00012263900000000078, 0.00012252799999999675, 0.00012277699999999753, 0.00012281900000000318, 0.00012248600000000498, 0.00012315300000000085, 0.00012251399999999718, 0.0001223050000000031, 0.0001231800000000005, 0.0001229579999999994, 0.0001230700000000029, 0.00012315300000000085, 0.0001228480000000018, 0.00012281900000000318, 0.00012284699999999538, 0.0001221799999999995, 0.00012234700000000182, 0.00012313900000000128, 0.00012224999999999736, 0.0001225559999999959, 0.00012230599999999564, 0.00012284799999999485, 0.0001227500000000048, 0.00012276299999999796, 0.00012277800000000394, 0.0001225830000000025, 0.000123083000000003, 0.0001223199999999952, 0.00012294399999999983, 0.0001231109999999952, 0.0001231250000000017, 0.00012297199999999897, 0.00012247199999999847, 0.00012319499999999955, 0.0001231800000000005, 0.00012220900000000506]</msg>
<status status="PASS" starttime="20201029 18:16:39.080" endtime="20201029 18:16:39.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.069" endtime="20201029 18:16:39.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.096" endtime="20201029 18:16:39.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.092" endtime="20201029 18:16:39.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.089" endtime="20201029 18:16:39.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.596" endtime="20201029 18:16:39.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.595" endtime="20201029 18:16:39.121"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.145" endtime="20201029 18:16:39.165"></status>
</kw>
<msg timestamp="20201029 18:16:39.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.141" endtime="20201029 18:16:39.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.169" endtime="20201029 18:16:39.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.176" endtime="20201029 18:16:39.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.133" endtime="20201029 18:16:39.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.127" endtime="20201029 18:16:39.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.199" endtime="20201029 18:16:39.540"></status>
</kw>
<msg timestamp="20201029 18:16:39.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040762361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040886514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.196" endtime="20201029 18:16:39.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040762361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040886514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.549" endtime="20201029 18:16:39.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.568" endtime="20201029 18:16:39.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.189" endtime="20201029 18:16:39.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.184" endtime="20201029 18:16:39.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.585" level="INFO">${RESULT} = [{'diff': 0.00012415300000000185}, {'diff': 0.00012359699999999613}, {'diff': 0.0001236529999999944}, {'diff': 0.00012401399999999868}, {'diff': 0.00012409700000000357}, {'diff': 0.0001241249999999957...</msg>
<status status="PASS" starttime="20201029 18:16:39.576" endtime="20201029 18:16:39.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.594" level="INFO">${ACCURACY} = {'diff': [0.00012415300000000185, 0.00012359699999999613, 0.0001236529999999944, 0.00012401399999999868, 0.00012409700000000357, 0.00012412499999999577, 0.0001237229999999992, 0.00012398599999999954, ...</msg>
<status status="PASS" starttime="20201029 18:16:39.587" endtime="20201029 18:16:39.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.605" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.603" endtime="20201029 18:16:39.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.611" level="INFO">VALUE: [0.00012415300000000185, 0.00012359699999999613, 0.0001236529999999944, 0.00012401399999999868, 0.00012409700000000357, 0.00012412499999999577, 0.0001237229999999992, 0.00012398599999999954, 0.00012386099999999595, 0.0001239999999999991, 0.00012404199999999782, 0.00012368100000000048, 0.00012365199999999493, 0.00012332000000000315, 0.00012369500000000005, 0.0001241109999999962, 0.00012374999999999886, 0.00012412499999999577, 0.00012324999999999836, 0.00012382000000000365, 0.00012370899999999962, 0.00012351399999999818, 0.0001234449999999998, 0.00012322200000000616, 0.00012318099999999998, 0.00012355499999999742, 0.00012361100000000264, 0.00012380599999999714, 0.0001236250000000022, 0.00012393100000000074, 0.0001232359999999988, 0.00012348599999999904, 0.00012401399999999868, 0.00012319400000000008, 0.00012406900000000443, 0.00012343100000000023, 0.0001232779999999975, 0.00012322199999999922, 0.00012429199999999807, 0.00012343000000000076, 0.0001236120000000021, 0.00012413900000000228, 0.0001237909999999981, 0.0001241250000000027, 0.00012388899999999509, 0.000123777999999998, 0.0001239160000000017, 0.00012388900000000203, 0.000123292000000004, 0.00012416600000000194]</msg>
<status status="PASS" starttime="20201029 18:16:39.607" endtime="20201029 18:16:39.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.596" endtime="20201029 18:16:39.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.623" endtime="20201029 18:16:39.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.619" endtime="20201029 18:16:39.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.616" endtime="20201029 18:16:39.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.123" endtime="20201029 18:16:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.122" endtime="20201029 18:16:39.648"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.673" endtime="20201029 18:16:39.694"></status>
</kw>
<msg timestamp="20201029 18:16:39.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.668" endtime="20201029 18:16:39.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.697" endtime="20201029 18:16:39.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.703" endtime="20201029 18:16:39.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.661" endtime="20201029 18:16:39.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.655" endtime="20201029 18:16:39.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.727" endtime="20201029 18:16:40.066"></status>
</kw>
<msg timestamp="20201029 18:16:40.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041552736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041677722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.724" endtime="20201029 18:16:40.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041552736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041677722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.075" endtime="20201029 18:16:40.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.093" endtime="20201029 18:16:40.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.716" endtime="20201029 18:16:40.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.711" endtime="20201029 18:16:40.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.110" level="INFO">${RESULT} = [{'diff': 0.00012498600000000054}, {'diff': 0.00012536099999999745}, {'diff': 0.00012448600000000004}, {'diff': 0.00012508400000000447}, {'diff': 0.00012455600000000483}, {'diff': 0.000125096999999997...</msg>
<status status="PASS" starttime="20201029 18:16:40.102" endtime="20201029 18:16:40.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.120" level="INFO">${ACCURACY} = {'diff': [0.00012498600000000054, 0.00012536099999999745, 0.00012448600000000004, 0.00012508400000000447, 0.00012455600000000483, 0.00012509699999999763, 0.000124680000000002, 0.00012476299999999996, ...</msg>
<status status="PASS" starttime="20201029 18:16:40.113" endtime="20201029 18:16:40.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.131" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.128" endtime="20201029 18:16:40.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.136" level="INFO">VALUE: [0.00012498600000000054, 0.00012536099999999745, 0.00012448600000000004, 0.00012508400000000447, 0.00012455600000000483, 0.00012509699999999763, 0.000124680000000002, 0.00012476299999999996, 0.00012452799999999875, 0.00012463900000000278, 0.00012443000000000176, 0.00012491599999999575, 0.00012443100000000124, 0.00012419400000000108, 0.00012498600000000054, 0.00012501399999999968, 0.0001244999999999996, 0.00012501400000000662, 0.00012517999999999557, 0.00012447200000000047, 0.00012445900000000037, 0.00012488900000000303, 0.00012466700000000192, 0.00012434799999999635, 0.00012502799999999925, 0.0001247360000000003, 0.00012508299999999806, 0.00012455499999999842, 0.00012431899999999774, 0.0001244030000000021, 0.0001243050000000051, 0.00012504099999999935, 0.00012513799999999686, 0.00012511100000000414, 0.00012518100000000199, 0.00012429199999999807, 0.00012515200000000337, 0.0001250000000000001, 0.00012420800000000065, 0.00012480600000000508, 0.00012430499999999817, 0.00012484700000000432, 0.00012438900000000253, 0.00012501399999999968, 0.00012516700000000242, 0.00012509699999999763, 0.0001247909999999991, 0.00012522199999999428, 0.00012443100000000124, 0.00012419400000000108]</msg>
<status status="PASS" starttime="20201029 18:16:40.133" endtime="20201029 18:16:40.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.121" endtime="20201029 18:16:40.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.153" endtime="20201029 18:16:40.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.144" endtime="20201029 18:16:40.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.142" endtime="20201029 18:16:40.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.651" endtime="20201029 18:16:40.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.649" endtime="20201029 18:16:40.179"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.203" endtime="20201029 18:16:40.226"></status>
</kw>
<msg timestamp="20201029 18:16:40.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.200" endtime="20201029 18:16:40.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.230" endtime="20201029 18:16:40.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.236" endtime="20201029 18:16:40.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.192" endtime="20201029 18:16:40.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.186" endtime="20201029 18:16:40.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.260" endtime="20201029 18:16:40.611"></status>
</kw>
<msg timestamp="20201029 18:16:40.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042174917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042300458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.256" endtime="20201029 18:16:40.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042174917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042300458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.620" endtime="20201029 18:16:40.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.638" endtime="20201029 18:16:40.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.249" endtime="20201029 18:16:40.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.244" endtime="20201029 18:16:40.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.656" level="INFO">${RESULT} = [{'diff': 0.00012554099999999985}, {'diff': 0.00012587499999999752}, {'diff': 0.0001256659999999965}, {'diff': 0.00012558399999999803}, {'diff': 0.00012583399999999828}, {'diff': 0.0001255419999999993...</msg>
<status status="PASS" starttime="20201029 18:16:40.647" endtime="20201029 18:16:40.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.666" level="INFO">${ACCURACY} = {'diff': [0.00012554099999999985, 0.00012587499999999752, 0.0001256659999999965, 0.00012558399999999803, 0.00012583399999999828, 0.00012554199999999932, 0.00012622200000000222, 0.00012543100000000224,...</msg>
<status status="PASS" starttime="20201029 18:16:40.658" endtime="20201029 18:16:40.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.677" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.675" endtime="20201029 18:16:40.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.682" level="INFO">VALUE: [0.00012554099999999985, 0.00012587499999999752, 0.0001256659999999965, 0.00012558399999999803, 0.00012583399999999828, 0.00012554199999999932, 0.00012622200000000222, 0.00012543100000000224, 0.0001259030000000036, 0.00012531899999999874, 0.00012586099999999795, 0.0001257360000000013, 0.0001261529999999969, 0.00012572200000000172, 0.00012619499999999562, 0.00012583399999999828, 0.00012576400000000043, 0.00012575000000000086, 0.00012551400000000018, 0.00012584799999999785, 0.00012536099999999745, 0.00012558299999999856, 0.00012587500000000446, 0.00012558399999999803, 0.00012575000000000086, 0.0001256250000000042, 0.0001252779999999995, 0.00012570900000000162, 0.00012598600000000154, 0.00012547199999999453, 0.00012593000000000326, 0.00012590199999999718, 0.00012563900000000378, 0.00012604199999999982, 0.00012556999999999846, 0.0001256529999999964, 0.00012575000000000086, 0.00012563899999999684, 0.00012543100000000224, 0.0001252779999999995, 0.00012568100000000249, 0.00012568100000000249, 0.00012531899999999874, 0.00012567999999999607, 0.0001253329999999983, 0.00012569500000000206, 0.00012566700000000292, 0.0001252779999999995, 0.00012552700000000028, 0.00012592999999999632]</msg>
<status status="PASS" starttime="20201029 18:16:40.679" endtime="20201029 18:16:40.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.668" endtime="20201029 18:16:40.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.695" endtime="20201029 18:16:40.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.691" endtime="20201029 18:16:40.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.688" endtime="20201029 18:16:40.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.181" endtime="20201029 18:16:40.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.180" endtime="20201029 18:16:40.721"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.743" endtime="20201029 18:16:40.764"></status>
</kw>
<msg timestamp="20201029 18:16:40.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.740" endtime="20201029 18:16:40.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.768" endtime="20201029 18:16:40.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.774" endtime="20201029 18:16:40.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.733" endtime="20201029 18:16:40.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.727" endtime="20201029 18:16:40.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.798" endtime="20201029 18:16:41.143"></status>
</kw>
<msg timestamp="20201029 18:16:41.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040114667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040241347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.795" endtime="20201029 18:16:41.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040114667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040241347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.153" endtime="20201029 18:16:41.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.171" endtime="20201029 18:16:41.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.787" endtime="20201029 18:16:41.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.783" endtime="20201029 18:16:41.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.188" level="INFO">${RESULT} = [{'diff': 0.00012667999999999707}, {'diff': 0.00012647200000000247}, {'diff': 0.00012665300000000435}, {'diff': 0.00012626400000000093}, {'diff': 0.00012666700000000392}, {'diff': 0.000127042000000000...</msg>
<status status="PASS" starttime="20201029 18:16:41.179" endtime="20201029 18:16:41.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.199" level="INFO">${ACCURACY} = {'diff': [0.00012667999999999707, 0.00012647200000000247, 0.00012665300000000435, 0.00012626400000000093, 0.00012666700000000392, 0.00012704200000000082, 0.00012651400000000118, 0.00012692999999999732...</msg>
<status status="PASS" starttime="20201029 18:16:41.190" endtime="20201029 18:16:41.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.210" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.207" endtime="20201029 18:16:41.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.216" level="INFO">VALUE: [0.00012667999999999707, 0.00012647200000000247, 0.00012665300000000435, 0.00012626400000000093, 0.00012666700000000392, 0.00012704200000000082, 0.00012651400000000118, 0.00012692999999999732, 0.0001264030000000041, 0.0001266109999999987, 0.00012701400000000168, 0.00012720800000000365, 0.00012717999999999757, 0.0001267360000000023, 0.0001272360000000028, 0.00012713899999999834, 0.0001267639999999945, 0.000126778000000001, 0.00012675000000000186, 0.00012662499999999827, 0.00012683399999999928, 0.0001271109999999992, 0.00012673599999999535, 0.00012688900000000503, 0.00012647300000000194, 0.00012622200000000222, 0.00012648600000000204, 0.00012691599999999775, 0.0001269859999999956, 0.00012636200000000486, 0.0001265559999999999, 0.0001267639999999945, 0.00012697199999999603, 0.00012698600000000254, 0.00012644400000000333, 0.000126778000000001, 0.00012676400000000143, 0.0001263329999999993, 0.0001264580000000029, 0.0001267360000000023, 0.00012648600000000204, 0.00012622200000000222, 0.0001264859999999951, 0.00012681900000000024, 0.00012709699999999963, 0.00012659699999999913, 0.00012686099999999895, 0.00012663799999999836, 0.00012640299999999716, 0.0001266250000000052]</msg>
<status status="PASS" starttime="20201029 18:16:41.213" endtime="20201029 18:16:41.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.201" endtime="20201029 18:16:41.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.231" endtime="20201029 18:16:41.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.226" endtime="20201029 18:16:41.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.223" endtime="20201029 18:16:41.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.723" endtime="20201029 18:16:41.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.721" endtime="20201029 18:16:41.257"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.280" endtime="20201029 18:16:41.300"></status>
</kw>
<msg timestamp="20201029 18:16:41.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.276" endtime="20201029 18:16:41.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.303" endtime="20201029 18:16:41.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.310" endtime="20201029 18:16:41.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.269" endtime="20201029 18:16:41.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.263" endtime="20201029 18:16:41.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.333" endtime="20201029 18:16:41.671"></status>
</kw>
<msg timestamp="20201029 18:16:41.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.330" endtime="20201029 18:16:41.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.680" endtime="20201029 18:16:41.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.698" endtime="20201029 18:16:41.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.323" endtime="20201029 18:16:41.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.318" endtime="20201029 18:16:41.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.715" level="INFO">${RESULT} = [{'diff': 0.00012770800000000415}, {'diff': 0.0001273889999999986}, {'diff': 0.00012730500000000117}, {'diff': 0.00012777700000000253}, {'diff': 0.00012769399999999764}, {'diff': 0.0001277500000000028...</msg>
<status status="PASS" starttime="20201029 18:16:41.707" endtime="20201029 18:16:41.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.725" level="INFO">${ACCURACY} = {'diff': [0.00012770800000000415, 0.0001273889999999986, 0.00012730500000000117, 0.00012777700000000253, 0.00012769399999999764, 0.00012775000000000286, 0.0001273330000000003, 0.00012749999999999567, ...</msg>
<status status="PASS" starttime="20201029 18:16:41.717" endtime="20201029 18:16:41.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.735" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.733" endtime="20201029 18:16:41.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.741" level="INFO">VALUE: [0.00012770800000000415, 0.0001273889999999986, 0.00012730500000000117, 0.00012777700000000253, 0.00012769399999999764, 0.00012775000000000286, 0.0001273330000000003, 0.00012749999999999567, 0.00012769500000000406, 0.00012744400000000433, 0.00012741599999999825, 0.00012737499999999902, 0.000128165999999999, 0.0001276109999999997, 0.0001279859999999966, 0.00012784799999999985, 0.0001274439999999974, 0.00012741699999999773, 0.00012757000000000046, 0.00012758300000000056, 0.00012818099999999805, 0.00012794499999999737, 0.00012815199999999943, 0.00012829099999999566, 0.00012762499999999927, 0.0001274450000000038, 0.0001275279999999948, 0.00012730600000000064, 0.00012748600000000304, 0.00012816699999999848, 0.00012808300000000106, 0.00012740199999999868, 0.00012773599999999635, 0.00012751399999999524, 0.00012730600000000064, 0.00012730600000000064, 0.00012793000000000526, 0.00012763899999999884, 0.0001272780000000015, 0.00012816699999999848, 0.00012741700000000467, 0.00012794400000000483, 0.00012769399999999764, 0.00012759700000000013, 0.00012740299999999816, 0.00012781900000000124, 0.0001273889999999986, 0.00012808300000000106, 0.00012773599999999635, 0.00012791599999999875]</msg>
<status status="PASS" starttime="20201029 18:16:41.738" endtime="20201029 18:16:41.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.726" endtime="20201029 18:16:41.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.753" endtime="20201029 18:16:41.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.749" endtime="20201029 18:16:41.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.746" endtime="20201029 18:16:41.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.259" endtime="20201029 18:16:41.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.258" endtime="20201029 18:16:41.778"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.801" endtime="20201029 18:16:41.823"></status>
</kw>
<msg timestamp="20201029 18:16:41.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.797" endtime="20201029 18:16:41.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.826" endtime="20201029 18:16:41.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.832" endtime="20201029 18:16:41.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.790" endtime="20201029 18:16:41.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.785" endtime="20201029 18:16:41.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.855" endtime="20201029 18:16:42.189"></status>
</kw>
<msg timestamp="20201029 18:16:42.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041282903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.852" endtime="20201029 18:16:42.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041282903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.198" endtime="20201029 18:16:42.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.216" endtime="20201029 18:16:42.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.845" endtime="20201029 18:16:42.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.840" endtime="20201029 18:16:42.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.233" level="INFO">${RESULT} = [{'diff': 0.00012897200000000497}, {'diff': 0.00012884700000000138}, {'diff': 0.00012834700000000088}, {'diff': 0.0001290560000000024}, {'diff': 0.00012922199999999828}, {'diff': 0.0001292769999999971...</msg>
<status status="PASS" starttime="20201029 18:16:42.225" endtime="20201029 18:16:42.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.243" level="INFO">${ACCURACY} = {'diff': [0.00012897200000000497, 0.00012884700000000138, 0.00012834700000000088, 0.0001290560000000024, 0.00012922199999999828, 0.0001292769999999971, 0.0001282360000000038, 0.00012892999999999932, 0...</msg>
<status status="PASS" starttime="20201029 18:16:42.235" endtime="20201029 18:16:42.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.254" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.251" endtime="20201029 18:16:42.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.259" level="INFO">VALUE: [0.00012897200000000497, 0.00012884700000000138, 0.00012834700000000088, 0.0001290560000000024, 0.00012922199999999828, 0.0001292769999999971, 0.0001282360000000038, 0.00012892999999999932, 0.00012890200000000018, 0.00012912500000000077, 0.00012868100000000549, 0.00012919399999999914, 0.000128263999999996, 0.00012912500000000077, 0.0001288200000000017, 0.00012851399999999624, 0.00012844499999999787, 0.0001290000000000041, 0.00012897200000000497, 0.00012874999999999692, 0.0001290409999999964, 0.00012880500000000267, 0.0001290980000000011, 0.00012897200000000497, 0.0001283889999999996, 0.0001291529999999999, 0.00012863899999999984, 0.00012934800000000135, 0.00012908300000000206, 0.00012922200000000522, 0.00012863899999999984, 0.00012829200000000207, 0.0001290980000000011, 0.00012843100000000524, 0.00012925000000000436, 0.00012902800000000325, 0.00012880500000000267, 0.00012826400000000293, 0.00012858400000000103, 0.0001291110000000012, 0.00012884700000000138, 0.00012919399999999914, 0.0001288890000000001, 0.00012842999999999882, 0.00012841699999999873, 0.0001287079999999982, 0.00012819499999999762, 0.00012906999999999502, 0.00012841699999999873, 0.00012908400000000153]</msg>
<status status="PASS" starttime="20201029 18:16:42.256" endtime="20201029 18:16:42.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.244" endtime="20201029 18:16:42.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.274" endtime="20201029 18:16:42.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.268" endtime="20201029 18:16:42.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.265" endtime="20201029 18:16:42.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.780" endtime="20201029 18:16:42.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.779" endtime="20201029 18:16:42.299"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.322" endtime="20201029 18:16:42.343"></status>
</kw>
<msg timestamp="20201029 18:16:42.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.319" endtime="20201029 18:16:42.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.346" endtime="20201029 18:16:42.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.352" endtime="20201029 18:16:42.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.312" endtime="20201029 18:16:42.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.306" endtime="20201029 18:16:42.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.375" endtime="20201029 18:16:42.709"></status>
</kw>
<msg timestamp="20201029 18:16:42.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039779389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039909139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.372" endtime="20201029 18:16:42.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039779389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039909139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.718" endtime="20201029 18:16:42.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.736" endtime="20201029 18:16:42.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.365" endtime="20201029 18:16:42.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.360" endtime="20201029 18:16:42.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.753" level="INFO">${RESULT} = [{'diff': 0.00012975000000000486}, {'diff': 0.00012974999999999792}, {'diff': 0.00012940200000000068}, {'diff': 0.00013008300000000306}, {'diff': 0.00012973599999999835}, {'diff': 0.000130181000000000...</msg>
<status status="PASS" starttime="20201029 18:16:42.744" endtime="20201029 18:16:42.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.763" level="INFO">${ACCURACY} = {'diff': [0.00012975000000000486, 0.00012974999999999792, 0.00012940200000000068, 0.00013008300000000306, 0.00012973599999999835, 0.00013018100000000005, 0.0001301110000000022, 0.00012987500000000152,...</msg>
<status status="PASS" starttime="20201029 18:16:42.755" endtime="20201029 18:16:42.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.774" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.772" endtime="20201029 18:16:42.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.780" level="INFO">VALUE: [0.00012975000000000486, 0.00012974999999999792, 0.00012940200000000068, 0.00013008300000000306, 0.00012973599999999835, 0.00013018100000000005, 0.0001301110000000022, 0.00012987500000000152, 0.0001299309999999998, 0.00012941699999999973, 0.00013005500000000392, 0.00012948600000000504, 0.00012927799999999656, 0.00012995799999999946, 0.0001293200000000022, 0.0001301530000000009, 0.00012987499999999458, 0.00012984699999999544, 0.0001295560000000029, 0.00012929199999999613, 0.00012990300000000066, 0.0001296530000000004, 0.00013019400000000014, 0.00012925000000000436, 0.00013001399999999774, 0.00012957000000000246, 0.0001293330000000023, 0.00013011099999999526, 0.00012936100000000145, 0.00013016700000000048, 0.0001302780000000045, 0.00012942999999999982, 0.00013012500000000177, 0.00012987499999999458, 0.00012966699999999998, 0.00013002800000000425, 0.000130166000000001, 0.0001298059999999962, 0.00012945799999999896, 0.0001293609999999945, 0.00013004200000000382, 0.00012962499999999433, 0.00012933400000000178, 0.00012959700000000213, 0.00012966699999999998, 0.00012979099999999716, 0.0001295980000000016, 0.00013002800000000425, 0.00012972199999999878, 0.00012926400000000393]</msg>
<status status="PASS" starttime="20201029 18:16:42.776" endtime="20201029 18:16:42.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.765" endtime="20201029 18:16:42.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.792" endtime="20201029 18:16:42.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.788" endtime="20201029 18:16:42.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.785" endtime="20201029 18:16:42.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.302" endtime="20201029 18:16:42.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.300" endtime="20201029 18:16:42.817"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.840" endtime="20201029 18:16:42.860"></status>
</kw>
<msg timestamp="20201029 18:16:42.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.836" endtime="20201029 18:16:42.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.864" endtime="20201029 18:16:42.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.870" endtime="20201029 18:16:42.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.829" endtime="20201029 18:16:42.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.823" endtime="20201029 18:16:42.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.893" endtime="20201029 18:16:43.241"></status>
</kw>
<msg timestamp="20201029 18:16:43.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039528972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039659722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.890" endtime="20201029 18:16:43.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039528972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039659722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.250" endtime="20201029 18:16:43.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.268" endtime="20201029 18:16:43.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.883" endtime="20201029 18:16:43.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.878" endtime="20201029 18:16:43.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.286" level="INFO">${RESULT} = [{'diff': 0.00013074999999999892}, {'diff': 0.0001312080000000007}, {'diff': 0.00013055599999999695}, {'diff': 0.0001305279999999978}, {'diff': 0.0001304859999999991}, {'diff': 0.00013113900000000234}...</msg>
<status status="PASS" starttime="20201029 18:16:43.277" endtime="20201029 18:16:43.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.297" level="INFO">${ACCURACY} = {'diff': [0.00013074999999999892, 0.0001312080000000007, 0.00013055599999999695, 0.0001305279999999978, 0.0001304859999999991, 0.00013113900000000234, 0.00013072199999999978, 0.00013083399999999634, 0...</msg>
<status status="PASS" starttime="20201029 18:16:43.288" endtime="20201029 18:16:43.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.308" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.306" endtime="20201029 18:16:43.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.314" level="INFO">VALUE: [0.00013074999999999892, 0.0001312080000000007, 0.00013055599999999695, 0.0001305279999999978, 0.0001304859999999991, 0.00013113900000000234, 0.00013072199999999978, 0.00013083399999999634, 0.00013027799999999756, 0.00013123599999999985, 0.0001303890000000016, 0.0001309859999999996, 0.00013030500000000417, 0.0001311389999999954, 0.00013072199999999978, 0.00013055500000000442, 0.00013030499999999723, 0.0001306110000000027, 0.0001309310000000008, 0.0001311110000000032, 0.00013119500000000062, 0.00013047199999999953, 0.0001306110000000027, 0.00013106899999999755, 0.0001308059999999972, 0.00013091600000000175, 0.00013113900000000234, 0.00013104199999999788, 0.00013097200000000003, 0.00013123599999999985, 0.00013041700000000073, 0.00013099999999999917, 0.0001307769999999986, 0.0001308189999999973, 0.00013063800000000236, 0.00013037500000000202, 0.00013095800000000046, 0.0001303330000000033, 0.00013069400000000064, 0.0001308479999999959, 0.00013112499999999583, 0.00013122200000000028, 0.0001309440000000009, 0.0001310279999999983, 0.00013036100000000245, 0.00013090300000000166, 0.00013062500000000227, 0.00013049999999999867, 0.00013073599999999935, 0.0001307639999999985]</msg>
<status status="PASS" starttime="20201029 18:16:43.311" endtime="20201029 18:16:43.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.299" endtime="20201029 18:16:43.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.331" endtime="20201029 18:16:43.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.327" endtime="20201029 18:16:43.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.324" endtime="20201029 18:16:43.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.819" endtime="20201029 18:16:43.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.818" endtime="20201029 18:16:43.357"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.379" endtime="20201029 18:16:43.402"></status>
</kw>
<msg timestamp="20201029 18:16:43.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.376" endtime="20201029 18:16:43.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.405" endtime="20201029 18:16:43.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.411" endtime="20201029 18:16:43.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.369" endtime="20201029 18:16:43.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.363" endtime="20201029 18:16:43.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.435" endtime="20201029 18:16:43.796"></status>
</kw>
<msg timestamp="20201029 18:16:43.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.431" endtime="20201029 18:16:43.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040084903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.805" endtime="20201029 18:16:43.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.824" endtime="20201029 18:16:43.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.424" endtime="20201029 18:16:43.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.419" endtime="20201029 18:16:43.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.841" level="INFO">${RESULT} = [{'diff': 0.0001317090000000007}, {'diff': 0.00013122200000000028}, {'diff': 0.00013212499999999683}, {'diff': 0.00013184700000000438}, {'diff': 0.00013158400000000403}, {'diff': 0.0001321810000000020...</msg>
<status status="PASS" starttime="20201029 18:16:43.832" endtime="20201029 18:16:43.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.850" level="INFO">${ACCURACY} = {'diff': [0.0001317090000000007, 0.00013122200000000028, 0.00013212499999999683, 0.00013184700000000438, 0.00013158400000000403, 0.00013218100000000205, 0.00013216700000000248, 0.00013195800000000146,...</msg>
<status status="PASS" starttime="20201029 18:16:43.843" endtime="20201029 18:16:43.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.861" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.859" endtime="20201029 18:16:43.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.866" level="INFO">VALUE: [0.0001317090000000007, 0.00013122200000000028, 0.00013212499999999683, 0.00013184700000000438, 0.00013158400000000403, 0.00013218100000000205, 0.00013216700000000248, 0.00013195800000000146, 0.000131263999999999, 0.0001314440000000014, 0.0001320279999999993, 0.00013222200000000128, 0.00013119500000000062, 0.00013129199999999813, 0.0001322080000000017, 0.00013205599999999845, 0.00013154199999999838, 0.00013186200000000342, 0.00013166700000000198, 0.0001313200000000042, 0.00013208299999999812, 0.00013190299999999572, 0.00013136100000000345, 0.0001317080000000012, 0.00013227799999999956, 0.00013190300000000266, 0.0001313330000000043, 0.0001319860000000006, 0.00013144500000000087, 0.0001320839999999976, 0.00013162499999999633, 0.0001319310000000018, 0.00013204199999999888, 0.0001316530000000024, 0.0001314589999999935, 0.00013187500000000352, 0.00013208400000000453, 0.0001315279999999988, 0.00013130600000000464, 0.00013151399999999924, 0.00013209700000000463, 0.00013123599999999985, 0.00013191599999999581, 0.00013219400000000214, 0.00013154100000000585, 0.00013141600000000225, 0.0001319440000000019, 0.00013187499999999658, 0.00013215299999999597, 0.0001313609999999965]</msg>
<status status="PASS" starttime="20201029 18:16:43.863" endtime="20201029 18:16:43.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.852" endtime="20201029 18:16:43.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.879" endtime="20201029 18:16:43.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.875" endtime="20201029 18:16:43.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.872" endtime="20201029 18:16:43.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.359" endtime="20201029 18:16:43.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.358" endtime="20201029 18:16:43.904"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.929" endtime="20201029 18:16:43.953"></status>
</kw>
<msg timestamp="20201029 18:16:43.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.924" endtime="20201029 18:16:43.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.957" endtime="20201029 18:16:43.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.963" endtime="20201029 18:16:43.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.916" endtime="20201029 18:16:43.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.911" endtime="20201029 18:16:43.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.987" endtime="20201029 18:16:44.326"></status>
</kw>
<msg timestamp="20201029 18:16:44.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045254083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045387292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.984" endtime="20201029 18:16:44.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045254083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045387292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.335" endtime="20201029 18:16:44.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.354" endtime="20201029 18:16:44.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.976" endtime="20201029 18:16:44.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.971" endtime="20201029 18:16:44.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.372" level="INFO">${RESULT} = [{'diff': 0.0001332090000000022}, {'diff': 0.00013319500000000262}, {'diff': 0.0001331389999999974}, {'diff': 0.00013240300000000316}, {'diff': 0.00013284700000000538}, {'diff': 0.00013316699999999654...</msg>
<status status="PASS" starttime="20201029 18:16:44.363" endtime="20201029 18:16:44.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.381" level="INFO">${ACCURACY} = {'diff': [0.0001332090000000022, 0.00013319500000000262, 0.0001331389999999974, 0.00013240300000000316, 0.00013284700000000538, 0.00013316699999999654, 0.00013277800000000006, 0.00013250000000000067, ...</msg>
<status status="PASS" starttime="20201029 18:16:44.374" endtime="20201029 18:16:44.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.392" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.390" endtime="20201029 18:16:44.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.397" level="INFO">VALUE: [0.0001332090000000022, 0.00013319500000000262, 0.0001331389999999974, 0.00013240300000000316, 0.00013284700000000538, 0.00013316699999999654, 0.00013277800000000006, 0.00013250000000000067, 0.0001328189999999993, 0.0001325409999999999, 0.00013233399999999784, 0.00013283299999999887, 0.00013283299999999887, 0.00013275000000000092, 0.0001330269999999939, 0.0001329860000000016, 0.000132860999999998, 0.00013267999999999613, 0.0001325279999999998, 0.00013305499999999998, 0.00013262500000000427, 0.0001324310000000023, 0.00013275000000000092, 0.00013266700000000298, 0.00013258300000000556, 0.0001324169999999958, 0.00013308299999999912, 0.0001331939999999962, 0.00013255499999999948, 0.00013251400000000024, 0.00013291600000000375, 0.00013305499999999998, 0.00013318100000000305, 0.00013251400000000024, 0.00013257000000000546, 0.00013262500000000427, 0.00013244499999999493, 0.00013290299999999672, 0.00013227799999999956, 0.0001324310000000023, 0.00013256899999999905, 0.0001323890000000036, 0.000132264, 0.00013266699999999604, 0.00013281999999999877, 0.0001326389999999969, 0.00013256999999999852, 0.0001324440000000024, 0.00013268000000000307, 0.00013255599999999895]</msg>
<status status="PASS" starttime="20201029 18:16:44.394" endtime="20201029 18:16:44.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.383" endtime="20201029 18:16:44.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.412" endtime="20201029 18:16:44.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.406" endtime="20201029 18:16:44.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.403" endtime="20201029 18:16:44.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.906" endtime="20201029 18:16:44.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.905" endtime="20201029 18:16:44.437"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.460" endtime="20201029 18:16:44.481"></status>
</kw>
<msg timestamp="20201029 18:16:44.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.457" endtime="20201029 18:16:44.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.484" endtime="20201029 18:16:44.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.491" endtime="20201029 18:16:44.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.449" endtime="20201029 18:16:44.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.443" endtime="20201029 18:16:44.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.514" endtime="20201029 18:16:44.853"></status>
</kw>
<msg timestamp="20201029 18:16:44.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040230736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040363944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.511" endtime="20201029 18:16:44.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040230736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040363944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.862" endtime="20201029 18:16:44.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.880" endtime="20201029 18:16:44.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.503" endtime="20201029 18:16:44.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.499" endtime="20201029 18:16:44.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.897" level="INFO">${RESULT} = [{'diff': 0.00013320799999999577}, {'diff': 0.00013325000000000142}, {'diff': 0.00013331999999999927}, {'diff': 0.00013347200000000253}, {'diff': 0.00013361199999999823}, {'diff': 0.000134221999999996...</msg>
<status status="PASS" starttime="20201029 18:16:44.889" endtime="20201029 18:16:44.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.908" level="INFO">${ACCURACY} = {'diff': [0.00013320799999999577, 0.00013325000000000142, 0.00013331999999999927, 0.00013347200000000253, 0.00013361199999999823, 0.00013422199999999634, 0.0001335969999999992, 0.00013383299999999987,...</msg>
<status status="PASS" starttime="20201029 18:16:44.899" endtime="20201029 18:16:44.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.919" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.917" endtime="20201029 18:16:44.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.924" level="INFO">VALUE: [0.00013320799999999577, 0.00013325000000000142, 0.00013331999999999927, 0.00013347200000000253, 0.00013361199999999823, 0.00013422199999999634, 0.0001335969999999992, 0.00013383299999999987, 0.0001333189999999998, 0.0001339719999999961, 0.00013417999999999763, 0.00013347200000000253, 0.00013325000000000142, 0.0001341389999999984, 0.00013395799999999652, 0.00013333299999999937, 0.0001333200000000062, 0.00013369500000000312, 0.00013418100000000405, 0.00013345800000000296, 0.0001342090000000032, 0.00013418100000000405, 0.0001339440000000039, 0.00013333399999999884, 0.00013365299999999747, 0.00013395800000000346, 0.00013329200000000013, 0.00013415299999999797, 0.00013352700000000134, 0.00013351400000000124, 0.00013404200000000088, 0.00013368100000000355, 0.00013379200000000063, 0.00013361099999999876, 0.00013355599999999995, 0.0001341389999999984, 0.0001335410000000009, 0.00013327800000000056, 0.00013400000000000217, 0.00013400000000000217, 0.00013368100000000355, 0.0001335269999999944, 0.00013383299999999987, 0.0001333330000000063, 0.00013340299999999722, 0.0001335839999999991, 0.00013351400000000124, 0.00013372299999999532, 0.0001333609999999985, 0.00013344499999999593]</msg>
<status status="PASS" starttime="20201029 18:16:44.921" endtime="20201029 18:16:44.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.910" endtime="20201029 18:16:44.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.937" endtime="20201029 18:16:44.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.933" endtime="20201029 18:16:44.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.930" endtime="20201029 18:16:44.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.439" endtime="20201029 18:16:44.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.438" endtime="20201029 18:16:44.962"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.985" endtime="20201029 18:16:45.006"></status>
</kw>
<msg timestamp="20201029 18:16:45.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.982" endtime="20201029 18:16:45.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.010" endtime="20201029 18:16:45.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.016" endtime="20201029 18:16:45.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.974" endtime="20201029 18:16:45.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.968" endtime="20201029 18:16:45.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.040" endtime="20201029 18:16:45.380"></status>
</kw>
<msg timestamp="20201029 18:16:45.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040374639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04050975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:45.036" endtime="20201029 18:16:45.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040374639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04050975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:45.390" endtime="20201029 18:16:45.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.408" endtime="20201029 18:16:45.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.029" endtime="20201029 18:16:45.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.024" endtime="20201029 18:16:45.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.425" level="INFO">${RESULT} = [{'diff': 0.00013511100000000026}, {'diff': 0.00013447200000000353}, {'diff': 0.00013462500000000627}, {'diff': 0.0001343609999999995}, {'diff': 0.00013470799999999727}, {'diff': 0.0001343880000000061...</msg>
<status status="PASS" starttime="20201029 18:16:45.417" endtime="20201029 18:16:45.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.440" level="INFO">${ACCURACY} = {'diff': [0.00013511100000000026, 0.00013447200000000353, 0.00013462500000000627, 0.0001343609999999995, 0.00013470799999999727, 0.00013438800000000611, 0.00013487499999999958, 0.00013500000000000317,...</msg>
<status status="PASS" starttime="20201029 18:16:45.428" endtime="20201029 18:16:45.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.451" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.449" endtime="20201029 18:16:45.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.457" level="INFO">VALUE: [0.00013511100000000026, 0.00013447200000000353, 0.00013462500000000627, 0.0001343609999999995, 0.00013470799999999727, 0.00013438800000000611, 0.00013487499999999958, 0.00013500000000000317, 0.00013463799999999942, 0.0001352080000000047, 0.0001344169999999978, 0.00013444500000000387, 0.00013437499999999908, 0.00013445800000000396, 0.00013495799999999752, 0.00013495800000000446, 0.000134861, 0.00013424999999999548, 0.00013462499999999933, 0.00013443099999999736, 0.00013519499999999768, 0.00013433399999999984, 0.000134264000000002, 0.0001346389999999989, 0.00013417999999999763, 0.0001344860000000031, 0.0001347919999999947, 0.0001347770000000026, 0.00013516699999999854, 0.00013511100000000026, 0.00013497200000000403, 0.00013425000000000242, 0.00013448599999999616, 0.0001351939999999982, 0.00013423600000000285, 0.00013493000000000532, 0.00013517999999999863, 0.00013490299999999872, 0.00013473599999999641, 0.00013472199999999684, 0.00013515299999999897, 0.0001347640000000025, 0.00013429200000000113, 0.00013454200000000138, 0.0001342770000000021, 0.00013469499999999718, 0.00013487499999999958, 0.0001347919999999947, 0.00013516599999999906, 0.00013450000000000267]</msg>
<status status="PASS" starttime="20201029 18:16:45.454" endtime="20201029 18:16:45.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.442" endtime="20201029 18:16:45.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.469" endtime="20201029 18:16:45.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.465" endtime="20201029 18:16:45.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.463" endtime="20201029 18:16:45.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.964" endtime="20201029 18:16:45.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.963" endtime="20201029 18:16:45.494"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.517" endtime="20201029 18:16:45.538"></status>
</kw>
<msg timestamp="20201029 18:16:45.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.514" endtime="20201029 18:16:45.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.542" endtime="20201029 18:16:45.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.548" endtime="20201029 18:16:45.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.507" endtime="20201029 18:16:45.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.501" endtime="20201029 18:16:45.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.572" endtime="20201029 18:16:45.913"></status>
</kw>
<msg timestamp="20201029 18:16:45.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040076444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040212194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.568" endtime="20201029 18:16:45.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040076444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040212194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.923" endtime="20201029 18:16:45.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.941" endtime="20201029 18:16:45.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.561" endtime="20201029 18:16:45.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.556" endtime="20201029 18:16:45.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.958" level="INFO">${RESULT} = [{'diff': 0.00013574999999999698}, {'diff': 0.00013579200000000263}, {'diff': 0.00013544499999999793}, {'diff': 0.0001358480000000009}, {'diff': 0.0001354169999999988}, {'diff': 0.00013548599999999716...</msg>
<status status="PASS" starttime="20201029 18:16:45.950" endtime="20201029 18:16:45.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.967" level="INFO">${ACCURACY} = {'diff': [0.00013574999999999698, 0.00013579200000000263, 0.00013544499999999793, 0.0001358480000000009, 0.0001354169999999988, 0.00013548599999999716, 0.0001357640000000035, 0.00013544399999999845, 0...</msg>
<status status="PASS" starttime="20201029 18:16:45.960" endtime="20201029 18:16:45.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.978" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.976" endtime="20201029 18:16:45.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.984" level="INFO">VALUE: [0.00013574999999999698, 0.00013579200000000263, 0.00013544499999999793, 0.0001358480000000009, 0.0001354169999999988, 0.00013548599999999716, 0.0001357640000000035, 0.00013544399999999845, 0.00013531999999999433, 0.00013588900000000015, 0.00013562500000000033, 0.0001357640000000035, 0.00013626399999999705, 0.0001358480000000009, 0.0001354860000000041, 0.0001353610000000005, 0.00013612500000000083, 0.00013548599999999716, 0.00013624999999999748, 0.00013555600000000195, 0.00013561200000000023, 0.0001355970000000012, 0.00013531999999999433, 0.00013562500000000033, 0.00013627699999999715, 0.0001356530000000064, 0.00013545799999999802, 0.00013548700000000358, 0.0001356939999999987, 0.00013588900000000015, 0.0001361939999999992, 0.0001354169999999988, 0.00013605499999999604, 0.0001356809999999986, 0.00013601400000000374, 0.00013544499999999793, 0.00013575000000000392, 0.00013561100000000076, 0.00013583400000000134, 0.00013569400000000564, 0.00013540299999999922, 0.00013540199999999974, 0.00013572299999999732, 0.00013580500000000273, 0.00013593000000000632, 0.00013548599999999716, 0.00013554099999999597, 0.00013587500000000058, 0.00013537500000000008, 0.00013549999999999673]</msg>
<status status="PASS" starttime="20201029 18:16:45.981" endtime="20201029 18:16:45.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.969" endtime="20201029 18:16:45.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.996" endtime="20201029 18:16:46.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.992" endtime="20201029 18:16:46.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.990" endtime="20201029 18:16:46.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.497" endtime="20201029 18:16:46.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.495" endtime="20201029 18:16:46.022"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.045" endtime="20201029 18:16:46.067"></status>
</kw>
<msg timestamp="20201029 18:16:46.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.041" endtime="20201029 18:16:46.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.071" endtime="20201029 18:16:46.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.077" endtime="20201029 18:16:46.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.034" endtime="20201029 18:16:46.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.028" endtime="20201029 18:16:46.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.101" endtime="20201029 18:16:46.439"></status>
</kw>
<msg timestamp="20201029 18:16:46.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041577681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041714819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.097" endtime="20201029 18:16:46.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041577681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041714819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.448" endtime="20201029 18:16:46.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.467" endtime="20201029 18:16:46.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.090" endtime="20201029 18:16:46.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.085" endtime="20201029 18:16:46.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.484" level="INFO">${RESULT} = [{'diff': 0.00013713800000000193}, {'diff': 0.0001371249999999949}, {'diff': 0.00013724999999999848}, {'diff': 0.000136861000000002}, {'diff': 0.00013647299999999807}, {'diff': 0.00013655600000000295}...</msg>
<status status="PASS" starttime="20201029 18:16:46.475" endtime="20201029 18:16:46.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:46.493" level="INFO">${ACCURACY} = {'diff': [0.00013713800000000193, 0.0001371249999999949, 0.00013724999999999848, 0.000136861000000002, 0.00013647299999999807, 0.00013655600000000295, 0.00013705500000000398, 0.0001370410000000044, 0....</msg>
<status status="PASS" starttime="20201029 18:16:46.486" endtime="20201029 18:16:46.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.504" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:46.502" endtime="20201029 18:16:46.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.509" level="INFO">VALUE: [0.00013713800000000193, 0.0001371249999999949, 0.00013724999999999848, 0.000136861000000002, 0.00013647299999999807, 0.00013655600000000295, 0.00013705500000000398, 0.0001370410000000044, 0.0001365280000000038, 0.00013693099999999986, 0.00013672299999999832, 0.00013643099999999936, 0.00013712500000000183, 0.00013695799999999952, 0.00013681899999999636, 0.0001362770000000041, 0.00013658299999999568, 0.00013654200000000338, 0.0001371940000000002, 0.00013627800000000356, 0.00013668000000000013, 0.00013640200000000074, 0.00013687500000000158, 0.00013684700000000244, 0.00013643099999999936, 0.00013638900000000065, 0.00013711100000000226, 0.00013672299999999832, 0.00013723700000000533, 0.00013670799999999927, 0.0001371810000000001, 0.00013700000000000517, 0.00013666600000000056, 0.00013705500000000398, 0.00013687500000000158, 0.00013704200000000388, 0.00013637500000000108, 0.00013629200000000313, 0.0001369170000000003, 0.0001368469999999955, 0.00013627800000000356, 0.00013716700000000054, 0.00013698599999999866, 0.0001369719999999991, 0.00013722299999999882, 0.00013659800000000166, 0.0001365689999999961, 0.0001368889999999942, 0.0001364589999999985, 0.00013627799999999662]</msg>
<status status="PASS" starttime="20201029 18:16:46.506" endtime="20201029 18:16:46.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.495" endtime="20201029 18:16:46.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:46.523" endtime="20201029 18:16:46.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.518" endtime="20201029 18:16:46.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.515" endtime="20201029 18:16:46.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.024" endtime="20201029 18:16:46.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.023" endtime="20201029 18:16:46.548"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.572" endtime="20201029 18:16:46.593"></status>
</kw>
<msg timestamp="20201029 18:16:46.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.568" endtime="20201029 18:16:46.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.596" endtime="20201029 18:16:46.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.602" endtime="20201029 18:16:46.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.561" endtime="20201029 18:16:46.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.555" endtime="20201029 18:16:46.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.626" endtime="20201029 18:16:46.966"></status>
</kw>
<msg timestamp="20201029 18:16:46.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.623" endtime="20201029 18:16:46.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.975" endtime="20201029 18:16:46.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.994" endtime="20201029 18:16:46.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.615" endtime="20201029 18:16:46.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.611" endtime="20201029 18:16:47.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.011" level="INFO">${RESULT} = [{'diff': 0.00013787499999999564}, {'diff': 0.00013824999999999948}, {'diff': 0.0001380689999999976}, {'diff': 0.00013773599999999941}, {'diff': 0.00013787500000000258}, {'diff': 0.0001376380000000024...</msg>
<status status="PASS" starttime="20201029 18:16:47.003" endtime="20201029 18:16:47.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.022" level="INFO">${ACCURACY} = {'diff': [0.00013787499999999564, 0.00013824999999999948, 0.0001380689999999976, 0.00013773599999999941, 0.00013787500000000258, 0.00013763800000000243, 0.00013825000000000642, 0.0001380689999999976, ...</msg>
<status status="PASS" starttime="20201029 18:16:47.014" endtime="20201029 18:16:47.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.033" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.031" endtime="20201029 18:16:47.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.038" level="INFO">VALUE: [0.00013787499999999564, 0.00013824999999999948, 0.0001380689999999976, 0.00013773599999999941, 0.00013787500000000258, 0.00013763800000000243, 0.00013825000000000642, 0.0001380689999999976, 0.00013768000000000113, 0.0001382919999999982, 0.0001380970000000037, 0.00013761100000000276, 0.00013787500000000258, 0.00013825000000000642, 0.00013784700000000344, 0.00013822200000000034, 0.00013755599999999701, 0.0001376810000000006, 0.0001373610000000025, 0.00013823599999999991, 0.0001378469999999965, 0.00013752799999999787, 0.000137959, 0.00013743100000000036, 0.0001374719999999996, 0.00013750000000000567, 0.00013734700000000294, 0.00013812500000000283, 0.00013744400000000045, 0.00013776399999999855, 0.00013776399999999855, 0.00013819500000000068, 0.00013820900000000025, 0.0001377919999999977, 0.00013797299999999957, 0.00013776399999999855, 0.00013826300000000652, 0.00013787500000000258, 0.00013787499999999564, 0.00013743000000000088, 0.00013794399999999402, 0.00013809799999999622, 0.00013790200000000225, 0.00013768000000000113, 0.00013811099999999632, 0.00013766700000000104, 0.00013773599999999941, 0.00013819500000000068, 0.00013765300000000147, 0.00013774999999999898]</msg>
<status status="PASS" starttime="20201029 18:16:47.035" endtime="20201029 18:16:47.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.024" endtime="20201029 18:16:47.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.051" endtime="20201029 18:16:47.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.047" endtime="20201029 18:16:47.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.044" endtime="20201029 18:16:47.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.551" endtime="20201029 18:16:47.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.550" endtime="20201029 18:16:47.076"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.099" endtime="20201029 18:16:47.121"></status>
</kw>
<msg timestamp="20201029 18:16:47.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.096" endtime="20201029 18:16:47.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.124" endtime="20201029 18:16:47.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.130" endtime="20201029 18:16:47.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.089" endtime="20201029 18:16:47.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.083" endtime="20201029 18:16:47.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.154" endtime="20201029 18:16:47.491"></status>
</kw>
<msg timestamp="20201029 18:16:47.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040155361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040294542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.151" endtime="20201029 18:16:47.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040155361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040294542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.501" endtime="20201029 18:16:47.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.519" endtime="20201029 18:16:47.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.143" endtime="20201029 18:16:47.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.138" endtime="20201029 18:16:47.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.536" level="INFO">${RESULT} = [{'diff': 0.0001391810000000021}, {'diff': 0.00013843100000000136}, {'diff': 0.00013912500000000383}, {'diff': 0.0001387640000000065}, {'diff': 0.00013874999999999998}, {'diff': 0.00013854199999999844...</msg>
<status status="PASS" starttime="20201029 18:16:47.528" endtime="20201029 18:16:47.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.547" level="INFO">${ACCURACY} = {'diff': [0.0001391810000000021, 0.00013843100000000136, 0.00013912500000000383, 0.0001387640000000065, 0.00013874999999999998, 0.00013854199999999844, 0.00013854199999999844, 0.00013872300000000032, ...</msg>
<status status="PASS" starttime="20201029 18:16:47.538" endtime="20201029 18:16:47.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.558" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.556" endtime="20201029 18:16:47.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.564" level="INFO">VALUE: [0.0001391810000000021, 0.00013843100000000136, 0.00013912500000000383, 0.0001387640000000065, 0.00013874999999999998, 0.00013854199999999844, 0.00013854199999999844, 0.00013872300000000032, 0.00013900000000000023, 0.0001383049999999983, 0.00013920800000000177, 0.00013840300000000222, 0.0001392919999999992, 0.00013902799999999937, 0.00013920800000000177, 0.0001384720000000006, 0.00013855499999999854, 0.00013874999999999998, 0.0001386249999999964, 0.00013859699999999725, 0.0001387219999999939, 0.0001391669999999956, 0.00013847199999999366, 0.00013877799999999912, 0.0001385139999999993, 0.0001392089999999943, 0.000138652000000003, 0.00013905599999999851, 0.00013861100000000376, 0.00013866700000000204, 0.0001385970000000042, 0.00013881999999999783, 0.00013898600000000066, 0.00013887499999999664, 0.0001390139999999998, 0.00013908299999999818, 0.00013831999999999733, 0.00013873600000000041, 0.00013912500000000383, 0.00013858299999999768, 0.0001391390000000034, 0.00013888900000000315, 0.00013904200000000588, 0.00013841699999999485, 0.00013832000000000427, 0.0001384590000000005, 0.0001383339999999969, 0.00013912500000000383, 0.0001388889999999962, 0.00013840200000000275]</msg>
<status status="PASS" starttime="20201029 18:16:47.561" endtime="20201029 18:16:47.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.549" endtime="20201029 18:16:47.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.576" endtime="20201029 18:16:47.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.572" endtime="20201029 18:16:47.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.569" endtime="20201029 18:16:47.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.078" endtime="20201029 18:16:47.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.077" endtime="20201029 18:16:47.601"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.624" endtime="20201029 18:16:47.646"></status>
</kw>
<msg timestamp="20201029 18:16:47.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.621" endtime="20201029 18:16:47.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.649" endtime="20201029 18:16:47.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.655" endtime="20201029 18:16:47.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.614" endtime="20201029 18:16:47.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.608" endtime="20201029 18:16:47.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.679" endtime="20201029 18:16:48.020"></status>
</kw>
<msg timestamp="20201029 18:16:48.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040033403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.676" endtime="20201029 18:16:48.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040033403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.029" endtime="20201029 18:16:48.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.047" endtime="20201029 18:16:48.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.668" endtime="20201029 18:16:48.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.664" endtime="20201029 18:16:48.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.065" level="INFO">${RESULT} = [{'diff': 0.00014002800000000037}, {'diff': 0.00013936099999999757}, {'diff': 0.00014013899999999746}, {'diff': 0.0001394720000000016}, {'diff': 0.00013973600000000141}, {'diff': 0.0001393749999999971...</msg>
<status status="PASS" starttime="20201029 18:16:48.056" endtime="20201029 18:16:48.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.074" level="INFO">${ACCURACY} = {'diff': [0.00014002800000000037, 0.00013936099999999757, 0.00014013899999999746, 0.0001394720000000016, 0.00013973600000000141, 0.00013937499999999714, 0.0001401940000000032, 0.0001394720000000016, 0...</msg>
<status status="PASS" starttime="20201029 18:16:48.067" endtime="20201029 18:16:48.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.085" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.082" endtime="20201029 18:16:48.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.090" level="INFO">VALUE: [0.00014002800000000037, 0.00013936099999999757, 0.00014013899999999746, 0.0001394720000000016, 0.00013973600000000141, 0.00013937499999999714, 0.0001401940000000032, 0.0001394720000000016, 0.00013962500000000433, 0.00013972200000000184, 0.00013969500000000218, 0.0001394720000000016, 0.0001396249999999974, 0.0001396669999999961, 0.00014011099999999832, 0.00014004100000000047, 0.0001402920000000002, 0.00014011100000000526, 0.0001401249999999979, 0.00013950000000000073, 0.00013995800000000252, 0.00013979100000000022, 0.00014018000000000364, 0.00013938900000000365, 0.00013944500000000193, 0.00014029199999999326, 0.0001397919999999997, 0.0001393339999999979, 0.00013984799999999797, 0.0001395140000000003, 0.00013983299999999893, 0.0001398469999999985, 0.0001394170000000028, 0.00014005599999999951, 0.0001397919999999997, 0.00013965299999999653, 0.00013926400000000005, 0.00013988900000000415, 0.00013948600000000116, 0.00013945800000000202, 0.00013958299999999868, 0.00013987499999999764, 0.00013927799999999962, 0.00014018099999999617, 0.0001398049999999998, 0.00013972200000000184, 0.00013987499999999764, 0.00013942999999999595, 0.00013933300000000537, 0.00013933299999999843]</msg>
<status status="PASS" starttime="20201029 18:16:48.087" endtime="20201029 18:16:48.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.076" endtime="20201029 18:16:48.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.103" endtime="20201029 18:16:48.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.098" endtime="20201029 18:16:48.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.096" endtime="20201029 18:16:48.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.603" endtime="20201029 18:16:48.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.602" endtime="20201029 18:16:48.128"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.151" endtime="20201029 18:16:48.174"></status>
</kw>
<msg timestamp="20201029 18:16:48.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.148" endtime="20201029 18:16:48.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.177" endtime="20201029 18:16:48.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.184" endtime="20201029 18:16:48.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.140" endtime="20201029 18:16:48.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.135" endtime="20201029 18:16:48.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.207" endtime="20201029 18:16:48.546"></status>
</kw>
<msg timestamp="20201029 18:16:48.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.204" endtime="20201029 18:16:48.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.556" endtime="20201029 18:16:48.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.574" endtime="20201029 18:16:48.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.197" endtime="20201029 18:16:48.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.192" endtime="20201029 18:16:48.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.592" level="INFO">${RESULT} = [{'diff': 0.00014111099999999932}, {'diff': 0.0001403339999999989}, {'diff': 0.00014098600000000266}, {'diff': 0.00014109699999999975}, {'diff': 0.00014051300000000183}, {'diff': 0.0001411519999999985...</msg>
<status status="PASS" starttime="20201029 18:16:48.583" endtime="20201029 18:16:48.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.601" level="INFO">${ACCURACY} = {'diff': [0.00014111099999999932, 0.0001403339999999989, 0.00014098600000000266, 0.00014109699999999975, 0.00014051300000000183, 0.00014115199999999856, 0.00014080600000000026, 0.00014074999999999505,...</msg>
<status status="PASS" starttime="20201029 18:16:48.594" endtime="20201029 18:16:48.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.612" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.610" endtime="20201029 18:16:48.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.617" level="INFO">VALUE: [0.00014111099999999932, 0.0001403339999999989, 0.00014098600000000266, 0.00014109699999999975, 0.00014051300000000183, 0.00014115199999999856, 0.00014080600000000026, 0.00014074999999999505, 0.00014029100000000072, 0.00014062500000000533, 0.00014069399999999677, 0.00014036099999999857, 0.00014027800000000062, 0.00014027799999999369, 0.00014048600000000216, 0.00014025000000000148, 0.0001403889999999977, 0.0001411249999999989, 0.00014065300000000447, 0.000140959000000003, 0.00014090299999999778, 0.0001411799999999977, 0.00014125000000000248, 0.00014061099999999882, 0.0001403050000000003, 0.0001405129999999949, 0.00014055500000000054, 0.00014069500000000318, 0.00014054200000000044, 0.00014037500000000508, 0.00014105600000000051, 0.0001411799999999977, 0.00014088900000000515, 0.00014059699999999925, 0.00014052800000000087, 0.0001405690000000001, 0.00014109699999999975, 0.00014036099999999857, 0.00014120799999999684, 0.00014033400000000584, 0.0001403050000000003, 0.00014108300000000018, 0.0001406940000000037, 0.00014109799999999922, 0.00014119399999999727, 0.00014058299999999968, 0.00014048600000000216, 0.00014044500000000293, 0.0001403050000000003, 0.00014109699999999975]</msg>
<status status="PASS" starttime="20201029 18:16:48.614" endtime="20201029 18:16:48.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.603" endtime="20201029 18:16:48.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.636" endtime="20201029 18:16:48.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.630" endtime="20201029 18:16:48.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.627" endtime="20201029 18:16:48.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.130" endtime="20201029 18:16:48.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.129" endtime="20201029 18:16:48.661"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.684" endtime="20201029 18:16:48.705"></status>
</kw>
<msg timestamp="20201029 18:16:48.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.680" endtime="20201029 18:16:48.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.708" endtime="20201029 18:16:48.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.715" endtime="20201029 18:16:48.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.673" endtime="20201029 18:16:48.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.667" endtime="20201029 18:16:48.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.738" endtime="20201029 18:16:49.077"></status>
</kw>
<msg timestamp="20201029 18:16:49.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039916847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040058361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.735" endtime="20201029 18:16:49.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039916847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040058361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.086" endtime="20201029 18:16:49.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.104" endtime="20201029 18:16:49.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.728" endtime="20201029 18:16:49.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.723" endtime="20201029 18:16:49.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.121" level="INFO">${RESULT} = [{'diff': 0.0001415140000000023}, {'diff': 0.00014204099999999553}, {'diff': 0.0001412920000000012}, {'diff': 0.000141832999999994}, {'diff': 0.0001418470000000005}, {'diff': 0.00014202800000000237}, ...</msg>
<status status="PASS" starttime="20201029 18:16:49.113" endtime="20201029 18:16:49.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:49.132" level="INFO">${ACCURACY} = {'diff': [0.0001415140000000023, 0.00014204099999999553, 0.0001412920000000012, 0.000141832999999994, 0.0001418470000000005, 0.00014202800000000237, 0.00014148599999999623, 0.0001421810000000051, 0.00...</msg>
<status status="PASS" starttime="20201029 18:16:49.124" endtime="20201029 18:16:49.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.143" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:49.141" endtime="20201029 18:16:49.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.148" level="INFO">VALUE: [0.0001415140000000023, 0.00014204099999999553, 0.0001412920000000012, 0.000141832999999994, 0.0001418470000000005, 0.00014202800000000237, 0.00014148599999999623, 0.0001421810000000051, 0.00014183300000000093, 0.00014219500000000468, 0.00014176400000000255, 0.00014216599999999913, 0.00014219399999999827, 0.00014142999999999795, 0.00014144399999999752, 0.00014165299999999853, 0.00014195799999999759, 0.00014220800000000478, 0.00014147299999999613, 0.00014177800000000212, 0.00014219500000000468, 0.00014223599999999698, 0.0001418050000000018, 0.000142041999999995, 0.00014173599999999648, 0.00014143000000000489, 0.00014226400000000305, 0.00014215299999999903, 0.00014183300000000093, 0.00014159700000000025, 0.00014173599999999648, 0.00014184799999999997, 0.00014134799999999947, 0.0001418889999999992, 0.00014169399999999777, 0.00014159700000000025, 0.0001413339999999999, 0.0001416249999999994, 0.00014181900000000136, 0.00014208300000000118, 0.00014154200000000144, 0.00014134799999999947, 0.0001414999999999958, 0.00014220900000000425, 0.00014226399999999612, 0.0001416799999999982, 0.00014127700000000215, 0.00014224999999999655, 0.0001420690000000016, 0.00014195800000000453]</msg>
<status status="PASS" starttime="20201029 18:16:49.145" endtime="20201029 18:16:49.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.134" endtime="20201029 18:16:49.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:49.161" endtime="20201029 18:16:49.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.157" endtime="20201029 18:16:49.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.154" endtime="20201029 18:16:49.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.663" endtime="20201029 18:16:49.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.662" endtime="20201029 18:16:49.186"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.209" endtime="20201029 18:16:49.231"></status>
</kw>
<msg timestamp="20201029 18:16:49.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.206" endtime="20201029 18:16:49.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.234" endtime="20201029 18:16:49.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.240" endtime="20201029 18:16:49.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.198" endtime="20201029 18:16:49.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.193" endtime="20201029 18:16:49.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.264" endtime="20201029 18:16:49.601"></status>
</kw>
<msg timestamp="20201029 18:16:49.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040084722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040227069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.261" endtime="20201029 18:16:49.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040084722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040227069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.611" endtime="20201029 18:16:49.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.629" endtime="20201029 18:16:49.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.253" endtime="20201029 18:16:49.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.248" endtime="20201029 18:16:49.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.646" level="INFO">${RESULT} = [{'diff': 0.00014234699999999406}, {'diff': 0.00014266700000000604}, {'diff': 0.00014283300000000193}, {'diff': 0.0001432219999999984}, {'diff': 0.00014291699999999935}, {'diff': 0.0001428470000000015...</msg>
<status status="PASS" starttime="20201029 18:16:49.638" endtime="20201029 18:16:49.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:49.657" level="INFO">${ACCURACY} = {'diff': [0.00014234699999999406, 0.00014266700000000604, 0.00014283300000000193, 0.0001432219999999984, 0.00014291699999999935, 0.0001428470000000015, 0.00014226399999999612, 0.00014319399999999927, ...</msg>
<status status="PASS" starttime="20201029 18:16:49.649" endtime="20201029 18:16:49.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.668" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:49.666" endtime="20201029 18:16:49.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.674" level="INFO">VALUE: [0.00014234699999999406, 0.00014266700000000604, 0.00014283300000000193, 0.0001432219999999984, 0.00014291699999999935, 0.0001428470000000015, 0.00014226399999999612, 0.00014319399999999927, 0.0001428470000000015, 0.00014266599999999963, 0.00014297300000000457, 0.00014324999999999755, 0.00014224999999999655, 0.00014252800000000287, 0.0001423889999999997, 0.00014319399999999927, 0.00014293099999999892, 0.00014295899999999806, 0.00014308299999999524, 0.00014227799999999569, 0.00014229100000000272, 0.0001424999999999968, 0.00014276400000000355, 0.00014229100000000272, 0.0001428340000000014, 0.00014254200000000244, 0.00014265299999999953, 0.00014248599999999723, 0.0001432219999999984, 0.00014252699999999646, 0.00014258300000000168, 0.00014295799999999859, 0.00014290299999999978, 0.0001430140000000038, 0.0001427219999999979, 0.00014291599999999988, 0.0001431250000000009, 0.00014232000000000133, 0.00014251399999999637, 0.00014227800000000262, 0.00014237500000000014, 0.0001430690000000026, 0.00014283300000000193, 0.00014272299999999738, 0.00014233300000000143, 0.00014248600000000416, 0.00014227800000000262, 0.0001423889999999997, 0.0001427219999999979, 0.00014272300000000432]</msg>
<status status="PASS" starttime="20201029 18:16:49.671" endtime="20201029 18:16:49.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.659" endtime="20201029 18:16:49.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:49.686" endtime="20201029 18:16:49.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.682" endtime="20201029 18:16:49.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.680" endtime="20201029 18:16:49.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.188" endtime="20201029 18:16:49.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.187" endtime="20201029 18:16:49.712"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.734" endtime="20201029 18:16:49.756"></status>
</kw>
<msg timestamp="20201029 18:16:49.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.731" endtime="20201029 18:16:49.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.759" endtime="20201029 18:16:49.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.766" endtime="20201029 18:16:49.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.724" endtime="20201029 18:16:49.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.718" endtime="20201029 18:16:49.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.789" endtime="20201029 18:16:50.128"></status>
</kw>
<msg timestamp="20201029 18:16:50.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039931431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040075444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.786" endtime="20201029 18:16:50.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039931431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040075444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.137" endtime="20201029 18:16:50.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.155" endtime="20201029 18:16:50.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.778" endtime="20201029 18:16:50.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.774" endtime="20201029 18:16:50.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.172" level="INFO">${RESULT} = [{'diff': 0.0001440129999999984}, {'diff': 0.00014423599999999898}, {'diff': 0.00014376299999999814}, {'diff': 0.00014391700000000035}, {'diff': 0.00014402799999999744}, {'diff': 0.0001434859999999982...</msg>
<status status="PASS" starttime="20201029 18:16:50.163" endtime="20201029 18:16:50.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:50.181" level="INFO">${ACCURACY} = {'diff': [0.0001440129999999984, 0.00014423599999999898, 0.00014376299999999814, 0.00014391700000000035, 0.00014402799999999744, 0.00014348599999999823, 0.00014345799999999909, 0.00014356999999999565,...</msg>
<status status="PASS" starttime="20201029 18:16:50.174" endtime="20201029 18:16:50.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.192" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:50.190" endtime="20201029 18:16:50.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.197" level="INFO">VALUE: [0.0001440129999999984, 0.00014423599999999898, 0.00014376299999999814, 0.00014391700000000035, 0.00014402799999999744, 0.00014348599999999823, 0.00014345799999999909, 0.00014356999999999565, 0.00014352699999999746, 0.0001436250000000014, 0.00014358400000000215, 0.00014386100000000207, 0.00014343099999999942, 0.00014369499999999924, 0.00014380600000000326, 0.00014397300000000557, 0.0001440690000000036, 0.00014420799999999984, 0.00014326400000000405, 0.00014386100000000207, 0.0001436250000000014, 0.00014413900000000146, 0.00014351399999999737, 0.0001433199999999954, 0.0001436670000000001, 0.00014415300000000103, 0.00014383300000000293, 0.00014377800000000412, 0.00014419499999999974, 0.0001439999999999983, 0.00014369399999999977, 0.00014419500000000668, 0.00014393000000000045, 0.0001434999999999978, 0.00014429199999999726, 0.00014420799999999984, 0.0001442920000000042, 0.00014352699999999746, 0.00014415300000000103, 0.00014333300000000243, 0.00014355500000000354, 0.0001436670000000001, 0.00014370799999999934, 0.00014359700000000225, 0.0001440140000000048, 0.00014424999999999855, 0.00014348599999999823, 0.0001437920000000037, 0.0001441670000000006, 0.0001434999999999978]</msg>
<status status="PASS" starttime="20201029 18:16:50.194" endtime="20201029 18:16:50.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.183" endtime="20201029 18:16:50.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.210" endtime="20201029 18:16:50.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.205" endtime="20201029 18:16:50.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.203" endtime="20201029 18:16:50.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.714" endtime="20201029 18:16:50.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.712" endtime="20201029 18:16:50.242"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.270" endtime="20201029 18:16:50.297"></status>
</kw>
<msg timestamp="20201029 18:16:50.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.267" endtime="20201029 18:16:50.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.301" endtime="20201029 18:16:50.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.307" endtime="20201029 18:16:50.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.258" endtime="20201029 18:16:50.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.251" endtime="20201029 18:16:50.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.331" endtime="20201029 18:16:50.675"></status>
</kw>
<msg timestamp="20201029 18:16:50.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057747569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057892778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.327" endtime="20201029 18:16:50.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057747569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057892778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.685" endtime="20201029 18:16:50.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.704" endtime="20201029 18:16:50.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.320" endtime="20201029 18:16:50.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.315" endtime="20201029 18:16:50.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.721" level="INFO">${RESULT} = [{'diff': 0.0001452090000000003}, {'diff': 0.0001446670000000011}, {'diff': 0.000144445}, {'diff': 0.000144347000000003}, {'diff': 0.00014458299999999674}, {'diff': 0.00014430599999999683}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:16:50.712" endtime="20201029 18:16:50.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:50.730" level="INFO">${ACCURACY} = {'diff': [0.0001452090000000003, 0.0001446670000000011, 0.000144445, 0.000144347000000003, 0.00014458299999999674, 0.00014430599999999683, 0.00014436099999999563, 0.00014522299999999988, 0.00014483400...</msg>
<status status="PASS" starttime="20201029 18:16:50.723" endtime="20201029 18:16:50.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.741" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:50.738" endtime="20201029 18:16:50.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.746" level="INFO">VALUE: [0.0001452090000000003, 0.0001446670000000011, 0.000144445, 0.000144347000000003, 0.00014458299999999674, 0.00014430599999999683, 0.00014436099999999563, 0.00014522299999999988, 0.0001448340000000034, 0.00014436200000000204, 0.00014479100000000522, 0.0001452220000000004, 0.00014502800000000537, 0.0001449869999999992, 0.00014437500000000214, 0.0001449999999999993, 0.00014430499999999735, 0.00014437500000000214, 0.00014487500000000264, 0.0001444020000000018, 0.00014440300000000128, 0.00014433399999999597, 0.00014458299999999674, 0.00014469500000000024, 0.00014493000000000145, 0.00014477799999999819, 0.0001448050000000048, 0.00014519400000000127, 0.00014518100000000117, 0.00014526399999999912, 0.00014513900000000246, 0.00014458300000000368, 0.0001452220000000004, 0.00014476300000000608, 0.0001446380000000025, 0.00014524999999999955, 0.00014476399999999168, 0.00014483300000001087, 0.0001450279999999915, 0.0001444720000000066, 0.00014494499999999355, 0.00014504099999999853, 0.00014498599999999973, 0.000144527999999991, 0.00014519500000000074, 0.0001450970000000107, 0.00014502800000000537, 0.00014470800000000728, 0.00014427799999999769, 0.00014468099999999373]</msg>
<status status="PASS" starttime="20201029 18:16:50.743" endtime="20201029 18:16:50.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.732" endtime="20201029 18:16:50.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.760" endtime="20201029 18:16:50.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.754" endtime="20201029 18:16:50.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.752" endtime="20201029 18:16:50.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.246" endtime="20201029 18:16:50.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.245" endtime="20201029 18:16:50.786"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.809" endtime="20201029 18:16:50.830"></status>
</kw>
<msg timestamp="20201029 18:16:50.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.805" endtime="20201029 18:16:50.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.834" endtime="20201029 18:16:50.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.840" endtime="20201029 18:16:50.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.798" endtime="20201029 18:16:50.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.792" endtime="20201029 18:16:50.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.863" endtime="20201029 18:16:51.203"></status>
</kw>
<msg timestamp="20201029 18:16:51.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040544278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.860" endtime="20201029 18:16:51.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040544278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.213" endtime="20201029 18:16:51.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.231" endtime="20201029 18:16:51.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.853" endtime="20201029 18:16:51.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.848" endtime="20201029 18:16:51.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:51.248" level="INFO">${RESULT} = [{'diff': 0.00014618100000000217}, {'diff': 0.00014618100000000217}, {'diff': 0.0001456670000000021}, {'diff': 0.000145832999999998}, {'diff': 0.00014524999999999955}, {'diff': 0.0001452920000000052},...</msg>
<status status="PASS" starttime="20201029 18:16:51.239" endtime="20201029 18:16:51.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:51.258" level="INFO">${ACCURACY} = {'diff': [0.00014618100000000217, 0.00014618100000000217, 0.0001456670000000021, 0.000145832999999998, 0.00014524999999999955, 0.0001452920000000052, 0.00014613900000000346, 0.0001462090000000013, 0.0...</msg>
<status status="PASS" starttime="20201029 18:16:51.250" endtime="20201029 18:16:51.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.269" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:51.267" endtime="20201029 18:16:51.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.275" level="INFO">VALUE: [0.00014618100000000217, 0.00014618100000000217, 0.0001456670000000021, 0.000145832999999998, 0.00014524999999999955, 0.0001452920000000052, 0.00014613900000000346, 0.0001462090000000013, 0.00014541599999999544, 0.0001457220000000009, 0.0001462090000000013, 0.00014534699999999706, 0.00014586100000000407, 0.00014613899999999652, 0.00014565300000000253, 0.00014605600000000551, 0.000145347000000004, 0.00014545900000000056, 0.00014530600000000476, 0.00014558300000000468, 0.000145445000000001, 0.0001462220000000014, 0.00014530499999999835, 0.00014547200000000066, 0.00014579199999999876, 0.0001455419999999985, 0.0001458619999999966, 0.00014608399999999772, 0.00014584699999999756, 0.0001457769999999997, 0.0001454020000000028, 0.00014594399999999508, 0.0001458890000000032, 0.00014543100000000142, 0.00014568099999999473, 0.00014558300000000468, 0.00014623600000000098, 0.00014591600000000288, 0.00014605599999999858, 0.00014568099999999473, 0.00014575000000000005, 0.00014548600000000023, 0.0001458619999999966, 0.0001457220000000009, 0.00014537500000000314, 0.00014612499999999695, 0.00014575000000000005, 0.0001456670000000021, 0.00014601399999999987, 0.0001458890000000032]</msg>
<status status="PASS" starttime="20201029 18:16:51.272" endtime="20201029 18:16:51.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.260" endtime="20201029 18:16:51.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:51.287" endtime="20201029 18:16:51.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.283" endtime="20201029 18:16:51.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.280" endtime="20201029 18:16:51.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.788" endtime="20201029 18:16:51.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.787" endtime="20201029 18:16:51.312"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.335" endtime="20201029 18:16:51.357"></status>
</kw>
<msg timestamp="20201029 18:16:51.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.332" endtime="20201029 18:16:51.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.360" endtime="20201029 18:16:51.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.367" endtime="20201029 18:16:51.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.325" endtime="20201029 18:16:51.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.319" endtime="20201029 18:16:51.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.390" endtime="20201029 18:16:51.730"></status>
</kw>
<msg timestamp="20201029 18:16:51.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040043806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040190417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.387" endtime="20201029 18:16:51.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040043806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040190417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.739" endtime="20201029 18:16:51.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.757" endtime="20201029 18:16:51.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.380" endtime="20201029 18:16:51.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.375" endtime="20201029 18:16:51.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:51.775" level="INFO">${RESULT} = [{'diff': 0.00014661099999999788}, {'diff': 0.00014640300000000328}, {'diff': 0.00014647200000000166}, {'diff': 0.00014648600000000123}, {'diff': 0.0001467079999999954}, {'diff': 0.0001470270000000009...</msg>
<status status="PASS" starttime="20201029 18:16:51.766" endtime="20201029 18:16:51.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:51.786" level="INFO">${ACCURACY} = {'diff': [0.00014661099999999788, 0.00014640300000000328, 0.00014647200000000166, 0.00014648600000000123, 0.0001467079999999954, 0.00014702700000000096, 0.00014668100000000267, 0.00014631899999999892,...</msg>
<status status="PASS" starttime="20201029 18:16:51.777" endtime="20201029 18:16:51.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.797" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:51.795" endtime="20201029 18:16:51.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.802" level="INFO">VALUE: [0.00014661099999999788, 0.00014640300000000328, 0.00014647200000000166, 0.00014648600000000123, 0.0001467079999999954, 0.00014702700000000096, 0.00014668100000000267, 0.00014631899999999892, 0.0001472220000000024, 0.00014643000000000295, 0.00014726300000000164, 0.00014648600000000123, 0.00014679199999999976, 0.00014651400000000037, 0.00014701400000000087, 0.0001469020000000043, 0.00014636099999999763, 0.00014729200000000026, 0.00014634799999999754, 0.00014730599999999983, 0.0001465549999999996, 0.00014698600000000173, 0.0001471250000000049, 0.00014719399999999633, 0.0001472629999999947, 0.00014675000000000105, 0.00014668100000000267, 0.0001465000000000008, 0.00014684699999999856, 0.00014686100000000507, 0.00014679100000000028, 0.00014647200000000166, 0.00014633399999999797, 0.00014726399999999418, 0.00014659700000000525, 0.00014648600000000123, 0.0001465419999999995, 0.00014690299999999684, 0.00014702800000000044, 0.0001465419999999995, 0.0001463890000000037, 0.0001465969999999983, 0.0001465969999999983, 0.00014679100000000028, 0.0001466670000000031, 0.00014676400000000062, 0.00014631899999999892, 0.00014686099999999813, 0.0001465969999999983, 0.00014658299999999874]</msg>
<status status="PASS" starttime="20201029 18:16:51.799" endtime="20201029 18:16:51.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.788" endtime="20201029 18:16:51.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:51.815" endtime="20201029 18:16:51.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.811" endtime="20201029 18:16:51.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.808" endtime="20201029 18:16:51.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.315" endtime="20201029 18:16:51.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.313" endtime="20201029 18:16:51.840"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.863" endtime="20201029 18:16:51.885"></status>
</kw>
<msg timestamp="20201029 18:16:51.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.860" endtime="20201029 18:16:51.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.888" endtime="20201029 18:16:51.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.894" endtime="20201029 18:16:51.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.852" endtime="20201029 18:16:51.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.847" endtime="20201029 18:16:51.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.918" endtime="20201029 18:16:52.261"></status>
</kw>
<msg timestamp="20201029 18:16:52.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039922625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040070778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.915" endtime="20201029 18:16:52.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039922625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040070778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.271" endtime="20201029 18:16:52.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.289" endtime="20201029 18:16:52.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.907" endtime="20201029 18:16:52.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.903" endtime="20201029 18:16:52.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:52.306" level="INFO">${RESULT} = [{'diff': 0.0001481529999999981}, {'diff': 0.00014781900000000042}, {'diff': 0.00014769400000000377}, {'diff': 0.00014815199999999862}, {'diff': 0.00014819399999999733}, {'diff': 0.0001479029999999978...</msg>
<status status="PASS" starttime="20201029 18:16:52.298" endtime="20201029 18:16:52.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:52.315" level="INFO">${ACCURACY} = {'diff': [0.0001481529999999981, 0.00014781900000000042, 0.00014769400000000377, 0.00014815199999999862, 0.00014819399999999733, 0.00014790299999999784, 0.00014797300000000263, 0.00014827800000000169,...</msg>
<status status="PASS" starttime="20201029 18:16:52.308" endtime="20201029 18:16:52.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.326" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:52.324" endtime="20201029 18:16:52.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.332" level="INFO">VALUE: [0.0001481529999999981, 0.00014781900000000042, 0.00014769400000000377, 0.00014815199999999862, 0.00014819399999999733, 0.00014790299999999784, 0.00014797300000000263, 0.00014827800000000169, 0.0001480969999999998, 0.00014791599999999794, 0.00014730500000000035, 0.00014819399999999733, 0.00014801400000000187, 0.00014812499999999895, 0.00014784799999999904, 0.00014730599999999983, 0.00014752800000000094, 0.0001475420000000005, 0.00014731899999999992, 0.0001480550000000011, 0.00014780600000000033, 0.00014780600000000033, 0.00014813899999999852, 0.00014741700000000385, 0.000147445000000003, 0.0001480000000000023, 0.00014747300000000213, 0.00014763899999999802, 0.00014786099999999913, 0.00014762499999999845, 0.00014779200000000076, 0.00014816699999999766, 0.0001478749999999987, 0.0001481659999999982, 0.0001475969999999993, 0.0001480550000000011, 0.00014745900000000256, 0.00014743100000000342, 0.0001475420000000005, 0.00014811099999999938, 0.0001479450000000035, 0.00014808399999999972, 0.00014822199999999647, 0.00014812499999999895, 0.00014806900000000067, 0.00014779100000000128, 0.00014745799999999615, 0.0001476250000000054, 0.000147445000000003, 0.0001480969999999998]</msg>
<status status="PASS" starttime="20201029 18:16:52.329" endtime="20201029 18:16:52.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.317" endtime="20201029 18:16:52.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.345" endtime="20201029 18:16:52.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.340" endtime="20201029 18:16:52.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.338" endtime="20201029 18:16:52.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.842" endtime="20201029 18:16:52.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.841" endtime="20201029 18:16:52.370"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.393" endtime="20201029 18:16:52.418"></status>
</kw>
<msg timestamp="20201029 18:16:52.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.389" endtime="20201029 18:16:52.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.421" endtime="20201029 18:16:52.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.427" endtime="20201029 18:16:52.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.382" endtime="20201029 18:16:52.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.376" endtime="20201029 18:16:52.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.451" endtime="20201029 18:16:52.803"></status>
</kw>
<msg timestamp="20201029 18:16:52.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041738014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041886444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.448" endtime="20201029 18:16:52.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041738014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041886444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.812" endtime="20201029 18:16:52.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.830" endtime="20201029 18:16:52.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.440" endtime="20201029 18:16:52.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.436" endtime="20201029 18:16:52.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:52.847" level="INFO">${RESULT} = [{'diff': 0.00014843000000000495}, {'diff': 0.00014901399999999593}, {'diff': 0.00014894399999999808}, {'diff': 0.00014897199999999722}, {'diff': 0.0001490279999999955}, {'diff': 0.0001490279999999955...</msg>
<status status="PASS" starttime="20201029 18:16:52.839" endtime="20201029 18:16:52.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:52.857" level="INFO">${ACCURACY} = {'diff': [0.00014843000000000495, 0.00014901399999999593, 0.00014894399999999808, 0.00014897199999999722, 0.0001490279999999955, 0.0001490279999999955, 0.00014873600000000348, 0.00014863899999999902, ...</msg>
<status status="PASS" starttime="20201029 18:16:52.850" endtime="20201029 18:16:52.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.868" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:52.865" endtime="20201029 18:16:52.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.873" level="INFO">VALUE: [0.00014843000000000495, 0.00014901399999999593, 0.00014894399999999808, 0.00014897199999999722, 0.0001490279999999955, 0.0001490279999999955, 0.00014873600000000348, 0.00014863899999999902, 0.00014888899999999927, 0.00014840299999999834, 0.00014843099999999748, 0.00014888899999999927, 0.0001491529999999991, 0.00014893099999999798, 0.0001491529999999991, 0.00014852800000000194, 0.00014854199999999457, 0.00014908300000000124, 0.0001485550000000016, 0.00014884700000000056, 0.0001491670000000056, 0.000149042000000002, 0.00014911100000000038, 0.0001485420000000015, 0.00014890299999999884, 0.00014884700000000056, 0.00014876399999999568, 0.00014872300000000338, 0.00014858300000000074, 0.00014886100000000013, 0.0001485000000000028, 0.00014834700000000006, 0.00014908300000000124, 0.00014865199999999912, 0.0001491659999999992, 0.0001490409999999956, 0.00014840199999999887, 0.00014905499999999516, 0.00014858300000000074, 0.00014880500000000185, 0.0001490970000000008, 0.00014876300000000314, 0.0001487090000000038, 0.00014843099999999748, 0.0001487079999999974, 0.0001483200000000004, 0.0001485000000000028, 0.00014923599999999704, 0.00014863799999999955, 0.00014861099999999988]</msg>
<status status="PASS" starttime="20201029 18:16:52.870" endtime="20201029 18:16:52.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.858" endtime="20201029 18:16:52.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.887" endtime="20201029 18:16:52.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.881" endtime="20201029 18:16:52.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.879" endtime="20201029 18:16:52.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.372" endtime="20201029 18:16:52.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.371" endtime="20201029 18:16:52.912"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.935" endtime="20201029 18:16:52.960"></status>
</kw>
<msg timestamp="20201029 18:16:52.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.932" endtime="20201029 18:16:52.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.965" endtime="20201029 18:16:52.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.972" endtime="20201029 18:16:52.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.925" endtime="20201029 18:16:52.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.919" endtime="20201029 18:16:52.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.996" endtime="20201029 18:16:53.349"></status>
</kw>
<msg timestamp="20201029 18:16:53.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040093125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040243264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.993" endtime="20201029 18:16:53.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040093125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040243264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.358" endtime="20201029 18:16:53.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.376" endtime="20201029 18:16:53.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.985" endtime="20201029 18:16:53.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.980" endtime="20201029 18:16:53.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.393" level="INFO">${RESULT} = [{'diff': 0.00015013900000000052}, {'diff': 0.00015002800000000344}, {'diff': 0.00014966699999999916}, {'diff': 0.00014973600000000448}, {'diff': 0.00014972199999999797}, {'diff': 0.000149652999999999...</msg>
<status status="PASS" starttime="20201029 18:16:53.385" endtime="20201029 18:16:53.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:53.404" level="INFO">${ACCURACY} = {'diff': [0.00015013900000000052, 0.00015002800000000344, 0.00014966699999999916, 0.00014973600000000448, 0.00014972199999999797, 0.0001496529999999996, 0.0001493200000000014, 0.00014951399999999643, ...</msg>
<status status="PASS" starttime="20201029 18:16:53.396" endtime="20201029 18:16:53.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.415" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:53.413" endtime="20201029 18:16:53.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.420" level="INFO">VALUE: [0.00015013900000000052, 0.00015002800000000344, 0.00014966699999999916, 0.00014973600000000448, 0.00014972199999999797, 0.0001496529999999996, 0.0001493200000000014, 0.00014951399999999643, 0.00014984700000000156, 0.0001500550000000031, 0.0001495970000000013, 0.00014956900000000217, 0.00014980500000000285, 0.00015013800000000105, 0.00014962500000000045, 0.00015023599999999804, 0.0001493330000000015, 0.00014949999999999686, 0.000149429999999999, 0.00014977800000000319, 0.0001495699999999947, 0.00014969400000000577, 0.0001494169999999989, 0.00014993099999999898, 0.0001494169999999989, 0.0001501530000000001, 0.00015023599999999804, 0.00014952700000000346, 0.00015016699999999966, 0.00015029200000000326, 0.00014999999999999736, 0.0001501949999999988, 0.00015006900000000267, 0.0001496659999999997, 0.0001502499999999976, 0.00015023599999999804, 0.00015004199999999607, 0.0001495970000000013, 0.00014961100000000088, 0.00014944499999999805, 0.00014990299999999984, 0.00015023599999999804, 0.00015018099999999923, 0.00014979200000000276, 0.00015019399999999933, 0.0001499859999999978, 0.00014975000000000405, 0.00015026399999999718, 0.0001498750000000007, 0.00014979199999999582]</msg>
<status status="PASS" starttime="20201029 18:16:53.417" endtime="20201029 18:16:53.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.406" endtime="20201029 18:16:53.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.433" endtime="20201029 18:16:53.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.428" endtime="20201029 18:16:53.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.426" endtime="20201029 18:16:53.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.915" endtime="20201029 18:16:53.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.913" endtime="20201029 18:16:53.458"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.481" endtime="20201029 18:16:53.505"></status>
</kw>
<msg timestamp="20201029 18:16:53.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.478" endtime="20201029 18:16:53.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.508" endtime="20201029 18:16:53.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.514" endtime="20201029 18:16:53.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.471" endtime="20201029 18:16:53.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.465" endtime="20201029 18:16:53.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.538" endtime="20201029 18:16:53.889"></status>
</kw>
<msg timestamp="20201029 18:16:53.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040207389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040357708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.535" endtime="20201029 18:16:53.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040207389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040357708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.899" endtime="20201029 18:16:53.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.917" endtime="20201029 18:16:53.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.527" endtime="20201029 18:16:53.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.523" endtime="20201029 18:16:53.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.934" level="INFO">${RESULT} = [{'diff': 0.00015031899999999598}, {'diff': 0.00015047199999999872}, {'diff': 0.00015029100000000378}, {'diff': 0.00015027800000000369}, {'diff': 0.0001509859999999988}, {'diff': 0.0001505970000000023...</msg>
<status status="PASS" starttime="20201029 18:16:53.925" endtime="20201029 18:16:53.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:53.945" level="INFO">${ACCURACY} = {'diff': [0.00015031899999999598, 0.00015047199999999872, 0.00015029100000000378, 0.00015027800000000369, 0.0001509859999999988, 0.0001505970000000023, 0.00015084699999999562, 0.00015080600000000333, ...</msg>
<status status="PASS" starttime="20201029 18:16:53.936" endtime="20201029 18:16:53.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.956" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:53.954" endtime="20201029 18:16:53.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.961" level="INFO">VALUE: [0.00015031899999999598, 0.00015047199999999872, 0.00015029100000000378, 0.00015027800000000369, 0.0001509859999999988, 0.0001505970000000023, 0.00015084699999999562, 0.00015080600000000333, 0.0001505829999999958, 0.00015120899999999937, 0.0001511530000000011, 0.00015043, 0.00015118000000000076, 0.00015026399999999718, 0.00015043099999999948, 0.0001509580000000066, 0.00015113899999999458, 0.00015049999999999786, 0.0001507220000000059, 0.00015095899999999912, 0.0001503609999999947, 0.00015094400000000008, 0.00015045799999999915, 0.00015031900000000292, 0.00015059699999999537, 0.0001511949999999998, 0.000150527999999997, 0.00015045799999999915, 0.0001504859999999983, 0.00015045799999999915, 0.00015029099999999684, 0.0001507499999999981, 0.0001509300000000005, 0.00015041600000000044, 0.00015026399999999718, 0.00015043, 0.00015059799999999485, 0.0001505550000000036, 0.00015088900000000127, 0.0001510550000000041, 0.00015094400000000008, 0.00015031899999999598, 0.0001510699999999962, 0.00015061100000000188, 0.00015099999999999836, 0.00015105499999999716, 0.00015084700000000256, 0.0001511949999999998, 0.0001509170000000004, 0.0001503059999999959]</msg>
<status status="PASS" starttime="20201029 18:16:53.958" endtime="20201029 18:16:53.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.947" endtime="20201029 18:16:53.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.978" endtime="20201029 18:16:54.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.974" endtime="20201029 18:16:54.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.972" endtime="20201029 18:16:54.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.460" endtime="20201029 18:16:54.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.459" endtime="20201029 18:16:54.004"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.027" endtime="20201029 18:16:54.051"></status>
</kw>
<msg timestamp="20201029 18:16:54.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.024" endtime="20201029 18:16:54.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.054" endtime="20201029 18:16:54.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.061" endtime="20201029 18:16:54.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.016" endtime="20201029 18:16:54.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.011" endtime="20201029 18:16:54.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.084" endtime="20201029 18:16:54.438"></status>
</kw>
<msg timestamp="20201029 18:16:54.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040486375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.081" endtime="20201029 18:16:54.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040486375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.447" endtime="20201029 18:16:54.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.465" endtime="20201029 18:16:54.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.073" endtime="20201029 18:16:54.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.069" endtime="20201029 18:16:54.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:54.483" level="INFO">${RESULT} = [{'diff': 0.00015227799999999875}, {'diff': 0.000152042000000005}, {'diff': 0.0001517499999999991}, {'diff': 0.0001519859999999998}, {'diff': 0.0001514729999999992}, {'diff': 0.0001514170000000009}, {...</msg>
<status status="PASS" starttime="20201029 18:16:54.474" endtime="20201029 18:16:54.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:54.492" level="INFO">${ACCURACY} = {'diff': [0.00015227799999999875, 0.000152042000000005, 0.0001517499999999991, 0.0001519859999999998, 0.0001514729999999992, 0.0001514170000000009, 0.0001522499999999996, 0.00015149999999999886, 0.000...</msg>
<status status="PASS" starttime="20201029 18:16:54.485" endtime="20201029 18:16:54.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.503" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:54.501" endtime="20201029 18:16:54.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.508" level="INFO">VALUE: [0.00015227799999999875, 0.000152042000000005, 0.0001517499999999991, 0.0001519859999999998, 0.0001514729999999992, 0.0001514170000000009, 0.0001522499999999996, 0.00015149999999999886, 0.0001517499999999991, 0.00015156899999999723, 0.00015226399999999918, 0.00015169400000000083, 0.0001515970000000033, 0.00015206899999999773, 0.00015173599999999954, 0.0001516530000000016, 0.0001523059999999979, 0.00015154199999999757, 0.00015163900000000202, 0.00015208300000000424, 0.00015140300000000134, 0.00015130600000000383, 0.00015197200000000022, 0.00015155499999999766, 0.0001516530000000016, 0.00015170899999999987, 0.00015165200000000212, 0.00015205599999999764, 0.00015223600000000004, 0.00015158400000000322, 0.00015155499999999766, 0.00015202699999999902, 0.00015168100000000073, 0.0001521809999999943, 0.00015215199999999568, 0.0001522080000000009, 0.00015205499999999816, 0.00015209800000000329, 0.0001517080000000004, 0.00015207000000000415, 0.00015166699999999422, 0.0001513200000000034, 0.00015162500000000245, 0.0001521530000000021, 0.00015209699999999687, 0.0001516530000000016, 0.00015154100000000503, 0.0001519029999999949, 0.00015144500000000005, 0.0001514170000000009]</msg>
<status status="PASS" starttime="20201029 18:16:54.505" endtime="20201029 18:16:54.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.494" endtime="20201029 18:16:54.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:54.521" endtime="20201029 18:16:54.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.516" endtime="20201029 18:16:54.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.514" endtime="20201029 18:16:54.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.006" endtime="20201029 18:16:54.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.005" endtime="20201029 18:16:54.546"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.569" endtime="20201029 18:16:54.592"></status>
</kw>
<msg timestamp="20201029 18:16:54.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.566" endtime="20201029 18:16:54.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.596" endtime="20201029 18:16:54.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.602" endtime="20201029 18:16:54.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.558" endtime="20201029 18:16:54.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.553" endtime="20201029 18:16:54.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.626" endtime="20201029 18:16:54.965"></status>
</kw>
<msg timestamp="20201029 18:16:54.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041543167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041695875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.622" endtime="20201029 18:16:54.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041543167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041695875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.974" endtime="20201029 18:16:54.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.993" endtime="20201029 18:16:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.615" endtime="20201029 18:16:54.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.610" endtime="20201029 18:16:55.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:55.010" level="INFO">${RESULT} = [{'diff': 0.0001527080000000014}, {'diff': 0.00015281999999999796}, {'diff': 0.0001524579999999942}, {'diff': 0.00015324999999999367}, {'diff': 0.00015261100000000388}, {'diff': 0.00015283299999999805...</msg>
<status status="PASS" starttime="20201029 18:16:55.002" endtime="20201029 18:16:55.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:55.020" level="INFO">${ACCURACY} = {'diff': [0.0001527080000000014, 0.00015281999999999796, 0.0001524579999999942, 0.00015324999999999367, 0.00015261100000000388, 0.00015283299999999805, 0.0001529170000000024, 0.00015273600000000054, 0...</msg>
<status status="PASS" starttime="20201029 18:16:55.012" endtime="20201029 18:16:55.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.030" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:55.028" endtime="20201029 18:16:55.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.036" level="INFO">VALUE: [0.0001527080000000014, 0.00015281999999999796, 0.0001524579999999942, 0.00015324999999999367, 0.00015261100000000388, 0.00015283299999999805, 0.0001529170000000024, 0.00015273600000000054, 0.00015283399999999753, 0.00015329099999999984, 0.00015319499999999486, 0.00015290300000000284, 0.00015230499999999841, 0.0001526249999999965, 0.0001530829999999983, 0.00015237499999999626, 0.00015240300000000234, 0.00015241699999999497, 0.0001524170000000019, 0.0001530699999999982, 0.00015284800000000404, 0.00015318100000000223, 0.00015294400000000208, 0.0001529170000000024, 0.00015255499999999866, 0.00015323600000000104, 0.00015284699999999762, 0.00015238899999999583, 0.00015249999999999986, 0.00015313899999999658, 0.0001528059999999984, 0.00015311100000000438, 0.0001532500000000006, 0.00015249999999999986, 0.0001530829999999983, 0.00015265299999999565, 0.0001525970000000043, 0.00015240300000000234, 0.0001525829999999978, 0.0001523750000000032, 0.00015297200000000122, 0.00015308399999999778, 0.00015272200000000097, 0.00015319400000000233, 0.00015316699999999572, 0.00015276399999999968, 0.00015301399999999993, 0.0001530829999999983, 0.00015231899999999798, 0.000152527999999999]</msg>
<status status="PASS" starttime="20201029 18:16:55.033" endtime="20201029 18:16:55.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.021" endtime="20201029 18:16:55.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:55.050" endtime="20201029 18:16:55.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.044" endtime="20201029 18:16:55.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.042" endtime="20201029 18:16:55.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.548" endtime="20201029 18:16:55.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.547" endtime="20201029 18:16:55.075"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.098" endtime="20201029 18:16:55.122"></status>
</kw>
<msg timestamp="20201029 18:16:55.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.095" endtime="20201029 18:16:55.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.125" endtime="20201029 18:16:55.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.132" endtime="20201029 18:16:55.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.087" endtime="20201029 18:16:55.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.082" endtime="20201029 18:16:55.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.155" endtime="20201029 18:16:55.508"></status>
</kw>
<msg timestamp="20201029 18:16:55.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039990056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040144333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:55.152" endtime="20201029 18:16:55.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039990056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040144333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:55.517" endtime="20201029 18:16:55.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.535" endtime="20201029 18:16:55.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.145" endtime="20201029 18:16:55.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.140" endtime="20201029 18:16:55.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:55.552" level="INFO">${RESULT} = [{'diff': 0.00015427699999999434}, {'diff': 0.0001536939999999959}, {'diff': 0.00015427800000000075}, {'diff': 0.00015365299999999665}, {'diff': 0.0001535829999999988}, {'diff': 0.00015344400000000258...</msg>
<status status="PASS" starttime="20201029 18:16:55.544" endtime="20201029 18:16:55.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:55.567" level="INFO">${ACCURACY} = {'diff': [0.00015427699999999434, 0.0001536939999999959, 0.00015427800000000075, 0.00015365299999999665, 0.0001535829999999988, 0.00015344400000000258, 0.00015383299999999905, 0.00015358400000000522, ...</msg>
<status status="PASS" starttime="20201029 18:16:55.554" endtime="20201029 18:16:55.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.578" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:55.576" endtime="20201029 18:16:55.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.583" level="INFO">VALUE: [0.00015427699999999434, 0.0001536939999999959, 0.00015427800000000075, 0.00015365299999999665, 0.0001535829999999988, 0.00015344400000000258, 0.00015383299999999905, 0.00015358400000000522, 0.00015393099999999604, 0.00015342999999999607, 0.00015338900000000377, 0.00015337499999999726, 0.0001538609999999982, 0.00015374999999999417, 0.00015347299999999425, 0.00015426400000000118, 0.00015422200000000247, 0.00015362500000000445, 0.0001536950000000023, 0.00015408399999999878, 0.00015426400000000118, 0.0001540410000000006, 0.0001537080000000024, 0.0001540829999999993, 0.00015394500000000255, 0.000154013999999994, 0.0001541530000000041, 0.00015376400000000068, 0.00015423600000000204, 0.00015372200000000197, 0.00015394500000000255, 0.00015355499999999966, 0.0001537500000000011, 0.00015372200000000197, 0.00015330600000000583, 0.00015395900000000212, 0.00015363899999999708, 0.00015390200000000437, 0.00015379199999999982, 0.00015423600000000204, 0.00015418100000000323, 0.00015400000000000136, 0.00015395800000000265, 0.00015384699999999862, 0.00015359799999999785, 0.00015373600000000154, 0.0001539579999999957, 0.00015409800000000529, 0.00015338900000000377, 0.0001538609999999982]</msg>
<status status="PASS" starttime="20201029 18:16:55.580" endtime="20201029 18:16:55.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.569" endtime="20201029 18:16:55.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:55.596" endtime="20201029 18:16:55.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.592" endtime="20201029 18:16:55.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.589" endtime="20201029 18:16:55.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.077" endtime="20201029 18:16:55.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.076" endtime="20201029 18:16:55.621"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.644" endtime="20201029 18:16:55.668"></status>
</kw>
<msg timestamp="20201029 18:16:55.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.641" endtime="20201029 18:16:55.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.671" endtime="20201029 18:16:55.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.678" endtime="20201029 18:16:55.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.634" endtime="20201029 18:16:55.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.628" endtime="20201029 18:16:55.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.701" endtime="20201029 18:16:56.046"></status>
</kw>
<msg timestamp="20201029 18:16:56.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04016, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314736, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:16:55.698" endtime="20201029 18:16:56.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04016, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314736, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:16:56.055" endtime="20201029 18:16:56.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.073" endtime="20201029 18:16:56.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.691" endtime="20201029 18:16:56.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.686" endtime="20201029 18:16:56.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:56.091" level="INFO">${RESULT} = [{'diff': 0.0001547359999999956}, {'diff': 0.00015520900000000337}, {'diff': 0.00015440300000000434}, {'diff': 0.00015479200000000082}, {'diff': 0.000154528000000001}, {'diff': 0.0001543059999999999},...</msg>
<status status="PASS" starttime="20201029 18:16:56.082" endtime="20201029 18:16:56.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:56.101" level="INFO">${ACCURACY} = {'diff': [0.0001547359999999956, 0.00015520900000000337, 0.00015440300000000434, 0.00015479200000000082, 0.000154528000000001, 0.0001543059999999999, 0.00015443100000000348, 0.00015472199999999603, 0....</msg>
<status status="PASS" starttime="20201029 18:16:56.093" endtime="20201029 18:16:56.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.112" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:56.110" endtime="20201029 18:16:56.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.118" level="INFO">VALUE: [0.0001547359999999956, 0.00015520900000000337, 0.00015440300000000434, 0.00015479200000000082, 0.000154528000000001, 0.0001543059999999999, 0.00015443100000000348, 0.00015472199999999603, 0.00015516699999999772, 0.0001545970000000063, 0.00015495900000000312, 0.0001545829999999998, 0.00015513899999999858, 0.00015511099999999944, 0.00015487499999999876, 0.0001544029999999974, 0.00015526400000000218, 0.0001546809999999968, 0.00015519400000000433, 0.00015505600000000064, 0.00015487499999999876, 0.00015429200000000032, 0.00015444399999999664, 0.00015450000000000186, 0.0001550830000000003, 0.00015437499999999826, 0.00015511099999999944, 0.00015481999999999996, 0.00015512499999999901, 0.00015470799999999646, 0.0001544029999999974, 0.00015491699999999747, 0.00015468100000000373, 0.00015501400000000193, 0.00015511099999999944, 0.00015481999999999996, 0.00015526400000000218, 0.00015522200000000347, 0.00015504200000000107, 0.00015476400000000168, 0.0001548609999999992, 0.00015450000000000186, 0.00015458399999999928, 0.00015462499999999851, 0.00015472200000000297, 0.00015438899999999783, 0.00015477800000000125, 0.00015494400000000408, 0.00015445900000000262, 0.00015477699999999484]</msg>
<status status="PASS" starttime="20201029 18:16:56.115" endtime="20201029 18:16:56.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.103" endtime="20201029 18:16:56.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:56.130" endtime="20201029 18:16:56.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.126" endtime="20201029 18:16:56.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.124" endtime="20201029 18:16:56.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.623" endtime="20201029 18:16:56.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.622" endtime="20201029 18:16:56.156"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.178" endtime="20201029 18:16:56.200"></status>
</kw>
<msg timestamp="20201029 18:16:56.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.175" endtime="20201029 18:16:56.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.204" endtime="20201029 18:16:56.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.210" endtime="20201029 18:16:56.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.168" endtime="20201029 18:16:56.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.162" endtime="20201029 18:16:56.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.234" endtime="20201029 18:16:56.574"></status>
</kw>
<msg timestamp="20201029 18:16:56.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040039722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.230" endtime="20201029 18:16:56.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040039722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.584" endtime="20201029 18:16:56.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.602" endtime="20201029 18:16:56.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.223" endtime="20201029 18:16:56.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.218" endtime="20201029 18:16:56.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:56.619" level="INFO">${RESULT} = [{'diff': 0.00015581900000000148}, {'diff': 0.00015531900000000098}, {'diff': 0.00015592999999999857}, {'diff': 0.00015605600000000164}, {'diff': 0.00015547199999999678}, {'diff': 0.000155792000000001...</msg>
<status status="PASS" starttime="20201029 18:16:56.610" endtime="20201029 18:16:56.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:56.628" level="INFO">${ACCURACY} = {'diff': [0.00015581900000000148, 0.00015531900000000098, 0.00015592999999999857, 0.00015605600000000164, 0.00015547199999999678, 0.00015579200000000182, 0.0001556809999999978, 0.0001553609999999997, ...</msg>
<status status="PASS" starttime="20201029 18:16:56.621" endtime="20201029 18:16:56.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.639" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:56.637" endtime="20201029 18:16:56.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.645" level="INFO">VALUE: [0.00015581900000000148, 0.00015531900000000098, 0.00015592999999999857, 0.00015605600000000164, 0.00015547199999999678, 0.00015579200000000182, 0.0001556809999999978, 0.0001553609999999997, 0.00015613899999999958, 0.00015534700000000012, 0.00015580500000000191, 0.00015561099999999994, 0.0001561380000000001, 0.0001561660000000062, 0.00015556900000000123, 0.00015597199999999728, 0.00015582000000000096, 0.00015587499999999976, 0.0001553060000000009, 0.00015551400000000243, 0.00015595900000000412, 0.00015583300000000105, 0.00015612500000000001, 0.0001554860000000033, 0.00015545900000000362, 0.00015592999999999857, 0.0001555830000000008, 0.00015615299999999915, 0.000155915999999999, 0.0001562080000000049, 0.00015576399999999574, 0.00015561099999999994, 0.0001554159999999985, 0.0001559579999999977, 0.00015531900000000098, 0.00015622199999999753, 0.00015616599999999925, 0.00015541699999999797, 0.00015538899999999883, 0.00015623699999999657, 0.00015588899999999933, 0.00015547199999999678, 0.0001556809999999978, 0.00015633400000000103, 0.00015562499999999951, 0.0001558610000000002, 0.00015580500000000191, 0.0001559860000000038, 0.0001561950000000048, 0.00015588899999999933]</msg>
<status status="PASS" starttime="20201029 18:16:56.642" endtime="20201029 18:16:56.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.630" endtime="20201029 18:16:56.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:56.657" endtime="20201029 18:16:56.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.653" endtime="20201029 18:16:56.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.650" endtime="20201029 18:16:56.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.158" endtime="20201029 18:16:56.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.156" endtime="20201029 18:16:56.682"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.705" endtime="20201029 18:16:56.729"></status>
</kw>
<msg timestamp="20201029 18:16:56.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.702" endtime="20201029 18:16:56.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.732" endtime="20201029 18:16:56.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.739" endtime="20201029 18:16:56.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.694" endtime="20201029 18:16:56.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.689" endtime="20201029 18:16:56.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.764" endtime="20201029 18:16:57.102"></status>
</kw>
<msg timestamp="20201029 18:16:57.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041719444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041875722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.760" endtime="20201029 18:16:57.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041719444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041875722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.112" endtime="20201029 18:16:57.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.130" endtime="20201029 18:16:57.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.752" endtime="20201029 18:16:57.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.747" endtime="20201029 18:16:57.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:57.147" level="INFO">${RESULT} = [{'diff': 0.0001562779999999958}, {'diff': 0.00015626399999999624}, {'diff': 0.00015684699999999469}, {'diff': 0.00015688900000000033}, {'diff': 0.00015665299999999965}, {'diff': 0.0001567359999999976...</msg>
<status status="PASS" starttime="20201029 18:16:57.138" endtime="20201029 18:16:57.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:57.156" level="INFO">${ACCURACY} = {'diff': [0.0001562779999999958, 0.00015626399999999624, 0.00015684699999999469, 0.00015688900000000033, 0.00015665299999999965, 0.0001567359999999976, 0.0001563060000000019, 0.00015680599999999545, 0...</msg>
<status status="PASS" starttime="20201029 18:16:57.149" endtime="20201029 18:16:57.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.167" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:57.165" endtime="20201029 18:16:57.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.173" level="INFO">VALUE: [0.0001562779999999958, 0.00015626399999999624, 0.00015684699999999469, 0.00015688900000000033, 0.00015665299999999965, 0.0001567359999999976, 0.0001563060000000019, 0.00015680599999999545, 0.0001566950000000053, 0.00015676399999999674, 0.00015676399999999674, 0.00015649999999999692, 0.0001565139999999965, 0.00015709699999999494, 0.00015684700000000162, 0.00015629100000000284, 0.00015655499999999573, 0.00015694400000000608, 0.00015683300000000205, 0.00015649999999999692, 0.00015680500000000291, 0.00015722200000000547, 0.00015659700000000137, 0.00015684700000000162, 0.000156528000000003, 0.00015662500000000051, 0.0001568610000000012, 0.00015644399999999864, 0.00015642999999999907, 0.00015669499999999836, 0.00015659800000000085, 0.0001569170000000064, 0.00015638899999999983, 0.00015641699999999897, 0.00015683300000000205, 0.00015679200000000282, 0.00015704200000000307, 0.00015716699999999972, 0.0001564170000000059, 0.00015709800000000135, 0.00015716699999999972, 0.00015691699999999947, 0.00015643100000000548, 0.00015663900000000008, 0.0001564449999999981, 0.00015698599999999785, 0.00015672300000000444, 0.0001567229999999975, 0.00015712500000000101, 0.00015634700000000112]</msg>
<status status="PASS" starttime="20201029 18:16:57.170" endtime="20201029 18:16:57.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.158" endtime="20201029 18:16:57.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.187" endtime="20201029 18:16:57.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.181" endtime="20201029 18:16:57.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.179" endtime="20201029 18:16:57.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.684" endtime="20201029 18:16:57.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.683" endtime="20201029 18:16:57.212"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.235" endtime="20201029 18:16:57.257"></status>
</kw>
<msg timestamp="20201029 18:16:57.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.232" endtime="20201029 18:16:57.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.261" endtime="20201029 18:16:57.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.267" endtime="20201029 18:16:57.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.225" endtime="20201029 18:16:57.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.219" endtime="20201029 18:16:57.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.291" endtime="20201029 18:16:57.631"></status>
</kw>
<msg timestamp="20201029 18:16:57.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040101611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.287" endtime="20201029 18:16:57.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040101611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.640" endtime="20201029 18:16:57.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.658" endtime="20201029 18:16:57.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.280" endtime="20201029 18:16:57.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.275" endtime="20201029 18:16:57.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:57.675" level="INFO">${RESULT} = [{'diff': 0.000157528000000004}, {'diff': 0.00015743099999999954}, {'diff': 0.00015777699999999784}, {'diff': 0.00015813900000000158}, {'diff': 0.0001575689999999963}, {'diff': 0.0001577909999999974},...</msg>
<status status="PASS" starttime="20201029 18:16:57.667" endtime="20201029 18:16:57.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:57.686" level="INFO">${ACCURACY} = {'diff': [0.000157528000000004, 0.00015743099999999954, 0.00015777699999999784, 0.00015813900000000158, 0.0001575689999999963, 0.0001577909999999974, 0.00015768000000000032, 0.00015777700000000477, 0....</msg>
<status status="PASS" starttime="20201029 18:16:57.677" endtime="20201029 18:16:57.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.697" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:57.695" endtime="20201029 18:16:57.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.702" level="INFO">VALUE: [0.000157528000000004, 0.00015743099999999954, 0.00015777699999999784, 0.00015813900000000158, 0.0001575689999999963, 0.0001577909999999974, 0.00015768000000000032, 0.00015777700000000477, 0.00015826399999999824, 0.00015826399999999824, 0.0001578060000000034, 0.00015752799999999706, 0.00015777699999999784, 0.00015747199999999878, 0.00015738800000000136, 0.0001577779999999973, 0.00015758299999999587, 0.00015750000000000486, 0.00015809800000000235, 0.0001575830000000028, 0.0001579030000000009, 0.00015816600000000125, 0.0001576809999999998, 0.00015737500000000126, 0.00015793000000000057, 0.0001578610000000022, 0.00015818000000000082, 0.00015808400000000278, 0.00015734700000000212, 0.00015751299999999802, 0.00015744399999999964, 0.0001573610000000017, 0.00015809700000000287, 0.00015761100000000194, 0.0001581810000000003, 0.00015808299999999637, 0.00015747200000000572, 0.0001578889999999944, 0.0001582359999999991, 0.00015779200000000382, 0.0001581380000000021, 0.00015745899999999868, 0.00015793000000000057, 0.0001576939999999999, 0.00015730499999999648, 0.0001580559999999967, 0.00015737500000000126, 0.00015779200000000382, 0.0001573060000000029, 0.00015799999999999842]</msg>
<status status="PASS" starttime="20201029 18:16:57.699" endtime="20201029 18:16:57.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.688" endtime="20201029 18:16:57.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.715" endtime="20201029 18:16:57.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.711" endtime="20201029 18:16:57.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.708" endtime="20201029 18:16:57.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.214" endtime="20201029 18:16:57.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.213" endtime="20201029 18:16:57.740"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.763" endtime="20201029 18:16:57.790"></status>
</kw>
<msg timestamp="20201029 18:16:57.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.760" endtime="20201029 18:16:57.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.794" endtime="20201029 18:16:57.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.800" endtime="20201029 18:16:57.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.752" endtime="20201029 18:16:57.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.746" endtime="20201029 18:16:57.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.825" endtime="20201029 18:16:58.164"></status>
</kw>
<msg timestamp="20201029 18:16:58.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039928153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040086514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.822" endtime="20201029 18:16:58.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039928153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040086514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.173" endtime="20201029 18:16:58.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.191" endtime="20201029 18:16:58.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.814" endtime="20201029 18:16:58.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.809" endtime="20201029 18:16:58.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.209" level="INFO">${RESULT} = [{'diff': 0.00015836099999999576}, {'diff': 0.00015891700000000147}, {'diff': 0.00015872200000000003}, {'diff': 0.00015830599999999695}, {'diff': 0.0001584450000000001}, {'diff': 0.0001589449999999936...</msg>
<status status="PASS" starttime="20201029 18:16:58.200" endtime="20201029 18:16:58.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:58.220" level="INFO">${ACCURACY} = {'diff': [0.00015836099999999576, 0.00015891700000000147, 0.00015872200000000003, 0.00015830599999999695, 0.0001584450000000001, 0.00015894499999999367, 0.00015855499999999773, 0.00015929199999999838,...</msg>
<status status="PASS" starttime="20201029 18:16:58.211" endtime="20201029 18:16:58.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.238" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:58.234" endtime="20201029 18:16:58.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.244" level="INFO">VALUE: [0.00015836099999999576, 0.00015891700000000147, 0.00015872200000000003, 0.00015830599999999695, 0.0001584450000000001, 0.00015894499999999367, 0.00015855499999999773, 0.00015929199999999838, 0.0001587500000000061, 0.00015849999999999892, 0.00015847199999999978, 0.00015926400000000618, 0.0001590280000000055, 0.00015906999999999727, 0.00015841700000000097, 0.0001585559999999972, 0.00015924999999999967, 0.0001591940000000014, 0.00015879199999999788, 0.0001592779999999988, 0.00015927800000000575, 0.00015845899999999968, 0.00015865300000000165, 0.0001584450000000001, 0.00015862499999999558, 0.00015912500000000301, 0.00015884700000000362, 0.0001590280000000055, 0.0001586810000000008, 0.00015926299999999977, 0.00015874999999999917, 0.00015847199999999978, 0.00015882000000000396, 0.0001583339999999961, 0.0001585559999999972, 0.0001588480000000031, 0.00015877800000000525, 0.00015837499999999533, 0.000158610999999996, 0.000159013999999999, 0.0001592360000000001, 0.00015881899999999755, 0.00015870799999999352, 0.0001585139999999985, 0.00015834700000000312, 0.00015859700000000337, 0.00015859700000000337, 0.0001587909999999984, 0.00015894400000000114, 0.00015922200000000053]</msg>
<status status="PASS" starttime="20201029 18:16:58.241" endtime="20201029 18:16:58.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.226" endtime="20201029 18:16:58.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.257" endtime="20201029 18:16:58.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.253" endtime="20201029 18:16:58.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.250" endtime="20201029 18:16:58.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.742" endtime="20201029 18:16:58.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.741" endtime="20201029 18:16:58.286"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.315" endtime="20201029 18:16:58.337"></status>
</kw>
<msg timestamp="20201029 18:16:58.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.311" endtime="20201029 18:16:58.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.340" endtime="20201029 18:16:58.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.347" endtime="20201029 18:16:58.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.304" endtime="20201029 18:16:58.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.297" endtime="20201029 18:16:58.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.371" endtime="20201029 18:16:58.721"></status>
</kw>
<msg timestamp="20201029 18:16:58.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04883075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048990917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:58.367" endtime="20201029 18:16:58.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04883075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048990917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:58.731" endtime="20201029 18:16:58.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.749" endtime="20201029 18:16:58.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.360" endtime="20201029 18:16:58.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.355" endtime="20201029 18:16:58.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.766" level="INFO">${RESULT} = [{'diff': 0.00016016700000000272}, {'diff': 0.00016016700000000272}, {'diff': 0.00015945900000000068}, {'diff': 0.00015998600000000085}, {'diff': 0.0001601109999999975}, {'diff': 0.0001594720000000007...</msg>
<status status="PASS" starttime="20201029 18:16:58.757" endtime="20201029 18:16:58.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:58.775" level="INFO">${ACCURACY} = {'diff': [0.00016016700000000272, 0.00016016700000000272, 0.00015945900000000068, 0.00015998600000000085, 0.0001601109999999975, 0.00015947200000000078, 0.00015983299999999812, 0.00016025000000000067,...</msg>
<status status="PASS" starttime="20201029 18:16:58.768" endtime="20201029 18:16:58.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.786" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:58.784" endtime="20201029 18:16:58.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.792" level="INFO">VALUE: [0.00016016700000000272, 0.00016016700000000272, 0.00015945900000000068, 0.00015998600000000085, 0.0001601109999999975, 0.00015947200000000078, 0.00015983299999999812, 0.00016025000000000067, 0.00015994500000000161, 0.00015984699999999769, 0.0001598610000000042, 0.00015998699999999338, 0.00015968000000000232, 0.0001594859999999934, 0.00015973700000000007, 0.00016008399999999784, 0.00015963899999999615, 0.00016019500000000186, 0.00016019499999999492, 0.0001595139999999995, 0.00015959800000000385, 0.0001597360000000006, 0.0001594309999999946, 0.000159610999999997, 0.00015947200000000078, 0.00016016700000000272, 0.00015949999999999992, 0.0001601810000000023, 0.0001601810000000023, 0.00015972200000000103, 0.00015959700000000437, 0.00015963900000000308, 0.00015933299999999762, 0.00015980499999999898, 0.00015979199999999888, 0.00016013900000000358, 0.0001597779999999993, 0.0001602360000000011, 0.00015954199999999863, 0.00015961199999999648, 0.000159401999999996, 0.00015991599999999606, 0.00015937499999999633, 0.00015934699999999719, 0.00015962499999999658, 0.0001601940000000024, 0.0001593889999999959, 0.00015981999999999802, 0.0001595689999999983, 0.00015958299999999787]</msg>
<status status="PASS" starttime="20201029 18:16:58.789" endtime="20201029 18:16:58.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.777" endtime="20201029 18:16:58.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.805" endtime="20201029 18:16:58.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.800" endtime="20201029 18:16:58.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.797" endtime="20201029 18:16:58.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.288" endtime="20201029 18:16:58.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.287" endtime="20201029 18:16:58.839"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.863" endtime="20201029 18:16:58.887"></status>
</kw>
<msg timestamp="20201029 18:16:58.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.859" endtime="20201029 18:16:58.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.890" endtime="20201029 18:16:58.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.897" endtime="20201029 18:16:58.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.852" endtime="20201029 18:16:58.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.846" endtime="20201029 18:16:58.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.920" endtime="20201029 18:16:59.272"></status>
</kw>
<msg timestamp="20201029 18:16:59.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051750083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.917" endtime="20201029 18:16:59.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051750083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.281" endtime="20201029 18:16:59.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.300" endtime="20201029 18:16:59.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.910" endtime="20201029 18:16:59.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.905" endtime="20201029 18:16:59.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.317" level="INFO">${RESULT} = [{'diff': 0.00016031999999999852}, {'diff': 0.0001607360000000016}, {'diff': 0.00016097200000000228}, {'diff': 0.00016048600000000135}, {'diff': 0.00016083299999999912}, {'diff': 0.0001611800000000038...</msg>
<status status="PASS" starttime="20201029 18:16:59.308" endtime="20201029 18:16:59.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:59.327" level="INFO">${ACCURACY} = {'diff': [0.00016031999999999852, 0.0001607360000000016, 0.00016097200000000228, 0.00016048600000000135, 0.00016083299999999912, 0.00016118000000000382, 0.00016066700000000322, 0.00016044500000000211,...</msg>
<status status="PASS" starttime="20201029 18:16:59.320" endtime="20201029 18:16:59.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.338" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:59.336" endtime="20201029 18:16:59.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.343" level="INFO">VALUE: [0.00016031999999999852, 0.0001607360000000016, 0.00016097200000000228, 0.00016048600000000135, 0.00016083299999999912, 0.00016118000000000382, 0.00016066700000000322, 0.00016044500000000211, 0.000161014000000001, 0.00016126400000000124, 0.00016033299999999862, 0.00016047299999999431, 0.00016047200000000178, 0.00016050000000000092, 0.00016090299999999697, 0.0001605140000000005, 0.0001605140000000005, 0.00016036200000000417, 0.00016122200000000253, 0.00016079199999999988, 0.00016051299999999408, 0.00016062499999999758, 0.0001603889999999969, 0.0001608610000000052, 0.00016075000000000117, 0.0001612219999999956, 0.00016088900000000433, 0.00016047200000000178, 0.000160610999999998, 0.00016036099999999776, 0.00016119500000000286, 0.00016044500000000211, 0.00016101300000000152, 0.0001608610000000052, 0.0001608339999999986, 0.00016055499999999973, 0.00016066699999999629, 0.0001612780000000008, 0.00016077700000000084, 0.00016090299999999697, 0.00016065199999999724, 0.00016115300000000415, 0.00016100000000000142, 0.0001603610000000047, 0.0001603889999999969, 0.00016075000000000117, 0.00016069500000000236, 0.00016040200000000393, 0.00016037500000000426, 0.00016072200000000203]</msg>
<status status="PASS" starttime="20201029 18:16:59.340" endtime="20201029 18:16:59.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.328" endtime="20201029 18:16:59.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:59.358" endtime="20201029 18:16:59.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.352" endtime="20201029 18:16:59.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.349" endtime="20201029 18:16:59.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.841" endtime="20201029 18:16:59.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.840" endtime="20201029 18:16:59.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.920" endtime="20201029 18:16:59.383"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:05.798" endtime="20201029 18:16:59.385" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:15:10.036" endtime="20201029 18:16:59.394"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.532" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:59.548" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:01.531" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:59.528" endtime="20201029 18:17:01.533"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.538" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:01.535" endtime="20201029 18:17:01.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.526" endtime="20201029 18:17:01.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:01.546" endtime="20201029 18:17:01.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.542" endtime="20201029 18:17:01.888"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.918" endtime="20201029 18:17:01.939"></status>
</kw>
<msg timestamp="20201029 18:17:01.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.915" endtime="20201029 18:17:01.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.942" endtime="20201029 18:17:01.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.953" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:01.949" endtime="20201029 18:17:01.956"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:01.908" endtime="20201029 18:17:01.958"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:01.903" endtime="20201029 18:17:01.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.900" endtime="20201029 18:17:01.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:01.968" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:01.967" endtime="20201029 18:17:01.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.962" endtime="20201029 18:17:01.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.898" endtime="20201029 18:17:01.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.896" endtime="20201029 18:17:01.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.972" endtime="20201029 18:17:01.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.893" endtime="20201029 18:17:01.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.979" endtime="20201029 18:17:01.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.890" endtime="20201029 18:17:01.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.523" endtime="20201029 18:17:01.986"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:02.002" endtime="20201029 18:17:02.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.998" endtime="20201029 18:17:02.026"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.059" endtime="20201029 18:17:02.074"></status>
</kw>
<msg timestamp="20201029 18:17:02.075" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.055" endtime="20201029 18:17:02.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.078" endtime="20201029 18:17:02.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.088" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:02.084" endtime="20201029 18:17:02.089"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:02.048" endtime="20201029 18:17:02.091"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:02.042" endtime="20201029 18:17:02.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.039" endtime="20201029 18:17:02.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:02.102" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:02.099" endtime="20201029 18:17:02.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.095" endtime="20201029 18:17:02.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.037" endtime="20201029 18:17:02.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.036" endtime="20201029 18:17:02.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.105" endtime="20201029 18:17:02.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.032" endtime="20201029 18:17:02.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.027" endtime="20201029 18:17:02.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.995" endtime="20201029 18:17:02.112"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.136" endtime="20201029 18:17:08.269"></status>
</kw>
<msg timestamp="20201029 18:17:08.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.132" endtime="20201029 18:17:08.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.276" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.272" endtime="20201029 18:17:08.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.278" endtime="20201029 18:17:08.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.125" endtime="20201029 18:17:08.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.118" endtime="20201029 18:17:08.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.291" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:08.287" endtime="20201029 18:17:08.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.303" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:08.300" endtime="20201029 18:17:08.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.307" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:08.305" endtime="20201029 18:17:08.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.293" endtime="20201029 18:17:08.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.319" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:08.317" endtime="20201029 18:17:08.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.324" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:08.321" endtime="20201029 18:17:08.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.311" endtime="20201029 18:17:08.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.335" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:08.333" endtime="20201029 18:17:08.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.340" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:17:08.338" endtime="20201029 18:17:08.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.327" endtime="20201029 18:17:08.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.359" endtime="20201029 18:17:08.732"></status>
</kw>
<msg timestamp="20201029 18:17:08.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.224320194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.224320736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:08.356" endtime="20201029 18:17:08.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.224320194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.224320736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:08.742" endtime="20201029 18:17:08.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.760" endtime="20201029 18:17:08.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.348" endtime="20201029 18:17:08.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.343" endtime="20201029 18:17:08.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:08.778" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.100203611}, {'diff': 0.10020852800000002}, {'diff': 0.10021155599999998}, {'diff': 0.10021743000000005}, {'diff': 0.10020745799999997}, {'diff': 0.10021936099999995}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:17:08.769" endtime="20201029 18:17:08.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.788" level="INFO">${RESULT} = {'diff': [0, 0.100203611, 0.10020852800000002, 0.10021155599999998, 0.10021743000000005, 0.10020745799999997, 0.10021936099999995, 0.10022202700000005, 0.10021059700000001, 0.100210264, 0.100213402999...</msg>
<status status="PASS" starttime="20201029 18:17:08.780" endtime="20201029 18:17:08.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.799" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:08.796" endtime="20201029 18:17:08.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.804" level="INFO">VALUE: [0, 0.100203611, 0.10020852800000002, 0.10021155599999998, 0.10021743000000005, 0.10020745799999997, 0.10021936099999995, 0.10022202700000005, 0.10021059700000001, 0.100210264, 0.10021340299999992, 0.10020837500000002, 0.10020412499999987, 0.10020969400000013, 0.10021070799999987, 0.10020969400000013, 0.10020037500000001, 0.10020473600000002, 0.100189431, 0.1001958329999999, 0.10020316600000001, 0.10020074999999995, 0.10020690200000004, 0.1002058060000004, 0.10021194499999986, 0.10021370900000015, 0.10020520899999985, 0.10019781999999999, 0.10021801399999974, 0.1002152780000003, 0.10020318099999992, 0.10020562500000008, 0.1002118059999999, 0.10020936100000011, 0.10020069500000028, 0.10020119499999991, 0.10019498599999999, 0.10019876400000038, 0.1001999579999997, 0.1002103889999999, 0.10021451400000014, 0.10021388899999994, 0.10019379100000059, 0.10020420800000007, 0.10021465299999921, 0.10020870900000034, 0.10020551400000066, 0.10020540300000036, 0.1002177780000002, 0.1002039719999992, 0.10020713900000011]</msg>
<status status="PASS" starttime="20201029 18:17:08.801" endtime="20201029 18:17:08.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.790" endtime="20201029 18:17:08.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.114" endtime="20201029 18:17:08.808"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:01.988" endtime="20201029 18:17:08.810" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:08.827" endtime="20201029 18:17:08.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.823" endtime="20201029 18:17:08.851"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.884" endtime="20201029 18:17:08.904"></status>
</kw>
<msg timestamp="20201029 18:17:08.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.881" endtime="20201029 18:17:08.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.908" endtime="20201029 18:17:08.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.919" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:08.914" endtime="20201029 18:17:08.919"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:08.874" endtime="20201029 18:17:08.921"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:08.867" endtime="20201029 18:17:08.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.864" endtime="20201029 18:17:08.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:08.936" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:08.934" endtime="20201029 18:17:08.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.926" endtime="20201029 18:17:08.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.862" endtime="20201029 18:17:08.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.861" endtime="20201029 18:17:08.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.941" endtime="20201029 18:17:08.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.857" endtime="20201029 18:17:08.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.852" endtime="20201029 18:17:08.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.820" endtime="20201029 18:17:08.952"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.983" endtime="20201029 18:17:15.121"></status>
</kw>
<msg timestamp="20201029 18:17:15.122" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.979" endtime="20201029 18:17:15.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.124" endtime="20201029 18:17:15.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.131" endtime="20201029 18:17:15.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.969" endtime="20201029 18:17:15.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.961" endtime="20201029 18:17:15.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:15.143" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:15.139" endtime="20201029 18:17:15.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.154" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:15.152" endtime="20201029 18:17:15.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.159" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:15.156" endtime="20201029 18:17:15.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.146" endtime="20201029 18:17:15.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.171" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:15.169" endtime="20201029 18:17:15.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.176" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:15.173" endtime="20201029 18:17:15.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.162" endtime="20201029 18:17:15.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.188" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:15.185" endtime="20201029 18:17:15.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.192" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:17:15.190" endtime="20201029 18:17:15.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.179" endtime="20201029 18:17:15.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.211" endtime="20201029 18:17:15.591"></status>
</kw>
<msg timestamp="20201029 18:17:15.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.14707225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.247342306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:15.208" endtime="20201029 18:17:15.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.14707225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.247342306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:15.600" endtime="20201029 18:17:15.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.618" endtime="20201029 18:17:15.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.201" endtime="20201029 18:17:15.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.196" endtime="20201029 18:17:15.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:15.635" level="INFO">${FILTERED} = [{'diff': 0.10027005600000002}, {'diff': 0.100511139}, {'diff': 0.099897236}, {'diff': 0.10020275000000006}, {'diff': 0.10020261100000005}, {'diff': 0.10020763899999996}, {'diff': 0.10020434700000003}...</msg>
<status status="PASS" starttime="20201029 18:17:15.626" endtime="20201029 18:17:15.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:15.644" level="INFO">${RESULT} = {'diff': [0.10027005600000002, 0.100511139, 0.099897236, 0.10020275000000006, 0.10020261100000005, 0.10020763899999996, 0.10020434700000003, 0.10020751399999994, 0.10019680600000014, 0.100215513999999...</msg>
<status status="PASS" starttime="20201029 18:17:15.637" endtime="20201029 18:17:15.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.654" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:15.651" endtime="20201029 18:17:15.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.659" level="INFO">VALUE: [0.10027005600000002, 0.100511139, 0.099897236, 0.10020275000000006, 0.10020261100000005, 0.10020763899999996, 0.10020434700000003, 0.10020751399999994, 0.10019680600000014, 0.10021551399999984, 0.10019704200000001, 0.1001966379999999, 0.10019566699999993, 0.10019045900000001, 0.10019393099999996, 0.10020631900000021, 0.1002078329999998, 0.10020187500000022, 0.10020591700000003, 0.10019693000000007, 0.1002061809999999, 0.10020263899999993, 0.10019640299999999, 0.10020288899999974, 0.10019658300000023, 0.10020466599999978, 0.10021136099999994, 0.10020043000000012, 0.10020932000000027, 0.10019904199999985, 0.10020540199999983, 0.1002012080000001, 0.10020783300000025, 0.10020611099999988, 0.10020830599999986, 0.10020648600000026, 0.1002070559999999, 0.1002119020000003, 0.10019715299999943, 0.10020108400000005, 0.10019468099999962, 0.10019737499999959, 0.1002037919999994, 0.10019470800000008, 0.10019254100000019, 0.10020073600000057, 0.10020619400000008, 0.10020719400000022, 0.1002216520000001, 0.10019974999999981, 0.10020515200000002]</msg>
<status status="PASS" starttime="20201029 18:17:15.656" endtime="20201029 18:17:15.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.645" endtime="20201029 18:17:15.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.953" endtime="20201029 18:17:15.663"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:08.815" endtime="20201029 18:17:15.665" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:15.681" endtime="20201029 18:17:15.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.677" endtime="20201029 18:17:15.705"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.739" endtime="20201029 18:17:15.757"></status>
</kw>
<msg timestamp="20201029 18:17:15.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.736" endtime="20201029 18:17:15.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.760" endtime="20201029 18:17:15.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.771" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:15.767" endtime="20201029 18:17:15.772"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:15.729" endtime="20201029 18:17:15.773"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:15.722" endtime="20201029 18:17:15.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.718" endtime="20201029 18:17:15.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:15.783" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:15.782" endtime="20201029 18:17:15.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.778" endtime="20201029 18:17:15.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.716" endtime="20201029 18:17:15.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.715" endtime="20201029 18:17:15.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.787" endtime="20201029 18:17:15.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.711" endtime="20201029 18:17:15.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.706" endtime="20201029 18:17:15.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.675" endtime="20201029 18:17:15.794"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.815" endtime="20201029 18:17:21.949"></status>
</kw>
<msg timestamp="20201029 18:17:21.950" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.812" endtime="20201029 18:17:21.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.952" endtime="20201029 18:17:21.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.959" endtime="20201029 18:17:21.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.804" endtime="20201029 18:17:21.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.799" endtime="20201029 18:17:21.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.972" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:21.967" endtime="20201029 18:17:21.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.982" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:21.980" endtime="20201029 18:17:21.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.986" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:21.984" endtime="20201029 18:17:21.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.973" endtime="20201029 18:17:21.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.998" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:21.996" endtime="20201029 18:17:21.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.003" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:22.001" endtime="20201029 18:17:22.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.990" endtime="20201029 18:17:22.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.017" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:22.012" endtime="20201029 18:17:22.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.021" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:17:22.019" endtime="20201029 18:17:22.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.006" endtime="20201029 18:17:22.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.040" endtime="20201029 18:17:22.387"></status>
</kw>
<msg timestamp="20201029 18:17:22.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124983167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.225565375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.037" endtime="20201029 18:17:22.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124983167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.225565375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.396" endtime="20201029 18:17:22.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.414" endtime="20201029 18:17:22.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.030" endtime="20201029 18:17:22.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.025" endtime="20201029 18:17:22.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:22.431" level="INFO">${FILTERED} = [{'diff': 0.100582208}, {'diff': 0.09990584699999999}, {'diff': 0.10021370800000001}, {'diff': 0.10021795800000005}, {'diff': 0.10021886099999999}, {'diff': 0.10022655599999997}, {'diff': 0.1002189019...</msg>
<status status="PASS" starttime="20201029 18:17:22.422" endtime="20201029 18:17:22.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:22.440" level="INFO">${RESULT} = {'diff': [0.100582208, 0.09990584699999999, 0.10021370800000001, 0.10021795800000005, 0.10021886099999999, 0.10022655599999997, 0.10021890199999994, 0.10021651400000009, 0.10021697200000002, 0.1002177...</msg>
<status status="PASS" starttime="20201029 18:17:22.433" endtime="20201029 18:17:22.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.449" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:22.447" endtime="20201029 18:17:22.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.455" level="INFO">VALUE: [0.100582208, 0.09990584699999999, 0.10021370800000001, 0.10021795800000005, 0.10021886099999999, 0.10022655599999997, 0.10021890199999994, 0.10021651400000009, 0.10021697200000002, 0.1002177500000001, 0.10021791699999993, 0.10021363900000013, 0.10021365299999996, 0.10021081999999981, 0.10020420800000007, 0.10020952799999994, 0.10020342999999987, 0.10020619400000008, 0.10020833299999987, 0.100214625, 0.10021704100000006, 0.10021236100000008, 0.10021616600000005, 0.10020294399999985, 0.10020298600000022, 0.10021326399999975, 0.10020963900000002, 0.10021372200000034, 0.10021719499999993, 0.10022356900000018, 0.10021545799999965, 0.10021068, 0.10021470800000021, 0.10020555500000006, 0.1002151109999998, 0.10020898600000017, 0.10019963899999995, 0.10019382000000032, 0.10019309799999965, 0.10020825000000055, 0.10020901399999982, 0.10020165300000006, 0.100196167, 0.10019773600000015, 0.1002041380000005, 0.10020813900000025, 0.10020981899999981, 0.1002181800000006, 0.10020683299999966, 0.10021094400000052, 0.10022155500000007]</msg>
<status status="PASS" starttime="20201029 18:17:22.452" endtime="20201029 18:17:22.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.441" endtime="20201029 18:17:22.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.795" endtime="20201029 18:17:22.460"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:15.669" endtime="20201029 18:17:22.461" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:22.479" endtime="20201029 18:17:22.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.474" endtime="20201029 18:17:22.502"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.535" endtime="20201029 18:17:22.550"></status>
</kw>
<msg timestamp="20201029 18:17:22.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.532" endtime="20201029 18:17:22.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.558" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.554" endtime="20201029 18:17:22.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.564" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:22.560" endtime="20201029 18:17:22.565"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:22.525" endtime="20201029 18:17:22.567"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:22.518" endtime="20201029 18:17:22.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.516" endtime="20201029 18:17:22.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:22.577" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:22.575" endtime="20201029 18:17:22.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.571" endtime="20201029 18:17:22.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.514" endtime="20201029 18:17:22.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.512" endtime="20201029 18:17:22.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.580" endtime="20201029 18:17:22.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.508" endtime="20201029 18:17:22.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.504" endtime="20201029 18:17:22.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.471" endtime="20201029 18:17:22.587"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.608" endtime="20201029 18:17:28.743"></status>
</kw>
<msg timestamp="20201029 18:17:28.744" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.605" endtime="20201029 18:17:28.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.750" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.746" endtime="20201029 18:17:28.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.752" endtime="20201029 18:17:28.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.598" endtime="20201029 18:17:28.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.593" endtime="20201029 18:17:28.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:28.765" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:28.760" endtime="20201029 18:17:28.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.777" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:28.773" endtime="20201029 18:17:28.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.782" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:28.780" endtime="20201029 18:17:28.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.767" endtime="20201029 18:17:28.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.794" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:28.791" endtime="20201029 18:17:28.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.798" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:28.796" endtime="20201029 18:17:28.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.785" endtime="20201029 18:17:28.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.810" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:28.807" endtime="20201029 18:17:28.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.814" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:17:28.812" endtime="20201029 18:17:28.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.802" endtime="20201029 18:17:28.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.833" endtime="20201029 18:17:29.203"></status>
</kw>
<msg timestamp="20201029 18:17:29.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120733194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221518028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.829" endtime="20201029 18:17:29.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120733194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221518028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:29.212" endtime="20201029 18:17:29.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.231" endtime="20201029 18:17:29.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.822" endtime="20201029 18:17:29.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.818" endtime="20201029 18:17:29.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:29.248" level="INFO">${FILTERED} = [{'diff': 0.100784834}, {'diff': 0.09969934800000002}, {'diff': 0.10021094400000002}, {'diff': 0.10021006899999996}, {'diff': 0.10021408300000001}, {'diff': 0.10021254200000007}, {'diff': 0.1001880279...</msg>
<status status="PASS" starttime="20201029 18:17:29.239" endtime="20201029 18:17:29.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:29.258" level="INFO">${RESULT} = {'diff': [0.100784834, 0.09969934800000002, 0.10021094400000002, 0.10021006899999996, 0.10021408300000001, 0.10021254200000007, 0.10018802799999993, 0.10019393099999996, 0.100199806, 0.100216166000000...</msg>
<status status="PASS" starttime="20201029 18:17:29.250" endtime="20201029 18:17:29.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.269" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:29.266" endtime="20201029 18:17:29.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.274" level="INFO">VALUE: [0.100784834, 0.09969934800000002, 0.10021094400000002, 0.10021006899999996, 0.10021408300000001, 0.10021254200000007, 0.10018802799999993, 0.10019393099999996, 0.100199806, 0.10021616600000005, 0.100216042, 0.10020522300000012, 0.10023599999999999, 0.100220792, 0.10021229100000006, 0.10021847200000011, 0.10020974999999988, 0.10021159700000015, 0.10021672199999987, 0.10022029199999993, 0.10021479100000041, 0.10021301399999993, 0.10021787499999979, 0.10021479200000005, 0.10021654099999999, 0.10022830599999999, 0.10023984699999966, 0.10022327800000008, 0.10021691599999993, 0.10021981900000032, 0.10020698599999989, 0.10021797199999982, 0.10022313900000013, 0.10022948599999992, 0.10022791700000022, 0.10021650000000015, 0.10022383299999982, 0.1002235279999999, 0.10021461199999981, 0.10021676399999979, 0.10021006900000007, 0.10020916700000004, 0.10021105600000002, 0.10021787500000023, 0.10021758300000005, 0.1002228469999995, 0.10022563899999959, 0.10021731899999953, 0.10021638899999985, 0.10021319500000025, 0.10021762499999998]</msg>
<status status="PASS" starttime="20201029 18:17:29.271" endtime="20201029 18:17:29.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.260" endtime="20201029 18:17:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.589" endtime="20201029 18:17:29.279"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:22.465" endtime="20201029 18:17:29.280" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:29.297" endtime="20201029 18:17:29.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.293" endtime="20201029 18:17:29.321"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.355" endtime="20201029 18:17:29.374"></status>
</kw>
<msg timestamp="20201029 18:17:29.375" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.351" endtime="20201029 18:17:29.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.377" endtime="20201029 18:17:29.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.388" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:29.384" endtime="20201029 18:17:29.389"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:29.344" endtime="20201029 18:17:29.391"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:29.337" endtime="20201029 18:17:29.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.335" endtime="20201029 18:17:29.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:29.401" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:29.400" endtime="20201029 18:17:29.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.395" endtime="20201029 18:17:29.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.333" endtime="20201029 18:17:29.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.331" endtime="20201029 18:17:29.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.405" endtime="20201029 18:17:29.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.327" endtime="20201029 18:17:29.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.322" endtime="20201029 18:17:29.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.290" endtime="20201029 18:17:29.412"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.436" endtime="20201029 18:17:35.575"></status>
</kw>
<msg timestamp="20201029 18:17:35.576" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.432" endtime="20201029 18:17:35.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.583" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.579" endtime="20201029 18:17:35.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.585" endtime="20201029 18:17:35.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.423" endtime="20201029 18:17:35.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.417" endtime="20201029 18:17:35.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.599" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:35.594" endtime="20201029 18:17:35.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.609" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:35.607" endtime="20201029 18:17:35.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.614" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:35.612" endtime="20201029 18:17:35.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.600" endtime="20201029 18:17:35.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.626" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:35.624" endtime="20201029 18:17:35.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.631" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:35.628" endtime="20201029 18:17:35.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.617" endtime="20201029 18:17:35.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.643" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:35.641" endtime="20201029 18:17:35.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.647" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:17:35.645" endtime="20201029 18:17:35.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.634" endtime="20201029 18:17:35.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.667" endtime="20201029 18:17:36.032"></status>
</kw>
<msg timestamp="20201029 18:17:36.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130167514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231171944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.664" endtime="20201029 18:17:36.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130167514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231171944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:36.041" endtime="20201029 18:17:36.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.059" endtime="20201029 18:17:36.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.656" endtime="20201029 18:17:36.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.651" endtime="20201029 18:17:36.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:36.076" level="INFO">${FILTERED} = [{'diff': 0.10100442999999998}, {'diff': 0.09948754199999998}, {'diff': 0.100201278}, {'diff': 0.10021342999999999}, {'diff': 0.10020913900000006}, {'diff': 0.10021290300000008}, {'diff': 0.1002152359...</msg>
<status status="PASS" starttime="20201029 18:17:36.067" endtime="20201029 18:17:36.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.086" level="INFO">${RESULT} = {'diff': [0.10100442999999998, 0.09948754199999998, 0.100201278, 0.10021342999999999, 0.10020913900000006, 0.10021290300000008, 0.10021523599999993, 0.10021262500000006, 0.10021652800000003, 0.1002161...</msg>
<status status="PASS" starttime="20201029 18:17:36.078" endtime="20201029 18:17:36.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.097" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:36.094" endtime="20201029 18:17:36.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.102" level="INFO">VALUE: [0.10100442999999998, 0.09948754199999998, 0.100201278, 0.10021342999999999, 0.10020913900000006, 0.10021290300000008, 0.10021523599999993, 0.10021262500000006, 0.10021652800000003, 0.10021619500000001, 0.10021501300000013, 0.10020834699999992, 0.100223972, 0.10021556899999995, 0.10020997200000004, 0.10021531900000014, 0.10020180599999984, 0.1002008889999999, 0.1001909299999999, 0.10020387500000005, 0.1002085410000002, 0.10021186100000001, 0.10021538899999971, 0.10021111099999969, 0.10021490300000035, 0.10022080599999983, 0.100221334, 0.10021416699999985, 0.10021669400000022, 0.10020855500000003, 0.10021137499999977, 0.10021995800000028, 0.10022070799999971, 0.10020986100000018, 0.10020331999999987, 0.10021297299999965, 0.10020733399999981, 0.10021563899999997, 0.10020011100000037, 0.10019859700000033, 0.10021156900000072, 0.10022038900000041, 0.100207041, 0.1002012360000002, 0.10020708299999992, 0.10020024999999944, 0.10021099999999983, 0.10019743099999978, 0.10020340300000008, 0.10021161099999976, 0.10021176399999998]</msg>
<status status="PASS" starttime="20201029 18:17:36.099" endtime="20201029 18:17:36.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.088" endtime="20201029 18:17:36.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.413" endtime="20201029 18:17:36.107"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:29.285" endtime="20201029 18:17:36.109" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:36.126" endtime="20201029 18:17:36.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.122" endtime="20201029 18:17:36.149"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.182" endtime="20201029 18:17:36.198"></status>
</kw>
<msg timestamp="20201029 18:17:36.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.179" endtime="20201029 18:17:36.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.201" endtime="20201029 18:17:36.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.212" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:36.208" endtime="20201029 18:17:36.213"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:36.172" endtime="20201029 18:17:36.214"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:36.165" endtime="20201029 18:17:36.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.163" endtime="20201029 18:17:36.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:36.224" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:36.223" endtime="20201029 18:17:36.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.218" endtime="20201029 18:17:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.161" endtime="20201029 18:17:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.159" endtime="20201029 18:17:36.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.234" endtime="20201029 18:17:36.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.155" endtime="20201029 18:17:36.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.151" endtime="20201029 18:17:36.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.119" endtime="20201029 18:17:36.241"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.263" endtime="20201029 18:17:42.396"></status>
</kw>
<msg timestamp="20201029 18:17:42.398" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.259" endtime="20201029 18:17:42.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.404" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.400" endtime="20201029 18:17:42.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.406" endtime="20201029 18:17:42.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.252" endtime="20201029 18:17:42.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.247" endtime="20201029 18:17:42.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.419" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 18:17:42.414" endtime="20201029 18:17:42.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.429" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:42.427" endtime="20201029 18:17:42.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.434" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:42.432" endtime="20201029 18:17:42.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.421" endtime="20201029 18:17:42.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.445" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:42.443" endtime="20201029 18:17:42.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.450" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:42.448" endtime="20201029 18:17:42.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.437" endtime="20201029 18:17:42.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.462" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:42.459" endtime="20201029 18:17:42.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.466" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:17:42.464" endtime="20201029 18:17:42.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.453" endtime="20201029 18:17:42.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.485" endtime="20201029 18:17:42.829"></status>
</kw>
<msg timestamp="20201029 18:17:42.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127997222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.22927325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:42.481" endtime="20201029 18:17:42.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127997222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.22927325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:42.838" endtime="20201029 18:17:42.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.856" endtime="20201029 18:17:42.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.474" endtime="20201029 18:17:42.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.470" endtime="20201029 18:17:42.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:42.873" level="INFO">${FILTERED} = [{'diff': 0.10127602800000002}, {'diff': 0.10035897200000002}, {'diff': 0.09904663799999996}, {'diff': 0.10020495800000001}, {'diff': 0.10020119500000002}, {'diff': 0.10019137500000008}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:17:42.864" endtime="20201029 18:17:42.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.884" level="INFO">${RESULT} = {'diff': [0.10127602800000002, 0.10035897200000002, 0.09904663799999996, 0.10020495800000001, 0.10020119500000002, 0.10019137500000008, 0.10018576400000001, 0.10019245900000007, 0.10020190299999987, 0...</msg>
<status status="PASS" starttime="20201029 18:17:42.877" endtime="20201029 18:17:42.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.894" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:42.891" endtime="20201029 18:17:42.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.899" level="INFO">VALUE: [0.10127602800000002, 0.10035897200000002, 0.09904663799999996, 0.10020495800000001, 0.10020119500000002, 0.10019137500000008, 0.10018576400000001, 0.10019245900000007, 0.10020190299999987, 0.100202444, 0.10020652800000018, 0.10020604199999994, 0.1002010550000001, 0.100206778, 0.10020254200000012, 0.10020651399999991, 0.10021062499999989, 0.10019579200000006, 0.10019955499999988, 0.1002015420000002, 0.10018507000000021, 0.10019644399999983, 0.10020724999999997, 0.10019604200000032, 0.10020377699999994, 0.10019908299999969, 0.1001995830000002, 0.10019368099999992, 0.10020290300000001, 0.10019563900000028, 0.10019909800000004, 0.10019830600000024, 0.10020070900000011, 0.10021215299999975, 0.10021344399999998, 0.10020247200000032, 0.10020252800000007, 0.10019481899999994, 0.1002019999999999, 0.1002056110000007, 0.1002024730000004, 0.10020084800000006, 0.10021127799999974, 0.10021277699999942, 0.10021043099999982, 0.1002110699999994, 0.10020587500000033, 0.10022151400000023, 0.1002159580000006, 0.10020313900000044, 0.10021293100000062]</msg>
<status status="PASS" starttime="20201029 18:17:42.896" endtime="20201029 18:17:42.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.885" endtime="20201029 18:17:42.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.243" endtime="20201029 18:17:42.903"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:36.113" endtime="20201029 18:17:42.905" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:59.417" endtime="20201029 18:17:42.921"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:14:06.701" endtime="20201029 18:17:43.006"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
