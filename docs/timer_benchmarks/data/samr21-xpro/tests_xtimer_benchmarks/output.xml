<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 15:50:55.739" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.103" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:50:57.121" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:50:59.160" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:50:57.098" endtime="20201030 15:50:59.161"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.166" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:50:59.163" endtime="20201030 15:50:59.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.094" endtime="20201030 15:50:59.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:59.173" endtime="20201030 15:50:59.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.170" endtime="20201030 15:50:59.529"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.560" endtime="20201030 15:50:59.576"></status>
</kw>
<msg timestamp="20201030 15:50:59.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.557" endtime="20201030 15:50:59.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.580" endtime="20201030 15:50:59.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:50:59.586" endtime="20201030 15:50:59.591"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:59.550" endtime="20201030 15:50:59.593"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:59.544" endtime="20201030 15:50:59.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.541" endtime="20201030 15:50:59.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:50:59.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:50:59.602" endtime="20201030 15:50:59.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.597" endtime="20201030 15:50:59.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.539" endtime="20201030 15:50:59.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.537" endtime="20201030 15:50:59.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.607" endtime="20201030 15:50:59.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.534" endtime="20201030 15:50:59.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.614" endtime="20201030 15:50:59.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.530" endtime="20201030 15:50:59.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.090" endtime="20201030 15:50:59.620"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:59.634" endtime="20201030 15:50:59.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.630" endtime="20201030 15:50:59.657"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.692" endtime="20201030 15:50:59.708"></status>
</kw>
<msg timestamp="20201030 15:50:59.709" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.689" endtime="20201030 15:50:59.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.715" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.711" endtime="20201030 15:50:59.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.722" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:50:59.718" endtime="20201030 15:50:59.723"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:59.682" endtime="20201030 15:50:59.724"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:59.675" endtime="20201030 15:50:59.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.671" endtime="20201030 15:50:59.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:50:59.734" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:50:59.733" endtime="20201030 15:50:59.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.729" endtime="20201030 15:50:59.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.669" endtime="20201030 15:50:59.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.667" endtime="20201030 15:50:59.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.738" endtime="20201030 15:50:59.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.663" endtime="20201030 15:50:59.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.659" endtime="20201030 15:50:59.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.628" endtime="20201030 15:50:59.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.762" endtime="20201030 15:50:59.772"></status>
</kw>
<msg timestamp="20201030 15:50:59.774" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.759" endtime="20201030 15:50:59.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.780" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.776" endtime="20201030 15:50:59.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.782" endtime="20201030 15:50:59.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.751" endtime="20201030 15:50:59.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.746" endtime="20201030 15:50:59.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.798" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:50:59.796" endtime="20201030 15:50:59.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.803" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:50:59.800" endtime="20201030 15:50:59.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.790" endtime="20201030 15:50:59.805"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:50:59.621" endtime="20201030 15:50:59.806" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:50:56.009" endtime="20201030 15:50:59.813"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.954" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:50:59.971" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:01.997" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:50:59.946" endtime="20201030 15:51:01.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.004" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:02.001" endtime="20201030 15:51:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.943" endtime="20201030 15:51:02.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:02.011" endtime="20201030 15:51:02.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.008" endtime="20201030 15:51:02.372"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.402" endtime="20201030 15:51:02.420"></status>
</kw>
<msg timestamp="20201030 15:51:02.422" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.398" endtime="20201030 15:51:02.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.424" endtime="20201030 15:51:02.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.435" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:02.430" endtime="20201030 15:51:02.435"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:02.392" endtime="20201030 15:51:02.437"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:02.386" endtime="20201030 15:51:02.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.384" endtime="20201030 15:51:02.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:02.448" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:02.446" endtime="20201030 15:51:02.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.442" endtime="20201030 15:51:02.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.382" endtime="20201030 15:51:02.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.380" endtime="20201030 15:51:02.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.452" endtime="20201030 15:51:02.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.377" endtime="20201030 15:51:02.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.460" endtime="20201030 15:51:02.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.374" endtime="20201030 15:51:02.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.940" endtime="20201030 15:51:02.468"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:02.482" endtime="20201030 15:51:02.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.478" endtime="20201030 15:51:02.505"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.602" endtime="20201030 15:51:02.621"></status>
</kw>
<msg timestamp="20201030 15:51:02.622" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.598" endtime="20201030 15:51:02.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.625" endtime="20201030 15:51:02.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.636" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:02.632" endtime="20201030 15:51:02.637"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:02.591" endtime="20201030 15:51:02.639"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:02.522" endtime="20201030 15:51:02.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.519" endtime="20201030 15:51:02.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:02.649" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:02.648" endtime="20201030 15:51:02.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.643" endtime="20201030 15:51:02.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.517" endtime="20201030 15:51:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.515" endtime="20201030 15:51:02.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.653" endtime="20201030 15:51:02.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.511" endtime="20201030 15:51:02.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.507" endtime="20201030 15:51:02.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.475" endtime="20201030 15:51:02.660"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.682" endtime="20201030 15:51:02.695"></status>
</kw>
<msg timestamp="20201030 15:51:02.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.679" endtime="20201030 15:51:02.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.698" endtime="20201030 15:51:02.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.704" endtime="20201030 15:51:02.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.672" endtime="20201030 15:51:02.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.667" endtime="20201030 15:51:02.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.730" endtime="20201030 15:51:03.098"></status>
</kw>
<msg timestamp="20201030 15:51:03.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190717792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190718264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:02.726" endtime="20201030 15:51:03.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190717792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190718264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:03.107" endtime="20201030 15:51:03.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.128" endtime="20201030 15:51:03.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.717" endtime="20201030 15:51:03.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.713" endtime="20201030 15:51:03.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:03.148" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:03.139" endtime="20201030 15:51:03.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:03.161" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:03.151" endtime="20201030 15:51:03.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.175" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:03.172" endtime="20201030 15:51:03.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.182" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:03.178" endtime="20201030 15:51:03.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.163" endtime="20201030 15:51:03.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:03.197" endtime="20201030 15:51:03.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.192" endtime="20201030 15:51:03.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.189" endtime="20201030 15:51:03.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.663" endtime="20201030 15:51:03.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.662" endtime="20201030 15:51:03.224"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.245" endtime="20201030 15:51:03.257"></status>
</kw>
<msg timestamp="20201030 15:51:03.259" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.242" endtime="20201030 15:51:03.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.261" endtime="20201030 15:51:03.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.267" endtime="20201030 15:51:03.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.234" endtime="20201030 15:51:03.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.229" endtime="20201030 15:51:03.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.291" endtime="20201030 15:51:03.648"></status>
</kw>
<msg timestamp="20201030 15:51:03.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036503736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036504208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:03.288" endtime="20201030 15:51:03.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036503736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036504208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:03.658" endtime="20201030 15:51:03.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.677" endtime="20201030 15:51:03.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.280" endtime="20201030 15:51:03.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.276" endtime="20201030 15:51:03.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:03.694" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:03.685" endtime="20201030 15:51:03.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:03.706" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:03.697" endtime="20201030 15:51:03.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.716" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:03.714" endtime="20201030 15:51:03.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.722" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:03.718" endtime="20201030 15:51:03.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.707" endtime="20201030 15:51:03.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:03.735" endtime="20201030 15:51:03.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.729" endtime="20201030 15:51:03.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.727" endtime="20201030 15:51:03.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.226" endtime="20201030 15:51:03.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.225" endtime="20201030 15:51:03.776"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.827" endtime="20201030 15:51:03.841"></status>
</kw>
<msg timestamp="20201030 15:51:03.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.823" endtime="20201030 15:51:03.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.849" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.844" endtime="20201030 15:51:03.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.851" endtime="20201030 15:51:03.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.801" endtime="20201030 15:51:03.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.791" endtime="20201030 15:51:03.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.875" endtime="20201030 15:51:04.230"></status>
</kw>
<msg timestamp="20201030 15:51:04.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.08092375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080924222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:03.871" endtime="20201030 15:51:04.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.08092375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080924222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:04.239" endtime="20201030 15:51:04.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.258" endtime="20201030 15:51:04.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.864" endtime="20201030 15:51:04.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.859" endtime="20201030 15:51:04.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:04.277" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999998748243e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:04.268" endtime="20201030 15:51:04.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:04.288" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:04.279" endtime="20201030 15:51:04.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.298" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:04.296" endtime="20201030 15:51:04.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.304" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:04.301" endtime="20201030 15:51:04.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.290" endtime="20201030 15:51:04.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:04.316" endtime="20201030 15:51:04.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.311" endtime="20201030 15:51:04.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.309" endtime="20201030 15:51:04.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.783" endtime="20201030 15:51:04.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.779" endtime="20201030 15:51:04.341"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.362" endtime="20201030 15:51:04.375"></status>
</kw>
<msg timestamp="20201030 15:51:04.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.358" endtime="20201030 15:51:04.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.378" endtime="20201030 15:51:04.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.384" endtime="20201030 15:51:04.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.351" endtime="20201030 15:51:04.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.346" endtime="20201030 15:51:04.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.408" endtime="20201030 15:51:04.774"></status>
</kw>
<msg timestamp="20201030 15:51:04.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036276431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036276903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:04.405" endtime="20201030 15:51:04.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036276431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036276903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:04.784" endtime="20201030 15:51:04.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.804" endtime="20201030 15:51:04.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.397" endtime="20201030 15:51:04.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.393" endtime="20201030 15:51:04.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:04.821" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:04.812" endtime="20201030 15:51:04.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:04.831" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:04.824" endtime="20201030 15:51:04.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.841" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:04.839" endtime="20201030 15:51:04.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.847" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:04.844" endtime="20201030 15:51:04.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.833" endtime="20201030 15:51:04.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:04.859" endtime="20201030 15:51:04.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.854" endtime="20201030 15:51:04.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.852" endtime="20201030 15:51:04.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.343" endtime="20201030 15:51:04.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.342" endtime="20201030 15:51:04.884"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.905" endtime="20201030 15:51:04.919"></status>
</kw>
<msg timestamp="20201030 15:51:04.921" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.902" endtime="20201030 15:51:04.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.927" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.923" endtime="20201030 15:51:04.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.929" endtime="20201030 15:51:04.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.894" endtime="20201030 15:51:04.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.890" endtime="20201030 15:51:04.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.953" endtime="20201030 15:51:05.306"></status>
</kw>
<msg timestamp="20201030 15:51:05.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038025167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038025639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:04.950" endtime="20201030 15:51:05.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038025167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038025639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:05.316" endtime="20201030 15:51:05.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.335" endtime="20201030 15:51:05.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.942" endtime="20201030 15:51:05.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.937" endtime="20201030 15:51:05.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:05.353" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7299999999389497e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 15:51:05.344" endtime="20201030 15:51:05.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:05.362" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:51:05.355" endtime="20201030 15:51:05.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.373" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:05.371" endtime="20201030 15:51:05.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.379" level="INFO">VALUE: [4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:05.375" endtime="20201030 15:51:05.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.364" endtime="20201030 15:51:05.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:05.392" endtime="20201030 15:51:05.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.386" endtime="20201030 15:51:05.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.384" endtime="20201030 15:51:05.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.886" endtime="20201030 15:51:05.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.885" endtime="20201030 15:51:05.417"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.438" endtime="20201030 15:51:05.451"></status>
</kw>
<msg timestamp="20201030 15:51:05.452" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:05.435" endtime="20201030 15:51:05.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:05.455" endtime="20201030 15:51:05.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.461" endtime="20201030 15:51:05.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.428" endtime="20201030 15:51:05.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.423" endtime="20201030 15:51:05.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.487" endtime="20201030 15:51:05.856"></status>
</kw>
<msg timestamp="20201030 15:51:05.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036466944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036467417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:05.484" endtime="20201030 15:51:05.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036466944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036467417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:05.870" endtime="20201030 15:51:05.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.889" endtime="20201030 15:51:05.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.477" endtime="20201030 15:51:05.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.470" endtime="20201030 15:51:05.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:05.907" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:05.898" endtime="20201030 15:51:05.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:05.917" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:05.909" endtime="20201030 15:51:05.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.927" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:05.925" endtime="20201030 15:51:05.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.933" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:51:05.930" endtime="20201030 15:51:05.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.919" endtime="20201030 15:51:05.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:05.945" endtime="20201030 15:51:05.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.940" endtime="20201030 15:51:05.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.938" endtime="20201030 15:51:05.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.419" endtime="20201030 15:51:05.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.418" endtime="20201030 15:51:05.970"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.990" endtime="20201030 15:51:06.001"></status>
</kw>
<msg timestamp="20201030 15:51:06.002" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:05.986" endtime="20201030 15:51:06.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.009" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:06.005" endtime="20201030 15:51:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.011" endtime="20201030 15:51:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.979" endtime="20201030 15:51:06.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.975" endtime="20201030 15:51:06.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.036" endtime="20201030 15:51:06.370"></status>
</kw>
<msg timestamp="20201030 15:51:06.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035879278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03587975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:06.032" endtime="20201030 15:51:06.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035879278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03587975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:06.379" endtime="20201030 15:51:06.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.397" endtime="20201030 15:51:06.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.025" endtime="20201030 15:51:06.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.019" endtime="20201030 15:51:06.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:06.415" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:06.406" endtime="20201030 15:51:06.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:06.427" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.73...</msg>
<status status="PASS" starttime="20201030 15:51:06.417" endtime="20201030 15:51:06.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.437" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:06.435" endtime="20201030 15:51:06.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.443" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:06.440" endtime="20201030 15:51:06.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.429" endtime="20201030 15:51:06.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:06.454" endtime="20201030 15:51:06.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.450" endtime="20201030 15:51:06.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.447" endtime="20201030 15:51:06.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.971" endtime="20201030 15:51:06.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.970" endtime="20201030 15:51:06.479"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.511" endtime="20201030 15:51:06.527"></status>
</kw>
<msg timestamp="20201030 15:51:06.528" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:06.505" endtime="20201030 15:51:06.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:06.531" endtime="20201030 15:51:06.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.539" endtime="20201030 15:51:06.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.495" endtime="20201030 15:51:06.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.489" endtime="20201030 15:51:06.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.567" endtime="20201030 15:51:06.914"></status>
</kw>
<msg timestamp="20201030 15:51:06.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048169819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048170292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:06.563" endtime="20201030 15:51:06.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048169819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048170292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:06.924" endtime="20201030 15:51:06.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.943" endtime="20201030 15:51:06.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.556" endtime="20201030 15:51:06.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.551" endtime="20201030 15:51:06.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:06.960" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-0...</msg>
<status status="PASS" starttime="20201030 15:51:06.952" endtime="20201030 15:51:06.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:06.970" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, ...</msg>
<status status="PASS" starttime="20201030 15:51:06.963" endtime="20201030 15:51:06.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:06.978" endtime="20201030 15:51:06.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.986" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:06.983" endtime="20201030 15:51:06.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.972" endtime="20201030 15:51:06.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:06.998" endtime="20201030 15:51:07.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.994" endtime="20201030 15:51:07.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.991" endtime="20201030 15:51:07.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.481" endtime="20201030 15:51:07.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.480" endtime="20201030 15:51:07.024"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.044" endtime="20201030 15:51:07.059"></status>
</kw>
<msg timestamp="20201030 15:51:07.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:07.041" endtime="20201030 15:51:07.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:07.062" endtime="20201030 15:51:07.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.069" endtime="20201030 15:51:07.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.034" endtime="20201030 15:51:07.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.029" endtime="20201030 15:51:07.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.093" endtime="20201030 15:51:07.436"></status>
</kw>
<msg timestamp="20201030 15:51:07.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038041569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038042042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:07.090" endtime="20201030 15:51:07.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038041569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038042042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:07.446" endtime="20201030 15:51:07.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.467" endtime="20201030 15:51:07.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.082" endtime="20201030 15:51:07.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.077" endtime="20201030 15:51:07.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:07.487" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:07.476" endtime="20201030 15:51:07.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:07.498" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:07.489" endtime="20201030 15:51:07.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.511" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:07.508" endtime="20201030 15:51:07.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.518" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:07.514" endtime="20201030 15:51:07.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.501" endtime="20201030 15:51:07.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:07.538" endtime="20201030 15:51:07.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.528" endtime="20201030 15:51:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.525" endtime="20201030 15:51:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.025" endtime="20201030 15:51:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.024" endtime="20201030 15:51:07.563"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.584" endtime="20201030 15:51:07.597"></status>
</kw>
<msg timestamp="20201030 15:51:07.599" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:07.581" endtime="20201030 15:51:07.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.605" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:07.601" endtime="20201030 15:51:07.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.607" endtime="20201030 15:51:07.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.574" endtime="20201030 15:51:07.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.569" endtime="20201030 15:51:07.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.631" endtime="20201030 15:51:07.976"></status>
</kw>
<msg timestamp="20201030 15:51:07.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036695514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:07.628" endtime="20201030 15:51:07.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036695514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:07.985" endtime="20201030 15:51:08.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.005" endtime="20201030 15:51:08.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.620" endtime="20201030 15:51:08.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.615" endtime="20201030 15:51:08.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:08.022" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:08.013" endtime="20201030 15:51:08.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:08.034" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 15:51:08.024" endtime="20201030 15:51:08.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.044" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:08.042" endtime="20201030 15:51:08.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.049" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:51:08.046" endtime="20201030 15:51:08.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.035" endtime="20201030 15:51:08.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:08.061" endtime="20201030 15:51:08.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.057" endtime="20201030 15:51:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.054" endtime="20201030 15:51:08.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.565" endtime="20201030 15:51:08.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.564" endtime="20201030 15:51:08.087"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.108" endtime="20201030 15:51:08.120"></status>
</kw>
<msg timestamp="20201030 15:51:08.122" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.105" endtime="20201030 15:51:08.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.124" endtime="20201030 15:51:08.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.130" endtime="20201030 15:51:08.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.096" endtime="20201030 15:51:08.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.092" endtime="20201030 15:51:08.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.154" endtime="20201030 15:51:08.501"></status>
</kw>
<msg timestamp="20201030 15:51:08.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036977556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036978028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:08.151" endtime="20201030 15:51:08.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036977556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036978028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:08.510" endtime="20201030 15:51:08.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.530" endtime="20201030 15:51:08.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.143" endtime="20201030 15:51:08.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.139" endtime="20201030 15:51:08.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:08.547" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:08.538" endtime="20201030 15:51:08.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:08.559" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:51:08.550" endtime="20201030 15:51:08.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.569" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:08.567" endtime="20201030 15:51:08.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.575" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:51:08.572" endtime="20201030 15:51:08.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.561" endtime="20201030 15:51:08.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:08.587" endtime="20201030 15:51:08.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.582" endtime="20201030 15:51:08.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.580" endtime="20201030 15:51:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.089" endtime="20201030 15:51:08.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.088" endtime="20201030 15:51:08.614"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.642" endtime="20201030 15:51:08.656"></status>
</kw>
<msg timestamp="20201030 15:51:08.658" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.637" endtime="20201030 15:51:08.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:08.664" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:08.660" endtime="20201030 15:51:08.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.667" endtime="20201030 15:51:08.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.628" endtime="20201030 15:51:08.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.622" endtime="20201030 15:51:08.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:08.691" endtime="20201030 15:51:09.039"></status>
</kw>
<msg timestamp="20201030 15:51:09.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046156792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046157264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:08.687" endtime="20201030 15:51:09.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046156792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046157264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:09.049" endtime="20201030 15:51:09.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.068" endtime="20201030 15:51:09.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.680" endtime="20201030 15:51:09.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.675" endtime="20201030 15:51:09.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:09.085" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:09.076" endtime="20201030 15:51:09.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:09.095" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:51:09.087" endtime="20201030 15:51:09.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.105" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:09.103" endtime="20201030 15:51:09.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.111" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:09.107" endtime="20201030 15:51:09.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.097" endtime="20201030 15:51:09.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:09.122" endtime="20201030 15:51:09.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.118" endtime="20201030 15:51:09.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.116" endtime="20201030 15:51:09.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.618" endtime="20201030 15:51:09.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:08.616" endtime="20201030 15:51:09.149"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.169" endtime="20201030 15:51:09.184"></status>
</kw>
<msg timestamp="20201030 15:51:09.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:09.166" endtime="20201030 15:51:09.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:09.188" endtime="20201030 15:51:09.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.194" endtime="20201030 15:51:09.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.159" endtime="20201030 15:51:09.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.154" endtime="20201030 15:51:09.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.218" endtime="20201030 15:51:09.572"></status>
</kw>
<msg timestamp="20201030 15:51:09.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037820403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037820875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:09.214" endtime="20201030 15:51:09.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037820403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037820875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:09.582" endtime="20201030 15:51:09.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.601" endtime="20201030 15:51:09.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.207" endtime="20201030 15:51:09.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.202" endtime="20201030 15:51:09.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:09.618" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:09.609" endtime="20201030 15:51:09.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:09.628" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:09.620" endtime="20201030 15:51:09.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.638" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:09.636" endtime="20201030 15:51:09.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.644" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:09.641" endtime="20201030 15:51:09.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.630" endtime="20201030 15:51:09.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:09.658" endtime="20201030 15:51:09.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.652" endtime="20201030 15:51:09.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.650" endtime="20201030 15:51:09.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.150" endtime="20201030 15:51:09.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.149" endtime="20201030 15:51:09.683"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.704" endtime="20201030 15:51:09.717"></status>
</kw>
<msg timestamp="20201030 15:51:09.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:09.701" endtime="20201030 15:51:09.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:09.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:09.720" endtime="20201030 15:51:09.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.726" endtime="20201030 15:51:09.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.693" endtime="20201030 15:51:09.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.689" endtime="20201030 15:51:09.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:09.750" endtime="20201030 15:51:10.118"></status>
</kw>
<msg timestamp="20201030 15:51:10.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036233958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036234431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:09.747" endtime="20201030 15:51:10.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036233958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036234431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:10.129" endtime="20201030 15:51:10.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.157" endtime="20201030 15:51:10.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.740" endtime="20201030 15:51:10.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.735" endtime="20201030 15:51:10.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:10.185" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:10.175" endtime="20201030 15:51:10.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:10.198" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:10.187" endtime="20201030 15:51:10.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.209" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:10.207" endtime="20201030 15:51:10.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.215" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:10.211" endtime="20201030 15:51:10.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.200" endtime="20201030 15:51:10.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:10.229" endtime="20201030 15:51:10.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.224" endtime="20201030 15:51:10.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.221" endtime="20201030 15:51:10.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.685" endtime="20201030 15:51:10.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:09.684" endtime="20201030 15:51:10.254"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.275" endtime="20201030 15:51:10.288"></status>
</kw>
<msg timestamp="20201030 15:51:10.289" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.272" endtime="20201030 15:51:10.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.295" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.291" endtime="20201030 15:51:10.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.298" endtime="20201030 15:51:10.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.264" endtime="20201030 15:51:10.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.260" endtime="20201030 15:51:10.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.322" endtime="20201030 15:51:10.678"></status>
</kw>
<msg timestamp="20201030 15:51:10.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036589417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036589889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:10.318" endtime="20201030 15:51:10.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036589417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036589889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:10.688" endtime="20201030 15:51:10.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.707" endtime="20201030 15:51:10.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.311" endtime="20201030 15:51:10.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.306" endtime="20201030 15:51:10.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:10.725" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:10.716" endtime="20201030 15:51:10.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:10.736" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:10.727" endtime="20201030 15:51:10.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.747" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:10.744" endtime="20201030 15:51:10.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.752" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:10.749" endtime="20201030 15:51:10.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.738" endtime="20201030 15:51:10.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:10.765" endtime="20201030 15:51:10.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.760" endtime="20201030 15:51:10.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.758" endtime="20201030 15:51:10.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.256" endtime="20201030 15:51:10.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.255" endtime="20201030 15:51:10.790"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.811" endtime="20201030 15:51:10.824"></status>
</kw>
<msg timestamp="20201030 15:51:10.825" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.808" endtime="20201030 15:51:10.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:10.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:10.827" endtime="20201030 15:51:10.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.833" endtime="20201030 15:51:10.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.800" endtime="20201030 15:51:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.796" endtime="20201030 15:51:10.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:10.857" endtime="20201030 15:51:11.209"></status>
</kw>
<msg timestamp="20201030 15:51:11.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036543819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036544292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:10.854" endtime="20201030 15:51:11.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036543819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036544292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.218" endtime="20201030 15:51:11.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.237" endtime="20201030 15:51:11.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.847" endtime="20201030 15:51:11.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.842" endtime="20201030 15:51:11.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:11.255" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-0...</msg>
<status status="PASS" starttime="20201030 15:51:11.246" endtime="20201030 15:51:11.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:11.265" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07,...</msg>
<status status="PASS" starttime="20201030 15:51:11.257" endtime="20201030 15:51:11.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.275" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:11.273" endtime="20201030 15:51:11.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.280" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:11.277" endtime="20201030 15:51:11.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.266" endtime="20201030 15:51:11.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:11.293" endtime="20201030 15:51:11.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.289" endtime="20201030 15:51:11.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.286" endtime="20201030 15:51:11.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.792" endtime="20201030 15:51:11.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:10.791" endtime="20201030 15:51:11.319"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.339" endtime="20201030 15:51:11.354"></status>
</kw>
<msg timestamp="20201030 15:51:11.355" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.336" endtime="20201030 15:51:11.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.357" endtime="20201030 15:51:11.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.364" endtime="20201030 15:51:11.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.329" endtime="20201030 15:51:11.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.324" endtime="20201030 15:51:11.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.387" endtime="20201030 15:51:11.752"></status>
</kw>
<msg timestamp="20201030 15:51:11.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037954083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037954556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.384" endtime="20201030 15:51:11.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037954083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037954556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.762" endtime="20201030 15:51:11.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.780" endtime="20201030 15:51:11.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.377" endtime="20201030 15:51:11.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.372" endtime="20201030 15:51:11.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:11.797" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:11.788" endtime="20201030 15:51:11.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:11.806" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:11.799" endtime="20201030 15:51:11.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.816" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:11.814" endtime="20201030 15:51:11.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.822" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7299999999389497e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:11.819" endtime="20201030 15:51:11.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.808" endtime="20201030 15:51:11.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:11.835" endtime="20201030 15:51:11.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.830" endtime="20201030 15:51:11.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.827" endtime="20201030 15:51:11.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.321" endtime="20201030 15:51:11.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.320" endtime="20201030 15:51:11.860"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.880" endtime="20201030 15:51:11.892"></status>
</kw>
<msg timestamp="20201030 15:51:11.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.877" endtime="20201030 15:51:11.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.896" endtime="20201030 15:51:11.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.902" endtime="20201030 15:51:11.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.870" endtime="20201030 15:51:11.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.865" endtime="20201030 15:51:11.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.925" endtime="20201030 15:51:12.269"></status>
</kw>
<msg timestamp="20201030 15:51:12.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035041153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035041625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.922" endtime="20201030 15:51:12.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035041153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035041625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.278" endtime="20201030 15:51:12.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.297" endtime="20201030 15:51:12.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.914" endtime="20201030 15:51:12.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.910" endtime="20201030 15:51:12.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:12.314" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:12.305" endtime="20201030 15:51:12.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:12.324" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 15:51:12.316" endtime="20201030 15:51:12.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.334" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:12.332" endtime="20201030 15:51:12.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.339" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:12.336" endtime="20201030 15:51:12.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.326" endtime="20201030 15:51:12.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:12.352" endtime="20201030 15:51:12.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.347" endtime="20201030 15:51:12.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.345" endtime="20201030 15:51:12.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.862" endtime="20201030 15:51:12.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.861" endtime="20201030 15:51:12.377"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.397" endtime="20201030 15:51:12.409"></status>
</kw>
<msg timestamp="20201030 15:51:12.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.394" endtime="20201030 15:51:12.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.412" endtime="20201030 15:51:12.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.419" endtime="20201030 15:51:12.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.386" endtime="20201030 15:51:12.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.382" endtime="20201030 15:51:12.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.441" endtime="20201030 15:51:12.785"></status>
</kw>
<msg timestamp="20201030 15:51:12.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035494278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03549475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:12.438" endtime="20201030 15:51:12.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035494278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03549475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:12.795" endtime="20201030 15:51:12.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.813" endtime="20201030 15:51:12.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.431" endtime="20201030 15:51:12.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.426" endtime="20201030 15:51:12.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:12.830" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:12.821" endtime="20201030 15:51:12.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:12.845" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:12.832" endtime="20201030 15:51:12.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.855" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:12.852" endtime="20201030 15:51:12.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.860" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07]</msg>
<status status="PASS" starttime="20201030 15:51:12.857" endtime="20201030 15:51:12.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.846" endtime="20201030 15:51:12.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:12.872" endtime="20201030 15:51:12.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.868" endtime="20201030 15:51:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.865" endtime="20201030 15:51:12.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.379" endtime="20201030 15:51:12.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.378" endtime="20201030 15:51:12.897"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.917" endtime="20201030 15:51:12.928"></status>
</kw>
<msg timestamp="20201030 15:51:12.929" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.914" endtime="20201030 15:51:12.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.935" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.931" endtime="20201030 15:51:12.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.937" endtime="20201030 15:51:12.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.906" endtime="20201030 15:51:12.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.902" endtime="20201030 15:51:12.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.960" endtime="20201030 15:51:13.295"></status>
</kw>
<msg timestamp="20201030 15:51:13.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034934458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034934931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.957" endtime="20201030 15:51:13.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034934458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034934931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.305" endtime="20201030 15:51:13.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.323" endtime="20201030 15:51:13.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.950" endtime="20201030 15:51:13.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.945" endtime="20201030 15:51:13.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:13.340" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:13.331" endtime="20201030 15:51:13.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:13.350" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:13.342" endtime="20201030 15:51:13.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.359" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:13.357" endtime="20201030 15:51:13.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.365" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:13.362" endtime="20201030 15:51:13.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.351" endtime="20201030 15:51:13.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:13.377" endtime="20201030 15:51:13.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.373" endtime="20201030 15:51:13.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.370" endtime="20201030 15:51:13.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.899" endtime="20201030 15:51:13.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.898" endtime="20201030 15:51:13.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.661" endtime="20201030 15:51:13.402"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:02.469" endtime="20201030 15:51:13.404" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:13.421" endtime="20201030 15:51:13.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.417" endtime="20201030 15:51:13.444"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.478" endtime="20201030 15:51:13.494"></status>
</kw>
<msg timestamp="20201030 15:51:13.495" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.475" endtime="20201030 15:51:13.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.502" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.497" endtime="20201030 15:51:13.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.509" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:13.504" endtime="20201030 15:51:13.509"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:13.468" endtime="20201030 15:51:13.511"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:13.462" endtime="20201030 15:51:13.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.459" endtime="20201030 15:51:13.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:13.522" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:13.520" endtime="20201030 15:51:13.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.516" endtime="20201030 15:51:13.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.457" endtime="20201030 15:51:13.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.454" endtime="20201030 15:51:13.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.525" endtime="20201030 15:51:13.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.450" endtime="20201030 15:51:13.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.445" endtime="20201030 15:51:13.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.414" endtime="20201030 15:51:13.532"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.564" endtime="20201030 15:51:13.587"></status>
</kw>
<msg timestamp="20201030 15:51:13.588" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.559" endtime="20201030 15:51:13.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.591" endtime="20201030 15:51:13.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.599" endtime="20201030 15:51:13.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.549" endtime="20201030 15:51:13.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.539" endtime="20201030 15:51:13.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.623" endtime="20201030 15:51:14.001"></status>
</kw>
<msg timestamp="20201030 15:51:14.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136663403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136672917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.620" endtime="20201030 15:51:14.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136663403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136672917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.011" endtime="20201030 15:51:14.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.030" endtime="20201030 15:51:14.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.613" endtime="20201030 15:51:14.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.608" endtime="20201030 15:51:14.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:14.047" level="INFO">${RESULT} = [{'diff': 9.51400000001601e-06}, {'diff': 9.513999999988254e-06}, {'diff': 8.84800000000574e-06}, {'diff': 9.597999999999551e-06}, {'diff': 8.833000000013635e-06}, {'diff': 8.679999999983146e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:14.038" endtime="20201030 15:51:14.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:14.057" level="INFO">${OVERHEAD} = {'diff': [9.51400000001601e-06, 9.513999999988254e-06, 8.84800000000574e-06, 9.597999999999551e-06, 8.833000000013635e-06, 8.679999999983146e-06, 9.457999999989974e-06, 8.652999999997357e-06, 8.707999...</msg>
<status status="PASS" starttime="20201030 15:51:14.049" endtime="20201030 15:51:14.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.067" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:14.065" endtime="20201030 15:51:14.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.073" level="INFO">VALUE: [9.51400000001601e-06, 9.513999999988254e-06, 8.84800000000574e-06, 9.597999999999551e-06, 8.833000000013635e-06, 8.679999999983146e-06, 9.457999999989974e-06, 8.652999999997357e-06, 8.707999999996163e-06, 9.36099999998552e-06, 8.985999999988614e-06, 8.666999999989988e-06, 9.347000000020644e-06, 9.472000000010361e-06, 9.51400000001601e-06, 9.000000000009e-06, 8.667000000017744e-06, 9.348000000020118e-06, 9.52800000000864e-06, 8.695000000003006e-06, 9.51299999998878e-06, 9.014000000001632e-06, 9.347999999992362e-06, 8.860999999998898e-06, 9.167000000004366e-06, 9.179999999997523e-06, 9.25000000001619e-06, 8.818999999993249e-06, 9.166000000004892e-06, 9.014000000001632e-06, 9.041000000015176e-06, 8.847000000006267e-06, 9.166000000004892e-06, 8.847000000006267e-06, 9.000000000009e-06, 9.249999999988434e-06, 8.681000000010375e-06, 8.833999999985354e-06, 9.499999999995623e-06, 9.014000000001632e-06, 8.7769999999876e-06, 9.180999999996997e-06, 9.166000000004892e-06, 9.180999999996997e-06, 9.15299999998398e-06, 8.679999999983146e-06, 9.193999999990154e-06, 9.362000000012749e-06, 9.402999999991168e-06, 9.028000000022018e-06]</msg>
<status status="PASS" starttime="20201030 15:51:14.070" endtime="20201030 15:51:14.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.059" endtime="20201030 15:51:14.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.085" endtime="20201030 15:51:14.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.080" endtime="20201030 15:51:14.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.078" endtime="20201030 15:51:14.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.535" endtime="20201030 15:51:14.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.534" endtime="20201030 15:51:14.110"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.131" endtime="20201030 15:51:14.146"></status>
</kw>
<msg timestamp="20201030 15:51:14.147" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.127" endtime="20201030 15:51:14.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.154" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.150" endtime="20201030 15:51:14.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.157" endtime="20201030 15:51:14.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.120" endtime="20201030 15:51:14.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.115" endtime="20201030 15:51:14.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.181" endtime="20201030 15:51:14.547"></status>
</kw>
<msg timestamp="20201030 15:51:14.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038259444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038268625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.177" endtime="20201030 15:51:14.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038259444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038268625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.557" endtime="20201030 15:51:14.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.576" endtime="20201030 15:51:14.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.170" endtime="20201030 15:51:14.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.165" endtime="20201030 15:51:14.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:14.594" level="INFO">${RESULT} = [{'diff': 9.181000000003936e-06}, {'diff': 8.958000000003352e-06}, {'diff': 8.999999999995123e-06}, {'diff': 8.666999999996927e-06}, {'diff': 9.180999999996997e-06}, {'diff': 9.165999999997954e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:14.585" endtime="20201030 15:51:14.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:14.603" level="INFO">${OVERHEAD} = {'diff': [9.181000000003936e-06, 8.958000000003352e-06, 8.999999999995123e-06, 8.666999999996927e-06, 9.180999999996997e-06, 9.165999999997954e-06, 9.013999999994693e-06, 8.695000000003006e-06, 9.1799...</msg>
<status status="PASS" starttime="20201030 15:51:14.596" endtime="20201030 15:51:14.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.614" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:14.611" endtime="20201030 15:51:14.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.622" level="INFO">VALUE: [9.181000000003936e-06, 8.958000000003352e-06, 8.999999999995123e-06, 8.666999999996927e-06, 9.180999999996997e-06, 9.165999999997954e-06, 9.013999999994693e-06, 8.695000000003006e-06, 9.179999999997523e-06, 9.209000000003076e-06, 9.179999999997523e-06, 9.333000000000258e-06, 8.832999999999758e-06, 9.333999999999731e-06, 8.680999999996497e-06, 9.180999999996997e-06, 9.347999999999301e-06, 9.124999999998717e-06, 9.527999999994763e-06, 9.347000000006767e-06, 9.569000000000938e-06, 8.791000000001048e-06, 8.846999999999328e-06, 9.014000000001632e-06, 9.138999999998287e-06, 9.181000000003936e-06, 8.819000000000188e-06, 9.014000000001632e-06, 9.014000000001632e-06, 8.680000000003962e-06, 9.514000000002132e-06, 8.680999999996497e-06, 9.347999999999301e-06, 8.846999999999328e-06, 8.652999999997357e-06, 9.514000000002132e-06, 9.181000000003936e-06, 9.333000000000258e-06, 8.986000000002492e-06, 9.360999999999398e-06, 9.319000000000688e-06, 8.667000000003866e-06, 9.014000000001632e-06, 8.667000000003866e-06, 9.51299999999572e-06, 9.013000000002158e-06, 8.874999999998467e-06, 8.665999999997454e-06, 9.000000000002062e-06, 9.556000000000842e-06]</msg>
<status status="PASS" starttime="20201030 15:51:14.617" endtime="20201030 15:51:14.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.605" endtime="20201030 15:51:14.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.640" endtime="20201030 15:51:14.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.632" endtime="20201030 15:51:14.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.629" endtime="20201030 15:51:14.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.112" endtime="20201030 15:51:14.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.111" endtime="20201030 15:51:14.667"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.688" endtime="20201030 15:51:14.703"></status>
</kw>
<msg timestamp="20201030 15:51:14.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.684" endtime="20201030 15:51:14.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.706" endtime="20201030 15:51:14.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.713" endtime="20201030 15:51:14.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.676" endtime="20201030 15:51:14.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.672" endtime="20201030 15:51:14.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.736" endtime="20201030 15:51:15.084"></status>
</kw>
<msg timestamp="20201030 15:51:15.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038574556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038583222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.733" endtime="20201030 15:51:15.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038574556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038583222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.094" endtime="20201030 15:51:15.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.117" endtime="20201030 15:51:15.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.725" endtime="20201030 15:51:15.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.721" endtime="20201030 15:51:15.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:15.136" level="INFO">${RESULT} = [{'diff': 8.665999999997454e-06}, {'diff': 9.069000000000438e-06}, {'diff': 9.013000000002158e-06}, {'diff': 8.832999999999758e-06}, {'diff': 9.014000000001632e-06}, {'diff': 8.680000000003962e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:15.126" endtime="20201030 15:51:15.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:15.149" level="INFO">${OVERHEAD} = {'diff': [8.665999999997454e-06, 9.069000000000438e-06, 9.013000000002158e-06, 8.832999999999758e-06, 9.014000000001632e-06, 8.680000000003962e-06, 8.653000000004296e-06, 8.750000000001812e-06, 9.1670...</msg>
<status status="PASS" starttime="20201030 15:51:15.138" endtime="20201030 15:51:15.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.160" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:15.158" endtime="20201030 15:51:15.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.168" level="INFO">VALUE: [8.665999999997454e-06, 9.069000000000438e-06, 9.013000000002158e-06, 8.832999999999758e-06, 9.014000000001632e-06, 8.680000000003962e-06, 8.653000000004296e-06, 8.750000000001812e-06, 9.167000000004366e-06, 8.666999999996927e-06, 8.847999999998801e-06, 9.180000000004462e-06, 9.374999999998967e-06, 9.486000000002992e-06, 9.346999999999828e-06, 9.166000000004892e-06, 8.846999999999328e-06, 9.097000000006517e-06, 9.513999999995193e-06, 9.374999999998967e-06, 9.347999999999301e-06, 8.861000000005836e-06, 9.013000000002158e-06, 9.166999999997427e-06, 8.707999999996163e-06, 9.333999999999731e-06, 9.51299999999572e-06, 8.679999999997023e-06, 9.181000000003936e-06, 8.665999999997454e-06, 9.180999999996997e-06, 9.165999999997954e-06, 9.499999999995623e-06, 9.195000000003506e-06, 9.457999999996913e-06, 9.028000000001202e-06, 9.000000000002062e-06, 8.832999999999758e-06, 9.319000000000688e-06, 9.181000000003936e-06, 9.51299999999572e-06, 9.013000000002158e-06, 9.179999999997523e-06, 9.568999999993999e-06, 8.806000000000092e-06, 9.333000000000258e-06, 9.514000000002132e-06, 9.194000000004032e-06, 9.514000000002132e-06, 9.499999999995623e-06]</msg>
<status status="PASS" starttime="20201030 15:51:15.163" endtime="20201030 15:51:15.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.151" endtime="20201030 15:51:15.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.181" endtime="20201030 15:51:15.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.177" endtime="20201030 15:51:15.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.174" endtime="20201030 15:51:15.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.668" endtime="20201030 15:51:15.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.667" endtime="20201030 15:51:15.207"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.228" endtime="20201030 15:51:15.242"></status>
</kw>
<msg timestamp="20201030 15:51:15.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.225" endtime="20201030 15:51:15.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.246" endtime="20201030 15:51:15.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.252" endtime="20201030 15:51:15.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.217" endtime="20201030 15:51:15.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.212" endtime="20201030 15:51:15.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.276" endtime="20201030 15:51:15.625"></status>
</kw>
<msg timestamp="20201030 15:51:15.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037898361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037907708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.273" endtime="20201030 15:51:15.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037898361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037907708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.634" endtime="20201030 15:51:15.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.653" endtime="20201030 15:51:15.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.265" endtime="20201030 15:51:15.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.260" endtime="20201030 15:51:15.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:15.671" level="INFO">${RESULT} = [{'diff': 9.346999999999828e-06}, {'diff': 9.138999999998287e-06}, {'diff': 8.833999999999231e-06}, {'diff': 9.499999999995623e-06}, {'diff': 8.695000000003006e-06}, {'diff': 9.569000000000938e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:15.662" endtime="20201030 15:51:15.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:15.682" level="INFO">${OVERHEAD} = {'diff': [9.346999999999828e-06, 9.138999999998287e-06, 8.833999999999231e-06, 9.499999999995623e-06, 8.695000000003006e-06, 9.569000000000938e-06, 9.513999999995193e-06, 9.472000000003422e-06, 9.1800...</msg>
<status status="PASS" starttime="20201030 15:51:15.673" endtime="20201030 15:51:15.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.692" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:15.690" endtime="20201030 15:51:15.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.700" level="INFO">VALUE: [9.346999999999828e-06, 9.138999999998287e-06, 8.833999999999231e-06, 9.499999999995623e-06, 8.695000000003006e-06, 9.569000000000938e-06, 9.513999999995193e-06, 9.472000000003422e-06, 9.180000000004462e-06, 9.014000000001632e-06, 9.028000000001202e-06, 9.153000000004796e-06, 9.499999999995623e-06, 9.346999999999828e-06, 9.52699999999529e-06, 9.181000000003936e-06, 9.527999999994763e-06, 8.652000000004822e-06, 8.667000000003866e-06, 9.014000000001632e-06, 8.681000000003436e-06, 9.333999999999731e-06, 9.014000000001632e-06, 9.500000000002562e-06, 9.000000000002062e-06, 9.360999999999398e-06, 9.139000000005226e-06, 8.695000000003006e-06, 9.167000000004366e-06, 8.833999999999231e-06, 9.000000000002062e-06, 8.972000000002922e-06, 8.652999999997357e-06, 8.832999999999758e-06, 9.195000000003506e-06, 9.194999999996567e-06, 8.819999999999661e-06, 9.527999999994763e-06, 9.166999999997427e-06, 9.499999999995623e-06, 9.346999999999828e-06, 9.180000000004462e-06, 9.000000000002062e-06, 9.472000000003422e-06, 9.485999999996053e-06, 9.250000000002312e-06, 8.681000000003436e-06, 9.514000000002132e-06, 8.846999999999328e-06, 8.680999999996497e-06]</msg>
<status status="PASS" starttime="20201030 15:51:15.695" endtime="20201030 15:51:15.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.684" endtime="20201030 15:51:15.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.718" endtime="20201030 15:51:15.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.712" endtime="20201030 15:51:15.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.707" endtime="20201030 15:51:15.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.209" endtime="20201030 15:51:15.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.207" endtime="20201030 15:51:15.747"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.769" endtime="20201030 15:51:15.783"></status>
</kw>
<msg timestamp="20201030 15:51:15.784" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.765" endtime="20201030 15:51:15.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.791" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.786" endtime="20201030 15:51:15.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.793" endtime="20201030 15:51:15.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.758" endtime="20201030 15:51:15.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.753" endtime="20201030 15:51:15.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.817" endtime="20201030 15:51:16.166"></status>
</kw>
<msg timestamp="20201030 15:51:16.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039514236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.813" endtime="20201030 15:51:16.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039514236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.176" endtime="20201030 15:51:16.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.195" endtime="20201030 15:51:16.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.806" endtime="20201030 15:51:16.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.801" endtime="20201030 15:51:16.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.213" level="INFO">${RESULT} = [{'diff': 9.319000000000688e-06}, {'diff': 9.346999999999828e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.028000000001202e-06}, {'diff': 8.847000000006267e-06}, {'diff': 8.889000000004976e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:16.204" endtime="20201030 15:51:16.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:16.223" level="INFO">${OVERHEAD} = {'diff': [9.319000000000688e-06, 9.346999999999828e-06, 9.514000000002132e-06, 9.028000000001202e-06, 8.847000000006267e-06, 8.889000000004976e-06, 9.179999999997523e-06, 9.125000000005656e-06, 9.4859...</msg>
<status status="PASS" starttime="20201030 15:51:16.215" endtime="20201030 15:51:16.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.233" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:16.231" endtime="20201030 15:51:16.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.238" level="INFO">VALUE: [9.319000000000688e-06, 9.346999999999828e-06, 9.514000000002132e-06, 9.028000000001202e-06, 8.847000000006267e-06, 8.889000000004976e-06, 9.179999999997523e-06, 9.125000000005656e-06, 9.485999999996053e-06, 9.013999999994693e-06, 8.999999999995123e-06, 9.514000000002132e-06, 8.818999999993249e-06, 8.846999999999328e-06, 9.500000000002562e-06, 9.014000000001632e-06, 9.527999999994763e-06, 9.014000000001632e-06, 8.680999999996497e-06, 9.153000000004796e-06, 9.181000000003936e-06, 8.695000000003006e-06, 9.180999999996997e-06, 9.180999999996997e-06, 9.402999999998107e-06, 8.666999999996927e-06, 9.375000000005906e-06, 9.236000000002742e-06, 9.014000000001632e-06, 9.403000000005046e-06, 9.542000000001272e-06, 8.680000000003962e-06, 9.110999999999148e-06, 8.666999999996927e-06, 8.665999999997454e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.833999999999231e-06, 9.360999999999398e-06, 8.819999999999661e-06, 9.000000000002062e-06, 9.333000000000258e-06, 8.666999999996927e-06, 9.194000000004032e-06, 9.499999999995623e-06, 9.278000000001452e-06, 8.681000000003436e-06, 8.819000000000188e-06, 9.333000000000258e-06, 9.360999999999398e-06]</msg>
<status status="PASS" starttime="20201030 15:51:16.235" endtime="20201030 15:51:16.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.224" endtime="20201030 15:51:16.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.251" endtime="20201030 15:51:16.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.246" endtime="20201030 15:51:16.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.244" endtime="20201030 15:51:16.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.749" endtime="20201030 15:51:16.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.748" endtime="20201030 15:51:16.276"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.297" endtime="20201030 15:51:16.311"></status>
</kw>
<msg timestamp="20201030 15:51:16.312" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.294" endtime="20201030 15:51:16.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.318" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.314" endtime="20201030 15:51:16.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.321" endtime="20201030 15:51:16.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.286" endtime="20201030 15:51:16.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.282" endtime="20201030 15:51:16.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.346" endtime="20201030 15:51:16.737"></status>
</kw>
<msg timestamp="20201030 15:51:16.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036706097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036714792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.343" endtime="20201030 15:51:16.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036706097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036714792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.751" endtime="20201030 15:51:16.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.781" endtime="20201030 15:51:16.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.335" endtime="20201030 15:51:16.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.331" endtime="20201030 15:51:16.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.799" level="INFO">${RESULT} = [{'diff': 8.695000000003006e-06}, {'diff': 9.028000000001202e-06}, {'diff': 9.499999999995623e-06}, {'diff': 9.347999999999301e-06}, {'diff': 9.458000000003852e-06}, {'diff': 9.513000000002658e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:16.790" endtime="20201030 15:51:16.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:16.809" level="INFO">${OVERHEAD} = {'diff': [8.695000000003006e-06, 9.028000000001202e-06, 9.499999999995623e-06, 9.347999999999301e-06, 9.458000000003852e-06, 9.513000000002658e-06, 8.625000000005156e-06, 9.083000000000008e-06, 8.8469...</msg>
<status status="PASS" starttime="20201030 15:51:16.801" endtime="20201030 15:51:16.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.819" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:16.817" endtime="20201030 15:51:16.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.825" level="INFO">VALUE: [8.695000000003006e-06, 9.028000000001202e-06, 9.499999999995623e-06, 9.347999999999301e-06, 9.458000000003852e-06, 9.513000000002658e-06, 8.625000000005156e-06, 9.083000000000008e-06, 8.846999999999328e-06, 9.000000000002062e-06, 9.138999999998287e-06, 9.167000000004366e-06, 9.208000000003602e-06, 8.791000000001048e-06, 8.667000000003866e-06, 9.360999999999398e-06, 9.179999999997523e-06, 8.847999999998801e-06, 9.014000000001632e-06, 8.666999999996927e-06, 8.860999999998898e-06, 9.346999999999828e-06, 9.014000000001632e-06, 8.846999999999328e-06, 8.681000000003436e-06, 8.680000000003962e-06, 9.208000000003602e-06, 9.320000000000161e-06, 9.333999999999731e-06, 8.666999999996927e-06, 9.346999999999828e-06, 9.167000000004366e-06, 9.333000000000258e-06, 9.014000000001632e-06, 9.555999999993903e-06, 8.667000000003866e-06, 9.028000000001202e-06, 9.346999999999828e-06, 8.846999999999328e-06, 8.653000000004296e-06, 8.846999999999328e-06, 8.944999999996317e-06, 9.500000000002562e-06, 8.999999999995123e-06, 9.499999999995623e-06, 9.333000000000258e-06, 9.167000000004366e-06, 9.014000000001632e-06, 8.846999999999328e-06, 9.346999999999828e-06]</msg>
<status status="PASS" starttime="20201030 15:51:16.822" endtime="20201030 15:51:16.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.811" endtime="20201030 15:51:16.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.839" endtime="20201030 15:51:16.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.833" endtime="20201030 15:51:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.831" endtime="20201030 15:51:16.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.278" endtime="20201030 15:51:16.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.277" endtime="20201030 15:51:16.865"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.886" endtime="20201030 15:51:16.899"></status>
</kw>
<msg timestamp="20201030 15:51:16.901" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.882" endtime="20201030 15:51:16.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.907" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.903" endtime="20201030 15:51:16.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.909" endtime="20201030 15:51:16.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.875" endtime="20201030 15:51:16.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.870" endtime="20201030 15:51:16.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.933" endtime="20201030 15:51:17.289"></status>
</kw>
<msg timestamp="20201030 15:51:17.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037043903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037053083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.930" endtime="20201030 15:51:17.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037043903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037053083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.299" endtime="20201030 15:51:17.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.318" endtime="20201030 15:51:17.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.922" endtime="20201030 15:51:17.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.918" endtime="20201030 15:51:17.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.336" level="INFO">${RESULT} = [{'diff': 9.179999999997523e-06}, {'diff': 9.209000000003076e-06}, {'diff': 9.180999999996997e-06}, {'diff': 8.652999999997357e-06}, {'diff': 8.693999999996593e-06}, {'diff': 9.01299999999522e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:17.327" endtime="20201030 15:51:17.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.347" level="INFO">${OVERHEAD} = {'diff': [9.179999999997523e-06, 9.209000000003076e-06, 9.180999999996997e-06, 8.652999999997357e-06, 8.693999999996593e-06, 9.01299999999522e-06, 9.083000000000008e-06, 9.014000000001632e-06, 9.12499...</msg>
<status status="PASS" starttime="20201030 15:51:17.338" endtime="20201030 15:51:17.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.357" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:17.355" endtime="20201030 15:51:17.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.363" level="INFO">VALUE: [9.179999999997523e-06, 9.209000000003076e-06, 9.180999999996997e-06, 8.652999999997357e-06, 8.693999999996593e-06, 9.01299999999522e-06, 9.083000000000008e-06, 9.014000000001632e-06, 9.124999999998717e-06, 9.583000000000508e-06, 9.333999999999731e-06, 8.846999999999328e-06, 9.346999999999828e-06, 9.055000000000868e-06, 9.360999999999398e-06, 8.791999999993583e-06, 9.346999999999828e-06, 9.514000000002132e-06, 8.860999999998898e-06, 9.514000000002132e-06, 8.653000000004296e-06, 9.486000000002992e-06, 9.485999999996053e-06, 9.360999999999398e-06, 9.014000000001632e-06, 9.583000000000508e-06, 8.846999999999328e-06, 8.707999999996163e-06, 9.181000000003936e-06, 9.069999999999911e-06, 8.750000000001812e-06, 9.528000000001702e-06, 8.846999999999328e-06, 9.346999999999828e-06, 9.194000000004032e-06, 9.486000000002992e-06, 9.527999999994763e-06, 8.695000000003006e-06, 8.861000000005836e-06, 9.500000000002562e-06, 9.028000000001202e-06, 9.513999999995193e-06, 9.069000000000438e-06, 9.333000000000258e-06, 8.667000000003866e-06, 9.347999999999301e-06, 9.040999999994359e-06, 9.014000000001632e-06, 9.514000000002132e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201030 15:51:17.360" endtime="20201030 15:51:17.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.349" endtime="20201030 15:51:17.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.376" endtime="20201030 15:51:17.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.371" endtime="20201030 15:51:17.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.369" endtime="20201030 15:51:17.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.867" endtime="20201030 15:51:17.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.866" endtime="20201030 15:51:17.401"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.422" endtime="20201030 15:51:17.436"></status>
</kw>
<msg timestamp="20201030 15:51:17.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.418" endtime="20201030 15:51:17.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.443" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.439" endtime="20201030 15:51:17.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.446" endtime="20201030 15:51:17.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.411" endtime="20201030 15:51:17.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.406" endtime="20201030 15:51:17.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.470" endtime="20201030 15:51:17.824"></status>
</kw>
<msg timestamp="20201030 15:51:17.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036817931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036827431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.466" endtime="20201030 15:51:17.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036817931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036827431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.834" endtime="20201030 15:51:17.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.852" endtime="20201030 15:51:17.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.459" endtime="20201030 15:51:17.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.454" endtime="20201030 15:51:17.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.871" level="INFO">${RESULT} = [{'diff': 9.500000000002562e-06}, {'diff': 9.333000000000258e-06}, {'diff': 9.167000000004366e-06}, {'diff': 9.166999999997427e-06}, {'diff': 9.013999999994693e-06}, {'diff': 8.665999999997454e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:17.862" endtime="20201030 15:51:17.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.886" level="INFO">${OVERHEAD} = {'diff': [9.500000000002562e-06, 9.333000000000258e-06, 9.167000000004366e-06, 9.166999999997427e-06, 9.013999999994693e-06, 8.665999999997454e-06, 9.195000000003506e-06, 8.833999999999231e-06, 9.5000...</msg>
<status status="PASS" starttime="20201030 15:51:17.873" endtime="20201030 15:51:17.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.897" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:17.894" endtime="20201030 15:51:17.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.902" level="INFO">VALUE: [9.500000000002562e-06, 9.333000000000258e-06, 9.167000000004366e-06, 9.166999999997427e-06, 9.013999999994693e-06, 8.665999999997454e-06, 9.195000000003506e-06, 8.833999999999231e-06, 9.500000000002562e-06, 9.499999999995623e-06, 8.847999999998801e-06, 8.778000000000952e-06, 9.014000000001632e-06, 9.180000000004462e-06, 8.846999999999328e-06, 8.639000000004726e-06, 9.193999999997093e-06, 9.180999999996997e-06, 9.514000000002132e-06, 9.013999999994693e-06, 9.166999999997427e-06, 8.861999999998371e-06, 9.499999999995623e-06, 9.528000000001702e-06, 8.652999999997357e-06, 8.999999999995123e-06, 9.416999999997677e-06, 9.181000000003936e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.181000000003936e-06, 8.846999999999328e-06, 8.693999999996593e-06, 9.110999999999148e-06, 9.388999999998537e-06, 9.319000000000688e-06, 9.181000000003936e-06, 8.695000000003006e-06, 9.014000000001632e-06, 9.333999999999731e-06, 8.847000000006267e-06, 9.194000000004032e-06, 8.679999999997023e-06, 9.583000000000508e-06, 9.028000000001202e-06, 8.681000000003436e-06, 8.832999999999758e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201030 15:51:17.899" endtime="20201030 15:51:17.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.888" endtime="20201030 15:51:17.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.915" endtime="20201030 15:51:17.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.911" endtime="20201030 15:51:17.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.908" endtime="20201030 15:51:17.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.403" endtime="20201030 15:51:17.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.402" endtime="20201030 15:51:17.940"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.961" endtime="20201030 15:51:17.975"></status>
</kw>
<msg timestamp="20201030 15:51:17.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.957" endtime="20201030 15:51:17.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.983" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.979" endtime="20201030 15:51:17.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.985" endtime="20201030 15:51:17.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.950" endtime="20201030 15:51:17.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.945" endtime="20201030 15:51:17.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.009" endtime="20201030 15:51:18.370"></status>
</kw>
<msg timestamp="20201030 15:51:18.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037106319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037115153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.005" endtime="20201030 15:51:18.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037106319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037115153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.380" endtime="20201030 15:51:18.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.398" endtime="20201030 15:51:18.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.998" endtime="20201030 15:51:18.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.993" endtime="20201030 15:51:18.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.415" level="INFO">${RESULT} = [{'diff': 8.833999999999231e-06}, {'diff': 9.179999999997523e-06}, {'diff': 9.347999999999301e-06}, {'diff': 9.194000000004032e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.194999999996567e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:18.406" endtime="20201030 15:51:18.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:18.424" level="INFO">${OVERHEAD} = {'diff': [8.833999999999231e-06, 9.179999999997523e-06, 9.347999999999301e-06, 9.194000000004032e-06, 9.360999999999398e-06, 9.194999999996567e-06, 9.138999999998287e-06, 8.736000000002242e-06, 9.3479...</msg>
<status status="PASS" starttime="20201030 15:51:18.417" endtime="20201030 15:51:18.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.434" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:18.432" endtime="20201030 15:51:18.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.440" level="INFO">VALUE: [8.833999999999231e-06, 9.179999999997523e-06, 9.347999999999301e-06, 9.194000000004032e-06, 9.360999999999398e-06, 9.194999999996567e-06, 9.138999999998287e-06, 8.736000000002242e-06, 9.347999999999301e-06, 9.207999999996663e-06, 8.846999999999328e-06, 9.000000000002062e-06, 8.792000000000522e-06, 9.180000000004462e-06, 9.333000000000258e-06, 8.944999999996317e-06, 8.681000000003436e-06, 9.514000000002132e-06, 9.014000000001632e-06, 8.986000000002492e-06, 8.999999999995123e-06, 9.013000000002158e-06, 8.638999999997787e-06, 8.680999999996497e-06, 8.695000000003006e-06, 9.514000000002132e-06, 9.041000000001298e-06, 8.846999999999328e-06, 9.040999999994359e-06, 9.194000000004032e-06, 9.485999999996053e-06, 8.875000000005406e-06, 9.180999999996997e-06, 8.819000000000188e-06, 9.346999999999828e-06, 8.681000000003436e-06, 9.179999999997523e-06, 9.014000000001632e-06, 8.846999999999328e-06, 9.193999999997093e-06, 8.832999999999758e-06, 9.514000000002132e-06, 9.513999999995193e-06, 9.166999999997427e-06, 9.527000000002228e-06, 9.514000000002132e-06, 9.333000000000258e-06, 8.679999999997023e-06, 9.513000000002658e-06, 9.346999999999828e-06]</msg>
<status status="PASS" starttime="20201030 15:51:18.436" endtime="20201030 15:51:18.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.426" endtime="20201030 15:51:18.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.452" endtime="20201030 15:51:18.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.448" endtime="20201030 15:51:18.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.445" endtime="20201030 15:51:18.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.942" endtime="20201030 15:51:18.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.941" endtime="20201030 15:51:18.477"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.497" endtime="20201030 15:51:18.512"></status>
</kw>
<msg timestamp="20201030 15:51:18.513" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.494" endtime="20201030 15:51:18.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.515" endtime="20201030 15:51:18.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.521" endtime="20201030 15:51:18.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.486" endtime="20201030 15:51:18.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.482" endtime="20201030 15:51:18.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.544" endtime="20201030 15:51:18.887"></status>
</kw>
<msg timestamp="20201030 15:51:18.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037283903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037292889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.541" endtime="20201030 15:51:18.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037283903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037292889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.896" endtime="20201030 15:51:18.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.914" endtime="20201030 15:51:18.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.534" endtime="20201030 15:51:18.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.529" endtime="20201030 15:51:18.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.931" level="INFO">${RESULT} = [{'diff': 8.986000000002492e-06}, {'diff': 8.666000000004392e-06}, {'diff': 9.500000000002562e-06}, {'diff': 8.818999999993249e-06}, {'diff': 8.695000000003006e-06}, {'diff': 9.499999999995623e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:18.923" endtime="20201030 15:51:18.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:18.941" level="INFO">${OVERHEAD} = {'diff': [8.986000000002492e-06, 8.666000000004392e-06, 9.500000000002562e-06, 8.818999999993249e-06, 8.695000000003006e-06, 9.499999999995623e-06, 8.665999999997454e-06, 9.222000000003172e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 15:51:18.933" endtime="20201030 15:51:18.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.951" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:18.948" endtime="20201030 15:51:18.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.956" level="INFO">VALUE: [8.986000000002492e-06, 8.666000000004392e-06, 9.500000000002562e-06, 8.818999999993249e-06, 8.695000000003006e-06, 9.499999999995623e-06, 8.665999999997454e-06, 9.222000000003172e-06, 8.680999999996497e-06, 9.500000000002562e-06, 8.819999999999661e-06, 9.180999999996997e-06, 9.333999999999731e-06, 9.179999999997523e-06, 8.860999999998898e-06, 9.014000000001632e-06, 8.679999999997023e-06, 9.167000000004366e-06, 8.653000000004296e-06, 9.124999999998717e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.666999999996927e-06, 9.513999999995193e-06, 9.346999999999828e-06, 9.389000000005476e-06, 9.346999999999828e-06, 8.694999999996067e-06, 9.514000000002132e-06, 8.652999999997357e-06, 9.514000000002132e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.972000000002922e-06, 9.180999999996997e-06, 8.846999999999328e-06, 9.181000000003936e-06, 9.166999999997427e-06, 9.347999999999301e-06, 9.514000000002132e-06, 8.833999999999231e-06, 9.513999999995193e-06, 9.500000000002562e-06, 8.679999999997023e-06, 9.333000000000258e-06, 9.181000000003936e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.014000000001632e-06, 9.125000000005656e-06]</msg>
<status status="PASS" starttime="20201030 15:51:18.953" endtime="20201030 15:51:18.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.942" endtime="20201030 15:51:18.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.970" endtime="20201030 15:51:18.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.964" endtime="20201030 15:51:18.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.961" endtime="20201030 15:51:18.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.479" endtime="20201030 15:51:18.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.478" endtime="20201030 15:51:18.995"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.015" endtime="20201030 15:51:19.028"></status>
</kw>
<msg timestamp="20201030 15:51:19.029" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.012" endtime="20201030 15:51:19.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.031" endtime="20201030 15:51:19.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.038" endtime="20201030 15:51:19.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.004" endtime="20201030 15:51:19.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.000" endtime="20201030 15:51:19.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.060" endtime="20201030 15:51:19.421"></status>
</kw>
<msg timestamp="20201030 15:51:19.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035977097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035986264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.057" endtime="20201030 15:51:19.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035977097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035986264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.430" endtime="20201030 15:51:19.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.449" endtime="20201030 15:51:19.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.050" endtime="20201030 15:51:19.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.046" endtime="20201030 15:51:19.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.467" level="INFO">${RESULT} = [{'diff': 9.166999999997427e-06}, {'diff': 8.680999999996497e-06}, {'diff': 9.389000000005476e-06}, {'diff': 8.624999999998217e-06}, {'diff': 9.346999999999828e-06}, {'diff': 8.805000000000618e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:19.458" endtime="20201030 15:51:19.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:19.478" level="INFO">${OVERHEAD} = {'diff': [9.166999999997427e-06, 8.680999999996497e-06, 9.389000000005476e-06, 8.624999999998217e-06, 9.346999999999828e-06, 8.805000000000618e-06, 9.165999999997954e-06, 9.513999999995193e-06, 9.5140...</msg>
<status status="PASS" starttime="20201030 15:51:19.469" endtime="20201030 15:51:19.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.488" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:19.486" endtime="20201030 15:51:19.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.494" level="INFO">VALUE: [9.166999999997427e-06, 8.680999999996497e-06, 9.389000000005476e-06, 8.624999999998217e-06, 9.346999999999828e-06, 8.805000000000618e-06, 9.165999999997954e-06, 9.513999999995193e-06, 9.514000000002132e-06, 9.194000000004032e-06, 8.999999999995123e-06, 8.944999999996317e-06, 8.679999999997023e-06, 9.028000000001202e-06, 8.666999999996927e-06, 9.237000000002216e-06, 9.181000000003936e-06, 8.680999999996497e-06, 9.180000000004462e-06, 9.166999999997427e-06, 9.042000000000772e-06, 9.014000000001632e-06, 8.667000000003866e-06, 9.028000000001202e-06, 8.750000000001812e-06, 8.680999999996497e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.652999999997357e-06, 8.846999999999328e-06, 9.514000000002132e-06, 8.694999999996067e-06, 9.429999999997773e-06, 9.055000000000868e-06, 8.832999999999758e-06, 9.151999999998384e-06, 9.180999999996997e-06, 9.471999999996483e-06, 8.874999999998467e-06, 9.165999999997954e-06, 9.333999999999731e-06, 9.485999999996053e-06, 9.042000000000772e-06, 9.180999999996997e-06, 9.264000000001882e-06, 9.208999999996137e-06, 9.180000000004462e-06, 9.194999999996567e-06, 8.665999999997454e-06]</msg>
<status status="PASS" starttime="20201030 15:51:19.491" endtime="20201030 15:51:19.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.480" endtime="20201030 15:51:19.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.506" endtime="20201030 15:51:19.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.502" endtime="20201030 15:51:19.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.500" endtime="20201030 15:51:19.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.996" endtime="20201030 15:51:19.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.996" endtime="20201030 15:51:19.532"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.552" endtime="20201030 15:51:19.567"></status>
</kw>
<msg timestamp="20201030 15:51:19.568" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.549" endtime="20201030 15:51:19.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.570" endtime="20201030 15:51:19.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.577" endtime="20201030 15:51:19.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.542" endtime="20201030 15:51:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.537" endtime="20201030 15:51:19.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.600" endtime="20201030 15:51:19.946"></status>
</kw>
<msg timestamp="20201030 15:51:19.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036808361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036817681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.597" endtime="20201030 15:51:19.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036808361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036817681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.955" endtime="20201030 15:51:19.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.975" endtime="20201030 15:51:19.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.590" endtime="20201030 15:51:19.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.585" endtime="20201030 15:51:19.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.992" level="INFO">${RESULT} = [{'diff': 9.320000000000161e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.179999999997523e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.500000000002562e-06}, {'diff': 8.846999999999328e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:19.983" endtime="20201030 15:51:19.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:20.004" level="INFO">${OVERHEAD} = {'diff': [9.320000000000161e-06, 9.528000000001702e-06, 9.179999999997523e-06, 9.514000000002132e-06, 9.500000000002562e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.680999999996497e-06, 8.7220...</msg>
<status status="PASS" starttime="20201030 15:51:19.994" endtime="20201030 15:51:20.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.014" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:20.012" endtime="20201030 15:51:20.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.020" level="INFO">VALUE: [9.320000000000161e-06, 9.528000000001702e-06, 9.179999999997523e-06, 9.514000000002132e-06, 9.500000000002562e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.680999999996497e-06, 8.722000000002672e-06, 8.860999999998898e-06, 8.846999999999328e-06, 9.179999999997523e-06, 9.195000000003506e-06, 9.083000000000008e-06, 9.014000000001632e-06, 9.346999999999828e-06, 9.360999999999398e-06, 8.832999999999758e-06, 9.166999999997427e-06, 8.874999999998467e-06, 8.832999999999758e-06, 9.014000000001632e-06, 8.680000000003962e-06, 8.860999999998898e-06, 9.374999999998967e-06, 9.180999999996997e-06, 9.056000000000342e-06, 8.860999999998898e-06, 9.346999999999828e-06, 9.500000000002562e-06, 9.165999999997954e-06, 9.167000000004366e-06, 9.499999999995623e-06, 9.181000000003936e-06, 9.527000000002228e-06, 9.014000000001632e-06, 9.388999999998537e-06, 9.027999999994263e-06, 9.181000000003936e-06, 9.500000000002562e-06, 9.485999999996053e-06, 8.666999999996927e-06, 8.833999999999231e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.028000000001202e-06, 9.028000000001202e-06, 9.333999999999731e-06, 9.055000000000868e-06, 8.999999999995123e-06]</msg>
<status status="PASS" starttime="20201030 15:51:20.016" endtime="20201030 15:51:20.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.005" endtime="20201030 15:51:20.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.032" endtime="20201030 15:51:20.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.028" endtime="20201030 15:51:20.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.025" endtime="20201030 15:51:20.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.533" endtime="20201030 15:51:20.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.533" endtime="20201030 15:51:20.057"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.078" endtime="20201030 15:51:20.092"></status>
</kw>
<msg timestamp="20201030 15:51:20.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.075" endtime="20201030 15:51:20.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.100" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.096" endtime="20201030 15:51:20.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.102" endtime="20201030 15:51:20.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.068" endtime="20201030 15:51:20.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.063" endtime="20201030 15:51:20.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.126" endtime="20201030 15:51:20.478"></status>
</kw>
<msg timestamp="20201030 15:51:20.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036917167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036926347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.123" endtime="20201030 15:51:20.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036917167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036926347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.488" endtime="20201030 15:51:20.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.507" endtime="20201030 15:51:20.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.115" endtime="20201030 15:51:20.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.110" endtime="20201030 15:51:20.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.527" level="INFO">${RESULT} = [{'diff': 9.179999999997523e-06}, {'diff': 9.235999999995803e-06}, {'diff': 8.666999999996927e-06}, {'diff': 9.181000000003936e-06}, {'diff': 9.347999999999301e-06}, {'diff': 8.832999999999758e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:20.516" endtime="20201030 15:51:20.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:20.537" level="INFO">${OVERHEAD} = {'diff': [9.179999999997523e-06, 9.235999999995803e-06, 8.666999999996927e-06, 9.181000000003936e-06, 9.347999999999301e-06, 8.832999999999758e-06, 8.861999999998371e-06, 9.500000000002562e-06, 9.1809...</msg>
<status status="PASS" starttime="20201030 15:51:20.529" endtime="20201030 15:51:20.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.547" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:20.545" endtime="20201030 15:51:20.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.553" level="INFO">VALUE: [9.179999999997523e-06, 9.235999999995803e-06, 8.666999999996927e-06, 9.181000000003936e-06, 9.347999999999301e-06, 8.832999999999758e-06, 8.861999999998371e-06, 9.500000000002562e-06, 9.180999999996997e-06, 9.513999999995193e-06, 9.514000000002132e-06, 9.500000000002562e-06, 8.860999999998898e-06, 9.360999999999398e-06, 8.832999999999758e-06, 8.596999999999078e-06, 9.500000000002562e-06, 8.943999999996843e-06, 9.346999999999828e-06, 9.527999999994763e-06, 9.486000000002992e-06, 9.208000000003602e-06, 8.666999999996927e-06, 9.444999999996817e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.666999999996927e-06, 8.861999999998371e-06, 9.500000000002562e-06, 8.999999999995123e-06, 8.847999999998801e-06, 9.027999999994263e-06, 8.833999999999231e-06, 9.457999999996913e-06, 8.861000000005836e-06, 9.152999999997857e-06, 9.195000000003506e-06, 8.707999999996163e-06, 9.167000000004366e-06, 8.999999999995123e-06, 9.514000000002132e-06, 8.736999999994777e-06, 9.542000000001272e-06, 8.653000000004296e-06, 9.333000000000258e-06, 8.666999999996927e-06, 8.833999999999231e-06, 9.014000000001632e-06, 9.069000000000438e-06, 9.499999999995623e-06]</msg>
<status status="PASS" starttime="20201030 15:51:20.550" endtime="20201030 15:51:20.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.539" endtime="20201030 15:51:20.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.565" endtime="20201030 15:51:20.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.561" endtime="20201030 15:51:20.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.558" endtime="20201030 15:51:20.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.059" endtime="20201030 15:51:20.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.058" endtime="20201030 15:51:20.591"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.612" endtime="20201030 15:51:20.627"></status>
</kw>
<msg timestamp="20201030 15:51:20.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.608" endtime="20201030 15:51:20.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.631" endtime="20201030 15:51:20.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.637" endtime="20201030 15:51:20.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.601" endtime="20201030 15:51:20.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.596" endtime="20201030 15:51:20.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.668" endtime="20201030 15:51:21.017"></status>
</kw>
<msg timestamp="20201030 15:51:21.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036965361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03697475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:20.663" endtime="20201030 15:51:21.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036965361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03697475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:21.027" endtime="20201030 15:51:21.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.046" endtime="20201030 15:51:21.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.654" endtime="20201030 15:51:21.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.648" endtime="20201030 15:51:21.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.063" level="INFO">${RESULT} = [{'diff': 9.388999999998537e-06}, {'diff': 9.028000000001202e-06}, {'diff': 9.333999999999731e-06}, {'diff': 9.014000000001632e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.360999999999398e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:21.054" endtime="20201030 15:51:21.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:21.073" level="INFO">${OVERHEAD} = {'diff': [9.388999999998537e-06, 9.028000000001202e-06, 9.333999999999731e-06, 9.014000000001632e-06, 9.514000000002132e-06, 9.360999999999398e-06, 9.013999999994693e-06, 9.333000000000258e-06, 8.8329...</msg>
<status status="PASS" starttime="20201030 15:51:21.065" endtime="20201030 15:51:21.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.083" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:21.081" endtime="20201030 15:51:21.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.089" level="INFO">VALUE: [9.388999999998537e-06, 9.028000000001202e-06, 9.333999999999731e-06, 9.014000000001632e-06, 9.514000000002132e-06, 9.360999999999398e-06, 9.013999999994693e-06, 9.333000000000258e-06, 8.832999999999758e-06, 9.583000000000508e-06, 9.194999999996567e-06, 8.832999999999758e-06, 8.832999999999758e-06, 9.514000000002132e-06, 8.987000000001966e-06, 9.541000000001798e-06, 8.737000000001716e-06, 9.179999999997523e-06, 8.986000000002492e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.000000000002062e-06, 8.666000000004392e-06, 9.347000000006767e-06, 8.667000000003866e-06, 9.166000000004892e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.639000000004726e-06, 9.346999999999828e-06, 8.959000000002826e-06, 9.555000000001368e-06, 8.986000000002492e-06, 8.666999999996927e-06, 9.165999999997954e-06, 9.347999999999301e-06, 8.999999999995123e-06, 9.028000000001202e-06, 8.846999999999328e-06, 9.346999999999828e-06, 9.139000000005226e-06, 8.667000000003866e-06, 9.527000000002228e-06, 8.888999999998037e-06, 9.236000000002742e-06, 9.014000000001632e-06, 9.167000000004366e-06, 8.680999999996497e-06, 8.861000000005836e-06, 9.500000000002562e-06]</msg>
<status status="PASS" starttime="20201030 15:51:21.086" endtime="20201030 15:51:21.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.075" endtime="20201030 15:51:21.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.103" endtime="20201030 15:51:21.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.097" endtime="20201030 15:51:21.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.095" endtime="20201030 15:51:21.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.593" endtime="20201030 15:51:21.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.592" endtime="20201030 15:51:21.128"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.149" endtime="20201030 15:51:21.163"></status>
</kw>
<msg timestamp="20201030 15:51:21.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.145" endtime="20201030 15:51:21.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.170" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.166" endtime="20201030 15:51:21.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.173" endtime="20201030 15:51:21.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.138" endtime="20201030 15:51:21.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.133" endtime="20201030 15:51:21.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.196" endtime="20201030 15:51:21.543"></status>
</kw>
<msg timestamp="20201030 15:51:21.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036641389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036650056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.193" endtime="20201030 15:51:21.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036641389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036650056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.553" endtime="20201030 15:51:21.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.572" endtime="20201030 15:51:21.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.186" endtime="20201030 15:51:21.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.181" endtime="20201030 15:51:21.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.589" level="INFO">${RESULT} = [{'diff': 8.666999999996927e-06}, {'diff': 9.514000000002132e-06}, {'diff': 8.833999999999231e-06}, {'diff': 9.000000000002062e-06}, {'diff': 8.847999999998801e-06}, {'diff': 8.680999999996497e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:21.580" endtime="20201030 15:51:21.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:21.600" level="INFO">${OVERHEAD} = {'diff': [8.666999999996927e-06, 9.514000000002132e-06, 8.833999999999231e-06, 9.000000000002062e-06, 8.847999999998801e-06, 8.680999999996497e-06, 9.180999999996997e-06, 9.194999999996567e-06, 9.0139...</msg>
<status status="PASS" starttime="20201030 15:51:21.591" endtime="20201030 15:51:21.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.610" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:21.608" endtime="20201030 15:51:21.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.616" level="INFO">VALUE: [8.666999999996927e-06, 9.514000000002132e-06, 8.833999999999231e-06, 9.000000000002062e-06, 8.847999999998801e-06, 8.680999999996497e-06, 9.180999999996997e-06, 9.194999999996567e-06, 9.013999999994693e-06, 9.167000000004366e-06, 9.194999999996567e-06, 9.513999999995193e-06, 8.709000000002576e-06, 8.681000000003436e-06, 9.514000000002132e-06, 9.500000000002562e-06, 8.792000000000522e-06, 9.514000000002132e-06, 9.028000000001202e-06, 9.360999999999398e-06, 9.179999999997523e-06, 9.195000000003506e-06, 9.291999999994083e-06, 8.903000000004546e-06, 8.667000000003866e-06, 8.722000000002672e-06, 9.486000000002992e-06, 8.666999999996927e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.014000000001632e-06, 9.180000000004462e-06, 9.346999999999828e-06, 9.500000000002562e-06, 9.333999999999731e-06, 9.431000000004186e-06, 8.846999999999328e-06, 8.679999999997023e-06, 9.513000000002658e-06, 9.346999999999828e-06, 9.360999999999398e-06, 8.679999999997023e-06, 9.528000000001702e-06, 9.181000000003936e-06, 8.610999999998648e-06, 9.513999999995193e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.832999999999758e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201030 15:51:21.613" endtime="20201030 15:51:21.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.602" endtime="20201030 15:51:21.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.629" endtime="20201030 15:51:21.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.624" endtime="20201030 15:51:21.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.622" endtime="20201030 15:51:21.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.130" endtime="20201030 15:51:21.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.129" endtime="20201030 15:51:21.654"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.675" endtime="20201030 15:51:21.689"></status>
</kw>
<msg timestamp="20201030 15:51:21.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.671" endtime="20201030 15:51:21.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.696" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.692" endtime="20201030 15:51:21.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.698" endtime="20201030 15:51:21.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.664" endtime="20201030 15:51:21.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.659" endtime="20201030 15:51:21.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.722" endtime="20201030 15:51:22.070"></status>
</kw>
<msg timestamp="20201030 15:51:22.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036744236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036753569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.719" endtime="20201030 15:51:22.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036744236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036753569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.080" endtime="20201030 15:51:22.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.098" endtime="20201030 15:51:22.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.711" endtime="20201030 15:51:22.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.707" endtime="20201030 15:51:22.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.116" level="INFO">${RESULT} = [{'diff': 9.333000000000258e-06}, {'diff': 9.278000000001452e-06}, {'diff': 8.693999999996593e-06}, {'diff': 9.041999999993833e-06}, {'diff': 8.666000000004392e-06}, {'diff': 9.179999999997523e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:22.107" endtime="20201030 15:51:22.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.127" level="INFO">${OVERHEAD} = {'diff': [9.333000000000258e-06, 9.278000000001452e-06, 8.693999999996593e-06, 9.041999999993833e-06, 8.666000000004392e-06, 9.179999999997523e-06, 9.014000000001632e-06, 9.096999999999578e-06, 8.9859...</msg>
<status status="PASS" starttime="20201030 15:51:22.118" endtime="20201030 15:51:22.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.138" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:22.135" endtime="20201030 15:51:22.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.143" level="INFO">VALUE: [9.333000000000258e-06, 9.278000000001452e-06, 8.693999999996593e-06, 9.041999999993833e-06, 8.666000000004392e-06, 9.179999999997523e-06, 9.014000000001632e-06, 9.096999999999578e-06, 8.985999999995553e-06, 9.180999999996997e-06, 9.180999999996997e-06, 8.638999999997787e-06, 9.166999999997427e-06, 9.346999999999828e-06, 8.819000000000188e-06, 9.333000000000258e-06, 8.679999999997023e-06, 9.014000000001632e-06, 9.347999999999301e-06, 8.874999999998467e-06, 9.513999999995193e-06, 9.027000000001728e-06, 9.333000000000258e-06, 9.013999999994693e-06, 8.652999999997357e-06, 9.513999999995193e-06, 9.514000000002132e-06, 9.167000000004366e-06, 8.680999999996497e-06, 9.333000000000258e-06, 9.000000000002062e-06, 9.333000000000258e-06, 9.514000000002132e-06, 8.681000000003436e-06, 9.346999999999828e-06, 8.665999999997454e-06, 9.181000000003936e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.542000000001272e-06, 9.333999999999731e-06, 8.680000000003962e-06, 9.139000000005226e-06, 9.556000000000842e-06, 9.180000000004462e-06, 8.846999999999328e-06, 9.180999999996997e-06, 9.360999999999398e-06, 9.541000000001798e-06, 9.527999999994763e-06]</msg>
<status status="PASS" starttime="20201030 15:51:22.140" endtime="20201030 15:51:22.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.129" endtime="20201030 15:51:22.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.156" endtime="20201030 15:51:22.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.151" endtime="20201030 15:51:22.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.149" endtime="20201030 15:51:22.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.656" endtime="20201030 15:51:22.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.655" endtime="20201030 15:51:22.181"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.201" endtime="20201030 15:51:22.215"></status>
</kw>
<msg timestamp="20201030 15:51:22.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.198" endtime="20201030 15:51:22.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.223" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.219" endtime="20201030 15:51:22.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.225" endtime="20201030 15:51:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.191" endtime="20201030 15:51:22.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.186" endtime="20201030 15:51:22.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.251" endtime="20201030 15:51:22.605"></status>
</kw>
<msg timestamp="20201030 15:51:22.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036616319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036625139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.247" endtime="20201030 15:51:22.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036616319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036625139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.615" endtime="20201030 15:51:22.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.634" endtime="20201030 15:51:22.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.238" endtime="20201030 15:51:22.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.234" endtime="20201030 15:51:22.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.652" level="INFO">${RESULT} = [{'diff': 8.819999999999661e-06}, {'diff': 9.485999999996053e-06}, {'diff': 9.000000000002062e-06}, {'diff': 8.666000000004392e-06}, {'diff': 9.014000000001632e-06}, {'diff': 9.34800000000624e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:22.643" endtime="20201030 15:51:22.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.662" level="INFO">${OVERHEAD} = {'diff': [8.819999999999661e-06, 9.485999999996053e-06, 9.000000000002062e-06, 8.666000000004392e-06, 9.014000000001632e-06, 9.34800000000624e-06, 8.708000000003102e-06, 9.221999999996233e-06, 8.83399...</msg>
<status status="PASS" starttime="20201030 15:51:22.654" endtime="20201030 15:51:22.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.672" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:22.669" endtime="20201030 15:51:22.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.677" level="INFO">VALUE: [8.819999999999661e-06, 9.485999999996053e-06, 9.000000000002062e-06, 8.666000000004392e-06, 9.014000000001632e-06, 9.34800000000624e-06, 8.708000000003102e-06, 9.221999999996233e-06, 8.833999999999231e-06, 9.167000000004366e-06, 8.832999999999758e-06, 9.249999999995373e-06, 9.500000000002562e-06, 9.556000000000842e-06, 8.666000000004392e-06, 8.694999999996067e-06, 8.861000000005836e-06, 8.665999999997454e-06, 9.346999999999828e-06, 9.499999999995623e-06, 8.958000000003352e-06, 9.014000000001632e-06, 9.499999999995623e-06, 8.750000000001812e-06, 8.681000000003436e-06, 9.360999999999398e-06, 9.014000000001632e-06, 9.166000000004892e-06, 9.499999999995623e-06, 8.679999999997023e-06, 9.514000000002132e-06, 9.028000000001202e-06, 8.846999999999328e-06, 8.680999999996497e-06, 9.52699999999529e-06, 9.542000000001272e-06, 9.333999999999731e-06, 9.013999999994693e-06, 9.513999999995193e-06, 9.333000000000258e-06, 9.180000000004462e-06, 9.514000000002132e-06, 8.847999999998801e-06, 8.846999999999328e-06, 9.499999999995623e-06, 9.346999999999828e-06, 8.832999999999758e-06, 9.180000000004462e-06, 9.528000000001702e-06, 9.333000000000258e-06]</msg>
<status status="PASS" starttime="20201030 15:51:22.674" endtime="20201030 15:51:22.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.663" endtime="20201030 15:51:22.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.690" endtime="20201030 15:51:22.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.686" endtime="20201030 15:51:22.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.683" endtime="20201030 15:51:22.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.183" endtime="20201030 15:51:22.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.182" endtime="20201030 15:51:22.715"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.736" endtime="20201030 15:51:22.756"></status>
</kw>
<msg timestamp="20201030 15:51:22.757" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.733" endtime="20201030 15:51:22.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.764" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.759" endtime="20201030 15:51:22.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.766" endtime="20201030 15:51:22.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.726" endtime="20201030 15:51:22.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.721" endtime="20201030 15:51:22.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.791" endtime="20201030 15:51:23.139"></status>
</kw>
<msg timestamp="20201030 15:51:23.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042571653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.787" endtime="20201030 15:51:23.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042571653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.149" endtime="20201030 15:51:23.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.168" endtime="20201030 15:51:23.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.779" endtime="20201030 15:51:23.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.774" endtime="20201030 15:51:23.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.186" level="INFO">${RESULT} = [{'diff': 9.486000000002992e-06}, {'diff': 8.651999999997884e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.000000000002062e-06}, {'diff': 8.680999999996497e-06}, {'diff': 9.527000000002228e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:23.177" endtime="20201030 15:51:23.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:23.195" level="INFO">${OVERHEAD} = {'diff': [9.486000000002992e-06, 8.651999999997884e-06, 9.528000000001702e-06, 9.000000000002062e-06, 8.680999999996497e-06, 9.527000000002228e-06, 9.542000000001272e-06, 9.014000000001632e-06, 9.5140...</msg>
<status status="PASS" starttime="20201030 15:51:23.188" endtime="20201030 15:51:23.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.205" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:23.203" endtime="20201030 15:51:23.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.211" level="INFO">VALUE: [9.486000000002992e-06, 8.651999999997884e-06, 9.528000000001702e-06, 9.000000000002062e-06, 8.680999999996497e-06, 9.527000000002228e-06, 9.542000000001272e-06, 9.014000000001632e-06, 9.514000000002132e-06, 8.819000000000188e-06, 9.514000000002132e-06, 8.999999999995123e-06, 9.556000000000842e-06, 9.52699999999529e-06, 9.014000000001632e-06, 9.014000000001632e-06, 8.847999999998801e-06, 9.346999999999828e-06, 8.680000000003962e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.832999999999758e-06, 9.209000000003076e-06, 8.666999999996927e-06, 8.832999999999758e-06, 9.180999999996997e-06, 9.514000000002132e-06, 9.346999999999828e-06, 8.666999999996927e-06, 8.861999999998371e-06, 9.179999999997523e-06, 8.832999999999758e-06, 9.513999999995193e-06, 8.679999999997023e-06, 9.165999999997954e-06, 9.166999999997427e-06, 8.624999999998217e-06, 8.681000000003436e-06, 9.111999999998621e-06, 9.388999999998537e-06, 9.514000000002132e-06, 8.680000000003962e-06, 9.36200000000581e-06, 9.320000000000161e-06, 9.500000000002562e-06, 9.179999999997523e-06, 9.181000000003936e-06, 8.679999999997023e-06, 9.499999999995623e-06, 9.014000000001632e-06]</msg>
<status status="PASS" starttime="20201030 15:51:23.208" endtime="20201030 15:51:23.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.197" endtime="20201030 15:51:23.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.225" endtime="20201030 15:51:23.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.219" endtime="20201030 15:51:23.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.217" endtime="20201030 15:51:23.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.717" endtime="20201030 15:51:23.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.716" endtime="20201030 15:51:23.251"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.271" endtime="20201030 15:51:23.285"></status>
</kw>
<msg timestamp="20201030 15:51:23.287" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.268" endtime="20201030 15:51:23.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.289" endtime="20201030 15:51:23.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.295" endtime="20201030 15:51:23.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.261" endtime="20201030 15:51:23.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.256" endtime="20201030 15:51:23.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.319" endtime="20201030 15:51:23.666"></status>
</kw>
<msg timestamp="20201030 15:51:23.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036883486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036892333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.316" endtime="20201030 15:51:23.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036883486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036892333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.676" endtime="20201030 15:51:23.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.695" endtime="20201030 15:51:23.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.308" endtime="20201030 15:51:23.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.304" endtime="20201030 15:51:23.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.712" level="INFO">${RESULT} = [{'diff': 8.846999999999328e-06}, {'diff': 8.791000000001048e-06}, {'diff': 9.333999999999731e-06}, {'diff': 9.333000000000258e-06}, {'diff': 9.361999999998871e-06}, {'diff': 8.819999999999661e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:23.703" endtime="20201030 15:51:23.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:23.723" level="INFO">${OVERHEAD} = {'diff': [8.846999999999328e-06, 8.791000000001048e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.361999999998871e-06, 8.819999999999661e-06, 8.986000000002492e-06, 9.569000000000938e-06, 9.1669...</msg>
<status status="PASS" starttime="20201030 15:51:23.714" endtime="20201030 15:51:23.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.734" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:23.731" endtime="20201030 15:51:23.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.739" level="INFO">VALUE: [8.846999999999328e-06, 8.791000000001048e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.361999999998871e-06, 8.819999999999661e-06, 8.986000000002492e-06, 9.569000000000938e-06, 9.166999999997427e-06, 9.179999999997523e-06, 8.847999999998801e-06, 9.500000000002562e-06, 9.346999999999828e-06, 8.638999999997787e-06, 9.167000000004366e-06, 9.333999999999731e-06, 8.652999999997357e-06, 9.166999999997427e-06, 9.013000000002158e-06, 9.486000000002992e-06, 9.195000000003506e-06, 9.513999999995193e-06, 9.514000000002132e-06, 8.695000000003006e-06, 9.028000000001202e-06, 8.680999999996497e-06, 8.666000000004392e-06, 9.346999999999828e-06, 8.832999999999758e-06, 9.000000000002062e-06, 8.846999999999328e-06, 9.138999999998287e-06, 8.750000000001812e-06, 9.014000000001632e-06, 9.083999999999481e-06, 9.388999999998537e-06, 9.347999999999301e-06, 8.680999999996497e-06, 8.833999999999231e-06, 9.305000000001118e-06, 9.194999999996567e-06, 9.014000000001632e-06, 9.195000000003506e-06, 9.527000000002228e-06, 9.014000000001632e-06, 9.180999999996997e-06, 9.499999999995623e-06, 9.514000000002132e-06, 8.986000000002492e-06, 8.680999999996497e-06]</msg>
<status status="PASS" starttime="20201030 15:51:23.736" endtime="20201030 15:51:23.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.725" endtime="20201030 15:51:23.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.752" endtime="20201030 15:51:23.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.747" endtime="20201030 15:51:23.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.745" endtime="20201030 15:51:23.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.252" endtime="20201030 15:51:23.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.251" endtime="20201030 15:51:23.777"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.798" endtime="20201030 15:51:23.812"></status>
</kw>
<msg timestamp="20201030 15:51:23.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.794" endtime="20201030 15:51:23.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.816" endtime="20201030 15:51:23.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.822" endtime="20201030 15:51:23.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.787" endtime="20201030 15:51:23.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.782" endtime="20201030 15:51:23.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.848" endtime="20201030 15:51:24.198"></status>
</kw>
<msg timestamp="20201030 15:51:24.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036911181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036920181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.844" endtime="20201030 15:51:24.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036911181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036920181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.210" endtime="20201030 15:51:24.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.230" endtime="20201030 15:51:24.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.837" endtime="20201030 15:51:24.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.832" endtime="20201030 15:51:24.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.248" level="INFO">${RESULT} = [{'diff': 9.000000000002062e-06}, {'diff': 8.665999999997454e-06}, {'diff': 9.180999999996997e-06}, {'diff': 9.401999999998634e-06}, {'diff': 8.832999999999758e-06}, {'diff': 9.014000000001632e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:24.239" endtime="20201030 15:51:24.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.259" level="INFO">${OVERHEAD} = {'diff': [9.000000000002062e-06, 8.665999999997454e-06, 9.180999999996997e-06, 9.401999999998634e-06, 8.832999999999758e-06, 9.014000000001632e-06, 9.34800000000624e-06, 8.778000000000952e-06, 9.37499...</msg>
<status status="PASS" starttime="20201030 15:51:24.250" endtime="20201030 15:51:24.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.270" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:24.267" endtime="20201030 15:51:24.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.275" level="INFO">VALUE: [9.000000000002062e-06, 8.665999999997454e-06, 9.180999999996997e-06, 9.401999999998634e-06, 8.832999999999758e-06, 9.014000000001632e-06, 9.34800000000624e-06, 8.778000000000952e-06, 9.374999999998967e-06, 9.514000000002132e-06, 8.652000000004822e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.167000000004366e-06, 8.833999999999231e-06, 8.833999999999231e-06, 9.151999999998384e-06, 9.166999999997427e-06, 9.333999999999731e-06, 8.832999999999758e-06, 9.320000000000161e-06, 8.846999999999328e-06, 9.194000000004032e-06, 8.999999999995123e-06, 9.027000000001728e-06, 9.346999999999828e-06, 9.040999999994359e-06, 8.819999999999661e-06, 9.333000000000258e-06, 9.181000000003936e-06, 9.528000000001702e-06, 8.888999999998037e-06, 9.347999999999301e-06, 9.347999999999301e-06, 8.901999999998134e-06, 9.319000000000688e-06, 8.624999999998217e-06, 9.055000000000868e-06, 9.014000000001632e-06, 8.680999999996497e-06, 8.694000000003532e-06, 9.333000000000258e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.180999999996997e-06, 8.846999999999328e-06, 8.596999999999078e-06, 9.528000000001702e-06, 9.374999999998967e-06, 9.500000000002562e-06]</msg>
<status status="PASS" starttime="20201030 15:51:24.272" endtime="20201030 15:51:24.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.261" endtime="20201030 15:51:24.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.288" endtime="20201030 15:51:24.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.284" endtime="20201030 15:51:24.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.281" endtime="20201030 15:51:24.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.779" endtime="20201030 15:51:24.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.778" endtime="20201030 15:51:24.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.533" endtime="20201030 15:51:24.314"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:13.408" endtime="20201030 15:51:24.315" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.333" endtime="20201030 15:51:24.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.329" endtime="20201030 15:51:24.356"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.392" endtime="20201030 15:51:24.412"></status>
</kw>
<msg timestamp="20201030 15:51:24.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.387" endtime="20201030 15:51:24.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.415" endtime="20201030 15:51:24.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.426" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:24.422" endtime="20201030 15:51:24.427"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:24.380" endtime="20201030 15:51:24.429"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:24.373" endtime="20201030 15:51:24.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.370" endtime="20201030 15:51:24.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:24.439" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:24.438" endtime="20201030 15:51:24.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.433" endtime="20201030 15:51:24.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.368" endtime="20201030 15:51:24.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.367" endtime="20201030 15:51:24.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.443" endtime="20201030 15:51:24.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.362" endtime="20201030 15:51:24.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.358" endtime="20201030 15:51:24.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.326" endtime="20201030 15:51:24.450"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.472" endtime="20201030 15:51:24.497"></status>
</kw>
<msg timestamp="20201030 15:51:24.498" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.469" endtime="20201030 15:51:24.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.505" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.501" endtime="20201030 15:51:24.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.508" endtime="20201030 15:51:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.462" endtime="20201030 15:51:24.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.456" endtime="20201030 15:51:24.515"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.519" endtime="20201030 15:51:24.524"></status>
</kw>
<msg timestamp="20201030 15:51:24.525" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:24.516" endtime="20201030 15:51:24.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.536" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:24.533" endtime="20201030 15:51:24.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.540" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:24.538" endtime="20201030 15:51:24.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.527" endtime="20201030 15:51:24.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.552" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:24.550" endtime="20201030 15:51:24.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.557" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:24.554" endtime="20201030 15:51:24.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.544" endtime="20201030 15:51:24.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.576" endtime="20201030 15:51:24.935"></status>
</kw>
<msg timestamp="20201030 15:51:24.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131202986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131218944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.572" endtime="20201030 15:51:24.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131202986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131218944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.944" endtime="20201030 15:51:24.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.964" endtime="20201030 15:51:24.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.565" endtime="20201030 15:51:24.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.560" endtime="20201030 15:51:24.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.982" level="INFO">${RESULT} = [{'diff': 1.5958000000010353e-05}, {'diff': 1.5943999999989966e-05}, {'diff': 1.659700000000708e-05}, {'diff': 1.6429999999983957e-05}, {'diff': 1.6083999999999543e-05}, {'diff': 1.6263000000016348e-0...</msg>
<status status="PASS" starttime="20201030 15:51:24.972" endtime="20201030 15:51:24.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.991" level="INFO">${OVERHEAD} = {'diff': [1.5958000000010353e-05, 1.5943999999989966e-05, 1.659700000000708e-05, 1.6429999999983957e-05, 1.6083999999999543e-05, 1.6263000000016348e-05, 1.67369999999889e-05, 1.652800000001564e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:51:24.984" endtime="20201030 15:51:24.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.003" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:25.000" endtime="20201030 15:51:25.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.008" level="INFO">VALUE: [1.5958000000010353e-05, 1.5943999999989966e-05, 1.659700000000708e-05, 1.6429999999983957e-05, 1.6083999999999543e-05, 1.6263000000016348e-05, 1.67369999999889e-05, 1.652800000001564e-05, 1.6764000000002444e-05, 1.683299999999388e-05, 1.5917000000004178e-05, 1.608300000000007e-05, 1.6750000000009813e-05, 1.64169999999908e-05, 1.6764000000002444e-05, 1.6763999999974688e-05, 1.6583999999986165e-05, 1.60969999999927e-05, 1.5903000000011547e-05, 1.60969999999927e-05, 1.625000000002319e-05, 1.6750000000009813e-05, 1.64169999999908e-05, 1.6777999999995075e-05, 1.6305999999993714e-05, 1.677800000002283e-05, 1.658400000001392e-05, 1.606900000000744e-05, 1.593099999999681e-05, 1.626400000001582e-05, 1.6653000000005358e-05, 1.6111000000013087e-05, 1.588899999999116e-05, 1.6249999999995435e-05, 1.6431000000011187e-05, 1.6749999999982057e-05, 1.6249999999995435e-05, 1.681900000000125e-05, 1.6415999999991326e-05, 1.659700000000708e-05, 1.6097999999992174e-05, 1.593099999999681e-05, 1.6764000000002444e-05, 1.5917000000004178e-05, 1.676300000000297e-05, 1.6431000000011187e-05, 1.6430000000011713e-05, 1.608300000000007e-05, 1.6431000000011187e-05, 1.659700000000708e-05]</msg>
<status status="PASS" starttime="20201030 15:51:25.005" endtime="20201030 15:51:25.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.993" endtime="20201030 15:51:25.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.021" endtime="20201030 15:51:25.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.017" endtime="20201030 15:51:25.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.014" endtime="20201030 15:51:25.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.451" endtime="20201030 15:51:25.046"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:24.320" endtime="20201030 15:51:25.048" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.065" endtime="20201030 15:51:25.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.061" endtime="20201030 15:51:25.089"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.124" endtime="20201030 15:51:25.143"></status>
</kw>
<msg timestamp="20201030 15:51:25.144" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.120" endtime="20201030 15:51:25.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.151" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.146" endtime="20201030 15:51:25.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.157" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:25.153" endtime="20201030 15:51:25.158"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:25.113" endtime="20201030 15:51:25.160"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:25.106" endtime="20201030 15:51:25.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.104" endtime="20201030 15:51:25.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:25.170" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:25.169" endtime="20201030 15:51:25.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.164" endtime="20201030 15:51:25.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.102" endtime="20201030 15:51:25.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.099" endtime="20201030 15:51:25.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.174" endtime="20201030 15:51:25.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.094" endtime="20201030 15:51:25.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.090" endtime="20201030 15:51:25.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.058" endtime="20201030 15:51:25.181"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.204" endtime="20201030 15:51:25.317"></status>
</kw>
<msg timestamp="20201030 15:51:25.319" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.200" endtime="20201030 15:51:25.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.325" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.321" endtime="20201030 15:51:25.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.328" endtime="20201030 15:51:25.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.193" endtime="20201030 15:51:25.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.187" endtime="20201030 15:51:25.335"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.340" endtime="20201030 15:51:25.344"></status>
</kw>
<msg timestamp="20201030 15:51:25.345" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:25.337" endtime="20201030 15:51:25.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.355" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:25.353" endtime="20201030 15:51:25.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.360" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:25.358" endtime="20201030 15:51:25.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.347" endtime="20201030 15:51:25.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.374" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:25.370" endtime="20201030 15:51:25.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.379" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:25.376" endtime="20201030 15:51:25.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.364" endtime="20201030 15:51:25.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.398" endtime="20201030 15:51:25.753"></status>
</kw>
<msg timestamp="20201030 15:51:25.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132215903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132271708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.395" endtime="20201030 15:51:25.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132215903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132271708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.762" endtime="20201030 15:51:25.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.782" endtime="20201030 15:51:25.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.387" endtime="20201030 15:51:25.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.382" endtime="20201030 15:51:25.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.799" level="INFO">${RESULT} = [{'diff': 5.580499999999211e-05}, {'diff': 5.6055999999998773e-05}, {'diff': 5.60549999999993e-05}, {'diff': 5.623600000001505e-05}, {'diff': 5.608300000001232e-05}, {'diff': 5.602800000001351e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:25.790" endtime="20201030 15:51:25.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.809" level="INFO">${OVERHEAD} = {'diff': [5.580499999999211e-05, 5.6055999999998773e-05, 5.60549999999993e-05, 5.623600000001505e-05, 5.608300000001232e-05, 5.602800000001351e-05, 5.612499999999021e-05, 5.60549999999993e-05, 5.60840...</msg>
<status status="PASS" starttime="20201030 15:51:25.801" endtime="20201030 15:51:25.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.820" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:25.818" endtime="20201030 15:51:25.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.826" level="INFO">VALUE: [5.580499999999211e-05, 5.6055999999998773e-05, 5.60549999999993e-05, 5.623600000001505e-05, 5.608300000001232e-05, 5.602800000001351e-05, 5.612499999999021e-05, 5.60549999999993e-05, 5.608400000001179e-05, 5.60549999999993e-05, 5.625000000000768e-05, 5.625000000000768e-05, 5.622200000002242e-05, 5.608300000001232e-05, 5.6235999999987296e-05, 5.6013999999993125e-05, 5.6055999999998773e-05, 5.6055999999998773e-05, 5.61940000000094e-05, 5.606899999999193e-05, 5.6083999999984036e-05, 5.6069000000019686e-05, 5.60549999999993e-05, 5.6069000000019686e-05, 5.602800000001351e-05, 5.6069999999991404e-05, 5.607000000001916e-05, 5.6055999999998773e-05, 5.6027999999985756e-05, 5.6208000000002034e-05, 5.60549999999993e-05, 5.6277999999992945e-05, 5.6055999999998773e-05, 5.602699999998628e-05, 5.606899999999193e-05, 5.606899999999193e-05, 5.6055999999998773e-05, 5.604099999997891e-05, 5.6069000000019686e-05, 5.609800000000442e-05, 5.607000000001916e-05, 5.623600000001505e-05, 5.604199999997839e-05, 5.6027999999985756e-05, 5.598600000000786e-05, 5.6055999999998773e-05, 5.6055999999998773e-05, 5.604100000000667e-05, 5.606899999999193e-05, 5.609800000000442e-05]</msg>
<status status="PASS" starttime="20201030 15:51:25.822" endtime="20201030 15:51:25.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.811" endtime="20201030 15:51:25.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.841" endtime="20201030 15:51:25.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.835" endtime="20201030 15:51:25.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.832" endtime="20201030 15:51:25.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.182" endtime="20201030 15:51:25.866"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:25.052" endtime="20201030 15:51:25.867" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.884" endtime="20201030 15:51:25.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.881" endtime="20201030 15:51:25.908"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.941" endtime="20201030 15:51:25.956"></status>
</kw>
<msg timestamp="20201030 15:51:25.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.938" endtime="20201030 15:51:25.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.964" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.960" endtime="20201030 15:51:25.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.972" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:25.966" endtime="20201030 15:51:25.973"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:25.931" endtime="20201030 15:51:25.975"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:25.924" endtime="20201030 15:51:25.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.922" endtime="20201030 15:51:25.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:25.987" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:25.985" endtime="20201030 15:51:25.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.980" endtime="20201030 15:51:25.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.920" endtime="20201030 15:51:25.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.918" endtime="20201030 15:51:25.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.990" endtime="20201030 15:51:25.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.914" endtime="20201030 15:51:25.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.910" endtime="20201030 15:51:25.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.878" endtime="20201030 15:51:25.997"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.022" endtime="20201030 15:51:26.338"></status>
</kw>
<msg timestamp="20201030 15:51:26.339" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.016" endtime="20201030 15:51:26.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.346" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.342" endtime="20201030 15:51:26.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.349" endtime="20201030 15:51:26.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.009" endtime="20201030 15:51:26.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.003" endtime="20201030 15:51:26.355"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.360" endtime="20201030 15:51:26.365"></status>
</kw>
<msg timestamp="20201030 15:51:26.366" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:26.357" endtime="20201030 15:51:26.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.376" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:26.374" endtime="20201030 15:51:26.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.381" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:26.379" endtime="20201030 15:51:26.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.367" endtime="20201030 15:51:26.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.393" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:26.390" endtime="20201030 15:51:26.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.397" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:26.395" endtime="20201030 15:51:26.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.384" endtime="20201030 15:51:26.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.416" endtime="20201030 15:51:26.827"></status>
</kw>
<msg timestamp="20201030 15:51:26.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134433931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134533764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.412" endtime="20201030 15:51:26.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134433931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134533764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.836" endtime="20201030 15:51:26.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.854" endtime="20201030 15:51:26.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.405" endtime="20201030 15:51:26.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.400" endtime="20201030 15:51:26.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.872" level="INFO">${RESULT} = [{'diff': 9.983299999999362e-05}, {'diff': 9.924999999999518e-05}, {'diff': 9.912500000000546e-05}, {'diff': 9.913899999999809e-05}, {'diff': 9.927800000000819e-05}, {'diff': 9.909699999999244e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:26.863" endtime="20201030 15:51:26.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.882" level="INFO">${OVERHEAD} = {'diff': [9.983299999999362e-05, 9.924999999999518e-05, 9.912500000000546e-05, 9.913899999999809e-05, 9.927800000000819e-05, 9.909699999999244e-05, 9.926400000001556e-05, 9.929200000000082e-05, 9.9249...</msg>
<status status="PASS" starttime="20201030 15:51:26.874" endtime="20201030 15:51:26.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.894" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:26.892" endtime="20201030 15:51:26.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.899" level="INFO">VALUE: [9.983299999999362e-05, 9.924999999999518e-05, 9.912500000000546e-05, 9.913899999999809e-05, 9.927800000000819e-05, 9.909699999999244e-05, 9.926400000001556e-05, 9.929200000000082e-05, 9.924999999999518e-05, 9.925000000002293e-05, 9.922200000000991e-05, 9.908399999999928e-05, 9.929200000000082e-05, 9.908299999999981e-05, 9.909799999999191e-05, 9.922200000000991e-05, 9.908299999999981e-05, 9.929100000000135e-05, 9.929200000000082e-05, 9.929200000000082e-05, 9.906900000000718e-05, 9.92639999999878e-05, 9.911099999998507e-05, 9.91249999999777e-05, 9.930499999999398e-05, 9.923600000000254e-05, 9.936100000002002e-05, 9.927799999998044e-05, 9.923699999997426e-05, 9.924999999999518e-05, 9.908299999999981e-05, 9.929100000000135e-05, 9.909699999999244e-05, 9.927700000000872e-05, 9.926299999996058e-05, 9.911099999998507e-05, 9.909800000001967e-05, 9.908299999999981e-05, 9.925000000005069e-05, 9.908299999999981e-05, 9.923600000000254e-05, 9.923600000000254e-05, 9.924999999999518e-05, 9.924999999999518e-05, 9.926400000004332e-05, 9.925000000005069e-05, 9.908299999999981e-05, 9.911099999998507e-05, 9.907000000003441e-05, 9.92639999999878e-05]</msg>
<status status="PASS" starttime="20201030 15:51:26.896" endtime="20201030 15:51:26.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.884" endtime="20201030 15:51:26.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.920" endtime="20201030 15:51:26.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.907" endtime="20201030 15:51:26.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.905" endtime="20201030 15:51:26.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.999" endtime="20201030 15:51:26.945"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:25.872" endtime="20201030 15:51:26.946" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.963" endtime="20201030 15:51:26.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.960" endtime="20201030 15:51:26.986"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.019" endtime="20201030 15:51:27.034"></status>
</kw>
<msg timestamp="20201030 15:51:27.036" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.016" endtime="20201030 15:51:27.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.042" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.038" endtime="20201030 15:51:27.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.048" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:27.044" endtime="20201030 15:51:27.049"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:27.009" endtime="20201030 15:51:27.051"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:27.002" endtime="20201030 15:51:27.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.000" endtime="20201030 15:51:27.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:27.061" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:27.060" endtime="20201030 15:51:27.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.055" endtime="20201030 15:51:27.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.998" endtime="20201030 15:51:27.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.996" endtime="20201030 15:51:27.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.066" endtime="20201030 15:51:27.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.992" endtime="20201030 15:51:27.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.988" endtime="20201030 15:51:27.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.957" endtime="20201030 15:51:27.073"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.095" endtime="20201030 15:51:27.117"></status>
</kw>
<msg timestamp="20201030 15:51:27.119" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.092" endtime="20201030 15:51:27.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.126" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.122" endtime="20201030 15:51:27.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.129" endtime="20201030 15:51:27.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.085" endtime="20201030 15:51:27.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.079" endtime="20201030 15:51:27.138"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.144" endtime="20201030 15:51:27.149"></status>
</kw>
<msg timestamp="20201030 15:51:27.151" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:27.140" endtime="20201030 15:51:27.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.163" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:27.160" endtime="20201030 15:51:27.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.169" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:27.166" endtime="20201030 15:51:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.153" endtime="20201030 15:51:27.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.184" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:27.181" endtime="20201030 15:51:27.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.190" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:27.187" endtime="20201030 15:51:27.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.173" endtime="20201030 15:51:27.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.209" endtime="20201030 15:51:27.555"></status>
</kw>
<msg timestamp="20201030 15:51:27.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123931514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123933708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.205" endtime="20201030 15:51:27.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123931514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123933708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.565" endtime="20201030 15:51:27.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.583" endtime="20201030 15:51:27.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.198" endtime="20201030 15:51:27.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.193" endtime="20201030 15:51:27.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.600" level="INFO">${RESULT} = [{'diff': 2.1939999999970317e-06}, {'diff': 2.209000000003014e-06}, {'diff': 2.1939999999970317e-06}, {'diff': 2.2219999999961715e-06}, {'diff': 2.2080000000035405e-06}, {'diff': 2.2080000000035405e-0...</msg>
<status status="PASS" starttime="20201030 15:51:27.592" endtime="20201030 15:51:27.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.616" level="INFO">${OVERHEAD} = {'diff': [2.1939999999970317e-06, 2.209000000003014e-06, 2.1939999999970317e-06, 2.2219999999961715e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.2080000000035405e-06,...</msg>
<status status="PASS" starttime="20201030 15:51:27.602" endtime="20201030 15:51:27.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.627" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:27.625" endtime="20201030 15:51:27.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.632" level="INFO">VALUE: [2.1939999999970317e-06, 2.209000000003014e-06, 2.1939999999970317e-06, 2.2219999999961715e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.1810000000038743e-06, 2.1939999999970317e-06, 2.1800000000044006e-06, 2.1949999999965053e-06, 2.165999999997892e-06, 2.2360000000026803e-06, 2.1669999999973655e-06, 2.2089999999891363e-06, 2.26400000000182e-06, 2.1939999999970317e-06, 2.209000000003014e-06, 2.1949999999965053e-06, 2.2220000000100493e-06, 2.1949999999965053e-06, 2.1810000000038743e-06, 2.1939999999970317e-06, 2.2220000000100493e-06, 2.1530000000047345e-06, 2.2079999999896627e-06, 2.2080000000035405e-06, 2.2080000000035405e-06, 2.1940000000109094e-06, 2.1949999999965053e-06, 2.1939999999970317e-06, 2.209000000003014e-06, 2.2219999999961715e-06, 2.1939999999970317e-06, 2.1939999999970317e-06, 2.179999999990523e-06, 2.2360000000026803e-06, 2.26400000000182e-06, 2.1949999999965053e-06, 2.1940000000109094e-06, 2.2219999999961715e-06, 2.26400000000182e-06, 2.1800000000182784e-06, 2.1940000000109094e-06, 2.277999999994451e-06, 2.2080000000035405e-06, 2.1940000000109094e-06, 2.195000000010383e-06]</msg>
<status status="PASS" starttime="20201030 15:51:27.629" endtime="20201030 15:51:27.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.617" endtime="20201030 15:51:27.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.644" endtime="20201030 15:51:27.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.640" endtime="20201030 15:51:27.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.638" endtime="20201030 15:51:27.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.075" endtime="20201030 15:51:27.669"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:26.951" endtime="20201030 15:51:27.670" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.687" endtime="20201030 15:51:27.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.684" endtime="20201030 15:51:27.711"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.744" endtime="20201030 15:51:27.760"></status>
</kw>
<msg timestamp="20201030 15:51:27.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.740" endtime="20201030 15:51:27.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.763" endtime="20201030 15:51:27.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.774" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:27.770" endtime="20201030 15:51:27.774"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:27.733" endtime="20201030 15:51:27.776"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:27.726" endtime="20201030 15:51:27.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.724" endtime="20201030 15:51:27.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:27.786" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:27.785" endtime="20201030 15:51:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.780" endtime="20201030 15:51:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.722" endtime="20201030 15:51:27.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.720" endtime="20201030 15:51:27.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.790" endtime="20201030 15:51:27.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.716" endtime="20201030 15:51:27.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.712" endtime="20201030 15:51:27.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.681" endtime="20201030 15:51:27.797"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.823" endtime="20201030 15:51:27.934"></status>
</kw>
<msg timestamp="20201030 15:51:27.935" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.819" endtime="20201030 15:51:27.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.941" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.937" endtime="20201030 15:51:27.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.944" endtime="20201030 15:51:27.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.810" endtime="20201030 15:51:27.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.803" endtime="20201030 15:51:27.952"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.956" endtime="20201030 15:51:27.961"></status>
</kw>
<msg timestamp="20201030 15:51:27.962" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:27.953" endtime="20201030 15:51:27.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.973" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:27.970" endtime="20201030 15:51:27.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.977" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:27.975" endtime="20201030 15:51:27.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.964" endtime="20201030 15:51:27.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.989" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:27.987" endtime="20201030 15:51:27.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.994" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:27.991" endtime="20201030 15:51:27.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.981" endtime="20201030 15:51:27.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.012" endtime="20201030 15:51:28.379"></status>
</kw>
<msg timestamp="20201030 15:51:28.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130302972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130315444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.009" endtime="20201030 15:51:28.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130302972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130315444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.388" endtime="20201030 15:51:28.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.407" endtime="20201030 15:51:28.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.002" endtime="20201030 15:51:28.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.997" endtime="20201030 15:51:28.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.424" level="INFO">${RESULT} = [{'diff': 1.2472000000013361e-05}, {'diff': 1.251400000001901e-05}, {'diff': 1.2472000000013361e-05}, {'diff': 1.2541000000004798e-05}, {'diff': 1.2499999999998623e-05}, {'diff': 1.2542000000004272e-0...</msg>
<status status="PASS" starttime="20201030 15:51:28.415" endtime="20201030 15:51:28.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.434" level="INFO">${OVERHEAD} = {'diff': [1.2472000000013361e-05, 1.251400000001901e-05, 1.2472000000013361e-05, 1.2541000000004798e-05, 1.2499999999998623e-05, 1.2542000000004272e-05, 1.247299999998508e-05, 1.2486000000005992e-05, ...</msg>
<status status="PASS" starttime="20201030 15:51:28.426" endtime="20201030 15:51:28.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.445" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:28.443" endtime="20201030 15:51:28.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.451" level="INFO">VALUE: [1.2472000000013361e-05, 1.251400000001901e-05, 1.2472000000013361e-05, 1.2541000000004798e-05, 1.2499999999998623e-05, 1.2542000000004272e-05, 1.247299999998508e-05, 1.2486000000005992e-05, 1.2513999999991254e-05, 1.2486000000005992e-05, 1.2499999999998623e-05, 1.2457999999992975e-05, 1.2486000000005992e-05, 1.2459000000020204e-05, 1.2472000000013361e-05, 1.2486000000005992e-05, 1.2457999999992975e-05, 1.2472000000013361e-05, 1.2444999999999817e-05, 1.2472000000013361e-05, 1.2471999999985606e-05, 1.2513999999991254e-05, 1.2472000000013361e-05, 1.2457999999992975e-05, 1.2486000000005992e-05, 1.2486000000005992e-05, 1.2471999999985606e-05, 1.2471999999985606e-05, 1.2541999999976516e-05, 1.2486000000005992e-05, 1.2430000000007713e-05, 1.2499999999998623e-05, 1.2471999999985606e-05, 1.2542000000004272e-05, 1.2459000000020204e-05, 1.2486000000005992e-05, 1.2486000000005992e-05, 1.2471999999985606e-05, 1.2457999999992975e-05, 1.2472000000013361e-05, 1.2457999999992975e-05, 1.2472000000013361e-05, 1.2528000000011641e-05, 1.2486000000005992e-05, 1.2486000000005992e-05, 1.2499999999998623e-05, 1.2472000000013361e-05, 1.2472000000013361e-05, 1.2471999999985606e-05, 1.2457999999992975e-05]</msg>
<status status="PASS" starttime="20201030 15:51:28.447" endtime="20201030 15:51:28.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.435" endtime="20201030 15:51:28.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.463" endtime="20201030 15:51:28.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.459" endtime="20201030 15:51:28.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.456" endtime="20201030 15:51:28.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.798" endtime="20201030 15:51:28.491"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:27.675" endtime="20201030 15:51:28.493" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.519" endtime="20201030 15:51:28.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.512" endtime="20201030 15:51:28.542"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.578" endtime="20201030 15:51:28.597"></status>
</kw>
<msg timestamp="20201030 15:51:28.599" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.575" endtime="20201030 15:51:28.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.605" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.601" endtime="20201030 15:51:28.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.612" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:28.607" endtime="20201030 15:51:28.612"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.567" endtime="20201030 15:51:28.614"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.561" endtime="20201030 15:51:28.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.556" endtime="20201030 15:51:28.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:28.624" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:28.623" endtime="20201030 15:51:28.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.618" endtime="20201030 15:51:28.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.554" endtime="20201030 15:51:28.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.552" endtime="20201030 15:51:28.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.628" endtime="20201030 15:51:28.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.548" endtime="20201030 15:51:28.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.544" endtime="20201030 15:51:28.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.509" endtime="20201030 15:51:28.635"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.658" endtime="20201030 15:51:28.982"></status>
</kw>
<msg timestamp="20201030 15:51:28.983" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.654" endtime="20201030 15:51:28.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.990" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.986" endtime="20201030 15:51:28.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.993" endtime="20201030 15:51:28.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.647" endtime="20201030 15:51:28.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.641" endtime="20201030 15:51:29.001"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.005" endtime="20201030 15:51:29.010"></status>
</kw>
<msg timestamp="20201030 15:51:29.011" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:29.002" endtime="20201030 15:51:29.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.021" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:29.019" endtime="20201030 15:51:29.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.025" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:29.023" endtime="20201030 15:51:29.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.013" endtime="20201030 15:51:29.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.037" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:29.035" endtime="20201030 15:51:29.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.041" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:29.039" endtime="20201030 15:51:29.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.029" endtime="20201030 15:51:29.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.062" endtime="20201030 15:51:29.420"></status>
</kw>
<msg timestamp="20201030 15:51:29.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136696028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136718944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.059" endtime="20201030 15:51:29.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136696028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136718944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.429" endtime="20201030 15:51:29.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.448" endtime="20201030 15:51:29.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.050" endtime="20201030 15:51:29.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.045" endtime="20201030 15:51:29.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.472" level="INFO">${RESULT} = [{'diff': 2.2916000000011705e-05}, {'diff': 2.294499999999644e-05}, {'diff': 2.2930000000004336e-05}, {'diff': 2.2986000000002615e-05}, {'diff': 2.291700000001118e-05}, {'diff': 2.293100000000381e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:29.460" endtime="20201030 15:51:29.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.484" level="INFO">${OVERHEAD} = {'diff': [2.2916000000011705e-05, 2.294499999999644e-05, 2.2930000000004336e-05, 2.2986000000002615e-05, 2.291700000001118e-05, 2.293100000000381e-05, 2.2902000000019074e-05, 2.2903000000018547e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:51:29.474" endtime="20201030 15:51:29.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.498" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:29.495" endtime="20201030 15:51:29.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.504" level="INFO">VALUE: [2.2916000000011705e-05, 2.294499999999644e-05, 2.2930000000004336e-05, 2.2986000000002615e-05, 2.291700000001118e-05, 2.293100000000381e-05, 2.2902000000019074e-05, 2.2903000000018547e-05, 2.2902999999990792e-05, 2.294499999999644e-05, 2.294499999999644e-05, 2.2972000000009984e-05, 2.2916999999983423e-05, 2.2901999999991318e-05, 2.293100000000381e-05, 2.293100000000381e-05, 2.293100000000381e-05, 2.2902999999990792e-05, 2.2903000000018547e-05, 2.293000000003209e-05, 2.2901999999991318e-05, 2.291700000001118e-05, 2.2930999999948298e-05, 2.2916999999955667e-05, 2.293100000000381e-05, 2.2944000000024722e-05, 2.2972000000009984e-05, 2.2944000000024722e-05, 2.2916999999955667e-05, 2.294499999999644e-05, 2.291600000003946e-05, 2.2971999999954473e-05, 2.2888999999970405e-05, 2.2889000000025916e-05, 2.291700000001118e-05, 2.2903000000018547e-05, 2.291700000001118e-05, 2.292999999997658e-05, 2.2902999999963036e-05, 2.293100000000381e-05, 2.293100000000381e-05, 2.292999999997658e-05, 2.291600000003946e-05, 2.2972000000009984e-05, 2.2903000000018547e-05, 2.290200000004683e-05, 2.295899999998907e-05, 2.2862000000012372e-05, 2.2902999999963036e-05, 2.291599999998395e-05]</msg>
<status status="PASS" starttime="20201030 15:51:29.501" endtime="20201030 15:51:29.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.487" endtime="20201030 15:51:29.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.516" endtime="20201030 15:51:29.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.512" endtime="20201030 15:51:29.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.509" endtime="20201030 15:51:29.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.636" endtime="20201030 15:51:29.541"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:28.499" endtime="20201030 15:51:29.542" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.562" endtime="20201030 15:51:29.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.557" endtime="20201030 15:51:29.586"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.619" endtime="20201030 15:51:29.637"></status>
</kw>
<msg timestamp="20201030 15:51:29.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.615" endtime="20201030 15:51:29.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.644" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.640" endtime="20201030 15:51:29.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.651" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:29.646" endtime="20201030 15:51:29.651"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:29.608" endtime="20201030 15:51:29.653"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:29.602" endtime="20201030 15:51:29.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.599" endtime="20201030 15:51:29.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:29.663" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:29.662" endtime="20201030 15:51:29.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.657" endtime="20201030 15:51:29.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.598" endtime="20201030 15:51:29.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.596" endtime="20201030 15:51:29.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.667" endtime="20201030 15:51:29.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.592" endtime="20201030 15:51:29.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.587" endtime="20201030 15:51:29.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.554" endtime="20201030 15:51:29.674"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.683" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:29.699" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:31.742" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:29.679" endtime="20201030 15:51:31.743"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.748" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:31.745" endtime="20201030 15:51:31.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.675" endtime="20201030 15:51:31.751"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.778" endtime="20201030 15:51:31.787"></status>
</kw>
<msg timestamp="20201030 15:51:31.788" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.772" endtime="20201030 15:51:31.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.794" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.790" endtime="20201030 15:51:31.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.797" endtime="20201030 15:51:31.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.764" endtime="20201030 15:51:31.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.759" endtime="20201030 15:51:31.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.820" endtime="20201030 15:51:32.199"></status>
</kw>
<msg timestamp="20201030 15:51:32.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.763026694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.095250889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.817" endtime="20201030 15:51:32.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.763026694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.095250889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.212" endtime="20201030 15:51:32.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.236" endtime="20201030 15:51:32.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.810" endtime="20201030 15:51:32.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.805" endtime="20201030 15:51:32.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:32.260" level="INFO">${PHILIP_RES} = [{'diff': 0.332224195}, {'diff': 0.00687051400000005}, {'diff': 1.6639000000040483e-05}, {'diff': 1.6542000000008272e-05}, {'diff': 1.6388000000144842e-05}, {'diff': 1.6583999999930654e-05}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:51:32.249" endtime="20201030 15:51:32.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.271" level="INFO">${RESULT} = {'diff': [0.332224195, 0.00687051400000005, 1.6639000000040483e-05, 1.6542000000008272e-05, 1.6388000000144842e-05, 1.6583999999930654e-05, 1.655500000019572e-05, 1.6513999999911988e-05, 1.65559999998...</msg>
<status status="PASS" starttime="20201030 15:51:32.263" endtime="20201030 15:51:32.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.281" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:32.279" endtime="20201030 15:51:32.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.286" level="INFO">VALUE: [0.332224195, 0.00687051400000005, 1.6639000000040483e-05, 1.6542000000008272e-05, 1.6388000000144842e-05, 1.6583999999930654e-05, 1.655500000019572e-05, 1.6513999999911988e-05, 1.655599999983437e-05, 1.655500000019572e-05, 1.6570000000104557e-05, 1.6569000000021816e-05, 1.6388999999783493e-05, 1.655500000019572e-05, 1.655600000027846e-05, 1.655499999975163e-05, 1.6569000000021816e-05, 1.6570000000104557e-05, 1.6569000000021816e-05, 1.6570000000104557e-05, 1.6389000000227583e-05, 1.6542000000008272e-05, 1.655500000019572e-05, 1.655599999983437e-05, 1.6569000000021816e-05, 1.655599999983437e-05, 1.655599999983437e-05, 1.6540999999925532e-05, 1.6319000000208916e-05, 1.655600000027846e-05, 1.6542000000008272e-05, 1.6528000000182175e-05, 1.6542000000008272e-05, 1.655500000019572e-05, 1.6542000000008272e-05, 1.655500000019572e-05, 1.6361000000131298e-05, 1.6540999999925532e-05, 1.6542000000008272e-05, 1.6485999999815704e-05, 1.6569000000021816e-05, 1.661200000002694e-05, 1.6540999999925532e-05, 1.6542000000008272e-05, 1.6388999999783493e-05, 1.655599999983437e-05, 1.6527000000099434e-05, 1.655599999983437e-05, 1.655500000019572e-05, 1.655600000027846e-05, 1.6513999999911988e-05, 1.655499999975163e-05]</msg>
<status status="PASS" starttime="20201030 15:51:32.283" endtime="20201030 15:51:32.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.273" endtime="20201030 15:51:32.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.300" endtime="20201030 15:51:32.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.294" endtime="20201030 15:51:32.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.292" endtime="20201030 15:51:32.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.755" endtime="20201030 15:51:32.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.754" endtime="20201030 15:51:32.325"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.347" endtime="20201030 15:51:32.356"></status>
</kw>
<msg timestamp="20201030 15:51:32.357" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.344" endtime="20201030 15:51:32.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.364" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.360" endtime="20201030 15:51:32.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.366" endtime="20201030 15:51:32.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.337" endtime="20201030 15:51:32.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.331" endtime="20201030 15:51:32.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.389" endtime="20201030 15:51:32.725"></status>
</kw>
<msg timestamp="20201030 15:51:32.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036790444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036820278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.385" endtime="20201030 15:51:32.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036790444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036820278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.736" endtime="20201030 15:51:32.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.756" endtime="20201030 15:51:32.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.378" endtime="20201030 15:51:32.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.374" endtime="20201030 15:51:32.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:32.773" level="INFO">${PHILIP_RES} = [{'diff': 2.9833999999999417e-05}, {'diff': 3.083300000000094e-05}, {'diff': 3.069399999999778e-05}, {'diff': 3.198599999999774e-05}, {'diff': 3.052700000000241e-05}, {'diff': 3.067999999999821e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:32.766" endtime="20201030 15:51:32.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.785" level="INFO">${RESULT} = {'diff': [2.9833999999999417e-05, 3.083300000000094e-05, 3.069399999999778e-05, 3.198599999999774e-05, 3.052700000000241e-05, 3.067999999999821e-05, 3.199999999999731e-05, 3.0514000000002317e-05, 3.06...</msg>
<status status="PASS" starttime="20201030 15:51:32.776" endtime="20201030 15:51:32.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.795" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:32.793" endtime="20201030 15:51:32.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.800" level="INFO">VALUE: [2.9833999999999417e-05, 3.083300000000094e-05, 3.069399999999778e-05, 3.198599999999774e-05, 3.052700000000241e-05, 3.067999999999821e-05, 3.199999999999731e-05, 3.0514000000002317e-05, 3.068099999999768e-05, 3.197199999999817e-05, 3.0500000000002747e-05, 3.066599999999864e-05, 3.195899999999807e-05, 3.056900000000112e-05, 3.068100000000462e-05, 3.199999999999731e-05, 3.052800000000189e-05, 3.068100000000462e-05, 3.198599999999774e-05, 3.0499999999995808e-05, 3.066700000000505e-05, 3.192999999999946e-05, 3.052799999999495e-05, 3.066700000000505e-05, 3.201400000000382e-05, 3.0513999999995378e-05, 3.069500000000419e-05, 3.201400000000382e-05, 3.052799999999495e-05, 3.069400000000472e-05, 3.197200000000511e-05, 3.052799999999495e-05, 3.068100000000462e-05, 3.204100000000348e-05, 3.0499999999995808e-05, 3.066599999999864e-05, 3.197199999999817e-05, 3.0514000000002317e-05, 3.068099999999768e-05, 3.199999999999731e-05, 3.0500000000002747e-05, 3.069399999999778e-05, 3.198699999999721e-05, 3.056900000000112e-05, 3.068099999999768e-05, 3.19579999999986e-05, 3.052800000000189e-05, 3.066599999999864e-05, 3.199999999999731e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201030 15:51:32.797" endtime="20201030 15:51:32.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.786" endtime="20201030 15:51:32.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.812" endtime="20201030 15:51:32.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.808" endtime="20201030 15:51:32.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.805" endtime="20201030 15:51:32.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.327" endtime="20201030 15:51:32.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.326" endtime="20201030 15:51:32.837"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.860" endtime="20201030 15:51:32.871"></status>
</kw>
<msg timestamp="20201030 15:51:32.872" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.857" endtime="20201030 15:51:32.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.878" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.874" endtime="20201030 15:51:32.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.880" endtime="20201030 15:51:32.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.850" endtime="20201030 15:51:32.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.843" endtime="20201030 15:51:32.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.903" endtime="20201030 15:51:33.250"></status>
</kw>
<msg timestamp="20201030 15:51:33.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038146069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038191375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.900" endtime="20201030 15:51:33.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038146069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038191375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.260" endtime="20201030 15:51:33.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.278" endtime="20201030 15:51:33.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.893" endtime="20201030 15:51:33.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.888" endtime="20201030 15:51:33.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:33.294" level="INFO">${PHILIP_RES} = [{'diff': 4.53060000000019e-05}, {'diff': 4.598599999999786e-05}, {'diff': 4.483299999999413e-05}, {'diff': 4.5958999999998196e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.602799999999657e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:33.286" endtime="20201030 15:51:33.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.305" level="INFO">${RESULT} = {'diff': [4.53060000000019e-05, 4.598599999999786e-05, 4.483299999999413e-05, 4.5958999999998196e-05, 4.4874999999999776e-05, 4.602799999999657e-05, 4.484800000000011e-05, 4.598599999999786e-05, 4.484...</msg>
<status status="PASS" starttime="20201030 15:51:33.296" endtime="20201030 15:51:33.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.316" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:33.313" endtime="20201030 15:51:33.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.321" level="INFO">VALUE: [4.53060000000019e-05, 4.598599999999786e-05, 4.483299999999413e-05, 4.5958999999998196e-05, 4.4874999999999776e-05, 4.602799999999657e-05, 4.484800000000011e-05, 4.598599999999786e-05, 4.48469999999937e-05, 4.592999999999958e-05, 4.486199999999968e-05, 4.598599999999786e-05, 4.4861000000000206e-05, 4.601400000000394e-05, 4.484800000000011e-05, 4.604099999999667e-05, 4.4819000000001497e-05, 4.5958999999998196e-05, 4.486199999999968e-05, 4.595799999999872e-05, 4.4847000000000636e-05, 4.599999999999743e-05, 4.4833000000001066e-05, 4.597199999999829e-05, 4.482000000000097e-05, 4.598599999999786e-05, 4.4819000000001497e-05, 4.5959000000005135e-05, 4.477800000000226e-05, 4.598599999999786e-05, 4.484800000000011e-05, 4.5958999999998196e-05, 4.4819000000001497e-05, 4.595800000000566e-05, 4.483400000000054e-05, 4.597199999999829e-05, 4.479100000000236e-05, 4.5972999999997766e-05, 4.4861000000000206e-05, 4.59860000000048e-05, 4.477800000000226e-05, 4.597199999999829e-05, 4.4833000000001066e-05, 4.597199999999829e-05, 4.48060000000014e-05, 4.683300000000307e-05, 4.499999999999643e-05, 4.5916999999999486e-05, 4.4847000000000636e-05, 4.598599999999786e-05]</msg>
<status status="PASS" starttime="20201030 15:51:33.318" endtime="20201030 15:51:33.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.307" endtime="20201030 15:51:33.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.333" endtime="20201030 15:51:33.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.329" endtime="20201030 15:51:33.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.326" endtime="20201030 15:51:33.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.839" endtime="20201030 15:51:33.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.838" endtime="20201030 15:51:33.358"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.380" endtime="20201030 15:51:33.391"></status>
</kw>
<msg timestamp="20201030 15:51:33.392" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.376" endtime="20201030 15:51:33.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.398" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.394" endtime="20201030 15:51:33.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.400" endtime="20201030 15:51:33.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.369" endtime="20201030 15:51:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.364" endtime="20201030 15:51:33.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.423" endtime="20201030 15:51:33.778"></status>
</kw>
<msg timestamp="20201030 15:51:33.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0362855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036346014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:33.420" endtime="20201030 15:51:33.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0362855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036346014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:33.788" endtime="20201030 15:51:33.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.806" endtime="20201030 15:51:33.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.413" endtime="20201030 15:51:33.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.408" endtime="20201030 15:51:33.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:33.822" level="INFO">${PHILIP_RES} = [{'diff': 6.0514000000004564e-05}, {'diff': 6.222200000000067e-05}, {'diff': 6.10829999999965e-05}, {'diff': 6.106900000000387e-05}, {'diff': 6.222300000000014e-05}, {'diff': 6.104199999999727e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:33.815" endtime="20201030 15:51:33.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.831" level="INFO">${RESULT} = {'diff': [6.0514000000004564e-05, 6.222200000000067e-05, 6.10829999999965e-05, 6.106900000000387e-05, 6.222300000000014e-05, 6.104199999999727e-05, 6.104199999999727e-05, 6.218000000000196e-05, 6.1028...</msg>
<status status="PASS" starttime="20201030 15:51:33.824" endtime="20201030 15:51:33.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.842" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:33.840" endtime="20201030 15:51:33.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.848" level="INFO">VALUE: [6.0514000000004564e-05, 6.222200000000067e-05, 6.10829999999965e-05, 6.106900000000387e-05, 6.222300000000014e-05, 6.104199999999727e-05, 6.104199999999727e-05, 6.218000000000196e-05, 6.1028000000004634e-05, 6.10699999999964e-05, 6.305599999999884e-05, 6.12080000000001e-05, 6.10420000000042e-05, 6.215299999999535e-05, 6.1027999999997695e-05, 6.0985999999998985e-05, 6.218000000000196e-05, 6.104099999999779e-05, 6.105499999999736e-05, 6.2195000000001e-05, 6.105600000000377e-05, 6.105499999999736e-05, 6.218000000000196e-05, 6.0971999999999416e-05, 6.108400000000291e-05, 6.216599999999545e-05, 6.106899999999693e-05, 6.104199999999727e-05, 6.218100000000143e-05, 6.111100000000258e-05, 6.105499999999736e-05, 6.220900000000057e-05, 6.0985999999998985e-05, 6.106899999999693e-05, 6.219400000000153e-05, 6.104199999999727e-05, 6.106899999999693e-05, 6.2195000000001e-05, 6.10420000000042e-05, 6.105499999999736e-05, 6.2195000000001e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.213900000000272e-05, 6.105599999999684e-05, 6.10699999999964e-05, 6.218000000000196e-05, 6.108400000000291e-05, 6.10420000000042e-05, 6.216599999999545e-05]</msg>
<status status="PASS" starttime="20201030 15:51:33.844" endtime="20201030 15:51:33.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.833" endtime="20201030 15:51:33.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.861" endtime="20201030 15:51:33.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.856" endtime="20201030 15:51:33.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.854" endtime="20201030 15:51:33.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.360" endtime="20201030 15:51:33.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.359" endtime="20201030 15:51:33.886"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.907" endtime="20201030 15:51:33.921"></status>
</kw>
<msg timestamp="20201030 15:51:33.922" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.904" endtime="20201030 15:51:33.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.928" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.924" endtime="20201030 15:51:33.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.930" endtime="20201030 15:51:33.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.897" endtime="20201030 15:51:33.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.892" endtime="20201030 15:51:33.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.953" endtime="20201030 15:51:34.300"></status>
</kw>
<msg timestamp="20201030 15:51:34.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037721236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037798681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.950" endtime="20201030 15:51:34.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037721236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037798681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.309" endtime="20201030 15:51:34.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.328" endtime="20201030 15:51:34.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.943" endtime="20201030 15:51:34.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.938" endtime="20201030 15:51:34.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:34.344" level="INFO">${PHILIP_RES} = [{'diff': 7.744500000000237e-05}, {'diff': 7.729199999999964e-05}, {'diff': 7.737499999999758e-05}, {'diff': 7.709700000000513e-05}, {'diff': 7.723600000000136e-05}, {'diff': 7.829200000000064e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:34.336" endtime="20201030 15:51:34.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.353" level="INFO">${RESULT} = {'diff': [7.744500000000237e-05, 7.729199999999964e-05, 7.737499999999758e-05, 7.709700000000513e-05, 7.723600000000136e-05, 7.829200000000064e-05, 7.827799999999413e-05, 7.82640000000015e-05, 7.82780...</msg>
<status status="PASS" starttime="20201030 15:51:34.346" endtime="20201030 15:51:34.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.363" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:34.361" endtime="20201030 15:51:34.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.369" level="INFO">VALUE: [7.744500000000237e-05, 7.729199999999964e-05, 7.737499999999758e-05, 7.709700000000513e-05, 7.723600000000136e-05, 7.829200000000064e-05, 7.827799999999413e-05, 7.82640000000015e-05, 7.827800000000107e-05, 7.829200000000064e-05, 7.830500000000074e-05, 7.829100000000117e-05, 7.83190000000003e-05, 7.829100000000117e-05, 7.83049999999938e-05, 7.829100000000117e-05, 7.825000000000193e-05, 7.829200000000064e-05, 7.826399999999456e-05, 7.823600000000236e-05, 7.83190000000003e-05, 7.819500000000312e-05, 7.829200000000064e-05, 7.827800000000107e-05, 7.826399999999456e-05, 7.826300000000203e-05, 7.825000000000193e-05, 7.830600000000021e-05, 7.829200000000064e-05, 7.829200000000064e-05, 7.83190000000003e-05, 7.829200000000064e-05, 7.823599999999542e-05, 7.829200000000064e-05, 7.827800000000107e-05, 7.819399999999671e-05, 7.82770000000016e-05, 7.826399999999456e-05, 7.824999999999499e-05, 7.827800000000107e-05, 7.82770000000016e-05, 7.830500000000074e-05, 7.824999999999499e-05, 7.830600000000021e-05, 7.829200000000064e-05, 7.82640000000015e-05, 7.826300000000203e-05, 7.826399999999456e-05, 7.833299999999987e-05, 7.825000000000193e-05]</msg>
<status status="PASS" starttime="20201030 15:51:34.366" endtime="20201030 15:51:34.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.355" endtime="20201030 15:51:34.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.387" endtime="20201030 15:51:34.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.377" endtime="20201030 15:51:34.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.374" endtime="20201030 15:51:34.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.888" endtime="20201030 15:51:34.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.886" endtime="20201030 15:51:34.412"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.434" endtime="20201030 15:51:34.448"></status>
</kw>
<msg timestamp="20201030 15:51:34.449" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.430" endtime="20201030 15:51:34.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.456" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.452" endtime="20201030 15:51:34.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.459" endtime="20201030 15:51:34.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.423" endtime="20201030 15:51:34.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.418" endtime="20201030 15:51:34.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.484" endtime="20201030 15:51:34.822"></status>
</kw>
<msg timestamp="20201030 15:51:34.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036071042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036166292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.480" endtime="20201030 15:51:34.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036071042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036166292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.832" endtime="20201030 15:51:34.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.850" endtime="20201030 15:51:34.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.472" endtime="20201030 15:51:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.467" endtime="20201030 15:51:34.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:34.866" level="INFO">${PHILIP_RES} = [{'diff': 9.525000000000505e-05}, {'diff': 9.537500000000171e-05}, {'diff': 9.537500000000171e-05}, {'diff': 9.655599999999764e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.541700000000042e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:34.859" endtime="20201030 15:51:34.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.877" level="INFO">${RESULT} = {'diff': [9.525000000000505e-05, 9.537500000000171e-05, 9.537500000000171e-05, 9.655599999999764e-05, 9.540300000000085e-05, 9.541700000000042e-05, 9.656999999999721e-05, 9.541700000000042e-05, 9.5445...</msg>
<status status="PASS" starttime="20201030 15:51:34.868" endtime="20201030 15:51:34.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.887" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:34.885" endtime="20201030 15:51:34.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.892" level="INFO">VALUE: [9.525000000000505e-05, 9.537500000000171e-05, 9.537500000000171e-05, 9.655599999999764e-05, 9.540300000000085e-05, 9.541700000000042e-05, 9.656999999999721e-05, 9.541700000000042e-05, 9.54450000000065e-05, 9.655599999999764e-05, 9.543099999999999e-05, 9.540299999999391e-05, 9.654199999999807e-05, 9.547199999999922e-05, 9.543000000000051e-05, 9.651399999999893e-05, 9.543000000000051e-05, 9.543099999999999e-05, 9.655499999999817e-05, 9.543000000000051e-05, 9.547199999999922e-05, 9.661099999999645e-05, 9.545799999999965e-05, 9.545799999999965e-05, 9.656900000000468e-05, 9.543000000000051e-05, 9.540300000000085e-05, 9.754200000000601e-05, 9.544499999999956e-05, 9.544499999999956e-05, 9.65279999999985e-05, 9.541700000000042e-05, 9.543099999999999e-05, 9.655499999999817e-05, 9.540300000000085e-05, 9.540299999999391e-05, 9.661100000000339e-05, 9.543099999999999e-05, 9.541700000000042e-05, 9.656999999999721e-05, 9.541700000000042e-05, 9.545799999999965e-05, 9.655599999999764e-05, 9.541600000000094e-05, 9.541600000000094e-05, 9.656899999999774e-05, 9.536100000000214e-05, 9.541600000000094e-05, 9.656899999999774e-05, 9.541600000000094e-05]</msg>
<status status="PASS" starttime="20201030 15:51:34.889" endtime="20201030 15:51:34.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.879" endtime="20201030 15:51:34.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.905" endtime="20201030 15:51:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.900" endtime="20201030 15:51:34.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.898" endtime="20201030 15:51:34.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.414" endtime="20201030 15:51:34.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.413" endtime="20201030 15:51:34.929"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.951" endtime="20201030 15:51:34.964"></status>
</kw>
<msg timestamp="20201030 15:51:34.965" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.947" endtime="20201030 15:51:34.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.972" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.968" endtime="20201030 15:51:34.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.974" endtime="20201030 15:51:34.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.940" endtime="20201030 15:51:34.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.935" endtime="20201030 15:51:34.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.997" endtime="20201030 15:51:35.330"></status>
</kw>
<msg timestamp="20201030 15:51:35.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035868972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035982944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.994" endtime="20201030 15:51:35.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035868972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035982944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.339" endtime="20201030 15:51:35.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.357" endtime="20201030 15:51:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.986" endtime="20201030 15:51:35.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.982" endtime="20201030 15:51:35.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:35.373" level="INFO">${PHILIP_RES} = [{'diff': 0.00011397200000000385}, {'diff': 0.00011473600000000417}, {'diff': 0.00011362500000000608}, {'diff': 0.00011476400000000331}, {'diff': 0.00011361099999999957}, {'diff': 0.000114764000000003...</msg>
<status status="PASS" starttime="20201030 15:51:35.365" endtime="20201030 15:51:35.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.384" level="INFO">${RESULT} = {'diff': [0.00011397200000000385, 0.00011473600000000417, 0.00011362500000000608, 0.00011476400000000331, 0.00011361099999999957, 0.00011476400000000331, 0.00011363899999999871, 0.0001147499999999968,...</msg>
<status status="PASS" starttime="20201030 15:51:35.375" endtime="20201030 15:51:35.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.394" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:35.392" endtime="20201030 15:51:35.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.399" level="INFO">VALUE: [0.00011397200000000385, 0.00011473600000000417, 0.00011362500000000608, 0.00011476400000000331, 0.00011361099999999957, 0.00011476400000000331, 0.00011363899999999871, 0.0001147499999999968, 0.00011363899999999871, 0.0001147629999999969, 0.00011361099999999957, 0.00011473599999999723, 0.00011366599999999838, 0.00011477799999999594, 0.00011363899999999871, 0.00011473599999999723, 0.00011361099999999957, 0.00011483300000000168, 0.00011358300000000043, 0.00011472199999999766, 0.00011357000000000034, 0.0001147499999999968, 0.000113597, 0.00011473599999999723, 0.00011362499999999914, 0.0001147499999999968, 0.000113597, 0.00011475000000000374, 0.00011359800000000642, 0.00011476400000000331, 0.00011362500000000608, 0.0001147220000000046, 0.00011362499999999914, 0.00011477800000000288, 0.00011361100000000651, 0.00011473600000000417, 0.00011363899999999871, 0.00011473600000000417, 0.00011363899999999871, 0.00011476400000000331, 0.00011362499999999914, 0.00011461100000000057, 0.00011361099999999957, 0.00011473599999999723, 0.00011356900000000086, 0.00011477799999999594, 0.00011358399999999991, 0.00011476400000000331, 0.00011362499999999914, 0.00011473599999999723]</msg>
<status status="PASS" starttime="20201030 15:51:35.396" endtime="20201030 15:51:35.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.385" endtime="20201030 15:51:35.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.412" endtime="20201030 15:51:35.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.407" endtime="20201030 15:51:35.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.405" endtime="20201030 15:51:35.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.931" endtime="20201030 15:51:35.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.930" endtime="20201030 15:51:35.436"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.459" endtime="20201030 15:51:35.474"></status>
</kw>
<msg timestamp="20201030 15:51:35.475" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.456" endtime="20201030 15:51:35.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.481" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.477" endtime="20201030 15:51:35.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.483" endtime="20201030 15:51:35.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.448" endtime="20201030 15:51:35.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.442" endtime="20201030 15:51:35.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.506" endtime="20201030 15:51:35.854"></status>
</kw>
<msg timestamp="20201030 15:51:35.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037040903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037174222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.503" endtime="20201030 15:51:35.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037040903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037174222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.863" endtime="20201030 15:51:35.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.881" endtime="20201030 15:51:35.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.496" endtime="20201030 15:51:35.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.491" endtime="20201030 15:51:35.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:35.896" level="INFO">${PHILIP_RES} = [{'diff': 0.0001333189999999998}, {'diff': 0.00013476399999999555}, {'diff': 0.00013374999999999498}, {'diff': 0.00013400000000000217}, {'diff': 0.00013479200000000163}, {'diff': 0.0001337920000000006...</msg>
<status status="PASS" starttime="20201030 15:51:35.889" endtime="20201030 15:51:35.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.905" level="INFO">${RESULT} = {'diff': [0.0001333189999999998, 0.00013476399999999555, 0.00013374999999999498, 0.00013400000000000217, 0.00013479200000000163, 0.00013379200000000063, 0.00013404099999999447, 0.00013479200000000163,...</msg>
<status status="PASS" starttime="20201030 15:51:35.898" endtime="20201030 15:51:35.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.916" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:35.913" endtime="20201030 15:51:35.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.921" level="INFO">VALUE: [0.0001333189999999998, 0.00013476399999999555, 0.00013374999999999498, 0.00013400000000000217, 0.00013479200000000163, 0.00013379200000000063, 0.00013404099999999447, 0.00013479200000000163, 0.00013377800000000106, 0.0001340280000000013, 0.0001347919999999947, 0.00013379200000000063, 0.00013400000000000217, 0.00013474999999999598, 0.00013387500000000552, 0.0001339860000000026, 0.00013479200000000163, 0.00013383299999999987, 0.00013399999999999523, 0.00013482000000000077, 0.00013384699999999944, 0.0001339719999999961, 0.0001348190000000013, 0.0001338190000000003, 0.0001340280000000013, 0.00013483400000000034, 0.0001338049999999938, 0.00013400000000000217, 0.0001348479999999999, 0.00013379200000000063, 0.00013398599999999566, 0.00013476299999999608, 0.00013383399999999934, 0.0001339860000000026, 0.00013484700000000044, 0.000133860999999999, 0.00013399999999999523, 0.00013479200000000163, 0.0001338190000000003, 0.00013400000000000217, 0.00013477800000000206, 0.00013384699999999944, 0.00013400000000000217, 0.0001348060000000012, 0.00013384700000000638, 0.00013400000000000217, 0.00013482000000000077, 0.000133860999999999, 0.00013397200000000303, 0.0001348190000000013]</msg>
<status status="PASS" starttime="20201030 15:51:35.918" endtime="20201030 15:51:35.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.907" endtime="20201030 15:51:35.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.933" endtime="20201030 15:51:35.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.929" endtime="20201030 15:51:35.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.926" endtime="20201030 15:51:35.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.438" endtime="20201030 15:51:35.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.437" endtime="20201030 15:51:35.958"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.979" endtime="20201030 15:51:35.995"></status>
</kw>
<msg timestamp="20201030 15:51:35.997" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.976" endtime="20201030 15:51:35.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.003" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.999" endtime="20201030 15:51:36.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.005" endtime="20201030 15:51:36.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.969" endtime="20201030 15:51:36.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.964" endtime="20201030 15:51:36.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.030" endtime="20201030 15:51:36.371"></status>
</kw>
<msg timestamp="20201030 15:51:36.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035984, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036137694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:36.026" endtime="20201030 15:51:36.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035984, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036137694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:36.380" endtime="20201030 15:51:36.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.399" endtime="20201030 15:51:36.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.019" endtime="20201030 15:51:36.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.015" endtime="20201030 15:51:36.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:36.415" level="INFO">${PHILIP_RES} = [{'diff': 0.0001536939999999959}, {'diff': 0.0001530829999999983}, {'diff': 0.00015309699999999787}, {'diff': 0.00015418100000000323}, {'diff': 0.00015412500000000495}, {'diff': 0.00015412499999999801...</msg>
<status status="PASS" starttime="20201030 15:51:36.407" endtime="20201030 15:51:36.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.425" level="INFO">${RESULT} = {'diff': [0.0001536939999999959, 0.0001530829999999983, 0.00015309699999999787, 0.00015418100000000323, 0.00015412500000000495, 0.00015412499999999801, 0.0001540699999999992, 0.00015401400000000093, 0...</msg>
<status status="PASS" starttime="20201030 15:51:36.417" endtime="20201030 15:51:36.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.435" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:36.433" endtime="20201030 15:51:36.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.441" level="INFO">VALUE: [0.0001536939999999959, 0.0001530829999999983, 0.00015309699999999787, 0.00015418100000000323, 0.00015412500000000495, 0.00015412499999999801, 0.0001540699999999992, 0.00015401400000000093, 0.00015411100000000538, 0.00015406899999999973, 0.00015409699999999887, 0.00015411099999999844, 0.00015408399999999878, 0.0001540280000000005, 0.00015413899999999758, 0.00015412499999999801, 0.00015412500000000495, 0.00015405500000000016, 0.00015405599999999964, 0.00015404200000000007, 0.0001540829999999993, 0.00015409699999999887, 0.00015409699999999887, 0.00015412499999999801, 0.00015406899999999973, 0.00015402700000000102, 0.00015412500000000495, 0.00015413899999999758, 0.00015413899999999758, 0.0001541660000000042, 0.00015409699999999887, 0.0001540699999999992, 0.00015412500000000495, 0.00015412499999999801, 0.0001540829999999993, 0.0001540829999999993, 0.00015409699999999887, 0.0001540699999999992, 0.0001540970000000058, 0.00015406899999999973, 0.00015406899999999973, 0.00015408399999999878, 0.0001540829999999993, 0.00015408400000000572, 0.0001540699999999992, 0.00015413899999999758, 0.0001541660000000042, 0.00015409699999999887, 0.0001540829999999993, 0.00015405500000000016]</msg>
<status status="PASS" starttime="20201030 15:51:36.437" endtime="20201030 15:51:36.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.426" endtime="20201030 15:51:36.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.455" endtime="20201030 15:51:36.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.449" endtime="20201030 15:51:36.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.446" endtime="20201030 15:51:36.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.960" endtime="20201030 15:51:36.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.959" endtime="20201030 15:51:36.480"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.502" endtime="20201030 15:51:36.520"></status>
</kw>
<msg timestamp="20201030 15:51:36.522" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.499" endtime="20201030 15:51:36.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.528" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.524" endtime="20201030 15:51:36.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.530" endtime="20201030 15:51:36.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.492" endtime="20201030 15:51:36.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.486" endtime="20201030 15:51:36.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.554" endtime="20201030 15:51:36.901"></status>
</kw>
<msg timestamp="20201030 15:51:36.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037212431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037386042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.551" endtime="20201030 15:51:36.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037212431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037386042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.910" endtime="20201030 15:51:36.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.929" endtime="20201030 15:51:36.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.543" endtime="20201030 15:51:36.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.538" endtime="20201030 15:51:36.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:36.948" level="INFO">${PHILIP_RES} = [{'diff': 0.00017361100000000407}, {'diff': 0.00017436099999999788}, {'diff': 0.00017518100000000342}, {'diff': 0.00017441600000000362}, {'diff': 0.00017523600000000222}, {'diff': 0.000175250000000001...</msg>
<status status="PASS" starttime="20201030 15:51:36.938" endtime="20201030 15:51:36.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.962" level="INFO">${RESULT} = {'diff': [0.00017361100000000407, 0.00017436099999999788, 0.00017518100000000342, 0.00017441600000000362, 0.00017523600000000222, 0.0001752500000000018, 0.0001744029999999966, 0.00017520900000000256, ...</msg>
<status status="PASS" starttime="20201030 15:51:36.950" endtime="20201030 15:51:36.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.976" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:36.973" endtime="20201030 15:51:36.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.984" level="INFO">VALUE: [0.00017361100000000407, 0.00017436099999999788, 0.00017518100000000342, 0.00017441600000000362, 0.00017523600000000222, 0.0001752500000000018, 0.0001744029999999966, 0.00017520900000000256, 0.00017518000000000394, 0.00017437499999999745, 0.0001752500000000018, 0.00017523600000000222, 0.0001744170000000031, 0.00017518000000000394, 0.0001751249999999982, 0.00017441699999999616, 0.0001752500000000018, 0.00017522200000000265, 0.0001743750000000044, 0.0001752500000000018, 0.00017520799999999614, 0.00017452800000000018, 0.0001752500000000018, 0.00017520800000000308, 0.00017444400000000276, 0.00017526400000000136, 0.00017515299999999734, 0.00017443099999999573, 0.00017526299999999495, 0.00017526399999999442, 0.00017436100000000482, 0.00017522300000000213, 0.000175195000000003, 0.0001744029999999966, 0.00017527699999999452, 0.00017518000000000394, 0.0001744170000000031, 0.0001752500000000018, 0.00017522200000000265, 0.00017441599999999668, 0.000175277999999994, 0.00017518099999999648, 0.00017440200000000405, 0.0001752370000000017, 0.00017518100000000342, 0.00017438899999999702, 0.00017524999999999485, 0.0001752500000000018, 0.0001743469999999983, 0.0001752500000000018]</msg>
<status status="PASS" starttime="20201030 15:51:36.979" endtime="20201030 15:51:36.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.965" endtime="20201030 15:51:36.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.999" endtime="20201030 15:51:37.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.994" endtime="20201030 15:51:37.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.991" endtime="20201030 15:51:37.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.482" endtime="20201030 15:51:37.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.481" endtime="20201030 15:51:37.025"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.047" endtime="20201030 15:51:37.066"></status>
</kw>
<msg timestamp="20201030 15:51:37.067" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.044" endtime="20201030 15:51:37.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.074" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.070" endtime="20201030 15:51:37.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.076" endtime="20201030 15:51:37.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.036" endtime="20201030 15:51:37.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.031" endtime="20201030 15:51:37.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.100" endtime="20201030 15:51:37.447"></status>
</kw>
<msg timestamp="20201030 15:51:37.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037761306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037957917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.097" endtime="20201030 15:51:37.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037761306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037957917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.456" endtime="20201030 15:51:37.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.475" endtime="20201030 15:51:37.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.089" endtime="20201030 15:51:37.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.085" endtime="20201030 15:51:37.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.491" level="INFO">${PHILIP_RES} = [{'diff': 0.00019661099999999931}, {'diff': 0.00019543100000000285}, {'diff': 0.00019647300000000256}, {'diff': 0.00019548600000000166}, {'diff': 0.0001964720000000031}, {'diff': 0.0001954030000000037...</msg>
<status status="PASS" starttime="20201030 15:51:37.484" endtime="20201030 15:51:37.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.502" level="INFO">${RESULT} = {'diff': [0.00019661099999999931, 0.00019543100000000285, 0.00019647300000000256, 0.00019548600000000166, 0.0001964720000000031, 0.0001954030000000037, 0.0001965140000000018, 0.0001954019999999973, 0....</msg>
<status status="PASS" starttime="20201030 15:51:37.493" endtime="20201030 15:51:37.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.513" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.511" endtime="20201030 15:51:37.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.518" level="INFO">VALUE: [0.00019661099999999931, 0.00019543100000000285, 0.00019647300000000256, 0.00019548600000000166, 0.0001964720000000031, 0.0001954030000000037, 0.0001965140000000018, 0.0001954019999999973, 0.0001965690000000006, 0.0001954309999999959, 0.00019658399999999965, 0.00019537499999999763, 0.00019645800000000352, 0.00019541700000000328, 0.00019654200000000094, 0.00019537499999999763, 0.00019650000000000223, 0.00019541699999999634, 0.00019655500000000103, 0.0001954309999999959, 0.00019650000000000223, 0.0001954160000000038, 0.0001966669999999976, 0.0001954720000000021, 0.00019655599999999357, 0.000195443999999996, 0.00019657000000000008, 0.0001954160000000038, 0.00019652800000000137, 0.0001954720000000021, 0.00019657000000000008, 0.00019544400000000295, 0.00019659799999999922, 0.00019538799999999773, 0.00019652800000000137, 0.0001955140000000008, 0.00019658399999999965, 0.00019550000000000123, 0.0001965270000000019, 0.00019540200000000424, 0.00019659799999999922, 0.000195443999999996, 0.00019659699999999974, 0.00019543000000000338, 0.00019652800000000137, 0.00019542999999999644, 0.00019652800000000137, 0.00019542999999999644, 0.00019659699999999974, 0.00019544500000000242]</msg>
<status status="PASS" starttime="20201030 15:51:37.515" endtime="20201030 15:51:37.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.504" endtime="20201030 15:51:37.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.531" endtime="20201030 15:51:37.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.527" endtime="20201030 15:51:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.524" endtime="20201030 15:51:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.027" endtime="20201030 15:51:37.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.025" endtime="20201030 15:51:37.556"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.579" endtime="20201030 15:51:37.599"></status>
</kw>
<msg timestamp="20201030 15:51:37.600" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.575" endtime="20201030 15:51:37.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.607" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.603" endtime="20201030 15:51:37.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.609" endtime="20201030 15:51:37.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.568" endtime="20201030 15:51:37.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.562" endtime="20201030 15:51:37.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.633" endtime="20201030 15:51:37.980"></status>
</kw>
<msg timestamp="20201030 15:51:37.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037749722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.630" endtime="20201030 15:51:37.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037749722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.990" endtime="20201030 15:51:38.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.008" endtime="20201030 15:51:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.622" endtime="20201030 15:51:38.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.617" endtime="20201030 15:51:38.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:38.025" level="INFO">${PHILIP_RES} = [{'diff': 0.0002187910000000029}, {'diff': 0.00021973599999999816}, {'diff': 0.00021862500000000007}, {'diff': 0.0002196530000000002}, {'diff': 0.00021970799999999902}, {'diff': 0.00021869400000000538...</msg>
<status status="PASS" starttime="20201030 15:51:38.017" endtime="20201030 15:51:38.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.034" level="INFO">${RESULT} = {'diff': [0.0002187910000000029, 0.00021973599999999816, 0.00021862500000000007, 0.0002196530000000002, 0.00021970799999999902, 0.00021869400000000538, 0.00021963900000000064, 0.0002197639999999973, 0...</msg>
<status status="PASS" starttime="20201030 15:51:38.027" endtime="20201030 15:51:38.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.045" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:38.042" endtime="20201030 15:51:38.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.050" level="INFO">VALUE: [0.0002187910000000029, 0.00021973599999999816, 0.00021862500000000007, 0.0002196530000000002, 0.00021970799999999902, 0.00021869400000000538, 0.00021963900000000064, 0.0002197639999999973, 0.00021862500000000007, 0.00021969399999999945, 0.0002197769999999974, 0.00021866699999999878, 0.00021968099999999935, 0.00021980600000000294, 0.00021876400000000323, 0.00021969399999999945, 0.000219805999999996, 0.00021862500000000007, 0.00021966699999999978, 0.00021979200000000337, 0.00021869400000000538, 0.00021968099999999935, 0.0002198890000000009, 0.00021867999999999888, 0.00021969499999999892, 0.000219805999999996, 0.00021863899999999964, 0.00021966699999999978, 0.00021976400000000423, 0.00021868099999999835, 0.00021972199999999859, 0.0002198189999999961, 0.00021863899999999964, 0.00021966699999999978, 0.00021984700000000218, 0.00021866600000000624, 0.00021966699999999978, 0.000219805999999996, 0.00021863899999999964, 0.0002196110000000015, 0.00021980500000000347, 0.0002186529999999992, 0.00021963900000000064, 0.00021984699999999524, 0.00021869499999999792, 0.00021966699999999978, 0.00021980499999999653, 0.00021868099999999835, 0.00021970799999999902, 0.00021980500000000347]</msg>
<status status="PASS" starttime="20201030 15:51:38.047" endtime="20201030 15:51:38.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.036" endtime="20201030 15:51:38.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.063" endtime="20201030 15:51:38.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.059" endtime="20201030 15:51:38.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.056" endtime="20201030 15:51:38.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.559" endtime="20201030 15:51:38.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.557" endtime="20201030 15:51:38.088"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.110" endtime="20201030 15:51:38.132"></status>
</kw>
<msg timestamp="20201030 15:51:38.133" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.107" endtime="20201030 15:51:38.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.140" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.135" endtime="20201030 15:51:38.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.142" endtime="20201030 15:51:38.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.099" endtime="20201030 15:51:38.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.094" endtime="20201030 15:51:38.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.167" endtime="20201030 15:51:38.514"></status>
</kw>
<msg timestamp="20201030 15:51:38.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037206542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037450014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.164" endtime="20201030 15:51:38.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037206542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037450014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.524" endtime="20201030 15:51:38.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.544" endtime="20201030 15:51:38.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.156" endtime="20201030 15:51:38.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.152" endtime="20201030 15:51:38.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:38.564" level="INFO">${PHILIP_RES} = [{'diff': 0.00024347199999999458}, {'diff': 0.0002428750000000035}, {'diff': 0.00024286100000000393}, {'diff': 0.00024287499999999657}, {'diff': 0.000242860999999997}, {'diff': 0.00024284699999999743}...</msg>
<status status="PASS" starttime="20201030 15:51:38.555" endtime="20201030 15:51:38.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.576" level="INFO">${RESULT} = {'diff': [0.00024347199999999458, 0.0002428750000000035, 0.00024286100000000393, 0.00024287499999999657, 0.000242860999999997, 0.00024284699999999743, 0.00024290300000000264, 0.000242860999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:38.567" endtime="20201030 15:51:38.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.590" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:38.587" endtime="20201030 15:51:38.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.598" level="INFO">VALUE: [0.00024347199999999458, 0.0002428750000000035, 0.00024286100000000393, 0.00024287499999999657, 0.000242860999999997, 0.00024284699999999743, 0.00024290300000000264, 0.000242860999999997, 0.00024288899999999614, 0.00024290300000000264, 0.00024295900000000092, 0.0002429029999999957, 0.00024290300000000264, 0.00024287499999999657, 0.00024292999999999537, 0.00024290300000000264, 0.00024391699999999628, 0.0002429029999999957, 0.00024290300000000264, 0.0002429029999999957, 0.00024288899999999614, 0.00024294400000000188, 0.00024288899999999614, 0.00024291700000000221, 0.00024294400000000188, 0.00024290199999999623, 0.00024286100000000393, 0.00024290300000000264, 0.00024288899999999614, 0.00024291700000000221, 0.00024288900000000307, 0.00024284699999999743, 0.00024287499999999657, 0.00024291699999999528, 0.0002428059999999982, 0.00024283400000000427, 0.00024288900000000307, 0.00024283400000000427, 0.00024280499999999872, 0.000242860999999997, 0.000242860999999997, 0.00024287499999999657, 0.0002428750000000035, 0.0002428750000000035, 0.000242860999999997, 0.00024287499999999657, 0.00024284699999999743, 0.00024288900000000307, 0.00024276399999999948, 0.00024281900000000523]</msg>
<status status="PASS" starttime="20201030 15:51:38.594" endtime="20201030 15:51:38.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.578" endtime="20201030 15:51:38.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.612" endtime="20201030 15:51:38.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.606" endtime="20201030 15:51:38.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.604" endtime="20201030 15:51:38.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.090" endtime="20201030 15:51:38.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.089" endtime="20201030 15:51:38.637"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.660" endtime="20201030 15:51:38.683"></status>
</kw>
<msg timestamp="20201030 15:51:38.684" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.656" endtime="20201030 15:51:38.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.691" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.686" endtime="20201030 15:51:38.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.693" endtime="20201030 15:51:38.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.649" endtime="20201030 15:51:38.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.644" endtime="20201030 15:51:38.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.717" endtime="20201030 15:51:39.063"></status>
</kw>
<msg timestamp="20201030 15:51:39.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037837778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038104444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.713" endtime="20201030 15:51:39.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037837778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038104444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.072" endtime="20201030 15:51:39.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.091" endtime="20201030 15:51:39.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.706" endtime="20201030 15:51:39.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.701" endtime="20201030 15:51:39.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.107" level="INFO">${PHILIP_RES} = [{'diff': 0.00026666599999999874}, {'diff': 0.00026702799999999555}, {'diff': 0.0002681669999999997}, {'diff': 0.0002670410000000026}, {'diff': 0.000268013999999997}, {'diff': 0.0002681669999999997}, ...</msg>
<status status="PASS" starttime="20201030 15:51:39.099" endtime="20201030 15:51:39.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.118" level="INFO">${RESULT} = {'diff': [0.00026666599999999874, 0.00026702799999999555, 0.0002681669999999997, 0.0002670410000000026, 0.000268013999999997, 0.0002681669999999997, 0.00026700000000000335, 0.0002680140000000039, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:39.109" endtime="20201030 15:51:39.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.129" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:39.126" endtime="20201030 15:51:39.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.134" level="INFO">VALUE: [0.00026666599999999874, 0.00026702799999999555, 0.0002681669999999997, 0.0002670410000000026, 0.000268013999999997, 0.0002681669999999997, 0.00026700000000000335, 0.0002680140000000039, 0.0002681809999999993, 0.000267013999999996, 0.0002680700000000022, 0.0002681799999999998, 0.0002670689999999948, 0.0002680830000000023, 0.0002681669999999997, 0.00026706999999999426, 0.00026795899999999817, 0.000268125000000001, 0.0002669860000000038, 0.0002680280000000035, 0.000268125000000001, 0.00026700000000000335, 0.0002680560000000026, 0.00026809700000000186, 0.0002670559999999947, 0.0002680140000000039, 0.000268125000000001, 0.0002670549999999952, 0.0002680410000000036, 0.0002681799999999998, 0.00026704099999999564, 0.00026809700000000186, 0.00026815200000000067, 0.000267027000000003, 0.0002680560000000026, 0.0002681809999999993, 0.00026702799999999555, 0.00026800000000000435, 0.00026815300000000014, 0.0002670280000000025, 0.00026794399999999913, 0.00026815300000000014, 0.000267125, 0.0002680700000000022, 0.0002681809999999993, 0.00026704200000000206, 0.0002679999999999974, 0.0002680969999999949, 0.0002670140000000029, 0.00026802799999999655]</msg>
<status status="PASS" starttime="20201030 15:51:39.131" endtime="20201030 15:51:39.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.120" endtime="20201030 15:51:39.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.147" endtime="20201030 15:51:39.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.142" endtime="20201030 15:51:39.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.140" endtime="20201030 15:51:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.640" endtime="20201030 15:51:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.638" endtime="20201030 15:51:39.172"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.194" endtime="20201030 15:51:39.219"></status>
</kw>
<msg timestamp="20201030 15:51:39.220" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.191" endtime="20201030 15:51:39.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.226" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.222" endtime="20201030 15:51:39.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.229" endtime="20201030 15:51:39.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.183" endtime="20201030 15:51:39.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.178" endtime="20201030 15:51:39.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.252" endtime="20201030 15:51:39.599"></status>
</kw>
<msg timestamp="20201030 15:51:39.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037287833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037580583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.249" endtime="20201030 15:51:39.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037287833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037580583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.608" endtime="20201030 15:51:39.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.627" endtime="20201030 15:51:39.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.242" endtime="20201030 15:51:39.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.237" endtime="20201030 15:51:39.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.643" level="INFO">${PHILIP_RES} = [{'diff': 0.00029275000000000134}, {'diff': 0.00029334699999999936}, {'diff': 0.0002922220000000017}, {'diff': 0.00029340299999999764}, {'diff': 0.00029223600000000127}, {'diff': 0.0002933329999999998...</msg>
<status status="PASS" starttime="20201030 15:51:39.636" endtime="20201030 15:51:39.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.658" level="INFO">${RESULT} = {'diff': [0.00029275000000000134, 0.00029334699999999936, 0.0002922220000000017, 0.00029340299999999764, 0.00029223600000000127, 0.0002933329999999998, 0.00029225000000000084, 0.00029336099999999893, ...</msg>
<status status="PASS" starttime="20201030 15:51:39.645" endtime="20201030 15:51:39.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.669" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:39.667" endtime="20201030 15:51:39.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.674" level="INFO">VALUE: [0.00029275000000000134, 0.00029334699999999936, 0.0002922220000000017, 0.00029340299999999764, 0.00029223600000000127, 0.0002933329999999998, 0.00029225000000000084, 0.00029336099999999893, 0.00029230600000000606, 0.00029334699999999936, 0.00029217999999999605, 0.000293278000000001, 0.00029223700000000075, 0.00029333399999999926, 0.00029219400000000256, 0.0002933749999999985, 0.0002921389999999968, 0.0002933329999999998, 0.00029213900000000376, 0.0002933190000000002, 0.00029219400000000256, 0.00029329200000000055, 0.0002922079999999952, 0.0002933340000000062, 0.00029223599999999433, 0.00029334699999999936, 0.0002922079999999952, 0.00029336099999999893, 0.00029223600000000127, 0.00029337500000000544, 0.00029222299999999424, 0.00029334800000000577, 0.000292180000000003, 0.0002933749999999985, 0.00029223600000000127, 0.00029340299999999764, 0.0002922640000000004, 0.0002934160000000047, 0.0002922220000000017, 0.00029333399999999926, 0.0002924310000000027, 0.00029422199999999676, 0.00029223600000000127, 0.0002934169999999972, 0.00029219400000000256, 0.0002933749999999985, 0.0002922910000000001, 0.0002933329999999998, 0.00029216699999999596, 0.00029336099999999893]</msg>
<status status="PASS" starttime="20201030 15:51:39.671" endtime="20201030 15:51:39.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.660" endtime="20201030 15:51:39.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.687" endtime="20201030 15:51:39.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.683" endtime="20201030 15:51:39.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.680" endtime="20201030 15:51:39.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.174" endtime="20201030 15:51:39.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.173" endtime="20201030 15:51:39.712"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.735" endtime="20201030 15:51:39.761"></status>
</kw>
<msg timestamp="20201030 15:51:39.762" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.731" endtime="20201030 15:51:39.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.768" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.764" endtime="20201030 15:51:39.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.770" endtime="20201030 15:51:39.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.724" endtime="20201030 15:51:39.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.718" endtime="20201030 15:51:39.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.794" endtime="20201030 15:51:40.141"></status>
</kw>
<msg timestamp="20201030 15:51:40.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037444375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037763667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.791" endtime="20201030 15:51:40.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037444375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037763667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.151" endtime="20201030 15:51:40.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.169" endtime="20201030 15:51:40.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.784" endtime="20201030 15:51:40.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.779" endtime="20201030 15:51:40.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:40.185" level="INFO">${PHILIP_RES} = [{'diff': 0.0003192919999999988}, {'diff': 0.0003195139999999999}, {'diff': 0.000320624999999998}, {'diff': 0.00031954199999999905}, {'diff': 0.0003206530000000041}, {'diff': 0.00032048600000000177}, ...</msg>
<status status="PASS" starttime="20201030 15:51:40.178" endtime="20201030 15:51:40.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.195" level="INFO">${RESULT} = {'diff': [0.0003192919999999988, 0.0003195139999999999, 0.000320624999999998, 0.00031954199999999905, 0.0003206530000000041, 0.00032048600000000177, 0.0003195139999999999, 0.0003206390000000045, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:40.187" endtime="20201030 15:51:40.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.205" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:40.203" endtime="20201030 15:51:40.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.210" level="INFO">VALUE: [0.0003192919999999988, 0.0003195139999999999, 0.000320624999999998, 0.00031954199999999905, 0.0003206530000000041, 0.00032048600000000177, 0.0003195139999999999, 0.0003206390000000045, 0.00032048600000000177, 0.0003195699999999982, 0.00032072200000000245, 0.00032050000000000134, 0.00031954199999999905, 0.0003207359999999951, 0.0003204720000000022, 0.00031959699999999786, 0.0003206950000000028, 0.00032048700000000124, 0.0003195139999999999, 0.0003206940000000033, 0.00032050000000000134, 0.00031948599999999383, 0.0003207359999999951, 0.00032054200000000005, 0.0003194439999999951, 0.00032066599999999723, 0.00032048600000000177, 0.0003195280000000064, 0.00032069399999999637, 0.00032048599999999483, 0.0003195559999999986, 0.00032072200000000245, 0.0003204590000000021, 0.0003195409999999996, 0.0003207080000000029, 0.0003205140000000009, 0.0003195139999999999, 0.0003206669999999967, 0.0003205140000000009, 0.0003195279999999995, 0.0003206810000000032, 0.0003204730000000017, 0.00031945800000000163, 0.0003207080000000029, 0.0003204170000000034, 0.0003195279999999995, 0.00032065299999999713, 0.0003204579999999957, 0.00031950000000000034, 0.0003206799999999968]</msg>
<status status="PASS" starttime="20201030 15:51:40.207" endtime="20201030 15:51:40.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.196" endtime="20201030 15:51:40.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.223" endtime="20201030 15:51:40.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.219" endtime="20201030 15:51:40.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.216" endtime="20201030 15:51:40.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.714" endtime="20201030 15:51:40.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.713" endtime="20201030 15:51:40.248"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.271" endtime="20201030 15:51:40.298"></status>
</kw>
<msg timestamp="20201030 15:51:40.299" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.267" endtime="20201030 15:51:40.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.305" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.301" endtime="20201030 15:51:40.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.308" endtime="20201030 15:51:40.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.260" endtime="20201030 15:51:40.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.254" endtime="20201030 15:51:40.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.333" endtime="20201030 15:51:40.692"></status>
</kw>
<msg timestamp="20201030 15:51:40.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037462056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037809069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.330" endtime="20201030 15:51:40.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037462056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037809069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.701" endtime="20201030 15:51:40.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.720" endtime="20201030 15:51:40.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.322" endtime="20201030 15:51:40.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.318" endtime="20201030 15:51:40.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:40.736" level="INFO">${PHILIP_RES} = [{'diff': 0.0003470130000000002}, {'diff': 0.00034668100000000146}, {'diff': 0.0003467079999999942}, {'diff': 0.00034674999999999984}, {'diff': 0.00034674999999999984}, {'diff': 0.0003467920000000055}...</msg>
<status status="PASS" starttime="20201030 15:51:40.729" endtime="20201030 15:51:40.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.746" level="INFO">${RESULT} = {'diff': [0.0003470130000000002, 0.00034668100000000146, 0.0003467079999999942, 0.00034674999999999984, 0.00034674999999999984, 0.0003467920000000055, 0.00034674999999999984, 0.00034672199999999376, 0...</msg>
<status status="PASS" starttime="20201030 15:51:40.738" endtime="20201030 15:51:40.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.756" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:40.754" endtime="20201030 15:51:40.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.762" level="INFO">VALUE: [0.0003470130000000002, 0.00034668100000000146, 0.0003467079999999942, 0.00034674999999999984, 0.00034674999999999984, 0.0003467920000000055, 0.00034674999999999984, 0.00034672199999999376, 0.00034679199999999855, 0.00034674999999999984, 0.00034679199999999855, 0.000346777999999999, 0.0003468189999999982, 0.00034681900000000515, 0.00034673600000000027, 0.0003467769999999995, 0.0003468059999999981, 0.0003467780000000059, 0.0003467769999999995, 0.00034669400000000156, 0.0003468059999999981, 0.00034672199999999376, 0.0003467639999999994, 0.00034676400000000634, 0.0003467220000000007, 0.0003467500000000068, 0.00034679199999999855, 0.0003466809999999945, 0.00034669500000000103, 0.00034679099999999907, 0.00034672300000000017, 0.0003468329999999978, 0.00034674999999999984, 0.0003467080000000011, 0.0003467639999999994, 0.00034673699999999974, 0.0003467080000000011, 0.00034674999999999984, 0.0003467220000000007, 0.0003467220000000007, 0.00034673600000000027, 0.000346777999999999, 0.00034673699999999974, 0.00034668100000000146, 0.0003466110000000036, 0.0003466660000000024, 0.0003466250000000032, 0.0003467080000000011, 0.0003466659999999955, 0.00034673600000000027]</msg>
<status status="PASS" starttime="20201030 15:51:40.759" endtime="20201030 15:51:40.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.747" endtime="20201030 15:51:40.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.776" endtime="20201030 15:51:40.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.770" endtime="20201030 15:51:40.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.767" endtime="20201030 15:51:40.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.250" endtime="20201030 15:51:40.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.249" endtime="20201030 15:51:40.801"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.823" endtime="20201030 15:51:40.852"></status>
</kw>
<msg timestamp="20201030 15:51:40.853" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.820" endtime="20201030 15:51:40.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.860" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.856" endtime="20201030 15:51:40.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.862" endtime="20201030 15:51:40.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.813" endtime="20201030 15:51:40.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.807" endtime="20201030 15:51:40.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.886" endtime="20201030 15:51:41.233"></status>
</kw>
<msg timestamp="20201030 15:51:41.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037318056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037691833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.882" endtime="20201030 15:51:41.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037318056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037691833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.243" endtime="20201030 15:51:41.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.261" endtime="20201030 15:51:41.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.875" endtime="20201030 15:51:41.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.870" endtime="20201030 15:51:41.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:41.278" level="INFO">${PHILIP_RES} = [{'diff': 0.00037377699999999875}, {'diff': 0.00037411100000000336}, {'diff': 0.00037486099999999717}, {'diff': 0.00037411100000000336}, {'diff': 0.00037592999999999654}, {'diff': 0.000374986000000000...</msg>
<status status="PASS" starttime="20201030 15:51:41.270" endtime="20201030 15:51:41.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.289" level="INFO">${RESULT} = {'diff': [0.00037377699999999875, 0.00037411100000000336, 0.00037486099999999717, 0.00037411100000000336, 0.00037592999999999654, 0.00037498600000000076, 0.00037416700000000164, 0.0003760280000000005,...</msg>
<status status="PASS" starttime="20201030 15:51:41.280" endtime="20201030 15:51:41.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.299" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:41.297" endtime="20201030 15:51:41.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.305" level="INFO">VALUE: [0.00037377699999999875, 0.00037411100000000336, 0.00037486099999999717, 0.00037411100000000336, 0.00037592999999999654, 0.00037498600000000076, 0.00037416700000000164, 0.0003760280000000005, 0.00037500000000000033, 0.0003741659999999952, 0.00037600000000000133, 0.0003749170000000024, 0.000374124999999996, 0.0003759449999999956, 0.00037481899999999846, 0.0003741390000000025, 0.00037597300000000167, 0.00037483299999999803, 0.00037420900000000035, 0.00037600000000000133, 0.00037498600000000076, 0.00037416700000000164, 0.0003759720000000022, 0.0003749029999999959, 0.00037415199999999565, 0.00037597300000000167, 0.0003749160000000029, 0.0003740840000000037, 0.0003758620000000046, 0.0003748750000000037, 0.0003740699999999972, 0.0003759579999999957, 0.0003749029999999959, 0.00037412500000000293, 0.00037600000000000133, 0.0003749580000000016, 0.00037415299999999513, 0.0003759590000000021, 0.0003749300000000025, 0.00037415300000000207, 0.00037601399999999396, 0.000374915999999996, 0.0003741109999999964, 0.00037588900000000425, 0.00037483300000000497, 0.0003740970000000038, 0.00037593100000000296, 0.00037490200000000334, 0.00037413899999999556, 0.0003759439999999961]</msg>
<status status="PASS" starttime="20201030 15:51:41.302" endtime="20201030 15:51:41.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.290" endtime="20201030 15:51:41.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.318" endtime="20201030 15:51:41.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.313" endtime="20201030 15:51:41.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.311" endtime="20201030 15:51:41.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.803" endtime="20201030 15:51:41.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.802" endtime="20201030 15:51:41.343"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.365" endtime="20201030 15:51:41.396"></status>
</kw>
<msg timestamp="20201030 15:51:41.397" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.362" endtime="20201030 15:51:41.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.404" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.399" endtime="20201030 15:51:41.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.406" endtime="20201030 15:51:41.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.354" endtime="20201030 15:51:41.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.349" endtime="20201030 15:51:41.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.431" endtime="20201030 15:51:41.778"></status>
</kw>
<msg timestamp="20201030 15:51:41.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037292278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037694833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.427" endtime="20201030 15:51:41.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037292278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037694833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.788" endtime="20201030 15:51:41.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.806" endtime="20201030 15:51:41.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.420" endtime="20201030 15:51:41.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.415" endtime="20201030 15:51:41.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:41.822" level="INFO">${PHILIP_RES} = [{'diff': 0.0004025549999999989}, {'diff': 0.0004033329999999988}, {'diff': 0.0004031529999999964}, {'diff': 0.0004032220000000017}, {'diff': 0.00040306999999999843}, {'diff': 0.00040325000000000083},...</msg>
<status status="PASS" starttime="20201030 15:51:41.815" endtime="20201030 15:51:41.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.834" level="INFO">${RESULT} = {'diff': [0.0004025549999999989, 0.0004033329999999988, 0.0004031529999999964, 0.0004032220000000017, 0.00040306999999999843, 0.00040325000000000083, 0.0004031250000000042, 0.0004032640000000004, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:41.824" endtime="20201030 15:51:41.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.844" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:41.842" endtime="20201030 15:51:41.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.850" level="INFO">VALUE: [0.0004025549999999989, 0.0004033329999999988, 0.0004031529999999964, 0.0004032220000000017, 0.00040306999999999843, 0.00040325000000000083, 0.0004031250000000042, 0.0004032640000000004, 0.0004031250000000042, 0.0004032090000000016, 0.0004030829999999985, 0.0004033059999999991, 0.0004041250000000052, 0.0004032080000000021, 0.00040306999999999843, 0.00040325000000000083, 0.0004031110000000046, 0.0004032220000000017, 0.00040311199999999714, 0.0004040280000000007, 0.0004021949999999941, 0.00040313900000000374, 0.0004030969999999981, 0.00040312499999999724, 0.0004030549999999994, 0.0004032080000000021, 0.00040307000000000537, 0.0004032640000000004, 0.00040306899999999896, 0.00040318100000000245, 0.0004030969999999981, 0.0004032220000000017, 0.00040306999999999843, 0.0004032640000000004, 0.0004030969999999981, 0.00040312499999999724, 0.00040306999999999843, 0.0004031949999999951, 0.0004030969999999981, 0.00040325000000000083, 0.0004031949999999951, 0.00040323600000000126, 0.0004030409999999998, 0.0004032090000000016, 0.0004031529999999964, 0.000403195000000002, 0.0004030829999999985, 0.000403195000000002, 0.00040311099999999767, 0.0004031809999999955]</msg>
<status status="PASS" starttime="20201030 15:51:41.847" endtime="20201030 15:51:41.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.836" endtime="20201030 15:51:41.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.863" endtime="20201030 15:51:41.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.858" endtime="20201030 15:51:41.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.856" endtime="20201030 15:51:41.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.345" endtime="20201030 15:51:41.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.344" endtime="20201030 15:51:41.888"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.910" endtime="20201030 15:51:41.942"></status>
</kw>
<msg timestamp="20201030 15:51:41.943" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.907" endtime="20201030 15:51:41.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.950" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.946" endtime="20201030 15:51:41.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.952" endtime="20201030 15:51:41.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.899" endtime="20201030 15:51:41.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.894" endtime="20201030 15:51:41.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.976" endtime="20201030 15:51:42.325"></status>
</kw>
<msg timestamp="20201030 15:51:42.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037602944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038035389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.972" endtime="20201030 15:51:42.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037602944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038035389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.335" endtime="20201030 15:51:42.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.354" endtime="20201030 15:51:42.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.965" endtime="20201030 15:51:42.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.960" endtime="20201030 15:51:42.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:42.370" level="INFO">${PHILIP_RES} = [{'diff': 0.0004324450000000035}, {'diff': 0.00043233400000000644}, {'diff': 0.0004335140000000029}, {'diff': 0.00043230600000000036}, {'diff': 0.0004341669999999992}, {'diff': 0.0004334030000000058},...</msg>
<status status="PASS" starttime="20201030 15:51:42.362" endtime="20201030 15:51:42.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.379" level="INFO">${RESULT} = {'diff': [0.0004324450000000035, 0.00043233400000000644, 0.0004335140000000029, 0.00043230600000000036, 0.0004341669999999992, 0.0004334030000000058, 0.000432333, 0.0004342920000000028, 0.000433430999...</msg>
<status status="PASS" starttime="20201030 15:51:42.372" endtime="20201030 15:51:42.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.390" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:42.388" endtime="20201030 15:51:42.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.395" level="INFO">VALUE: [0.0004324450000000035, 0.00043233400000000644, 0.0004335140000000029, 0.00043230600000000036, 0.0004341669999999992, 0.0004334030000000058, 0.000432333, 0.0004342920000000028, 0.000433430999999998, 0.0004322780000000012, 0.0004342639999999967, 0.000433430999999998, 0.0004322920000000008, 0.00043420900000000484, 0.0004334170000000054, 0.0004322920000000008, 0.00043426400000000365, 0.00043350000000000333, 0.0004322920000000008, 0.00043441699999999944, 0.0004334859999999968, 0.00043236099999999916, 0.0004344449999999986, 0.00043354200000000204, 0.00043243100000000395, 0.0004343890000000003, 0.0004335419999999951, 0.00043236199999999864, 0.00043431900000000245, 0.0004334859999999968, 0.00043237499999999873, 0.0004343470000000016, 0.0004334859999999968, 0.0004323339999999995, 0.0004343200000000019, 0.00043342999999999854, 0.0004323050000000009, 0.0004343609999999942, 0.00043348600000000376, 0.000432333, 0.0004342639999999967, 0.0004334720000000042, 0.00043238900000000524, 0.00043437500000000073, 0.0004335690000000017, 0.00043223599999999557, 0.00043431900000000245, 0.00043345899999999715, 0.00043222200000000294, 0.00043423599999999757]</msg>
<status status="PASS" starttime="20201030 15:51:42.392" endtime="20201030 15:51:42.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.381" endtime="20201030 15:51:42.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.408" endtime="20201030 15:51:42.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.404" endtime="20201030 15:51:42.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.401" endtime="20201030 15:51:42.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.890" endtime="20201030 15:51:42.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.889" endtime="20201030 15:51:42.434"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.457" endtime="20201030 15:51:42.491"></status>
</kw>
<msg timestamp="20201030 15:51:42.492" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.454" endtime="20201030 15:51:42.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.498" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.494" endtime="20201030 15:51:42.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.500" endtime="20201030 15:51:42.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.446" endtime="20201030 15:51:42.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.440" endtime="20201030 15:51:42.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.526" endtime="20201030 15:51:42.900"></status>
</kw>
<msg timestamp="20201030 15:51:42.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038998236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039461375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.523" endtime="20201030 15:51:42.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038998236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039461375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.918" endtime="20201030 15:51:42.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.951" endtime="20201030 15:51:42.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.515" endtime="20201030 15:51:42.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.511" endtime="20201030 15:51:42.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:42.976" level="INFO">${PHILIP_RES} = [{'diff': 0.0004631390000000013}, {'diff': 0.0004625970000000021}, {'diff': 0.0004635979999999956}, {'diff': 0.00046365300000000137}, {'diff': 0.0004637080000000002}, {'diff': 0.00046365300000000137},...</msg>
<status status="PASS" starttime="20201030 15:51:42.966" endtime="20201030 15:51:42.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.985" level="INFO">${RESULT} = {'diff': [0.0004631390000000013, 0.0004625970000000021, 0.0004635979999999956, 0.00046365300000000137, 0.0004637080000000002, 0.00046365300000000137, 0.0004635970000000031, 0.0004636109999999957, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:42.978" endtime="20201030 15:51:42.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.995" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:42.993" endtime="20201030 15:51:42.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.000" level="INFO">VALUE: [0.0004631390000000013, 0.0004625970000000021, 0.0004635979999999956, 0.00046365300000000137, 0.0004637080000000002, 0.00046365300000000137, 0.0004635970000000031, 0.0004636109999999957, 0.0004635830000000035, 0.00046349999999999864, 0.0004635420000000043, 0.0004635699999999965, 0.000463584000000003, 0.0004635279999999978, 0.00046355600000000385, 0.00046354099999999787, 0.00046355499999999744, 0.0004635269999999983, 0.000463568999999997, 0.0004635830000000035, 0.0004636390000000018, 0.000463666999999994, 0.00046368000000000104, 0.0004635970000000031, 0.0004636810000000005, 0.0004635829999999966, 0.00046365300000000137, 0.00046354099999999787, 0.00046361100000000266, 0.0004636390000000018, 0.00046355499999999744, 0.0004636390000000018, 0.0004635830000000035, 0.00046359699999999615, 0.000463584000000003, 0.00046361100000000266, 0.00046365299999999443, 0.00046359800000000256, 0.0004636390000000018, 0.00046362500000000223, 0.00046361100000000266, 0.000463584000000003, 0.00046359699999999615, 0.00046366600000000147, 0.0004635830000000035, 0.00046354099999999787, 0.000463568999999997, 0.00046362500000000917, 0.0004646530000000093, 0.00046358299999998964]</msg>
<status status="PASS" starttime="20201030 15:51:42.997" endtime="20201030 15:51:43.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.986" endtime="20201030 15:51:43.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.014" endtime="20201030 15:51:43.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.009" endtime="20201030 15:51:43.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.006" endtime="20201030 15:51:43.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.436" endtime="20201030 15:51:43.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.435" endtime="20201030 15:51:43.039"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.060" endtime="20201030 15:51:43.095"></status>
</kw>
<msg timestamp="20201030 15:51:43.096" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.057" endtime="20201030 15:51:43.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.102" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.098" endtime="20201030 15:51:43.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.104" endtime="20201030 15:51:43.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.050" endtime="20201030 15:51:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.045" endtime="20201030 15:51:43.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.127" endtime="20201030 15:51:43.460"></status>
</kw>
<msg timestamp="20201030 15:51:43.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03606475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036560972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:43.124" endtime="20201030 15:51:43.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03606475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036560972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:43.469" endtime="20201030 15:51:43.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.488" endtime="20201030 15:51:43.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.117" endtime="20201030 15:51:43.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.112" endtime="20201030 15:51:43.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:43.504" level="INFO">${PHILIP_RES} = [{'diff': 0.0004962219999999976}, {'diff': 0.0004948050000000009}, {'diff': 0.0004967919999999959}, {'diff': 0.0004960279999999956}, {'diff': 0.0004948480000000061}, {'diff': 0.0004968610000000012}, {...</msg>
<status status="PASS" starttime="20201030 15:51:43.496" endtime="20201030 15:51:43.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.514" level="INFO">${RESULT} = {'diff': [0.0004962219999999976, 0.0004948050000000009, 0.0004967919999999959, 0.0004960279999999956, 0.0004948480000000061, 0.0004968610000000012, 0.000496014000000003, 0.0004949029999999979, 0.00049...</msg>
<status status="PASS" starttime="20201030 15:51:43.506" endtime="20201030 15:51:43.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.524" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:43.522" endtime="20201030 15:51:43.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.529" level="INFO">VALUE: [0.0004962219999999976, 0.0004948050000000009, 0.0004967919999999959, 0.0004960279999999956, 0.0004948480000000061, 0.0004968610000000012, 0.000496014000000003, 0.0004949029999999979, 0.0004969029999999999, 0.000496014000000003, 0.0004948890000000053, 0.0004968060000000024, 0.000496013999999996, 0.0004948610000000062, 0.0004968750000000008, 0.0004958340000000006, 0.0004947500000000021, 0.0004958610000000002, 0.0004947360000000026, 0.0004967780000000033, 0.0004959999999999964, 0.0004948609999999992, 0.0004968329999999951, 0.0004959439999999982, 0.0004948190000000005, 0.0004968059999999955, 0.0004959299999999986, 0.0004948469999999996, 0.0004968610000000012, 0.000496013999999996, 0.0004947920000000008, 0.0004969029999999999, 0.0004960970000000009, 0.0004949730000000027, 0.0004969029999999999, 0.0004959860000000038, 0.0004948479999999991, 0.0004968890000000004, 0.0004959719999999973, 0.0004948889999999984, 0.0004968879999999939, 0.0004960419999999952, 0.0004948469999999996, 0.0004968890000000004, 0.0004960280000000025, 0.0004949590000000031, 0.0004968189999999956, 0.0004959309999999981, 0.00049482, 0.0004968890000000004]</msg>
<status status="PASS" starttime="20201030 15:51:43.526" endtime="20201030 15:51:43.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.516" endtime="20201030 15:51:43.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.542" endtime="20201030 15:51:43.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.537" endtime="20201030 15:51:43.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.535" endtime="20201030 15:51:43.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.041" endtime="20201030 15:51:43.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.040" endtime="20201030 15:51:43.567"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.589" endtime="20201030 15:51:43.625"></status>
</kw>
<msg timestamp="20201030 15:51:43.626" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.585" endtime="20201030 15:51:43.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.632" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.628" endtime="20201030 15:51:43.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.635" endtime="20201030 15:51:43.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.578" endtime="20201030 15:51:43.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.573" endtime="20201030 15:51:43.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.658" endtime="20201030 15:51:43.993"></status>
</kw>
<msg timestamp="20201030 15:51:43.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037009083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037538083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.655" endtime="20201030 15:51:44.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037009083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037538083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.002" endtime="20201030 15:51:44.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.020" endtime="20201030 15:51:44.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.647" endtime="20201030 15:51:44.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.643" endtime="20201030 15:51:44.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.036" level="INFO">${PHILIP_RES} = [{'diff': 0.0005290000000000017}, {'diff': 0.0005280140000000003}, {'diff': 0.0005280140000000003}, {'diff': 0.0005279029999999962}, {'diff': 0.0005280140000000003}, {'diff': 0.0005280409999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:51:44.028" endtime="20201030 15:51:44.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.046" level="INFO">${RESULT} = {'diff': [0.0005290000000000017, 0.0005280140000000003, 0.0005280140000000003, 0.0005279029999999962, 0.0005280140000000003, 0.0005280409999999999, 0.0005280000000000007, 0.000527846999999998, 0.00052...</msg>
<status status="PASS" starttime="20201030 15:51:44.038" endtime="20201030 15:51:44.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.057" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.055" endtime="20201030 15:51:44.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.062" level="INFO">VALUE: [0.0005290000000000017, 0.0005280140000000003, 0.0005280140000000003, 0.0005279029999999962, 0.0005280140000000003, 0.0005280409999999999, 0.0005280000000000007, 0.000527846999999998, 0.0005280419999999994, 0.0005279440000000024, 0.0005280140000000003, 0.0005280279999999998, 0.0005281109999999978, 0.0005289590000000025, 0.0005280419999999994, 0.0005279159999999963, 0.0005280549999999995, 0.0005279439999999955, 0.0005281669999999961, 0.0005279860000000011, 0.0005281389999999969, 0.0005279590000000015, 0.0005281119999999973, 0.0005280140000000003, 0.0005281799999999962, 0.0005279859999999942, 0.0005281249999999973, 0.0005280829999999986, 0.0005281810000000026, 0.0005280279999999998, 0.000528151999999997, 0.0005280970000000051, 0.000528167000000003, 0.0005280140000000003, 0.0005281110000000047, 0.000527958000000002, 0.0005282220000000018, 0.0005280000000000007, 0.000528151999999997, 0.0005280970000000051, 0.000528151999999997, 0.0005279860000000011, 0.0005281669999999961, 0.0005280549999999995, 0.0005280969999999982, 0.0005280270000000004, 0.0005280549999999995, 0.0005280279999999998, 0.0005282360000000014, 0.0005281250000000043]</msg>
<status status="PASS" starttime="20201030 15:51:44.059" endtime="20201030 15:51:44.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.048" endtime="20201030 15:51:44.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.075" endtime="20201030 15:51:44.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.070" endtime="20201030 15:51:44.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.068" endtime="20201030 15:51:44.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.569" endtime="20201030 15:51:44.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.568" endtime="20201030 15:51:44.100"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.121" endtime="20201030 15:51:44.159"></status>
</kw>
<msg timestamp="20201030 15:51:44.161" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.118" endtime="20201030 15:51:44.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.167" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.163" endtime="20201030 15:51:44.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.169" endtime="20201030 15:51:44.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.111" endtime="20201030 15:51:44.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.106" endtime="20201030 15:51:44.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.193" endtime="20201030 15:51:44.530"></status>
</kw>
<msg timestamp="20201030 15:51:44.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036721639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037282472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.189" endtime="20201030 15:51:44.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036721639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037282472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.539" endtime="20201030 15:51:44.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.557" endtime="20201030 15:51:44.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.182" endtime="20201030 15:51:44.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.177" endtime="20201030 15:51:44.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.573" level="INFO">${PHILIP_RES} = [{'diff': 0.0005608329999999967}, {'diff': 0.0005612499999999992}, {'diff': 0.000562209000000001}, {'diff': 0.0005611519999999953}, {'diff': 0.0005633199999999991}, {'diff': 0.0005621249999999967}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:44.565" endtime="20201030 15:51:44.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.582" level="INFO">${RESULT} = {'diff': [0.0005608329999999967, 0.0005612499999999992, 0.000562209000000001, 0.0005611519999999953, 0.0005633199999999991, 0.0005621249999999967, 0.0005612080000000005, 0.0005633189999999996, 0.00056...</msg>
<status status="PASS" starttime="20201030 15:51:44.575" endtime="20201030 15:51:44.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.593" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.590" endtime="20201030 15:51:44.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.598" level="INFO">VALUE: [0.0005608329999999967, 0.0005612499999999992, 0.000562209000000001, 0.0005611519999999953, 0.0005633199999999991, 0.0005621249999999967, 0.0005612080000000005, 0.0005633189999999996, 0.0005620279999999991, 0.0005611249999999957, 0.0005633469999999988, 0.0005621390000000032, 0.000561111000000003, 0.000563292, 0.0005621659999999959, 0.0005611800000000014, 0.0005634170000000036, 0.0005623059999999985, 0.0005613470000000037, 0.0005635000000000015, 0.0005623189999999986, 0.0005613749999999959, 0.0005634719999999954, 0.0005622639999999998, 0.0005613609999999963, 0.0005634579999999959, 0.0005623889999999965, 0.0005613609999999963, 0.0005635829999999994, 0.0005623189999999986, 0.0005613610000000033, 0.0005635689999999999, 0.0005623049999999991, 0.0005613469999999968, 0.0005635410000000007, 0.0005622500000000002, 0.0005612080000000005, 0.0005633609999999983, 0.0005622230000000006, 0.0005611379999999958, 0.0005634310000000031, 0.000562209000000001, 0.0005612079999999936, 0.0005634169999999966, 0.0005621660000000028, 0.0005612920000000049, 0.0005633619999999978, 0.000562194000000002, 0.0005612779999999984, 0.0005635410000000007]</msg>
<status status="PASS" starttime="20201030 15:51:44.595" endtime="20201030 15:51:44.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.584" endtime="20201030 15:51:44.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.612" endtime="20201030 15:51:44.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.606" endtime="20201030 15:51:44.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.603" endtime="20201030 15:51:44.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.102" endtime="20201030 15:51:44.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.101" endtime="20201030 15:51:44.638"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.660" endtime="20201030 15:51:44.700"></status>
</kw>
<msg timestamp="20201030 15:51:44.701" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.656" endtime="20201030 15:51:44.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.708" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.704" endtime="20201030 15:51:44.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.710" endtime="20201030 15:51:44.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.649" endtime="20201030 15:51:44.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.644" endtime="20201030 15:51:44.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.733" endtime="20201030 15:51:45.070"></status>
</kw>
<msg timestamp="20201030 15:51:45.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037425028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038019653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.730" endtime="20201030 15:51:45.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037425028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038019653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.079" endtime="20201030 15:51:45.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.097" endtime="20201030 15:51:45.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.723" endtime="20201030 15:51:45.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.718" endtime="20201030 15:51:45.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.113" level="INFO">${PHILIP_RES} = [{'diff': 0.0005946250000000014}, {'diff': 0.0005954580000000001}, {'diff': 0.0005954170000000009}, {'diff': 0.0005954030000000013}, {'diff': 0.0005963890000000027}, {'diff': 0.0005964860000000002}, {...</msg>
<status status="PASS" starttime="20201030 15:51:45.106" endtime="20201030 15:51:45.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.122" level="INFO">${RESULT} = {'diff': [0.0005946250000000014, 0.0005954580000000001, 0.0005954170000000009, 0.0005954030000000013, 0.0005963890000000027, 0.0005964860000000002, 0.000596430000000002, 0.0005964310000000014, 0.00059...</msg>
<status status="PASS" starttime="20201030 15:51:45.115" endtime="20201030 15:51:45.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.133" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.130" endtime="20201030 15:51:45.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.138" level="INFO">VALUE: [0.0005946250000000014, 0.0005954580000000001, 0.0005954170000000009, 0.0005954030000000013, 0.0005963890000000027, 0.0005964860000000002, 0.000596430000000002, 0.0005964310000000014, 0.0005974719999999947, 0.000596430000000002, 0.0005964720000000007, 0.0005964720000000007, 0.0005964579999999942, 0.0005964170000000019, 0.0005964159999999954, 0.0005964580000000011, 0.0005965549999999986, 0.0005964999999999998, 0.000596445000000001, 0.0005965829999999978, 0.000596445000000001, 0.0005964860000000002, 0.0005964720000000007, 0.0005964860000000002, 0.0005964170000000019, 0.0005964159999999954, 0.0005963340000000039, 0.0005963890000000027, 0.0005963469999999971, 0.0005964579999999942, 0.0005963750000000032, 0.0005975000000000008, 0.0005963749999999962, 0.000596445000000001, 0.0005964440000000015, 0.0005964580000000011, 0.0005963749999999962, 0.0005964170000000019, 0.0005963890000000027, 0.0005964300000000089, 0.0005963749999999962, 0.0005963890000000027, 0.000596445000000001, 0.000596429999999995, 0.0005963610000000036, 0.0005963609999999897, 0.0005963059999999909, 0.000596458000000008, 0.0005964170000000019, 0.0005964309999999945]</msg>
<status status="PASS" starttime="20201030 15:51:45.135" endtime="20201030 15:51:45.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.124" endtime="20201030 15:51:45.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.152" endtime="20201030 15:51:45.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.146" endtime="20201030 15:51:45.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.143" endtime="20201030 15:51:45.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.640" endtime="20201030 15:51:45.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.639" endtime="20201030 15:51:45.177"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.198" endtime="20201030 15:51:45.240"></status>
</kw>
<msg timestamp="20201030 15:51:45.241" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.195" endtime="20201030 15:51:45.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.247" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.243" endtime="20201030 15:51:45.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.250" endtime="20201030 15:51:45.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.188" endtime="20201030 15:51:45.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.183" endtime="20201030 15:51:45.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.273" endtime="20201030 15:51:45.624"></status>
</kw>
<msg timestamp="20201030 15:51:45.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.270" endtime="20201030 15:51:45.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.634" endtime="20201030 15:51:45.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.653" endtime="20201030 15:51:45.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.262" endtime="20201030 15:51:45.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.258" endtime="20201030 15:51:45.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.669" level="INFO">${PHILIP_RES} = [{'diff': 0.0006308890000000025}, {'diff': 0.0006298199999999962}, {'diff': 0.0006327220000000022}, {'diff': 0.0006309450000000008}, {'diff': 0.0006299579999999999}, {'diff': 0.000632874999999998}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:45.662" endtime="20201030 15:51:45.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.680" level="INFO">${RESULT} = {'diff': [0.0006308890000000025, 0.0006298199999999962, 0.0006327220000000022, 0.0006309450000000008, 0.0006299579999999999, 0.000632874999999998, 0.0006308060000000046, 0.0006299440000000003, 0.00063...</msg>
<status status="PASS" starttime="20201030 15:51:45.671" endtime="20201030 15:51:45.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.691" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.688" endtime="20201030 15:51:45.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.696" level="INFO">VALUE: [0.0006308890000000025, 0.0006298199999999962, 0.0006327220000000022, 0.0006309450000000008, 0.0006299579999999999, 0.000632874999999998, 0.0006308060000000046, 0.0006299440000000003, 0.0006329449999999959, 0.0006309170000000017, 0.0006300139999999982, 0.0006327640000000009, 0.0006307359999999998, 0.0006299030000000011, 0.0006327220000000022, 0.0006306530000000019, 0.0006298330000000033, 0.0006326950000000026, 0.0006306390000000023, 0.0006298330000000033, 0.0006326530000000039, 0.0006306390000000023, 0.0006298610000000024, 0.0006327360000000018, 0.0006306669999999945, 0.0006299170000000007, 0.0006327910000000006, 0.0006307359999999998, 0.0006298609999999955, 0.0006327090000000021, 0.000630666000000002, 0.0006299310000000002, 0.0006327499999999944, 0.0006307919999999981, 0.0006300000000000056, 0.0006328480000000053, 0.0006306940000000011, 0.0006299170000000007, 0.000632583000000006, 0.000630666000000002, 0.0006299300000000008, 0.0006326799999999966, 0.0006306390000000023, 0.0006298189999999898, 0.0006327220000000022, 0.0006306249999999958, 0.0006300000000000056, 0.0006326390000000043, 0.0006305689999999975, 0.0006297919999999901]</msg>
<status status="PASS" starttime="20201030 15:51:45.693" endtime="20201030 15:51:45.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.682" endtime="20201030 15:51:45.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.709" endtime="20201030 15:51:45.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.704" endtime="20201030 15:51:45.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.702" endtime="20201030 15:51:45.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.179" endtime="20201030 15:51:45.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.178" endtime="20201030 15:51:45.735"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.757" endtime="20201030 15:51:45.802"></status>
</kw>
<msg timestamp="20201030 15:51:45.803" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.754" endtime="20201030 15:51:45.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.810" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.805" endtime="20201030 15:51:45.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.812" endtime="20201030 15:51:45.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.746" endtime="20201030 15:51:45.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.741" endtime="20201030 15:51:45.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.836" endtime="20201030 15:51:46.177"></status>
</kw>
<msg timestamp="20201030 15:51:46.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038315167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038980792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.832" endtime="20201030 15:51:46.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038315167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038980792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.186" endtime="20201030 15:51:46.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.204" endtime="20201030 15:51:46.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.825" endtime="20201030 15:51:46.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.820" endtime="20201030 15:51:46.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.220" level="INFO">${PHILIP_RES} = [{'diff': 0.000665625000000003}, {'diff': 0.0006690140000000025}, {'diff': 0.0006670549999999997}, {'diff': 0.0006659030000000024}, {'diff': 0.0006670689999999993}, {'diff': 0.0006659029999999955}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:46.212" endtime="20201030 15:51:46.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.230" level="INFO">${RESULT} = {'diff': [0.000665625000000003, 0.0006690140000000025, 0.0006670549999999997, 0.0006659030000000024, 0.0006670689999999993, 0.0006659029999999955, 0.000666917000000003, 0.0006659030000000024, 0.000667...</msg>
<status status="PASS" starttime="20201030 15:51:46.222" endtime="20201030 15:51:46.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.242" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.239" endtime="20201030 15:51:46.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.248" level="INFO">VALUE: [0.000665625000000003, 0.0006690140000000025, 0.0006670549999999997, 0.0006659030000000024, 0.0006670689999999993, 0.0006659029999999955, 0.000666917000000003, 0.0006659030000000024, 0.0006670969999999984, 0.000665916999999995, 0.0006670560000000061, 0.0006659579999999943, 0.0006669860000000014, 0.0006659590000000007, 0.0006670280000000001, 0.000665916999999995, 0.000667111000000005, 0.0006660419999999986, 0.0006671389999999972, 0.000666028000000006, 0.0006671669999999963, 0.0006660279999999991, 0.0006670979999999979, 0.000666999999999994, 0.0006670689999999993, 0.0006659029999999955, 0.0006670980000000049, 0.0006659720000000008, 0.0006671389999999972, 0.0006660279999999991, 0.0006672230000000015, 0.0006660970000000044, 0.0006671389999999972, 0.0006660139999999995, 0.0006670970000000054, 0.0006660549999999987, 0.0006672370000000011, 0.0006659580000000082, 0.0006670559999999992, 0.0006659720000000008, 0.0006672360000000016, 0.0006661530000000027, 0.000667110999999998, 0.0006660699999999908, 0.0006671530000000037, 0.0006659860000000073, 0.0006672080000000025, 0.0006659999999999999, 0.000667139000000011, 0.0006659999999999999]</msg>
<status status="PASS" starttime="20201030 15:51:46.245" endtime="20201030 15:51:46.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.232" endtime="20201030 15:51:46.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.262" endtime="20201030 15:51:46.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.258" endtime="20201030 15:51:46.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.255" endtime="20201030 15:51:46.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.737" endtime="20201030 15:51:46.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.736" endtime="20201030 15:51:46.287"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.309" endtime="20201030 15:51:46.354"></status>
</kw>
<msg timestamp="20201030 15:51:46.356" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.306" endtime="20201030 15:51:46.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.362" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.358" endtime="20201030 15:51:46.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.364" endtime="20201030 15:51:46.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.298" endtime="20201030 15:51:46.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.293" endtime="20201030 15:51:46.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.387" endtime="20201030 15:51:46.732"></status>
</kw>
<msg timestamp="20201030 15:51:46.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036489125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037192278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.384" endtime="20201030 15:51:46.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036489125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037192278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.741" endtime="20201030 15:51:46.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.759" endtime="20201030 15:51:46.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.377" endtime="20201030 15:51:46.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.372" endtime="20201030 15:51:46.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.776" level="INFO">${PHILIP_RES} = [{'diff': 0.000703153000000005}, {'diff': 0.0007022780000000006}, {'diff': 0.0007051660000000001}, {'diff': 0.0007033330000000004}, {'diff': 0.0007022090000000022}, {'diff': 0.0007051669999999996}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:46.768" endtime="20201030 15:51:46.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.785" level="INFO">${RESULT} = {'diff': [0.000703153000000005, 0.0007022780000000006, 0.0007051660000000001, 0.0007033330000000004, 0.0007022090000000022, 0.0007051669999999996, 0.0007033050000000013, 0.0007021250000000048, 0.00070...</msg>
<status status="PASS" starttime="20201030 15:51:46.778" endtime="20201030 15:51:46.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.795" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.793" endtime="20201030 15:51:46.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.800" level="INFO">VALUE: [0.000703153000000005, 0.0007022780000000006, 0.0007051660000000001, 0.0007033330000000004, 0.0007022090000000022, 0.0007051669999999996, 0.0007033050000000013, 0.0007021250000000048, 0.0007051250000000009, 0.0007033050000000013, 0.0007023199999999993, 0.0007052920000000032, 0.0007041939999999983, 0.000702346999999999, 0.0007022780000000006, 0.0007033749999999991, 0.000702264000000001, 0.0007052779999999967, 0.000703362000000006, 0.0007022079999999958, 0.0007052499999999975, 0.0007033330000000004, 0.0007022779999999937, 0.0007052639999999971, 0.000703361999999999, 0.0007022780000000006, 0.0007053329999999955, 0.0007034999999999958, 0.0007022360000000019, 0.0007033330000000004, 0.0007023609999999986, 0.000705235999999998, 0.0007033060000000008, 0.000702264000000001, 0.0007052780000000036, 0.0007033339999999999, 0.0007022079999999958, 0.0007051799999999997, 0.0007033190000000078, 0.0007022220000000023, 0.0007053469999999951, 0.0007033609999999996, 0.0007022920000000071, 0.0007052219999999915, 0.0007033889999999987, 0.0007021670000000035, 0.0007051950000000057, 0.0007033749999999922, 0.0007021940000000032, 0.0007054030000000072]</msg>
<status status="PASS" starttime="20201030 15:51:46.798" endtime="20201030 15:51:46.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.787" endtime="20201030 15:51:46.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.813" endtime="20201030 15:51:46.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.809" endtime="20201030 15:51:46.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.806" endtime="20201030 15:51:46.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.289" endtime="20201030 15:51:46.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.288" endtime="20201030 15:51:46.838"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.859" endtime="20201030 15:51:46.909"></status>
</kw>
<msg timestamp="20201030 15:51:46.910" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.856" endtime="20201030 15:51:46.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.916" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.912" endtime="20201030 15:51:46.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.918" endtime="20201030 15:51:46.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.849" endtime="20201030 15:51:46.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.844" endtime="20201030 15:51:46.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.941" endtime="20201030 15:51:47.288"></status>
</kw>
<msg timestamp="20201030 15:51:47.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037932875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038673417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.938" endtime="20201030 15:51:47.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037932875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038673417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.297" endtime="20201030 15:51:47.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.315" endtime="20201030 15:51:47.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.931" endtime="20201030 15:51:47.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.926" endtime="20201030 15:51:47.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.331" level="INFO">${PHILIP_RES} = [{'diff': 0.0007405420000000038}, {'diff': 0.0007404309999999997}, {'diff': 0.0007403339999999953}, {'diff': 0.0007404439999999998}, {'diff': 0.0007414580000000004}, {'diff': 0.0007415140000000056}, {...</msg>
<status status="PASS" starttime="20201030 15:51:47.324" endtime="20201030 15:51:47.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.340" level="INFO">${RESULT} = {'diff': [0.0007405420000000038, 0.0007404309999999997, 0.0007403339999999953, 0.0007404439999999998, 0.0007414580000000004, 0.0007415140000000056, 0.0007414999999999991, 0.000741583000000004, 0.00074...</msg>
<status status="PASS" starttime="20201030 15:51:47.333" endtime="20201030 15:51:47.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.350" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.348" endtime="20201030 15:51:47.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.356" level="INFO">VALUE: [0.0007405420000000038, 0.0007404309999999997, 0.0007403339999999953, 0.0007404439999999998, 0.0007414580000000004, 0.0007415140000000056, 0.0007414999999999991, 0.000741583000000004, 0.0007415419999999978, 0.0007413469999999964, 0.0007414580000000004, 0.0007414440000000008, 0.0007413469999999964, 0.0007414450000000003, 0.0007423330000000047, 0.0007413340000000032, 0.0007414170000000012, 0.0007414589999999999, 0.0007414580000000004, 0.0007415139999999987, 0.0007414450000000003, 0.0007414859999999995, 0.0007415419999999978, 0.0007415279999999982, 0.0007414999999999991, 0.0007414170000000012, 0.0007414729999999994, 0.000741389000000002, 0.0007415139999999987, 0.000741582999999997, 0.0007415409999999983, 0.0007414720000000069, 0.000741583000000004, 0.0007414170000000081, 0.0007415419999999978, 0.0007415969999999966, 0.0007414859999999995, 0.0007414589999999999, 0.0007413049999999977, 0.0007414020000000021, 0.0007414029999999877, 0.0007414859999999995, 0.0007415280000000052, 0.0007414169999999942, 0.0007414859999999995, 0.0007414440000000078, 0.0007415139999999987, 0.0007416110000000031, 0.0007415969999999966, 0.0007415139999999987]</msg>
<status status="PASS" starttime="20201030 15:51:47.353" endtime="20201030 15:51:47.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.342" endtime="20201030 15:51:47.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.370" endtime="20201030 15:51:47.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.364" endtime="20201030 15:51:47.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.361" endtime="20201030 15:51:47.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.840" endtime="20201030 15:51:47.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.839" endtime="20201030 15:51:47.396"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.417" endtime="20201030 15:51:47.467"></status>
</kw>
<msg timestamp="20201030 15:51:47.468" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.414" endtime="20201030 15:51:47.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.474" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.470" endtime="20201030 15:51:47.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.477" endtime="20201030 15:51:47.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.407" endtime="20201030 15:51:47.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.402" endtime="20201030 15:51:47.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.500" endtime="20201030 15:51:47.843"></status>
</kw>
<msg timestamp="20201030 15:51:47.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036345639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037125153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.496" endtime="20201030 15:51:47.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036345639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037125153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.852" endtime="20201030 15:51:47.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.870" endtime="20201030 15:51:47.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.489" endtime="20201030 15:51:47.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.485" endtime="20201030 15:51:47.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.886" level="INFO">${PHILIP_RES} = [{'diff': 0.000779514000000002}, {'diff': 0.0007788610000000057}, {'diff': 0.0007818060000000029}, {'diff': 0.0007798609999999997}, {'diff': 0.0007788469999999992}, {'diff': 0.0007818750000000013}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:47.878" endtime="20201030 15:51:47.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.896" level="INFO">${RESULT} = {'diff': [0.000779514000000002, 0.0007788610000000057, 0.0007818060000000029, 0.0007798609999999997, 0.0007788469999999992, 0.0007818750000000013, 0.0007799580000000042, 0.0007789160000000045, 0.00078...</msg>
<status status="PASS" starttime="20201030 15:51:47.888" endtime="20201030 15:51:47.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.906" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.904" endtime="20201030 15:51:47.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.912" level="INFO">VALUE: [0.000779514000000002, 0.0007788610000000057, 0.0007818060000000029, 0.0007798609999999997, 0.0007788469999999992, 0.0007818750000000013, 0.0007799580000000042, 0.0007789160000000045, 0.000781902000000001, 0.000779999999999996, 0.0007787500000000017, 0.0007817359999999982, 0.0007798749999999993, 0.0007787640000000012, 0.0007817780000000038, 0.0007799300000000051, 0.0007787640000000012, 0.0007817639999999973, 0.0007799159999999986, 0.0007788889999999979, 0.0007818480000000017, 0.0007798889999999989, 0.0007786669999999968, 0.0007816520000000007, 0.0007797640000000022, 0.0007786950000000029, 0.000781707999999999, 0.000779790999999995, 0.0007787090000000024, 0.0007817779999999969, 0.0007798330000000006, 0.0007786799999999969, 0.0007817219999999986, 0.0007799299999999981, 0.0007786520000000047, 0.0007817920000000034, 0.0007799309999999976, 0.0007787499999999947, 0.0007818339999999951, 0.0007799450000000041, 0.0007787230000000089, 0.0007818329999999957, 0.0007799029999999985, 0.0007787640000000012, 0.0007818480000000017, 0.0007800140000000094, 0.0007788200000000134, 0.0007817920000000034, 0.0007799309999999976, 0.000778930000000011]</msg>
<status status="PASS" starttime="20201030 15:51:47.909" endtime="20201030 15:51:47.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.898" endtime="20201030 15:51:47.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.924" endtime="20201030 15:51:47.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.920" endtime="20201030 15:51:47.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.917" endtime="20201030 15:51:47.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.398" endtime="20201030 15:51:47.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.396" endtime="20201030 15:51:47.949"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.971" endtime="20201030 15:51:48.022"></status>
</kw>
<msg timestamp="20201030 15:51:48.024" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.967" endtime="20201030 15:51:48.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.030" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.026" endtime="20201030 15:51:48.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.032" endtime="20201030 15:51:48.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.960" endtime="20201030 15:51:48.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.954" endtime="20201030 15:51:48.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.055" endtime="20201030 15:51:48.395"></status>
</kw>
<msg timestamp="20201030 15:51:48.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037200292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.052" endtime="20201030 15:51:48.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037200292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.404" endtime="20201030 15:51:48.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.421" endtime="20201030 15:51:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.045" endtime="20201030 15:51:48.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.040" endtime="20201030 15:51:48.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.437" level="INFO">${PHILIP_RES} = [{'diff': 0.0008200550000000001}, {'diff': 0.0008191810000000022}, {'diff': 0.0008201529999999971}, {'diff': 0.0008191950000000017}, {'diff': 0.0008202779999999937}, {'diff': 0.0008191520000000035}, {...</msg>
<status status="PASS" starttime="20201030 15:51:48.430" endtime="20201030 15:51:48.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.448" level="INFO">${RESULT} = {'diff': [0.0008200550000000001, 0.0008191810000000022, 0.0008201529999999971, 0.0008191950000000017, 0.0008202779999999937, 0.0008191520000000035, 0.0008202639999999942, 0.0008191390000000034, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:51:48.439" endtime="20201030 15:51:48.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.458" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.456" endtime="20201030 15:51:48.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.464" level="INFO">VALUE: [0.0008200550000000001, 0.0008191810000000022, 0.0008201529999999971, 0.0008191950000000017, 0.0008202779999999937, 0.0008191520000000035, 0.0008202639999999942, 0.0008191390000000034, 0.0008201809999999962, 0.0008189580000000016, 0.0008201529999999971, 0.0008189589999999941, 0.0008201250000000049, 0.0008189860000000007, 0.0008200839999999987, 0.000818959000000001, 0.0008200000000000013, 0.0008190000000000003, 0.0008199999999999943, 0.0008189170000000023, 0.0008200550000000001, 0.0008189720000000011, 0.0008201519999999976, 0.0008190139999999999, 0.0008201109999999984, 0.0008190000000000003, 0.0008201249999999979, 0.0008190549999999991, 0.0008200969999999919, 0.0008190000000000003, 0.0008201389999999975, 0.0008190839999999977, 0.0008200280000000004, 0.0008190000000000003, 0.000820236000000002, 0.0008189299999999955, 0.0008200409999999936, 0.0008190420000000059, 0.0008201810000000032, 0.0008190279999999994, 0.0008201389999999975, 0.0008189720000000011, 0.0008200699999999922, 0.0008189310000000088, 0.0008199859999999948, 0.0008188609999999902, 0.0008201109999999984, 0.0008189450000000015, 0.0008201389999999975, 0.0008189579999999946]</msg>
<status status="PASS" starttime="20201030 15:51:48.461" endtime="20201030 15:51:48.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.450" endtime="20201030 15:51:48.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.476" endtime="20201030 15:51:48.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.472" endtime="20201030 15:51:48.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.469" endtime="20201030 15:51:48.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.951" endtime="20201030 15:51:48.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.949" endtime="20201030 15:51:48.501"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.522" endtime="20201030 15:51:48.577"></status>
</kw>
<msg timestamp="20201030 15:51:48.578" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.519" endtime="20201030 15:51:48.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.584" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.580" endtime="20201030 15:51:48.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.586" endtime="20201030 15:51:48.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.512" endtime="20201030 15:51:48.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.507" endtime="20201030 15:51:48.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.617" endtime="20201030 15:51:48.973"></status>
</kw>
<msg timestamp="20201030 15:51:48.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036613986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037473222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.614" endtime="20201030 15:51:48.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036613986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037473222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.982" endtime="20201030 15:51:48.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.000" endtime="20201030 15:51:49.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.599" endtime="20201030 15:51:49.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.594" endtime="20201030 15:51:49.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.016" level="INFO">${PHILIP_RES} = [{'diff': 0.0008592359999999993}, {'diff': 0.0008593059999999972}, {'diff': 0.0008603199999999978}, {'diff': 0.0008592910000000051}, {'diff': 0.0008604029999999957}, {'diff': 0.0008593050000000046}, {...</msg>
<status status="PASS" starttime="20201030 15:51:49.009" endtime="20201030 15:51:49.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.025" level="INFO">${RESULT} = {'diff': [0.0008592359999999993, 0.0008593059999999972, 0.0008603199999999978, 0.0008592910000000051, 0.0008604029999999957, 0.0008593050000000046, 0.0008625560000000004, 0.0008602220000000008, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:51:49.018" endtime="20201030 15:51:49.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.035" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.033" endtime="20201030 15:51:49.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.040" level="INFO">VALUE: [0.0008592359999999993, 0.0008593059999999972, 0.0008603199999999978, 0.0008592910000000051, 0.0008604029999999957, 0.0008593050000000046, 0.0008625560000000004, 0.0008602220000000008, 0.0008593340000000033, 0.0008625269999999949, 0.0008603059999999982, 0.000859166999999994, 0.0008625140000000017, 0.0008604170000000022, 0.0008594160000000017, 0.0008626799999999976, 0.0008604029999999957, 0.0008594580000000004, 0.0008625280000000013, 0.0008605409999999994, 0.0008594170000000012, 0.0008626809999999971, 0.0008603190000000052, 0.0008594439999999939, 0.0008626250000000057, 0.0008614719999999951, 0.0008595690000000045, 0.0008595000000000061, 0.0008605829999999912, 0.0008595130000000062, 0.0008626949999999967, 0.0008604860000000075, 0.0008595269999999988, 0.0008627219999999963, 0.0008604860000000075, 0.0008594030000000086, 0.0008624859999999956, 0.0008603190000000122, 0.0008593610000000029, 0.000862681000000004, 0.000860554999999999, 0.0008595969999999897, 0.000862764000000002, 0.0008604730000000005, 0.0008596530000000019, 0.0008627769999999951, 0.0008606250000000037, 0.0008596250000000027, 0.0008627360000000028, 0.0008604299999999954]</msg>
<status status="PASS" starttime="20201030 15:51:49.037" endtime="20201030 15:51:49.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.027" endtime="20201030 15:51:49.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.053" endtime="20201030 15:51:49.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.048" endtime="20201030 15:51:49.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.046" endtime="20201030 15:51:49.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.503" endtime="20201030 15:51:49.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.502" endtime="20201030 15:51:49.077"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.099" endtime="20201030 15:51:49.156"></status>
</kw>
<msg timestamp="20201030 15:51:49.157" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.095" endtime="20201030 15:51:49.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.163" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.159" endtime="20201030 15:51:49.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.165" endtime="20201030 15:51:49.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.088" endtime="20201030 15:51:49.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.083" endtime="20201030 15:51:49.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.189" endtime="20201030 15:51:49.530"></status>
</kw>
<msg timestamp="20201030 15:51:49.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037481486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038383333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.186" endtime="20201030 15:51:49.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037481486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038383333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.540" endtime="20201030 15:51:49.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.557" endtime="20201030 15:51:49.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.179" endtime="20201030 15:51:49.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.174" endtime="20201030 15:51:49.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.573" level="INFO">${PHILIP_RES} = [{'diff': 0.0009018469999999973}, {'diff': 0.000901790999999999}, {'diff': 0.0009016390000000027}, {'diff': 0.0009016530000000023}, {'diff': 0.0009016660000000024}, {'diff': 0.0009016249999999962}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:49.566" endtime="20201030 15:51:49.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.582" level="INFO">${RESULT} = {'diff': [0.0009018469999999973, 0.000901790999999999, 0.0009016390000000027, 0.0009016530000000023, 0.0009016660000000024, 0.0009016249999999962, 0.0009016530000000023, 0.0009016250000000031, 0.00090...</msg>
<status status="PASS" starttime="20201030 15:51:49.575" endtime="20201030 15:51:49.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.592" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.590" endtime="20201030 15:51:49.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.597" level="INFO">VALUE: [0.0009018469999999973, 0.000901790999999999, 0.0009016390000000027, 0.0009016530000000023, 0.0009016660000000024, 0.0009016249999999962, 0.0009016530000000023, 0.0009016250000000031, 0.0009016809999999945, 0.0009017360000000002, 0.0009017090000000005, 0.0009017499999999998, 0.0009016939999999946, 0.0009017080000000011, 0.0009016110000000035, 0.0009016389999999957, 0.0009015829999999975, 0.0009016110000000035, 0.0009016800000000019, 0.0009017080000000011, 0.0009017090000000005, 0.0009018199999999976, 0.0009017090000000005, 0.0009017639999999993, 0.0009017919999999985, 0.0009017080000000011, 0.0009016109999999966, 0.0009017639999999993, 0.0009018480000000106, 0.0009016939999999946, 0.0009016670000000088, 0.000901723000000007, 0.0009018469999999973, 0.0009017090000000005, 0.0009017639999999993, 0.0009018050000000055, 0.0009018199999999976, 0.000901790999999999, 0.0009017640000000132, 0.0009016800000000019, 0.0009017090000000005, 0.0009026809999999885, 0.0009016519999999889, 0.0009017090000000005, 0.0009016389999999957, 0.0009016110000000105, 0.0009016939999999946, 0.0009016389999999957, 0.0009016530000000023, 0.0009016530000000023]</msg>
<status status="PASS" starttime="20201030 15:51:49.595" endtime="20201030 15:51:49.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.584" endtime="20201030 15:51:49.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.611" endtime="20201030 15:51:49.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.606" endtime="20201030 15:51:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.603" endtime="20201030 15:51:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.079" endtime="20201030 15:51:49.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.078" endtime="20201030 15:51:49.641"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.664" endtime="20201030 15:51:49.723"></status>
</kw>
<msg timestamp="20201030 15:51:49.724" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.661" endtime="20201030 15:51:49.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.730" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.726" endtime="20201030 15:51:49.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.732" endtime="20201030 15:51:49.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.653" endtime="20201030 15:51:49.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.648" endtime="20201030 15:51:49.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.755" endtime="20201030 15:51:50.089"></status>
</kw>
<msg timestamp="20201030 15:51:50.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043225347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044168583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.752" endtime="20201030 15:51:50.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043225347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044168583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.099" endtime="20201030 15:51:50.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.116" endtime="20201030 15:51:50.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.745" endtime="20201030 15:51:50.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.740" endtime="20201030 15:51:50.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.132" level="INFO">${PHILIP_RES} = [{'diff': 0.0009432360000000001}, {'diff': 0.0009429309999999941}, {'diff': 0.0009422220000000064}, {'diff': 0.0009460129999999956}, {'diff': 0.0009428749999999958}, {'diff': 0.0009420000000000053}, {...</msg>
<status status="PASS" starttime="20201030 15:51:50.125" endtime="20201030 15:51:50.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.147" level="INFO">${RESULT} = {'diff': [0.0009432360000000001, 0.0009429309999999941, 0.0009422220000000064, 0.0009460129999999956, 0.0009428749999999958, 0.0009420000000000053, 0.0009458889999999984, 0.0009427499999999991, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:51:50.134" endtime="20201030 15:51:50.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.157" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.155" endtime="20201030 15:51:50.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.163" level="INFO">VALUE: [0.0009432360000000001, 0.0009429309999999941, 0.0009422220000000064, 0.0009460129999999956, 0.0009428749999999958, 0.0009420000000000053, 0.0009458889999999984, 0.0009427499999999991, 0.0009419449999999996, 0.0009458609999999992, 0.0009428610000000032, 0.000942125000000002, 0.000946014000000002, 0.0009429999999999994, 0.0009420130000000054, 0.0009459450000000036, 0.0009429859999999998, 0.0009420839999999958, 0.0009459029999999979, 0.0009428890000000023, 0.0009421669999999938, 0.0009459580000000106, 0.0009429299999999946, 0.0009420980000000023, 0.0009459439999999902, 0.0009428469999999967, 0.0009420000000000123, 0.000945804999999994, 0.0009426250000000025, 0.0009419030000000078, 0.0009457499999999952, 0.0009427089999999999, 0.0009419440000000001, 0.0009458469999999997, 0.0009427639999999987, 0.0009419719999999993, 0.0009457360000000026, 0.0009428189999999975, 0.0009419859999999919, 0.0009456939999999969, 0.0009427229999999925, 0.0009419030000000078, 0.000945916000000005, 0.0009428750000000097, 0.0009420980000000023, 0.0009459309999999971, 0.000942833000000004, 0.0009420279999999975, 0.0009459450000000036, 0.0009428059999999905]</msg>
<status status="PASS" starttime="20201030 15:51:50.160" endtime="20201030 15:51:50.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.149" endtime="20201030 15:51:50.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.175" endtime="20201030 15:51:50.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.171" endtime="20201030 15:51:50.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.168" endtime="20201030 15:51:50.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.644" endtime="20201030 15:51:50.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.642" endtime="20201030 15:51:50.200"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.222" endtime="20201030 15:51:50.282"></status>
</kw>
<msg timestamp="20201030 15:51:50.283" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.219" endtime="20201030 15:51:50.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.290" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.285" endtime="20201030 15:51:50.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.292" endtime="20201030 15:51:50.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.212" endtime="20201030 15:51:50.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.206" endtime="20201030 15:51:50.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.315" endtime="20201030 15:51:50.654"></status>
</kw>
<msg timestamp="20201030 15:51:50.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036691292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037677569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.312" endtime="20201030 15:51:50.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036691292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037677569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.664" endtime="20201030 15:51:50.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.682" endtime="20201030 15:51:50.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.305" endtime="20201030 15:51:50.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.300" endtime="20201030 15:51:50.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.699" level="INFO">${PHILIP_RES} = [{'diff': 0.0009862770000000007}, {'diff': 0.000985152000000003}, {'diff': 0.0009863189999999994}, {'diff': 0.0009852090000000008}, {'diff': 0.0009863060000000062}, {'diff': 0.0009860689999999991}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:50.691" endtime="20201030 15:51:50.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.710" level="INFO">${RESULT} = {'diff': [0.0009862770000000007, 0.000985152000000003, 0.0009863189999999994, 0.0009852090000000008, 0.0009863060000000062, 0.0009860689999999991, 0.000986236999999994, 0.000985221999999994, 0.0009863...</msg>
<status status="PASS" starttime="20201030 15:51:50.701" endtime="20201030 15:51:50.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.721" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.718" endtime="20201030 15:51:50.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.726" level="INFO">VALUE: [0.0009862770000000007, 0.000985152000000003, 0.0009863189999999994, 0.0009852090000000008, 0.0009863060000000062, 0.0009860689999999991, 0.000986236999999994, 0.000985221999999994, 0.0009863189999999994, 0.0009852779999999992, 0.0009864300000000034, 0.0009851810000000016, 0.0009864310000000029, 0.0009852919999999987, 0.0009863749999999977, 0.000985278000000006, 0.0009863749999999977, 0.0009853049999999988, 0.0009864170000000033, 0.0009851659999999957, 0.000986332999999999, 0.0009853060000000052, 0.0009864169999999964, 0.0009853199999999979, 0.0009864720000000021, 0.000985278000000006, 0.0009863469999999985, 0.0009871529999999906, 0.0009863469999999985, 0.000985347999999997, 0.0009864300000000104, 0.0009851939999999948, 0.0009863749999999977, 0.0009853340000000044, 0.0009863890000000042, 0.0009850970000000042, 0.0009862910000000003, 0.0009852090000000008, 0.0009864720000000021, 0.0009851249999999895, 0.00098641599999999, 0.0009851379999999965, 0.0009864019999999973, 0.0009852770000000066, 0.0009864020000000112, 0.0009851250000000034, 0.0009862770000000076, 0.0009851940000000087, 0.0009863060000000062, 0.0009852220000000078]</msg>
<status status="PASS" starttime="20201030 15:51:50.723" endtime="20201030 15:51:50.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.712" endtime="20201030 15:51:50.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.738" endtime="20201030 15:51:50.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.734" endtime="20201030 15:51:50.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.732" endtime="20201030 15:51:50.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.202" endtime="20201030 15:51:50.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.201" endtime="20201030 15:51:50.763"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.785" endtime="20201030 15:51:50.848"></status>
</kw>
<msg timestamp="20201030 15:51:50.849" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.782" endtime="20201030 15:51:50.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.855" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.851" endtime="20201030 15:51:50.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.858" endtime="20201030 15:51:50.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.775" endtime="20201030 15:51:50.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.769" endtime="20201030 15:51:50.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.881" endtime="20201030 15:51:51.219"></status>
</kw>
<msg timestamp="20201030 15:51:51.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036773, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037801472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:50.877" endtime="20201030 15:51:51.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036773, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037801472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:51.229" endtime="20201030 15:51:51.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.246" endtime="20201030 15:51:51.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.870" endtime="20201030 15:51:51.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.866" endtime="20201030 15:51:51.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.262" level="INFO">${PHILIP_RES} = [{'diff': 0.0010284720000000025}, {'diff': 0.001029486000000003}, {'diff': 0.0010283329999999993}, {'diff': 0.001032347000000003}, {'diff': 0.0010294310000000043}, {'diff': 0.0010283339999999988}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:51.255" endtime="20201030 15:51:51.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.272" level="INFO">${RESULT} = {'diff': [0.0010284720000000025, 0.001029486000000003, 0.0010283329999999993, 0.001032347000000003, 0.0010294310000000043, 0.0010283339999999988, 0.0010323189999999968, 0.0010294029999999982, 0.001028...</msg>
<status status="PASS" starttime="20201030 15:51:51.264" endtime="20201030 15:51:51.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.282" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.280" endtime="20201030 15:51:51.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.287" level="INFO">VALUE: [0.0010284720000000025, 0.001029486000000003, 0.0010283329999999993, 0.001032347000000003, 0.0010294310000000043, 0.0010283339999999988, 0.0010323189999999968, 0.0010294029999999982, 0.0010281249999999978, 0.001032263999999998, 0.0010293190000000008, 0.0010284030000000041, 0.001032292000000004, 0.0010294310000000043, 0.0010283189999999998, 0.0010293609999999995, 0.0010283059999999997, 0.0010324310000000003, 0.0010294029999999982, 0.001028264000000001, 0.0010323610000000025, 0.001029486000000003, 0.0010284029999999972, 0.0010324439999999935, 0.001029569000000008, 0.0010284450000000028, 0.0010324030000000012, 0.0010295419999999944, 0.0010284170000000037, 0.0010324719999999926, 0.0010296250000000062, 0.0010283050000000071, 0.0010323480000000024, 0.0010297500000000098, 0.001028472999999988, 0.0010324310000000003, 0.0010295419999999944, 0.0010285420000000073, 0.0010324439999999935, 0.001029374999999999, 0.001028264000000001, 0.0010324310000000003, 0.0010294590000000103, 0.001028374999999998, 0.0010324439999999935, 0.0010295550000000014, 0.0010282779999999936, 0.0010325000000000056, 0.0010296109999999997, 0.0010285280000000008]</msg>
<status status="PASS" starttime="20201030 15:51:51.284" endtime="20201030 15:51:51.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.273" endtime="20201030 15:51:51.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.300" endtime="20201030 15:51:51.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.295" endtime="20201030 15:51:51.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.293" endtime="20201030 15:51:51.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.765" endtime="20201030 15:51:51.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.764" endtime="20201030 15:51:51.325"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.346" endtime="20201030 15:51:51.413"></status>
</kw>
<msg timestamp="20201030 15:51:51.414" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.343" endtime="20201030 15:51:51.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.420" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.416" endtime="20201030 15:51:51.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.422" endtime="20201030 15:51:51.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.336" endtime="20201030 15:51:51.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.331" endtime="20201030 15:51:51.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.445" endtime="20201030 15:51:51.784"></status>
</kw>
<msg timestamp="20201030 15:51:51.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039277306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.442" endtime="20201030 15:51:51.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039277306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.793" endtime="20201030 15:51:51.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.811" endtime="20201030 15:51:51.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.435" endtime="20201030 15:51:51.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.430" endtime="20201030 15:51:51.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.827" level="INFO">${PHILIP_RES} = [{'diff': 0.0010741389999999948}, {'diff': 0.0010746950000000005}, {'diff': 0.0010746389999999953}, {'diff': 0.0010746670000000014}, {'diff': 0.0010747229999999997}, {'diff': 0.0010746950000000005}, {...</msg>
<status status="PASS" starttime="20201030 15:51:51.819" endtime="20201030 15:51:51.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.836" level="INFO">${RESULT} = {'diff': [0.0010741389999999948, 0.0010746950000000005, 0.0010746389999999953, 0.0010746670000000014, 0.0010747229999999997, 0.0010746950000000005, 0.0010746250000000027, 0.0010746120000000026, 0.0010...</msg>
<status status="PASS" starttime="20201030 15:51:51.829" endtime="20201030 15:51:51.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.846" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.844" endtime="20201030 15:51:51.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.852" level="INFO">VALUE: [0.0010741389999999948, 0.0010746950000000005, 0.0010746389999999953, 0.0010746670000000014, 0.0010747229999999997, 0.0010746950000000005, 0.0010746250000000027, 0.0010746120000000026, 0.0010745549999999979, 0.0010745279999999982, 0.0010745559999999973, 0.0010746390000000022, 0.0010745559999999973, 0.001074499999999999, 0.0010746390000000022, 0.0010747220000000002, 0.0010747220000000002, 0.0010747359999999997, 0.0010745969999999966, 0.0010744580000000004, 0.0010745549999999979, 0.0010745690000000044, 0.0010746529999999949, 0.001074554999999991, 0.0010744580000000004, 0.001074554999999991, 0.0010745409999999983, 0.0010747220000000002, 0.0010747229999999997, 0.0010746670000000014, 0.0010745970000000105, 0.0010746249999999957, 0.001074666000000002, 0.001074665999999988, 0.001074875000000003, 0.0010746799999999945, 0.0010746529999999949, 0.001074763999999992, 0.0010747779999999985, 0.0010749300000000017, 0.0010748609999999964, 0.0010748330000000111, 0.0010748190000000046, 0.0010757629999999935, 0.0010746250000000096, 0.001074666000000002, 0.001074694000000001, 0.0010747220000000002, 0.0010746529999999949, 0.0010747359999999928]</msg>
<status status="PASS" starttime="20201030 15:51:51.849" endtime="20201030 15:51:51.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.838" endtime="20201030 15:51:51.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.866" endtime="20201030 15:51:51.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.860" endtime="20201030 15:51:51.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.857" endtime="20201030 15:51:51.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.327" endtime="20201030 15:51:51.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.325" endtime="20201030 15:51:51.891"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.912" endtime="20201030 15:51:51.980"></status>
</kw>
<msg timestamp="20201030 15:51:51.981" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.909" endtime="20201030 15:51:51.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.987" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.983" endtime="20201030 15:51:51.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.989" endtime="20201030 15:51:51.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.902" endtime="20201030 15:51:51.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.897" endtime="20201030 15:51:51.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.013" endtime="20201030 15:51:52.351"></status>
</kw>
<msg timestamp="20201030 15:51:52.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036674639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037794681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.009" endtime="20201030 15:51:52.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036674639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037794681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.360" endtime="20201030 15:51:52.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.378" endtime="20201030 15:51:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.002" endtime="20201030 15:51:52.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.997" endtime="20201030 15:51:52.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.394" level="INFO">${PHILIP_RES} = [{'diff': 0.0011200419999999947}, {'diff': 0.0011202500000000032}, {'diff': 0.0011193060000000005}, {'diff': 0.0011231529999999948}, {'diff': 0.0011203190000000016}, {'diff': 0.0011191530000000047}, {...</msg>
<status status="PASS" starttime="20201030 15:51:52.386" endtime="20201030 15:51:52.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.404" level="INFO">${RESULT} = {'diff': [0.0011200419999999947, 0.0011202500000000032, 0.0011193060000000005, 0.0011231529999999948, 0.0011203190000000016, 0.0011191530000000047, 0.0011232080000000005, 0.0011203189999999946, 0.0011...</msg>
<status status="PASS" starttime="20201030 15:51:52.396" endtime="20201030 15:51:52.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.415" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.413" endtime="20201030 15:51:52.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.420" level="INFO">VALUE: [0.0011200419999999947, 0.0011202500000000032, 0.0011193060000000005, 0.0011231529999999948, 0.0011203190000000016, 0.0011191530000000047, 0.0011232080000000005, 0.0011203189999999946, 0.0011190829999999999, 0.0011229580000000003, 0.0011202640000000028, 0.0011193749999999988, 0.0011231810000000009, 0.0011203190000000016, 0.0011192780000000013, 0.0011232639999999988, 0.0011202219999999971, 0.0011190699999999998, 0.0011230970000000035, 0.0011201799999999984, 0.0011191249999999986, 0.0011231249999999957, 0.001120111000000007, 0.0011189029999999905, 0.0011230140000000055, 0.0011201529999999987, 0.001118930000000004, 0.0011228050000000045, 0.0011199579999999904, 0.0011188470000000061, 0.0011228330000000036, 0.0011199580000000042, 0.0011187639999999943, 0.001122860999999989, 0.001120013000000003, 0.0011186390000000046, 0.0011227640000000122, 0.0011197770000000024, 0.0011187220000000025, 0.0011227359999999992, 0.0011198049999999876, 0.0011187500000000017, 0.0011226670000000077, 0.0011200410000000022, 0.0011188890000000118, 0.0011229160000000016, 0.0011200420000000016, 0.0011187780000000008, 0.0011228189999999971, 0.0011200000000000099]</msg>
<status status="PASS" starttime="20201030 15:51:52.417" endtime="20201030 15:51:52.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.406" endtime="20201030 15:51:52.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.437" endtime="20201030 15:51:52.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.433" endtime="20201030 15:51:52.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.430" endtime="20201030 15:51:52.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.893" endtime="20201030 15:51:52.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.892" endtime="20201030 15:51:52.462"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.483" endtime="20201030 15:51:52.553"></status>
</kw>
<msg timestamp="20201030 15:51:52.554" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.480" endtime="20201030 15:51:52.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.561" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.557" endtime="20201030 15:51:52.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.563" endtime="20201030 15:51:52.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.473" endtime="20201030 15:51:52.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.468" endtime="20201030 15:51:52.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.586" endtime="20201030 15:51:52.941"></status>
</kw>
<msg timestamp="20201030 15:51:52.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036539292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037706014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.583" endtime="20201030 15:51:52.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036539292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037706014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.950" endtime="20201030 15:51:52.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.968" endtime="20201030 15:51:52.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.576" endtime="20201030 15:51:52.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.571" endtime="20201030 15:51:52.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.984" level="INFO">${PHILIP_RES} = [{'diff': 0.001166722000000002}, {'diff': 0.0011661799999999958}, {'diff': 0.001167208000000003}, {'diff': 0.0011661109999999975}, {'diff': 0.0011671519999999977}, {'diff': 0.0011661809999999953}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:52.977" endtime="20201030 15:51:52.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.995" level="INFO">${RESULT} = {'diff': [0.001166722000000002, 0.0011661799999999958, 0.001167208000000003, 0.0011661109999999975, 0.0011671519999999977, 0.0011661809999999953, 0.0011672639999999943, 0.0011661390000000035, 0.001167...</msg>
<status status="PASS" starttime="20201030 15:51:52.986" endtime="20201030 15:51:52.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.005" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.003" endtime="20201030 15:51:53.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.011" level="INFO">VALUE: [0.001166722000000002, 0.0011661799999999958, 0.001167208000000003, 0.0011661109999999975, 0.0011671519999999977, 0.0011661809999999953, 0.0011672639999999943, 0.0011661390000000035, 0.001167333999999999, 0.0011661810000000022, 0.0011673619999999982, 0.001166153000000003, 0.0011672500000000016, 0.0011660689999999987, 0.0011671799999999968, 0.001166041999999999, 0.0011674310000000035, 0.0011661800000000028, 0.0011673609999999987, 0.0011660829999999983, 0.001167236000000002, 0.001166179999999989, 0.0011673330000000065, 0.0011661109999999975, 0.0011673330000000065, 0.0011663890000000038, 0.0011674309999999966, 0.0011662089999999875, 0.0011673610000000056, 0.0011663749999999973, 0.0011674590000000096, 0.001166305999999992, 0.0011672779999999938, 0.0011661800000000028, 0.0011674159999999906, 0.001166153000000003, 0.0011674859999999954, 0.0011663609999999908, 0.0011673619999999912, 0.0011662090000000014, 0.0011673749999999983, 0.0011662640000000002, 0.0011675270000000015, 0.0011663330000000055, 0.0011674029999999974, 0.0011662370000000005, 0.0011674859999999954, 0.0011663469999999981, 0.0011673330000000065, 0.0011662499999999937]</msg>
<status status="PASS" starttime="20201030 15:51:53.008" endtime="20201030 15:51:53.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.997" endtime="20201030 15:51:53.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.023" endtime="20201030 15:51:53.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.019" endtime="20201030 15:51:53.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.016" endtime="20201030 15:51:53.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.464" endtime="20201030 15:51:53.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.463" endtime="20201030 15:51:53.048"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.070" endtime="20201030 15:51:53.142"></status>
</kw>
<msg timestamp="20201030 15:51:53.143" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.067" endtime="20201030 15:51:53.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.150" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.145" endtime="20201030 15:51:53.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.152" endtime="20201030 15:51:53.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.059" endtime="20201030 15:51:53.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.054" endtime="20201030 15:51:53.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.175" endtime="20201030 15:51:53.515"></status>
</kw>
<msg timestamp="20201030 15:51:53.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036660736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037874181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.172" endtime="20201030 15:51:53.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036660736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037874181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.525" endtime="20201030 15:51:53.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.543" endtime="20201030 15:51:53.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.165" endtime="20201030 15:51:53.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.160" endtime="20201030 15:51:53.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.559" level="INFO">${PHILIP_RES} = [{'diff': 0.0012134450000000005}, {'diff': 0.001213542000000005}, {'diff': 0.0012145689999999987}, {'diff': 0.0012136390000000025}, {'diff': 0.0012178060000000018}, {'diff': 0.0012145139999999999}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:53.552" endtime="20201030 15:51:53.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.568" level="INFO">${RESULT} = {'diff': [0.0012134450000000005, 0.001213542000000005, 0.0012145689999999987, 0.0012136390000000025, 0.0012178060000000018, 0.0012145139999999999, 0.0012135839999999967, 0.0012177639999999962, 0.00121...</msg>
<status status="PASS" starttime="20201030 15:51:53.561" endtime="20201030 15:51:53.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.579" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.576" endtime="20201030 15:51:53.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.584" level="INFO">VALUE: [0.0012134450000000005, 0.001213542000000005, 0.0012145689999999987, 0.0012136390000000025, 0.0012178060000000018, 0.0012145139999999999, 0.0012135839999999967, 0.0012177639999999962, 0.0012146810000000022, 0.0012134869999999992, 0.001217415999999999, 0.001214431000000002, 0.0012134720000000002, 0.0012175000000000033, 0.0012145139999999999, 0.0012133469999999966, 0.0012175130000000034, 0.001214237, 0.0012133060000000043, 0.0012175410000000025, 0.0012144719999999942, 0.001213443999999994, 0.0012176519999999996, 0.0012144860000000007, 0.0012133750000000026, 0.0012175830000000082, 0.0012144169999999954, 0.0012134580000000006, 0.0012175549999999952, 0.0012144860000000007, 0.0012134450000000074, 0.0012177500000000036, 0.0012144860000000007, 0.0012134170000000083, 0.0012174719999999972, 0.0012143190000000054, 0.001213402999999988, 0.001217625, 0.0012144719999999942, 0.0012133750000000026, 0.0012175970000000008, 0.0012141800000000091, 0.001213278000000012, 0.0012174859999999899, 0.001214332999999998, 0.001213444000000008, 0.001217652999999999, 0.0012144299999999886, 0.0012134859999999997, 0.0012176950000000047]</msg>
<status status="PASS" starttime="20201030 15:51:53.581" endtime="20201030 15:51:53.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.570" endtime="20201030 15:51:53.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.596" endtime="20201030 15:51:53.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.592" endtime="20201030 15:51:53.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.590" endtime="20201030 15:51:53.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.050" endtime="20201030 15:51:53.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.049" endtime="20201030 15:51:53.621"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.645" endtime="20201030 15:51:53.721"></status>
</kw>
<msg timestamp="20201030 15:51:53.723" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.640" endtime="20201030 15:51:53.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.729" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.725" endtime="20201030 15:51:53.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.731" endtime="20201030 15:51:53.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.632" endtime="20201030 15:51:53.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.627" endtime="20201030 15:51:53.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.754" endtime="20201030 15:51:54.105"></status>
</kw>
<msg timestamp="20201030 15:51:54.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0417045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:53.751" endtime="20201030 15:51:54.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0417045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:54.115" endtime="20201030 15:51:54.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.133" endtime="20201030 15:51:54.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.744" endtime="20201030 15:51:54.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.739" endtime="20201030 15:51:54.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.149" level="INFO">${PHILIP_RES} = [{'diff': 0.0012626249999999964}, {'diff': 0.0012631249999999969}, {'diff': 0.0012630000000000002}, {'diff': 0.0012630139999999998}, {'diff': 0.0012630829999999982}, {'diff': 0.0012630689999999986}, {...</msg>
<status status="PASS" starttime="20201030 15:51:54.141" endtime="20201030 15:51:54.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.158" level="INFO">${RESULT} = {'diff': [0.0012626249999999964, 0.0012631249999999969, 0.0012630000000000002, 0.0012630139999999998, 0.0012630829999999982, 0.0012630689999999986, 0.0012630000000000002, 0.0012631250000000038, 0.0012...</msg>
<status status="PASS" starttime="20201030 15:51:54.151" endtime="20201030 15:51:54.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.168" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.166" endtime="20201030 15:51:54.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.174" level="INFO">VALUE: [0.0012626249999999964, 0.0012631249999999969, 0.0012630000000000002, 0.0012630139999999998, 0.0012630829999999982, 0.0012630689999999986, 0.0012630000000000002, 0.0012631250000000038, 0.0012631109999999973, 0.0012630969999999977, 0.0012629170000000023, 0.0012629450000000014, 0.0012631109999999973, 0.001263027, 0.0012628889999999962, 0.0012630279999999994, 0.0012630000000000072, 0.0012628470000000114, 0.0012629859999999937, 0.0012628620000000035, 0.0012630980000000042, 0.001263153000000003, 0.001263153000000003, 0.0012633189999999989, 0.0012632090000000012, 0.00126312499999999, 0.0012630140000000067, 0.0012629299999999954, 0.0012630000000000002, 0.0012628469999999975, 0.001262750000000007, 0.0012625269999999994, 0.0012625700000000045, 0.0012626109999999968, 0.001262721999999994, 0.0012629579999999946, 0.0012628749999999966, 0.0012626949999999942, 0.0012628890000000031, 0.0012629579999999946, 0.0012629860000000076, 0.001262832999999991, 0.001262749999999993, 0.0012639029999999968, 0.001262778000000006, 0.0012627779999999922, 0.0012627919999999987, 0.0012629029999999958, 0.0012626949999999942, 0.0012627770000000066]</msg>
<status status="PASS" starttime="20201030 15:51:54.171" endtime="20201030 15:51:54.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.160" endtime="20201030 15:51:54.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.188" endtime="20201030 15:51:54.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.182" endtime="20201030 15:51:54.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.179" endtime="20201030 15:51:54.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.623" endtime="20201030 15:51:54.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.622" endtime="20201030 15:51:54.213"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.235" endtime="20201030 15:51:54.312"></status>
</kw>
<msg timestamp="20201030 15:51:54.314" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.231" endtime="20201030 15:51:54.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.320" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.316" endtime="20201030 15:51:54.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.322" endtime="20201030 15:51:54.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.224" endtime="20201030 15:51:54.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.219" endtime="20201030 15:51:54.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.345" endtime="20201030 15:51:54.696"></status>
</kw>
<msg timestamp="20201030 15:51:54.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036730042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038040986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.342" endtime="20201030 15:51:54.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036730042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038040986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.705" endtime="20201030 15:51:54.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.723" endtime="20201030 15:51:54.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.335" endtime="20201030 15:51:54.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.330" endtime="20201030 15:51:54.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.739" level="INFO">${PHILIP_RES} = [{'diff': 0.0013109440000000014}, {'diff': 0.001310389000000002}, {'diff': 0.0013163190000000033}, {'diff': 0.0013110420000000053}, {'diff': 0.0013103330000000038}, {'diff': 0.0013161949999999992}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:54.731" endtime="20201030 15:51:54.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.749" level="INFO">${RESULT} = {'diff': [0.0013109440000000014, 0.001310389000000002, 0.0013163190000000033, 0.0013110420000000053, 0.0013103330000000038, 0.0013161949999999992, 0.001311167000000002, 0.0013103050000000047, 0.001316...</msg>
<status status="PASS" starttime="20201030 15:51:54.741" endtime="20201030 15:51:54.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.760" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.757" endtime="20201030 15:51:54.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.765" level="INFO">VALUE: [0.0013109440000000014, 0.001310389000000002, 0.0013163190000000033, 0.0013110420000000053, 0.0013103330000000038, 0.0013161949999999992, 0.001311167000000002, 0.0013103050000000047, 0.0013161250000000013, 0.0013110699999999975, 0.0013104170000000012, 0.001316167, 0.0013110699999999975, 0.0013102919999999976, 0.0013160279999999969, 0.0013110549999999985, 0.0013102920000000046, 0.0013159299999999999, 0.0013108610000000034, 0.0013100969999999962, 0.0013160970000000022, 0.0013111809999999946, 0.0013101940000000006, 0.0013160139999999904, 0.0013108610000000104, 0.001310180000000008, 0.0013161249999999874, 0.0013109440000000083, 0.0013102219999999998, 0.0013161109999999948, 0.0013110839999999901, 0.001310277999999998, 0.0013161110000000087, 0.0013110550000000054, 0.0013102769999999986, 0.0013161250000000013, 0.0013111660000000025, 0.0013103470000000034, 0.0013161379999999945, 0.0013109440000000083, 0.0013102089999999927, 0.0013161379999999945, 0.0013110279999999919, 0.0013101940000000006, 0.0013160140000000042, 0.0013108339999999968, 0.0013100549999999905, 0.0013159590000000054, 0.001310875000000003, 0.0013100000000000056]</msg>
<status status="PASS" starttime="20201030 15:51:54.762" endtime="20201030 15:51:54.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.751" endtime="20201030 15:51:54.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.778" endtime="20201030 15:51:54.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.773" endtime="20201030 15:51:54.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.771" endtime="20201030 15:51:54.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.215" endtime="20201030 15:51:54.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.214" endtime="20201030 15:51:54.803"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.825" endtime="20201030 15:51:54.906"></status>
</kw>
<msg timestamp="20201030 15:51:54.908" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.822" endtime="20201030 15:51:54.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.914" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.910" endtime="20201030 15:51:54.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.916" endtime="20201030 15:51:54.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.814" endtime="20201030 15:51:54.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.809" endtime="20201030 15:51:54.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.939" endtime="20201030 15:51:55.290"></status>
</kw>
<msg timestamp="20201030 15:51:55.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037929056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039289431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.936" endtime="20201030 15:51:55.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037929056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039289431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.299" endtime="20201030 15:51:55.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.317" endtime="20201030 15:51:55.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.929" endtime="20201030 15:51:55.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.924" endtime="20201030 15:51:55.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.333" level="INFO">${PHILIP_RES} = [{'diff': 0.001360374999999997}, {'diff': 0.0013615280000000007}, {'diff': 0.0013604310000000022}, {'diff': 0.0013614719999999955}, {'diff': 0.0013603339999999978}, {'diff': 0.0013615829999999995}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:55.325" endtime="20201030 15:51:55.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.344" level="INFO">${RESULT} = {'diff': [0.001360374999999997, 0.0013615280000000007, 0.0013604310000000022, 0.0013614719999999955, 0.0013603339999999978, 0.0013615829999999995, 0.0013602779999999995, 0.001361486000000002, 0.001361...</msg>
<status status="PASS" starttime="20201030 15:51:55.335" endtime="20201030 15:51:55.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.354" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.352" endtime="20201030 15:51:55.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.360" level="INFO">VALUE: [0.001360374999999997, 0.0013615280000000007, 0.0013604310000000022, 0.0013614719999999955, 0.0013603339999999978, 0.0013615829999999995, 0.0013602779999999995, 0.001361486000000002, 0.0013614309999999963, 0.0013615699999999994, 0.0013605140000000002, 0.0013615140000000012, 0.0013602360000000008, 0.0013614029999999971, 0.0013602500000000003, 0.0013613479999999983, 0.0013601389999999963, 0.0013613059999999996, 0.0013601530000000028, 0.0013613469999999989, 0.0013602360000000008, 0.0013614300000000107, 0.0013601380000000107, 0.0013622499999999954, 0.0013604170000000027, 0.0013613189999999997, 0.0013601949999999946, 0.001361514000000008, 0.0013603480000000112, 0.0013614439999999894, 0.0013602780000000064, 0.001361374999999998, 0.0013602230000000076, 0.001361305000000007, 0.001360291999999999, 0.0013615700000000064, 0.0013603189999999987, 0.0013613049999999932, 0.0013602360000000008, 0.0013614029999999971, 0.001360305000000006, 0.0013613330000000062, 0.0013600840000000114, 0.0013611669999999965, 0.0013601249999999898, 0.0013613469999999989, 0.0013603060000000056, 0.001361292, 0.0013601520000000034, 0.0013614170000000037]</msg>
<status status="PASS" starttime="20201030 15:51:55.357" endtime="20201030 15:51:55.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.346" endtime="20201030 15:51:55.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.372" endtime="20201030 15:51:55.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.368" endtime="20201030 15:51:55.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.365" endtime="20201030 15:51:55.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.805" endtime="20201030 15:51:55.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.804" endtime="20201030 15:51:55.397"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.420" endtime="20201030 15:51:55.502"></status>
</kw>
<msg timestamp="20201030 15:51:55.503" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.416" endtime="20201030 15:51:55.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.509" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.505" endtime="20201030 15:51:55.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.512" endtime="20201030 15:51:55.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.409" endtime="20201030 15:51:55.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.403" endtime="20201030 15:51:55.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.535" endtime="20201030 15:51:55.883"></status>
</kw>
<msg timestamp="20201030 15:51:55.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037420583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038832111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.532" endtime="20201030 15:51:55.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037420583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038832111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.892" endtime="20201030 15:51:55.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.910" endtime="20201030 15:51:55.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.525" endtime="20201030 15:51:55.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.520" endtime="20201030 15:51:55.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.926" level="INFO">${PHILIP_RES} = [{'diff': 0.0014115280000000022}, {'diff': 0.0014114449999999973}, {'diff': 0.0014163479999999978}, {'diff': 0.0014115280000000022}, {'diff': 0.0014113749999999994}, {'diff': 0.0014162640000000004}, {...</msg>
<status status="PASS" starttime="20201030 15:51:55.919" endtime="20201030 15:51:55.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.935" level="INFO">${RESULT} = {'diff': [0.0014115280000000022, 0.0014114449999999973, 0.0014163479999999978, 0.0014115280000000022, 0.0014113749999999994, 0.0014162640000000004, 0.0014113610000000068, 0.0014114440000000048, 0.0014...</msg>
<status status="PASS" starttime="20201030 15:51:55.928" endtime="20201030 15:51:55.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.946" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.943" endtime="20201030 15:51:55.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.951" level="INFO">VALUE: [0.0014115280000000022, 0.0014114449999999973, 0.0014163479999999978, 0.0014115280000000022, 0.0014113749999999994, 0.0014162640000000004, 0.0014113610000000068, 0.0014114440000000048, 0.0014164310000000027, 0.0014115140000000026, 0.0014115280000000022, 0.0014167500000000013, 0.0014118889999999995, 0.001411763999999996, 0.001416764000000001, 0.0014118610000000004, 0.0014117499999999963, 0.0014166109999999982, 0.0014117079999999976, 0.0014117500000000033, 0.0014166389999999973, 0.0014116529999999988, 0.001411611000000007, 0.0014166799999999896, 0.001411694000000005, 0.0014115410000000023, 0.0014163749999999975, 0.0014116249999999997, 0.0014114729999999964, 0.0014164859999999946, 0.0014115839999999935, 0.0014115559999999944, 0.0014166250000000047, 0.0014116529999999988, 0.0014114440000000117, 0.001416582999999999, 0.0014117780000000024, 0.0014118340000000007, 0.0014167360000000018, 0.0014116249999999997, 0.0014117640000000098, 0.0014166109999999982, 0.001411792000000009, 0.0014115970000000005, 0.0014166800000000035, 0.0014118330000000012, 0.0014116390000000062, 0.0014166530000000038, 0.001411820000000008, 0.0014114860000000035]</msg>
<status status="PASS" starttime="20201030 15:51:55.948" endtime="20201030 15:51:55.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.937" endtime="20201030 15:51:55.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.963" endtime="20201030 15:51:55.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.959" endtime="20201030 15:51:55.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.956" endtime="20201030 15:51:55.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.399" endtime="20201030 15:51:55.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.398" endtime="20201030 15:51:55.988"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.010" endtime="20201030 15:51:56.097"></status>
</kw>
<msg timestamp="20201030 15:51:56.098" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.007" endtime="20201030 15:51:56.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.104" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.100" endtime="20201030 15:51:56.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.106" endtime="20201030 15:51:56.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.000" endtime="20201030 15:51:56.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.994" endtime="20201030 15:51:56.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.130" endtime="20201030 15:51:56.470"></status>
</kw>
<msg timestamp="20201030 15:51:56.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038243806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039707792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.126" endtime="20201030 15:51:56.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038243806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039707792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.479" endtime="20201030 15:51:56.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.497" endtime="20201030 15:51:56.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.119" endtime="20201030 15:51:56.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.115" endtime="20201030 15:51:56.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.513" level="INFO">${PHILIP_RES} = [{'diff': 0.0014639860000000005}, {'diff': 0.0014649310000000026}, {'diff': 0.0014638609999999969}, {'diff': 0.001463901999999996}, {'diff': 0.0014639300000000022}, {'diff': 0.001463777999999999}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:56.505" endtime="20201030 15:51:56.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.522" level="INFO">${RESULT} = {'diff': [0.0014639860000000005, 0.0014649310000000026, 0.0014638609999999969, 0.001463901999999996, 0.0014639300000000022, 0.001463777999999999, 0.001463917000000002, 0.001464, 0.0014639030000000025,...</msg>
<status status="PASS" starttime="20201030 15:51:56.515" endtime="20201030 15:51:56.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.533" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.530" endtime="20201030 15:51:56.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.538" level="INFO">VALUE: [0.0014639860000000005, 0.0014649310000000026, 0.0014638609999999969, 0.001463901999999996, 0.0014639300000000022, 0.001463777999999999, 0.001463917000000002, 0.001464, 0.0014639030000000025, 0.0014639310000000016, 0.0014638609999999969, 0.0014639580000000013, 0.0014639589999999938, 0.0014640409999999993, 0.001464, 0.001464097999999997, 0.0014638890000000099, 0.001463999999999993, 0.0014641379999999898, 0.0014642640000000068, 0.0014641950000000015, 0.001464097999999997, 0.001464082999999991, 0.0014642369999999932, 0.0014640689999999984, 0.0014639449999999943, 0.0014640699999999979, 0.0014641250000000106, 0.001463888999999996, 0.0014637499999999998, 0.0014637079999999941, 0.0014638609999999969, 0.0014638609999999969, 0.001463888999999996, 0.0014637920000000054, 0.00146362500000001, 0.0014637920000000054, 0.0014637640000000063, 0.0014637220000000006, 0.0014638750000000034, 0.0014638750000000034, 0.0014639300000000022, 0.0014634999999999926, 0.0014636530000000092, 0.0014639169999999951, 0.0014636800000000089, 0.0014637640000000063, 0.0014638470000000042, 0.001463568999999998, 0.0014637090000000075]</msg>
<status status="PASS" starttime="20201030 15:51:56.535" endtime="20201030 15:51:56.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.524" endtime="20201030 15:51:56.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.552" endtime="20201030 15:51:56.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.546" endtime="20201030 15:51:56.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.543" endtime="20201030 15:51:56.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.990" endtime="20201030 15:51:56.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.989" endtime="20201030 15:51:56.577"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.599" endtime="20201030 15:51:56.687"></status>
</kw>
<msg timestamp="20201030 15:51:56.688" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.595" endtime="20201030 15:51:56.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.694" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.690" endtime="20201030 15:51:56.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.696" endtime="20201030 15:51:56.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.588" endtime="20201030 15:51:56.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.583" endtime="20201030 15:51:56.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.720" endtime="20201030 15:51:57.059"></status>
</kw>
<msg timestamp="20201030 15:51:57.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038290722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.717" endtime="20201030 15:51:57.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038290722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.068" endtime="20201030 15:51:57.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.086" endtime="20201030 15:51:57.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.709" endtime="20201030 15:51:57.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.705" endtime="20201030 15:51:57.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.102" level="INFO">${PHILIP_RES} = [{'diff': 0.0015163470000000012}, {'diff': 0.0015161940000000054}, {'diff': 0.0015212220000000026}, {'diff': 0.0015164579999999983}, {'diff': 0.0015160419999999952}, {'diff': 0.0015211110000000055}, {...</msg>
<status status="PASS" starttime="20201030 15:51:57.095" endtime="20201030 15:51:57.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.113" level="INFO">${RESULT} = {'diff': [0.0015163470000000012, 0.0015161940000000054, 0.0015212220000000026, 0.0015164579999999983, 0.0015160419999999952, 0.0015211110000000055, 0.0015161529999999993, 0.0015161250000000001, 0.0015...</msg>
<status status="PASS" starttime="20201030 15:51:57.104" endtime="20201030 15:51:57.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.123" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.121" endtime="20201030 15:51:57.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.129" level="INFO">VALUE: [0.0015163470000000012, 0.0015161940000000054, 0.0015212220000000026, 0.0015164579999999983, 0.0015160419999999952, 0.0015211110000000055, 0.0015161529999999993, 0.0015161250000000001, 0.0015211809999999965, 0.001516389, 0.0015161250000000001, 0.0015213050000000006, 0.001516389, 0.0015160700000000013, 0.0015208059999999995, 0.0015159580000000047, 0.0015160280000000026, 0.001521069, 0.001516125000000007, 0.001515902999999999, 0.0015209439999999963, 0.0015161110000000005, 0.0015160270000000031, 0.0015210560000000067, 0.0015162090000000045, 0.0015161110000000005, 0.0015209440000000102, 0.0015161809999999915, 0.0015161389999999997, 0.0015211390000000047, 0.0015161939999999985, 0.001516096999999994, 0.0015211249999999982, 0.0015161530000000062, 0.0015159299999999987, 0.0015211390000000047, 0.0015162360000000041, 0.001516013999999996, 0.0015211110000000055, 0.0015160700000000082, 0.0015160560000000017, 0.001520986000000002, 0.001516125000000007, 0.0015158619999999928, 0.0015210280000000076, 0.001516096999999994, 0.0015161800000000059, 0.0015212500000000018, 0.001516417000000006, 0.0015163750000000004]</msg>
<status status="PASS" starttime="20201030 15:51:57.126" endtime="20201030 15:51:57.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.115" endtime="20201030 15:51:57.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.141" endtime="20201030 15:51:57.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.137" endtime="20201030 15:51:57.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.134" endtime="20201030 15:51:57.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.579" endtime="20201030 15:51:57.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.578" endtime="20201030 15:51:57.166"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.188" endtime="20201030 15:51:57.278"></status>
</kw>
<msg timestamp="20201030 15:51:57.280" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.185" endtime="20201030 15:51:57.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.286" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.282" endtime="20201030 15:51:57.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.288" endtime="20201030 15:51:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.177" endtime="20201030 15:51:57.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.172" endtime="20201030 15:51:57.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.311" endtime="20201030 15:51:57.663"></status>
</kw>
<msg timestamp="20201030 15:51:57.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036803417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038373181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.308" endtime="20201030 15:51:57.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036803417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038373181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.672" endtime="20201030 15:51:57.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.690" endtime="20201030 15:51:57.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.301" endtime="20201030 15:51:57.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.296" endtime="20201030 15:51:57.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.705" level="INFO">${PHILIP_RES} = [{'diff': 0.0015697640000000013}, {'diff': 0.0015692500000000012}, {'diff': 0.00157032}, {'diff': 0.0015692780000000003}, {'diff': 0.0015707359999999962}, {'diff': 0.0015695699999999993}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:57.698" endtime="20201030 15:51:57.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.716" level="INFO">${RESULT} = {'diff': [0.0015697640000000013, 0.0015692500000000012, 0.00157032, 0.0015692780000000003, 0.0015707359999999962, 0.0015695699999999993, 0.0015705280000000016, 0.0015693750000000048, 0.001570542000000...</msg>
<status status="PASS" starttime="20201030 15:51:57.707" endtime="20201030 15:51:57.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.726" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.724" endtime="20201030 15:51:57.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.732" level="INFO">VALUE: [0.0015697640000000013, 0.0015692500000000012, 0.00157032, 0.0015692780000000003, 0.0015707359999999962, 0.0015695699999999993, 0.0015705280000000016, 0.0015693750000000048, 0.0015705420000000012, 0.0015694170000000035, 0.0015706390000000056, 0.0015696109999999985, 0.0015706389999999987, 0.0015694440000000032, 0.0015707090000000035, 0.0015695279999999937, 0.0015705830000000004, 0.0015704579999999968, 0.0015706939999999975, 0.0015696669999999968, 0.001570834000000007, 0.001569416000000004, 0.0015709159999999917, 0.0015695280000000006, 0.0015705700000000072, 0.001569485999999995, 0.0015706810000000043, 0.0015693610000000052, 0.0015705689999999939, 0.00156943100000001, 0.0015708479999999997, 0.0015694170000000035, 0.0015706109999999995, 0.001569819, 0.0015707499999999958, 0.0015695689999999929, 0.001570806000000008, 0.001569319999999999, 0.001570513999999995, 0.001569305000000007, 0.0015706389999999987, 0.0015695690000000068, 0.0015706659999999983, 0.0015695280000000006, 0.0015709299999999982, 0.0015699029999999975, 0.0015709730000000033, 0.0015697360000000021, 0.0015707640000000023, 0.0015695700000000062]</msg>
<status status="PASS" starttime="20201030 15:51:57.729" endtime="20201030 15:51:57.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.718" endtime="20201030 15:51:57.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.744" endtime="20201030 15:51:57.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.740" endtime="20201030 15:51:57.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.737" endtime="20201030 15:51:57.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.168" endtime="20201030 15:51:57.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.167" endtime="20201030 15:51:57.769"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.791" endtime="20201030 15:51:57.885"></status>
</kw>
<msg timestamp="20201030 15:51:57.886" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.788" endtime="20201030 15:51:57.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.892" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.888" endtime="20201030 15:51:57.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.894" endtime="20201030 15:51:57.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.781" endtime="20201030 15:51:57.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.776" endtime="20201030 15:51:57.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.926" endtime="20201030 15:51:58.268"></status>
</kw>
<msg timestamp="20201030 15:51:58.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037453347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039078153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.923" endtime="20201030 15:51:58.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037453347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039078153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.278" endtime="20201030 15:51:58.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.296" endtime="20201030 15:51:58.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.907" endtime="20201030 15:51:58.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.902" endtime="20201030 15:51:58.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.312" level="INFO">${PHILIP_RES} = [{'diff': 0.0016248059999999995}, {'diff': 0.0016251810000000033}, {'diff': 0.0016250559999999997}, {'diff': 0.0016298889999999955}, {'diff': 0.0016259580000000037}, {'diff': 0.0016249440000000032}, {...</msg>
<status status="PASS" starttime="20201030 15:51:58.304" endtime="20201030 15:51:58.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.321" level="INFO">${RESULT} = {'diff': [0.0016248059999999995, 0.0016251810000000033, 0.0016250559999999997, 0.0016298889999999955, 0.0016259580000000037, 0.0016249440000000032, 0.001630277999999999, 0.0016260700000000003, 0.00162...</msg>
<status status="PASS" starttime="20201030 15:51:58.314" endtime="20201030 15:51:58.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.331" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.329" endtime="20201030 15:51:58.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.337" level="INFO">VALUE: [0.0016248059999999995, 0.0016251810000000033, 0.0016250559999999997, 0.0016298889999999955, 0.0016259580000000037, 0.0016249440000000032, 0.001630277999999999, 0.0016260700000000003, 0.0016248889999999974, 0.001630223, 0.0016255140000000015, 0.0016248329999999991, 0.0016297499999999993, 0.0016255829999999999, 0.0016244860000000014, 0.0016297359999999927, 0.0016256519999999913, 0.001624722000000009, 0.0016298329999999972, 0.0016254579999999963, 0.0016246659999999968, 0.001629903000000002, 0.0016257909999999876, 0.0016248749999999978, 0.0016301110000000035, 0.0016259590000000101, 0.0016249589999999953, 0.0016299719999999934, 0.0016258190000000006, 0.0016250690000000068, 0.0016298889999999955, 0.0016258329999999932, 0.0016249719999999884, 0.0016298750000000028, 0.0016255560000000002, 0.0016247360000000016, 0.0016299440000000082, 0.0016258610000000062, 0.0016248749999999978, 0.0016299310000000011, 0.0016257500000000091, 0.0016248609999999913, 0.0016299020000000025, 0.0016257219999999961, 0.0016248060000000064, 0.0016303339999999972, 0.0016260000000000024, 0.0016251389999999977, 0.0016302639999999924, 0.0016261109999999995]</msg>
<status status="PASS" starttime="20201030 15:51:58.334" endtime="20201030 15:51:58.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.323" endtime="20201030 15:51:58.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.349" endtime="20201030 15:51:58.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.345" endtime="20201030 15:51:58.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.342" endtime="20201030 15:51:58.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.772" endtime="20201030 15:51:58.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.771" endtime="20201030 15:51:58.374"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.396" endtime="20201030 15:51:58.494"></status>
</kw>
<msg timestamp="20201030 15:51:58.495" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.393" endtime="20201030 15:51:58.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.502" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.497" endtime="20201030 15:51:58.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.504" endtime="20201030 15:51:58.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.385" endtime="20201030 15:51:58.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.380" endtime="20201030 15:51:58.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.528" endtime="20201030 15:51:58.868"></status>
</kw>
<msg timestamp="20201030 15:51:58.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038463931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040142903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.524" endtime="20201030 15:51:58.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038463931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040142903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.877" endtime="20201030 15:51:58.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.895" endtime="20201030 15:51:58.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.517" endtime="20201030 15:51:58.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.512" endtime="20201030 15:51:58.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.911" level="INFO">${PHILIP_RES} = [{'diff': 0.0016789720000000008}, {'diff': 0.0016788049999999985}, {'diff': 0.001680000000000001}, {'diff': 0.0016800140000000005}, {'diff': 0.001679917000000003}, {'diff': 0.0016799029999999965}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:58.904" endtime="20201030 15:51:58.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.920" level="INFO">${RESULT} = {'diff': [0.0016789720000000008, 0.0016788049999999985, 0.001680000000000001, 0.0016800140000000005, 0.001679917000000003, 0.0016799029999999965, 0.0016799030000000034, 0.0016798329999999986, 0.001679...</msg>
<status status="PASS" starttime="20201030 15:51:58.913" endtime="20201030 15:51:58.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.931" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.929" endtime="20201030 15:51:58.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.936" level="INFO">VALUE: [0.0016789720000000008, 0.0016788049999999985, 0.001680000000000001, 0.0016800140000000005, 0.001679917000000003, 0.0016799029999999965, 0.0016799030000000034, 0.0016798329999999986, 0.0016799580000000022, 0.001679791, 0.0016799859999999944, 0.0016798479999999977, 0.0016797640000000003, 0.0016798610000000047, 0.0016796390000000105, 0.0016797779999999929, 0.0016798469999999982, 0.001679999999999987, 0.0016798479999999977, 0.0016796390000000105, 0.0016797219999999946, 0.001679723000000008, 0.0016799299999999961, 0.0016800419999999927, 0.0016800420000000066, 0.0016800420000000066, 0.001680000000000001, 0.0016799860000000083, 0.0016807920000000004, 0.001679917000000003, 0.0016798890000000039, 0.0016800689999999924, 0.0016799439999999888, 0.0016800549999999997, 0.0016801249999999907, 0.001680013000000008, 0.0016801800000000033, 0.0016801389999999972, 0.0016801800000000033, 0.001681097999999992, 0.001680097999999991, 0.0016800140000000074, 0.0016800700000000057, 0.0016799859999999944, 0.0016798610000000047, 0.0016801250000000045, 0.0016799310000000095, 0.0016799310000000095, 0.0016800139999999936, 0.0016800139999999797]</msg>
<status status="PASS" starttime="20201030 15:51:58.933" endtime="20201030 15:51:58.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.922" endtime="20201030 15:51:58.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.951" endtime="20201030 15:51:58.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.945" endtime="20201030 15:51:58.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.942" endtime="20201030 15:51:58.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.376" endtime="20201030 15:51:58.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.375" endtime="20201030 15:51:58.976"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.998" endtime="20201030 15:51:59.098"></status>
</kw>
<msg timestamp="20201030 15:51:59.099" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.995" endtime="20201030 15:51:59.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.105" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.101" endtime="20201030 15:51:59.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.107" endtime="20201030 15:51:59.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.988" endtime="20201030 15:51:59.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.983" endtime="20201030 15:51:59.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.131" endtime="20201030 15:51:59.472"></status>
</kw>
<msg timestamp="20201030 15:51:59.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037585917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039321208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.127" endtime="20201030 15:51:59.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037585917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039321208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.482" endtime="20201030 15:51:59.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.500" endtime="20201030 15:51:59.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.120" endtime="20201030 15:51:59.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.115" endtime="20201030 15:51:59.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.516" level="INFO">${PHILIP_RES} = [{'diff': 0.001735291}, {'diff': 0.0017354859999999944}, {'diff': 0.0017360420000000001}, {'diff': 0.0017352500000000007}, {'diff': 0.001741223}, {'diff': 0.0017361389999999977}, {'diff': 0.0017351810...</msg>
<status status="PASS" starttime="20201030 15:51:59.508" endtime="20201030 15:51:59.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.526" level="INFO">${RESULT} = {'diff': [0.001735291, 0.0017354859999999944, 0.0017360420000000001, 0.0017352500000000007, 0.001741223, 0.0017361389999999977, 0.0017351810000000023, 0.0017410279999999986, 0.0017359719999999954, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:59.518" endtime="20201030 15:51:59.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.537" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.534" endtime="20201030 15:51:59.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.542" level="INFO">VALUE: [0.001735291, 0.0017354859999999944, 0.0017360420000000001, 0.0017352500000000007, 0.001741223, 0.0017361389999999977, 0.0017351810000000023, 0.0017410279999999986, 0.0017359719999999954, 0.0017352640000000003, 0.001740903000000002, 0.001736014000000001, 0.0017353049999999995, 0.0017410410000000057, 0.0017359720000000023, 0.0017350829999999984, 0.0017408889999999955, 0.001735902999999997, 0.0017352500000000076, 0.001741179999999995, 0.001735985999999995, 0.0017351939999999955, 0.0017410550000000052, 0.0017359730000000018, 0.0017352220000000085, 0.0017408609999999963, 0.0017360000000000014, 0.0017353329999999917, 0.0017410840000000039, 0.001735985999999995, 0.0017352360000000011, 0.0017409440000000082, 0.0017358890000000043, 0.0017352919999999994, 0.0017410689999999979, 0.0017358619999999908, 0.0017350970000000049, 0.0017410560000000047, 0.001736014000000008, 0.0017350279999999996, 0.0017410000000000064, 0.0017360550000000002, 0.001735401999999997, 0.0017414449999999942, 0.0017360829999999994, 0.0017354309999999956, 0.0017410560000000047, 0.0017360560000000136, 0.0017352639999999864, 0.0017409999999999926]</msg>
<status status="PASS" starttime="20201030 15:51:59.539" endtime="20201030 15:51:59.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.528" endtime="20201030 15:51:59.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.554" endtime="20201030 15:51:59.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.550" endtime="20201030 15:51:59.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.548" endtime="20201030 15:51:59.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.979" endtime="20201030 15:51:59.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.977" endtime="20201030 15:51:59.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.752" endtime="20201030 15:51:59.580"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:29.547" endtime="20201030 15:51:59.581" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:50:59.826" endtime="20201030 15:51:59.605"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.787" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:59.802" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:52:01.775" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:59.783" endtime="20201030 15:52:01.777"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.782" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:52:01.779" endtime="20201030 15:52:01.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.780" endtime="20201030 15:52:01.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.793" endtime="20201030 15:52:02.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.789" endtime="20201030 15:52:02.131"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.160" endtime="20201030 15:52:02.175"></status>
</kw>
<msg timestamp="20201030 15:52:02.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.156" endtime="20201030 15:52:02.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.183" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.179" endtime="20201030 15:52:02.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.190" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:02.185" endtime="20201030 15:52:02.190"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:02.150" endtime="20201030 15:52:02.192"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:02.145" endtime="20201030 15:52:02.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.142" endtime="20201030 15:52:02.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:02.204" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:02.203" endtime="20201030 15:52:02.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.196" endtime="20201030 15:52:02.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.141" endtime="20201030 15:52:02.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.139" endtime="20201030 15:52:02.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.208" endtime="20201030 15:52:02.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.136" endtime="20201030 15:52:02.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.214" endtime="20201030 15:52:02.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.132" endtime="20201030 15:52:02.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.777" endtime="20201030 15:52:02.220"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.234" endtime="20201030 15:52:02.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.231" endtime="20201030 15:52:02.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.290" endtime="20201030 15:52:02.305"></status>
</kw>
<msg timestamp="20201030 15:52:02.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.287" endtime="20201030 15:52:02.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.309" endtime="20201030 15:52:02.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.319" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:02.315" endtime="20201030 15:52:02.320"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:02.280" endtime="20201030 15:52:02.322"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:02.273" endtime="20201030 15:52:02.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.271" endtime="20201030 15:52:02.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:02.331" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:02.330" endtime="20201030 15:52:02.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.326" endtime="20201030 15:52:02.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.269" endtime="20201030 15:52:02.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.267" endtime="20201030 15:52:02.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.335" endtime="20201030 15:52:02.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.263" endtime="20201030 15:52:02.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.259" endtime="20201030 15:52:02.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.228" endtime="20201030 15:52:02.342"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.369" endtime="20201030 15:52:02.383"></status>
</kw>
<msg timestamp="20201030 15:52:02.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.365" endtime="20201030 15:52:02.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.387" endtime="20201030 15:52:02.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.393" endtime="20201030 15:52:02.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.356" endtime="20201030 15:52:02.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.350" endtime="20201030 15:52:02.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.416" endtime="20201030 15:52:02.765"></status>
</kw>
<msg timestamp="20201030 15:52:02.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125908833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125925819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.412" endtime="20201030 15:52:02.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125908833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125925819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.775" endtime="20201030 15:52:02.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.793" endtime="20201030 15:52:02.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.405" endtime="20201030 15:52:02.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.401" endtime="20201030 15:52:02.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.811" level="INFO">${RESULT} = [{'diff': 1.6985999999996615e-05}, {'diff': 1.6764000000002444e-05}, {'diff': 1.7125000000006718e-05}, {'diff': 1.713899999999935e-05}, {'diff': 1.6777000000023357e-05}, {'diff': 1.6389000000005538e-0...</msg>
<status status="PASS" starttime="20201030 15:52:02.802" endtime="20201030 15:52:02.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:02.820" level="INFO">${ACCURACY} = {'diff': [1.6985999999996615e-05, 1.6764000000002444e-05, 1.7125000000006718e-05, 1.713899999999935e-05, 1.6777000000023357e-05, 1.6389000000005538e-05, 1.6777999999995075e-05, 1.709800000002093e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:02.813" endtime="20201030 15:52:02.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.831" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:02.829" endtime="20201030 15:52:02.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.836" level="INFO">VALUE: [1.6985999999996615e-05, 1.6764000000002444e-05, 1.7125000000006718e-05, 1.713899999999935e-05, 1.6777000000023357e-05, 1.6389000000005538e-05, 1.6777999999995075e-05, 1.709800000002093e-05, 1.679200000001546e-05, 1.729100000000261e-05, 1.6972000000003984e-05, 1.743099999998443e-05, 1.67769999999956e-05, 1.657000000002129e-05, 1.7305999999994714e-05, 1.659700000000708e-05, 1.7457999999997975e-05, 1.7431000000012187e-05, 1.7278000000009452e-05, 1.6777999999995075e-05, 1.6777999999995075e-05, 1.6777999999995075e-05, 1.6791999999987706e-05, 1.7318999999987872e-05, 1.6944000000018722e-05, 1.713899999999935e-05, 1.6777999999995075e-05, 1.6929999999998335e-05, 1.679200000001546e-05, 1.7305999999994714e-05, 1.6957999999983597e-05, 1.711099999998633e-05, 1.704200000002265e-05, 1.659700000000708e-05, 1.711099999998633e-05, 1.6806000000008092e-05, 1.6569999999993534e-05, 1.694499999999044e-05, 1.7111000000014087e-05, 1.659700000000708e-05, 1.6903000000012547e-05, 1.7278000000009452e-05, 1.6917000000005178e-05, 1.6444000000004344e-05, 1.661099999999971e-05, 1.7292000000002083e-05, 1.6929999999998335e-05, 1.726400000001682e-05, 1.7028000000002264e-05, 1.6596999999979323e-05]</msg>
<status status="PASS" starttime="20201030 15:52:02.833" endtime="20201030 15:52:02.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.822" endtime="20201030 15:52:02.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.849" endtime="20201030 15:52:02.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.845" endtime="20201030 15:52:02.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.843" endtime="20201030 15:52:02.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.346" endtime="20201030 15:52:02.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.345" endtime="20201030 15:52:02.874"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.897" endtime="20201030 15:52:02.911"></status>
</kw>
<msg timestamp="20201030 15:52:02.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.893" endtime="20201030 15:52:02.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.914" endtime="20201030 15:52:02.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.921" endtime="20201030 15:52:02.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.886" endtime="20201030 15:52:02.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.881" endtime="20201030 15:52:02.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.955" endtime="20201030 15:52:03.297"></status>
</kw>
<msg timestamp="20201030 15:52:03.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039019972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03903675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:02.952" endtime="20201030 15:52:03.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039019972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03903675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:03.308" endtime="20201030 15:52:03.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.329" endtime="20201030 15:52:03.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.945" endtime="20201030 15:52:03.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.940" endtime="20201030 15:52:03.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.347" level="INFO">${RESULT} = [{'diff': 1.6778000000002014e-05}, {'diff': 1.6957999999997475e-05}, {'diff': 1.713899999999935e-05}, {'diff': 1.6611999999999183e-05}, {'diff': 1.6736000000003304e-05}, {'diff': 1.744499999999788e-05...</msg>
<status status="PASS" starttime="20201030 15:52:03.338" endtime="20201030 15:52:03.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.357" level="INFO">${ACCURACY} = {'diff': [1.6778000000002014e-05, 1.6957999999997475e-05, 1.713899999999935e-05, 1.6611999999999183e-05, 1.6736000000003304e-05, 1.744499999999788e-05, 1.6778000000002014e-05, 1.693099999999781e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:03.349" endtime="20201030 15:52:03.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.368" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.366" endtime="20201030 15:52:03.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.374" level="INFO">VALUE: [1.6778000000002014e-05, 1.6957999999997475e-05, 1.713899999999935e-05, 1.6611999999999183e-05, 1.6736000000003304e-05, 1.744499999999788e-05, 1.6778000000002014e-05, 1.693099999999781e-05, 1.729100000000261e-05, 1.6792000000001583e-05, 1.745899999999745e-05, 1.662499999999928e-05, 1.711100000000021e-05, 1.6958000000004414e-05, 1.709700000000064e-05, 1.665299999999842e-05, 1.662499999999928e-05, 1.6945000000004318e-05, 1.663899999999885e-05, 1.7277999999995575e-05, 1.713899999999935e-05, 1.679100000000211e-05, 1.7263999999996005e-05, 1.7264000000002944e-05, 1.662499999999928e-05, 1.7278000000002514e-05, 1.6944000000004844e-05, 1.661099999999971e-05, 1.7278000000002514e-05, 1.7291999999995145e-05, 1.6472000000003484e-05, 1.6987000000003027e-05, 1.7278000000002514e-05, 1.7278000000002514e-05, 1.680500000000168e-05, 1.661099999999971e-05, 1.712499999999978e-05, 1.711100000000021e-05, 1.6429999999997835e-05, 1.6792000000001583e-05, 1.6457999999996975e-05, 1.7278000000002514e-05, 1.7278000000002514e-05, 1.7473000000003958e-05, 1.6651999999998945e-05, 1.6957999999997475e-05, 1.7306000000001653e-05, 1.661099999999971e-05, 1.712499999999978e-05, 1.6778000000002014e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.371" endtime="20201030 15:52:03.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.359" endtime="20201030 15:52:03.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.385" endtime="20201030 15:52:03.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.381" endtime="20201030 15:52:03.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.379" endtime="20201030 15:52:03.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.876" endtime="20201030 15:52:03.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.875" endtime="20201030 15:52:03.410"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.432" endtime="20201030 15:52:03.447"></status>
</kw>
<msg timestamp="20201030 15:52:03.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.429" endtime="20201030 15:52:03.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.451" endtime="20201030 15:52:03.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.458" endtime="20201030 15:52:03.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.422" endtime="20201030 15:52:03.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.416" endtime="20201030 15:52:03.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.481" endtime="20201030 15:52:03.820"></status>
</kw>
<msg timestamp="20201030 15:52:03.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039189708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039206681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.477" endtime="20201030 15:52:03.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039189708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039206681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.831" endtime="20201030 15:52:03.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.854" endtime="20201030 15:52:03.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.470" endtime="20201030 15:52:03.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.466" endtime="20201030 15:52:03.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.876" level="INFO">${RESULT} = [{'diff': 1.6973000000003458e-05}, {'diff': 1.7306000000001653e-05}, {'diff': 1.711100000000021e-05}, {'diff': 1.659700000000014e-05}, {'diff': 1.6722000000003734e-05}, {'diff': 1.662499999999928e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:03.865" endtime="20201030 15:52:03.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.890" level="INFO">${ACCURACY} = {'diff': [1.6973000000003458e-05, 1.7306000000001653e-05, 1.711100000000021e-05, 1.659700000000014e-05, 1.6722000000003734e-05, 1.662499999999928e-05, 1.7125000000006718e-05, 1.6625000000006218e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:03.879" endtime="20201030 15:52:03.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.906" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.903" endtime="20201030 15:52:03.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.913" level="INFO">VALUE: [1.6973000000003458e-05, 1.7306000000001653e-05, 1.711100000000021e-05, 1.659700000000014e-05, 1.6722000000003734e-05, 1.662499999999928e-05, 1.7125000000006718e-05, 1.6625000000006218e-05, 1.6957999999997475e-05, 1.7278000000002514e-05, 1.662499999999928e-05, 1.712499999999978e-05, 1.7070000000000973e-05, 1.6763999999995505e-05, 1.744499999999788e-05, 1.661099999999971e-05, 1.668099999999756e-05, 1.7320000000001223e-05, 1.712499999999978e-05, 1.7305999999994714e-05, 1.708300000000107e-05, 1.641699999999774e-05, 1.661099999999971e-05, 1.6943999999997905e-05, 1.7472000000004484e-05, 1.6584000000000043e-05, 1.729100000000261e-05, 1.6777999999995075e-05, 1.6457999999996975e-05, 1.6957999999997475e-05, 1.661099999999971e-05, 1.680500000000168e-05, 1.711100000000021e-05, 1.661099999999971e-05, 1.669499999999713e-05, 1.6958000000004414e-05, 1.697299999999652e-05, 1.7388000000000126e-05, 1.6778000000002014e-05, 1.7014000000002694e-05, 1.6999999999996185e-05, 1.6792000000001583e-05, 1.684700000000039e-05, 1.715299999999892e-05, 1.6625000000006218e-05, 1.7443999999998405e-05, 1.6959000000003888e-05, 1.727700000000304e-05, 1.661099999999971e-05, 1.6945000000004318e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.909" endtime="20201030 15:52:03.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.893" endtime="20201030 15:52:03.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.927" endtime="20201030 15:52:03.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.922" endtime="20201030 15:52:03.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.919" endtime="20201030 15:52:03.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.412" endtime="20201030 15:52:03.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.411" endtime="20201030 15:52:03.954"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.980" endtime="20201030 15:52:03.994"></status>
</kw>
<msg timestamp="20201030 15:52:03.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.976" endtime="20201030 15:52:03.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.998" endtime="20201030 15:52:04.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.005" endtime="20201030 15:52:04.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.968" endtime="20201030 15:52:04.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.961" endtime="20201030 15:52:04.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.028" endtime="20201030 15:52:04.367"></status>
</kw>
<msg timestamp="20201030 15:52:04.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04339725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043413667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:04.024" endtime="20201030 15:52:04.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04339725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043413667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:04.376" endtime="20201030 15:52:04.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.395" endtime="20201030 15:52:04.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.017" endtime="20201030 15:52:04.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.013" endtime="20201030 15:52:04.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.412" level="INFO">${RESULT} = [{'diff': 1.6417000000004678e-05}, {'diff': 1.643099999999731e-05}, {'diff': 1.641699999999774e-05}, {'diff': 1.6457999999996975e-05}, {'diff': 1.695899999999695e-05}, {'diff': 1.6637999999999376e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:04.403" endtime="20201030 15:52:04.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.421" level="INFO">${ACCURACY} = {'diff': [1.6417000000004678e-05, 1.643099999999731e-05, 1.641699999999774e-05, 1.6457999999996975e-05, 1.695899999999695e-05, 1.6637999999999376e-05, 1.6778000000002014e-05, 1.6598000000006552e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:04.414" endtime="20201030 15:52:04.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.432" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.430" endtime="20201030 15:52:04.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.437" level="INFO">VALUE: [1.6417000000004678e-05, 1.643099999999731e-05, 1.641699999999774e-05, 1.6457999999996975e-05, 1.695899999999695e-05, 1.6637999999999376e-05, 1.6778000000002014e-05, 1.6598000000006552e-05, 1.7443999999998405e-05, 1.736100000000046e-05, 1.645899999999645e-05, 1.713899999999935e-05, 1.7263999999996005e-05, 1.6985999999996615e-05, 1.6986000000003554e-05, 1.7458000000004914e-05, 1.6778000000002014e-05, 1.6972000000003984e-05, 1.7278000000002514e-05, 1.6763999999995505e-05, 1.663899999999885e-05, 1.6749999999995935e-05, 1.6444000000004344e-05, 1.6943999999997905e-05, 1.6999999999996185e-05, 1.680500000000168e-05, 1.7111999999999683e-05, 1.6778000000002014e-05, 1.7111999999999683e-05, 1.661099999999971e-05, 1.6749999999995935e-05, 1.6651999999998945e-05, 1.6611000000006648e-05, 1.6792000000001583e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.7277999999995575e-05, 1.6944000000004844e-05, 1.6625000000006218e-05, 1.715299999999892e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.6458000000003914e-05, 1.6792000000001583e-05, 1.6943999999997905e-05, 1.6443999999997405e-05, 1.6943999999997905e-05, 1.662499999999928e-05, 1.712499999999978e-05, 1.6458000000003914e-05]</msg>
<status status="PASS" starttime="20201030 15:52:04.434" endtime="20201030 15:52:04.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.423" endtime="20201030 15:52:04.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.449" endtime="20201030 15:52:04.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.445" endtime="20201030 15:52:04.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.442" endtime="20201030 15:52:04.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.956" endtime="20201030 15:52:04.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.955" endtime="20201030 15:52:04.474"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.497" endtime="20201030 15:52:04.513"></status>
</kw>
<msg timestamp="20201030 15:52:04.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.494" endtime="20201030 15:52:04.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.517" endtime="20201030 15:52:04.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.523" endtime="20201030 15:52:04.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.487" endtime="20201030 15:52:04.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.480" endtime="20201030 15:52:04.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.546" endtime="20201030 15:52:04.882"></status>
</kw>
<msg timestamp="20201030 15:52:04.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041470236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:04.543" endtime="20201030 15:52:04.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041470236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:04.891" endtime="20201030 15:52:04.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.910" endtime="20201030 15:52:04.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.536" endtime="20201030 15:52:04.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.531" endtime="20201030 15:52:04.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.927" level="INFO">${RESULT} = [{'diff': 1.7263999999996005e-05}, {'diff': 1.7264000000002944e-05}, {'diff': 1.695899999999695e-05}, {'diff': 1.6443999999997405e-05}, {'diff': 1.695899999999695e-05}, {'diff': 1.6763999999995505e-05...</msg>
<status status="PASS" starttime="20201030 15:52:04.918" endtime="20201030 15:52:04.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.936" level="INFO">${ACCURACY} = {'diff': [1.7263999999996005e-05, 1.7264000000002944e-05, 1.695899999999695e-05, 1.6443999999997405e-05, 1.695899999999695e-05, 1.6763999999995505e-05, 1.6791999999994645e-05, 1.661099999999971e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:04.929" endtime="20201030 15:52:04.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.947" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.945" endtime="20201030 15:52:04.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.952" level="INFO">VALUE: [1.7263999999996005e-05, 1.7264000000002944e-05, 1.695899999999695e-05, 1.6443999999997405e-05, 1.695899999999695e-05, 1.6763999999995505e-05, 1.6791999999994645e-05, 1.661099999999971e-05, 1.6778000000002014e-05, 1.6625000000006218e-05, 1.7278000000002514e-05, 1.662499999999928e-05, 1.737500000000003e-05, 1.6777999999995075e-05, 1.6443999999997405e-05, 1.654100000000186e-05, 1.676300000000297e-05, 1.6943999999997905e-05, 1.7278000000002514e-05, 1.7278000000002514e-05, 1.679099999999517e-05, 1.729100000000261e-05, 1.7319999999994284e-05, 1.659700000000014e-05, 1.711100000000021e-05, 1.7264000000002944e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.6778000000002014e-05, 1.6763999999995505e-05, 1.7306000000001653e-05, 1.7305999999994714e-05, 1.7457999999997975e-05, 1.711100000000021e-05, 1.681900000000125e-05, 1.7208000000004664e-05, 1.7277999999995575e-05, 1.695899999999695e-05, 1.6778000000002014e-05, 1.7264000000002944e-05, 1.6763999999995505e-05, 1.662499999999928e-05, 1.6944000000004844e-05, 1.7291999999995145e-05, 1.661099999999971e-05, 1.70690000000015e-05, 1.659700000000014e-05, 1.7292000000002083e-05, 1.6444000000004344e-05, 1.695899999999695e-05]</msg>
<status status="PASS" starttime="20201030 15:52:04.949" endtime="20201030 15:52:04.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.938" endtime="20201030 15:52:04.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.965" endtime="20201030 15:52:04.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.960" endtime="20201030 15:52:04.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.957" endtime="20201030 15:52:04.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.476" endtime="20201030 15:52:04.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.475" endtime="20201030 15:52:04.991"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.013" endtime="20201030 15:52:05.028"></status>
</kw>
<msg timestamp="20201030 15:52:05.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.010" endtime="20201030 15:52:05.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.031" endtime="20201030 15:52:05.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.037" endtime="20201030 15:52:05.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.003" endtime="20201030 15:52:05.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.997" endtime="20201030 15:52:05.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.060" endtime="20201030 15:52:05.398"></status>
</kw>
<msg timestamp="20201030 15:52:05.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039667528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039684819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.057" endtime="20201030 15:52:05.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039667528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039684819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.407" endtime="20201030 15:52:05.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.426" endtime="20201030 15:52:05.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.050" endtime="20201030 15:52:05.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.045" endtime="20201030 15:52:05.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.443" level="INFO">${RESULT} = [{'diff': 1.729100000000261e-05}, {'diff': 1.694499999999738e-05}, {'diff': 1.6971999999997045e-05}, {'diff': 1.6943999999997905e-05}, {'diff': 1.7111999999999683e-05}, {'diff': 1.6764000000002444e-05...</msg>
<status status="PASS" starttime="20201030 15:52:05.434" endtime="20201030 15:52:05.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.454" level="INFO">${ACCURACY} = {'diff': [1.729100000000261e-05, 1.694499999999738e-05, 1.6971999999997045e-05, 1.6943999999997905e-05, 1.7111999999999683e-05, 1.6764000000002444e-05, 1.679100000000211e-05, 1.668099999999756e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:05.445" endtime="20201030 15:52:05.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.465" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.462" endtime="20201030 15:52:05.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.470" level="INFO">VALUE: [1.729100000000261e-05, 1.694499999999738e-05, 1.6971999999997045e-05, 1.6943999999997905e-05, 1.7111999999999683e-05, 1.6764000000002444e-05, 1.679100000000211e-05, 1.668099999999756e-05, 1.693099999999781e-05, 1.658300000000057e-05, 1.6431000000004248e-05, 1.6459000000003388e-05, 1.6943999999997905e-05, 1.712499999999978e-05, 1.7361999999999933e-05, 1.7137999999999876e-05, 1.711100000000021e-05, 1.6584000000000043e-05, 1.711100000000021e-05, 1.693099999999781e-05, 1.6957999999997475e-05, 1.72769999999961e-05, 1.6806000000001153e-05, 1.676300000000297e-05, 1.7429999999998835e-05, 1.6958000000004414e-05, 1.6943999999997905e-05, 1.679100000000211e-05, 1.67769999999956e-05, 1.6695000000004068e-05, 1.6999999999996185e-05, 1.6777999999995075e-05, 1.6944000000004844e-05, 1.661099999999971e-05, 1.7278000000002514e-05, 1.727700000000304e-05, 1.7277999999995575e-05, 1.67769999999956e-05, 1.7277999999995575e-05, 1.7027999999995325e-05, 1.693099999999781e-05, 1.659700000000014e-05, 1.680500000000168e-05, 1.6625000000006218e-05, 1.662499999999928e-05, 1.711100000000021e-05, 1.7263999999996005e-05, 1.6777999999995075e-05, 1.7278000000002514e-05, 1.7249999999996435e-05]</msg>
<status status="PASS" starttime="20201030 15:52:05.467" endtime="20201030 15:52:05.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.456" endtime="20201030 15:52:05.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.482" endtime="20201030 15:52:05.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.478" endtime="20201030 15:52:05.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.476" endtime="20201030 15:52:05.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.993" endtime="20201030 15:52:05.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.992" endtime="20201030 15:52:05.507"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.530" endtime="20201030 15:52:05.544"></status>
</kw>
<msg timestamp="20201030 15:52:05.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.526" endtime="20201030 15:52:05.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.547" endtime="20201030 15:52:05.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.554" endtime="20201030 15:52:05.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.519" endtime="20201030 15:52:05.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.513" endtime="20201030 15:52:05.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.577" endtime="20201030 15:52:05.914"></status>
</kw>
<msg timestamp="20201030 15:52:05.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038952417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038969847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.573" endtime="20201030 15:52:05.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038952417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038969847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.924" endtime="20201030 15:52:05.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.942" endtime="20201030 15:52:05.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.566" endtime="20201030 15:52:05.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.562" endtime="20201030 15:52:05.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.959" level="INFO">${RESULT} = [{'diff': 1.7429999999998835e-05}, {'diff': 1.7223000000003708e-05}, {'diff': 1.6985999999996615e-05}, {'diff': 1.6986000000003554e-05}, {'diff': 1.715299999999892e-05}, {'diff': 1.663899999999885e-05...</msg>
<status status="PASS" starttime="20201030 15:52:05.951" endtime="20201030 15:52:05.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.970" level="INFO">${ACCURACY} = {'diff': [1.7429999999998835e-05, 1.7223000000003708e-05, 1.6985999999996615e-05, 1.6986000000003554e-05, 1.715299999999892e-05, 1.663899999999885e-05, 1.709700000000064e-05, 1.712499999999978e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:05.961" endtime="20201030 15:52:05.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.981" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.979" endtime="20201030 15:52:05.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.986" level="INFO">VALUE: [1.7429999999998835e-05, 1.7223000000003708e-05, 1.6985999999996615e-05, 1.6986000000003554e-05, 1.715299999999892e-05, 1.663899999999885e-05, 1.709700000000064e-05, 1.712499999999978e-05, 1.7264000000002944e-05, 1.712499999999978e-05, 1.677700000000254e-05, 1.6778000000002014e-05, 1.741699999999874e-05, 1.7458000000004914e-05, 1.659700000000014e-05, 1.709700000000064e-05, 1.709700000000064e-05, 1.6958000000004414e-05, 1.6958000000004414e-05, 1.730499999999524e-05, 1.7278000000002514e-05, 1.693099999999781e-05, 1.694499999999738e-05, 1.734699999999395e-05, 1.7165999999999015e-05, 1.659700000000014e-05, 1.6750000000002874e-05, 1.659700000000014e-05, 1.7264000000002944e-05, 1.6973000000003458e-05, 1.661099999999971e-05, 1.7430000000005774e-05, 1.6792000000001583e-05, 1.661099999999971e-05, 1.695899999999695e-05, 1.70969999999937e-05, 1.6457999999996975e-05, 1.730500000000218e-05, 1.712499999999978e-05, 1.734700000000089e-05, 1.661099999999971e-05, 1.712499999999978e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.713899999999935e-05, 1.6597999999999613e-05, 1.6459000000003388e-05, 1.6651999999998945e-05, 1.729099999999567e-05, 1.676300000000297e-05]</msg>
<status status="PASS" starttime="20201030 15:52:05.983" endtime="20201030 15:52:05.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.972" endtime="20201030 15:52:05.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.999" endtime="20201030 15:52:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.995" endtime="20201030 15:52:06.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.992" endtime="20201030 15:52:06.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.509" endtime="20201030 15:52:06.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.508" endtime="20201030 15:52:06.024"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.046" endtime="20201030 15:52:06.062"></status>
</kw>
<msg timestamp="20201030 15:52:06.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.043" endtime="20201030 15:52:06.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.065" endtime="20201030 15:52:06.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.071" endtime="20201030 15:52:06.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.036" endtime="20201030 15:52:06.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.030" endtime="20201030 15:52:06.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.096" endtime="20201030 15:52:06.432"></status>
</kw>
<msg timestamp="20201030 15:52:06.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039188597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039212403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.092" endtime="20201030 15:52:06.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039188597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039212403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.442" endtime="20201030 15:52:06.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.461" endtime="20201030 15:52:06.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.084" endtime="20201030 15:52:06.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.079" endtime="20201030 15:52:06.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.478" level="INFO">${RESULT} = [{'diff': 2.3806000000001215e-05}, {'diff': 2.4471999999997607e-05}, {'diff': 2.361099999999977e-05}, {'diff': 2.431900000000181e-05}, {'diff': 2.344500000000388e-05}, {'diff': 2.4528000000002825e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:06.469" endtime="20201030 15:52:06.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.487" level="INFO">${ACCURACY} = {'diff': [2.3806000000001215e-05, 2.4471999999997607e-05, 2.361099999999977e-05, 2.431900000000181e-05, 2.344500000000388e-05, 2.4528000000002825e-05, 2.3514000000002255e-05, 2.3806000000001215e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:06.480" endtime="20201030 15:52:06.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.498" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.496" endtime="20201030 15:52:06.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.503" level="INFO">VALUE: [2.3806000000001215e-05, 2.4471999999997607e-05, 2.361099999999977e-05, 2.431900000000181e-05, 2.344500000000388e-05, 2.4528000000002825e-05, 2.3514000000002255e-05, 2.3806000000001215e-05, 2.361099999999977e-05, 2.413899999999941e-05, 2.379100000000217e-05, 2.413899999999941e-05, 2.3805999999994276e-05, 2.4277999999995636e-05, 2.363899999999891e-05, 2.4290999999995733e-05, 2.3957999999997537e-05, 2.3820000000000785e-05, 2.4334000000000855e-05, 2.379100000000217e-05, 2.413899999999941e-05, 2.381900000000131e-05, 2.3458000000003976e-05, 2.413900000000635e-05, 2.412499999999984e-05, 2.429100000000267e-05, 2.379100000000217e-05, 2.380500000000174e-05, 2.3388000000006126e-05, 2.362499999999934e-05, 2.3735999999996427e-05, 2.413899999999941e-05, 2.393100000000481e-05, 2.380500000000174e-05, 2.3986000000003616e-05, 2.4026999999995913e-05, 2.418099999999812e-05, 2.3958000000004476e-05, 2.3735999999996427e-05, 2.3818999999994372e-05, 2.444499999999794e-05, 2.3957999999997537e-05, 2.412499999999984e-05, 2.347300000000302e-05, 2.345899999999651e-05, 2.363900000000585e-05, 2.4291999999995206e-05, 2.363899999999891e-05, 2.4485999999997177e-05, 2.362499999999934e-05]</msg>
<status status="PASS" starttime="20201030 15:52:06.500" endtime="20201030 15:52:06.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.489" endtime="20201030 15:52:06.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.516" endtime="20201030 15:52:06.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.511" endtime="20201030 15:52:06.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.509" endtime="20201030 15:52:06.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.026" endtime="20201030 15:52:06.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.025" endtime="20201030 15:52:06.540"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.563" endtime="20201030 15:52:06.579"></status>
</kw>
<msg timestamp="20201030 15:52:06.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.560" endtime="20201030 15:52:06.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.583" endtime="20201030 15:52:06.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.589" endtime="20201030 15:52:06.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.553" endtime="20201030 15:52:06.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.547" endtime="20201030 15:52:06.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.614" endtime="20201030 15:52:06.949"></status>
</kw>
<msg timestamp="20201030 15:52:06.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040358069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040382194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.610" endtime="20201030 15:52:06.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040358069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040382194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.958" endtime="20201030 15:52:06.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.977" endtime="20201030 15:52:06.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.602" endtime="20201030 15:52:06.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.597" endtime="20201030 15:52:06.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.994" level="INFO">${RESULT} = [{'diff': 2.412499999999984e-05}, {'diff': 2.3985999999996677e-05}, {'diff': 2.4304999999995303e-05}, {'diff': 2.40970000000007e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.413899999999941e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:06.985" endtime="20201030 15:52:06.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.004" level="INFO">${ACCURACY} = {'diff': [2.412499999999984e-05, 2.3985999999996677e-05, 2.4304999999995303e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.4137999999999937e-05, 2.4318999999994872e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:52:06.996" endtime="20201030 15:52:07.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.014" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.012" endtime="20201030 15:52:07.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.020" level="INFO">VALUE: [2.412499999999984e-05, 2.3985999999996677e-05, 2.4304999999995303e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.4137999999999937e-05, 2.4318999999994872e-05, 2.362499999999934e-05, 2.4306000000001715e-05, 2.4042000000001895e-05, 2.365299999999848e-05, 2.344499999999694e-05, 2.3792000000001645e-05, 2.3958000000004476e-05, 2.3958000000004476e-05, 2.3806000000001215e-05, 2.3972000000004046e-05, 2.361100000000671e-05, 2.363899999999891e-05, 2.4320000000001285e-05, 2.394499999999744e-05, 2.398700000000309e-05, 2.395900000000395e-05, 2.4472000000004546e-05, 2.4304999999995303e-05, 2.413899999999941e-05, 2.4042000000001895e-05, 2.347300000000302e-05, 2.4263000000003532e-05, 2.3792000000001645e-05, 2.4457999999998037e-05, 2.4306000000001715e-05, 2.430500000000224e-05, 2.362499999999934e-05, 2.397299999999658e-05, 2.430500000000224e-05, 2.3986000000003616e-05, 2.4320000000001285e-05, 2.4264000000003005e-05, 2.3458000000003976e-05, 2.362499999999934e-05, 2.416699999999855e-05, 2.4401999999999757e-05, 2.3971999999997107e-05, 2.3806000000001215e-05, 2.3792000000001645e-05, 2.362499999999934e-05, 2.4471999999997607e-05, 2.3792000000001645e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.017" endtime="20201030 15:52:07.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.005" endtime="20201030 15:52:07.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.034" endtime="20201030 15:52:07.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.028" endtime="20201030 15:52:07.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.026" endtime="20201030 15:52:07.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.543" endtime="20201030 15:52:07.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.541" endtime="20201030 15:52:07.059"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.081" endtime="20201030 15:52:07.096"></status>
</kw>
<msg timestamp="20201030 15:52:07.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.078" endtime="20201030 15:52:07.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.099" endtime="20201030 15:52:07.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.106" endtime="20201030 15:52:07.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.071" endtime="20201030 15:52:07.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.065" endtime="20201030 15:52:07.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.129" endtime="20201030 15:52:07.459"></status>
</kw>
<msg timestamp="20201030 15:52:07.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038850875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.126" endtime="20201030 15:52:07.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038850875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.468" endtime="20201030 15:52:07.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.486" endtime="20201030 15:52:07.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.119" endtime="20201030 15:52:07.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.114" endtime="20201030 15:52:07.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.504" level="INFO">${RESULT} = [{'diff': 2.383300000000088e-05}, {'diff': 2.3986000000003616e-05}, {'diff': 2.413899999999941e-05}, {'diff': 2.363899999999891e-05}, {'diff': 2.3820000000000785e-05}, {'diff': 2.413899999999941e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:07.495" endtime="20201030 15:52:07.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.518" level="INFO">${ACCURACY} = {'diff': [2.383300000000088e-05, 2.3986000000003616e-05, 2.413899999999941e-05, 2.363899999999891e-05, 2.3820000000000785e-05, 2.413899999999941e-05, 2.429100000000267e-05, 2.3972000000004046e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 15:52:07.506" endtime="20201030 15:52:07.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.529" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.527" endtime="20201030 15:52:07.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.534" level="INFO">VALUE: [2.383300000000088e-05, 2.3986000000003616e-05, 2.413899999999941e-05, 2.363899999999891e-05, 2.3820000000000785e-05, 2.413899999999941e-05, 2.429100000000267e-05, 2.3972000000004046e-05, 2.4471999999997607e-05, 2.413899999999941e-05, 2.4306000000001715e-05, 2.4320000000001285e-05, 2.4207999999997787e-05, 2.413899999999941e-05, 2.431900000000181e-05, 2.3986000000003616e-05, 2.3778000000002075e-05, 2.4457999999998037e-05, 2.4306000000001715e-05, 2.355500000000149e-05, 2.3971999999997107e-05, 2.3971999999997107e-05, 2.4457999999998037e-05, 2.4458000000004976e-05, 2.3819999999993846e-05, 2.368099999999762e-05, 2.39169999999983e-05, 2.429100000000267e-05, 2.3637999999999437e-05, 2.347300000000302e-05, 2.412499999999984e-05, 2.3806000000001215e-05, 2.3971999999997107e-05, 2.363899999999891e-05, 2.4235999999996927e-05, 2.3637999999999437e-05, 2.3957999999997537e-05, 2.363899999999891e-05, 2.3971999999997107e-05, 2.440299999999923e-05, 2.443099999999837e-05, 2.4499999999996747e-05, 2.381900000000131e-05, 2.393100000000481e-05, 2.4306000000001715e-05, 2.412499999999984e-05, 2.4471999999997607e-05, 2.368100000000456e-05, 2.345899999999651e-05, 2.429100000000267e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.531" endtime="20201030 15:52:07.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.520" endtime="20201030 15:52:07.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.547" endtime="20201030 15:52:07.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.542" endtime="20201030 15:52:07.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.540" endtime="20201030 15:52:07.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.061" endtime="20201030 15:52:07.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.060" endtime="20201030 15:52:07.572"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.599" endtime="20201030 15:52:07.617"></status>
</kw>
<msg timestamp="20201030 15:52:07.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.595" endtime="20201030 15:52:07.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.621" endtime="20201030 15:52:07.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.628" endtime="20201030 15:52:07.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.587" endtime="20201030 15:52:07.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.580" endtime="20201030 15:52:07.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.651" endtime="20201030 15:52:07.982"></status>
</kw>
<msg timestamp="20201030 15:52:07.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046035875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046060347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.648" endtime="20201030 15:52:07.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046035875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046060347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.991" endtime="20201030 15:52:08.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.010" endtime="20201030 15:52:08.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.641" endtime="20201030 15:52:08.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.636" endtime="20201030 15:52:08.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.027" level="INFO">${RESULT} = [{'diff': 2.4472000000004546e-05}, {'diff': 2.40970000000007e-05}, {'diff': 2.3820000000000785e-05}, {'diff': 2.3457999999997037e-05}, {'diff': 2.4000000000003185e-05}, {'diff': 2.443099999999837e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:08.018" endtime="20201030 15:52:08.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.038" level="INFO">${ACCURACY} = {'diff': [2.4472000000004546e-05, 2.40970000000007e-05, 2.3820000000000785e-05, 2.3457999999997037e-05, 2.4000000000003185e-05, 2.443099999999837e-05, 2.3651999999999007e-05, 2.416700000000549e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:08.029" endtime="20201030 15:52:08.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.048" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.046" endtime="20201030 15:52:08.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.054" level="INFO">VALUE: [2.4472000000004546e-05, 2.40970000000007e-05, 2.3820000000000785e-05, 2.3457999999997037e-05, 2.4000000000003185e-05, 2.443099999999837e-05, 2.3651999999999007e-05, 2.416700000000549e-05, 2.397299999999658e-05, 2.413899999999941e-05, 2.361099999999977e-05, 2.4292000000002145e-05, 2.4000000000003185e-05, 2.3792000000001645e-05, 2.3443999999997467e-05, 2.412499999999984e-05, 2.370899999999676e-05, 2.4000000000003185e-05, 2.361099999999977e-05, 2.3472000000003546e-05, 2.362500000000628e-05, 2.3806000000001215e-05, 2.3749999999995997e-05, 2.3777999999995136e-05, 2.3806000000001215e-05, 2.4305999999994776e-05, 2.40970000000007e-05, 2.415299999999898e-05, 2.422300000000377e-05, 2.411100000000027e-05, 2.3457999999997037e-05, 2.438899999999966e-05, 2.363900000000585e-05, 2.362499999999934e-05, 2.3834000000000355e-05, 2.4457999999998037e-05, 2.379100000000217e-05, 2.362499999999934e-05, 2.4306000000001715e-05, 2.4165999999999077e-05, 2.3804999999994803e-05, 2.445900000000445e-05, 2.361099999999977e-05, 2.3554999999994553e-05, 2.363899999999891e-05, 2.345899999999651e-05, 2.362500000000628e-05, 2.3985999999996677e-05, 2.4499999999996747e-05, 2.3806000000001215e-05]</msg>
<status status="PASS" starttime="20201030 15:52:08.051" endtime="20201030 15:52:08.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.040" endtime="20201030 15:52:08.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.152" endtime="20201030 15:52:08.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.148" endtime="20201030 15:52:08.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.145" endtime="20201030 15:52:08.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.575" endtime="20201030 15:52:08.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.573" endtime="20201030 15:52:08.177"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.199" endtime="20201030 15:52:08.214"></status>
</kw>
<msg timestamp="20201030 15:52:08.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.196" endtime="20201030 15:52:08.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.217" endtime="20201030 15:52:08.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.224" endtime="20201030 15:52:08.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.189" endtime="20201030 15:52:08.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.183" endtime="20201030 15:52:08.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.247" endtime="20201030 15:52:08.585"></status>
</kw>
<msg timestamp="20201030 15:52:08.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038974972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038998444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.243" endtime="20201030 15:52:08.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038974972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038998444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.595" endtime="20201030 15:52:08.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.613" endtime="20201030 15:52:08.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.236" endtime="20201030 15:52:08.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.232" endtime="20201030 15:52:08.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.630" level="INFO">${RESULT} = [{'diff': 2.3472000000003546e-05}, {'diff': 2.363899999999891e-05}, {'diff': 2.4276999999996163e-05}, {'diff': 2.394500000000438e-05}, {'diff': 2.4151999999999507e-05}, {'diff': 2.3971999999997107e-05...</msg>
<status status="PASS" starttime="20201030 15:52:08.621" endtime="20201030 15:52:08.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.639" level="INFO">${ACCURACY} = {'diff': [2.3472000000003546e-05, 2.363899999999891e-05, 2.4276999999996163e-05, 2.394500000000438e-05, 2.4151999999999507e-05, 2.3971999999997107e-05, 2.4277999999995636e-05, 2.361099999999977e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:08.632" endtime="20201030 15:52:08.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.650" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.648" endtime="20201030 15:52:08.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.655" level="INFO">VALUE: [2.3472000000003546e-05, 2.363899999999891e-05, 2.4276999999996163e-05, 2.394500000000438e-05, 2.4151999999999507e-05, 2.3971999999997107e-05, 2.4277999999995636e-05, 2.361099999999977e-05, 2.4111999999999745e-05, 2.3818999999994372e-05, 2.365299999999848e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.3457999999997037e-05, 2.3792000000001645e-05, 2.445900000000445e-05, 2.3806000000001215e-05, 2.3985999999996677e-05, 2.4306000000001715e-05, 2.413899999999941e-05, 2.4292000000002145e-05, 2.3584000000000105e-05, 2.379100000000217e-05, 2.35970000000002e-05, 2.3818999999994372e-05, 2.413899999999941e-05, 2.397300000000352e-05, 2.361099999999977e-05, 2.4528000000002825e-05, 2.3806000000001215e-05, 2.3763999999995566e-05, 2.430500000000224e-05, 2.4111999999999745e-05, 2.3957999999997537e-05, 2.3985999999996677e-05, 2.4306000000001715e-05, 2.4486000000004116e-05, 2.4291999999995206e-05, 2.347300000000302e-05, 2.3971999999997107e-05, 2.3777999999995136e-05, 2.4334000000000855e-05, 2.362499999999934e-05, 2.420899999999726e-05, 2.4471999999997607e-05, 2.4485999999997177e-05, 2.362499999999934e-05, 2.4472000000004546e-05, 2.363899999999891e-05, 2.3971999999997107e-05]</msg>
<status status="PASS" starttime="20201030 15:52:08.652" endtime="20201030 15:52:08.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.641" endtime="20201030 15:52:08.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.668" endtime="20201030 15:52:08.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.664" endtime="20201030 15:52:08.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.661" endtime="20201030 15:52:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.179" endtime="20201030 15:52:08.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.178" endtime="20201030 15:52:08.695"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.733" endtime="20201030 15:52:08.751"></status>
</kw>
<msg timestamp="20201030 15:52:08.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.728" endtime="20201030 15:52:08.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.758" endtime="20201030 15:52:08.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.766" endtime="20201030 15:52:08.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.718" endtime="20201030 15:52:08.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.703" endtime="20201030 15:52:08.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.791" endtime="20201030 15:52:09.153"></status>
</kw>
<msg timestamp="20201030 15:52:09.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059928986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059953111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.788" endtime="20201030 15:52:09.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059928986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059953111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.163" endtime="20201030 15:52:09.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.182" endtime="20201030 15:52:09.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.781" endtime="20201030 15:52:09.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.776" endtime="20201030 15:52:09.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.199" level="INFO">${RESULT} = [{'diff': 2.412500000000678e-05}, {'diff': 2.4166000000006016e-05}, {'diff': 2.4264000000003005e-05}, {'diff': 2.394500000000438e-05}, {'diff': 2.4542000000002395e-05}, {'diff': 2.3638000000006376e-05...</msg>
<status status="PASS" starttime="20201030 15:52:09.190" endtime="20201030 15:52:09.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.208" level="INFO">${ACCURACY} = {'diff': [2.412500000000678e-05, 2.4166000000006016e-05, 2.4264000000003005e-05, 2.394500000000438e-05, 2.4542000000002395e-05, 2.3638000000006376e-05, 2.363900000000585e-05, 2.4292000000002145e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:09.201" endtime="20201030 15:52:09.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.219" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.217" endtime="20201030 15:52:09.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.225" level="INFO">VALUE: [2.412500000000678e-05, 2.4166000000006016e-05, 2.4264000000003005e-05, 2.394500000000438e-05, 2.4542000000002395e-05, 2.3638000000006376e-05, 2.363900000000585e-05, 2.4292000000002145e-05, 2.3804999999994803e-05, 2.4304999999995303e-05, 2.412499999999984e-05, 2.4415999999999327e-05, 2.4292000000002145e-05, 2.412499999999984e-05, 2.3472000000003546e-05, 2.3972000000004046e-05, 2.3570000000000535e-05, 2.3929999999998397e-05, 2.418099999999812e-05, 2.3901999999999257e-05, 2.3972000000004046e-05, 2.362499999999934e-05, 2.35970000000002e-05, 2.419500000000463e-05, 2.3972000000004046e-05, 2.356900000000106e-05, 2.413899999999941e-05, 2.3805999999994276e-05, 2.362499999999934e-05, 2.394500000000438e-05, 2.380500000000174e-05, 2.35970000000002e-05, 2.3943999999997967e-05, 2.416699999999855e-05, 2.3792000000001645e-05, 2.361099999999977e-05, 2.3818999999994372e-05, 2.3972000000004046e-05, 2.413899999999941e-05, 2.3929999999998397e-05, 2.3750000000002935e-05, 2.341700000000474e-05, 2.3957999999997537e-05, 2.39169999999983e-05, 2.430500000000224e-05, 2.3804999999994803e-05, 2.3985999999996677e-05, 2.415299999999898e-05, 2.395900000000395e-05, 2.4306000000001715e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.222" endtime="20201030 15:52:09.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.210" endtime="20201030 15:52:09.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.239" endtime="20201030 15:52:09.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.233" endtime="20201030 15:52:09.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.230" endtime="20201030 15:52:09.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.698" endtime="20201030 15:52:09.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.696" endtime="20201030 15:52:09.264"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.287" endtime="20201030 15:52:09.302"></status>
</kw>
<msg timestamp="20201030 15:52:09.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.283" endtime="20201030 15:52:09.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.306" endtime="20201030 15:52:09.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.313" endtime="20201030 15:52:09.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.276" endtime="20201030 15:52:09.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.270" endtime="20201030 15:52:09.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.337" endtime="20201030 15:52:09.672"></status>
</kw>
<msg timestamp="20201030 15:52:09.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040004806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.334" endtime="20201030 15:52:09.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040004806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.681" endtime="20201030 15:52:09.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.700" endtime="20201030 15:52:09.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.326" endtime="20201030 15:52:09.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.321" endtime="20201030 15:52:09.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.717" level="INFO">${RESULT} = [{'diff': 2.4291999999995206e-05}, {'diff': 2.3943999999997967e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.413899999999941e-05}, {'diff': 2.3513999999995316e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:09.708" endtime="20201030 15:52:09.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.728" level="INFO">${ACCURACY} = {'diff': [2.4291999999995206e-05, 2.3943999999997967e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.3513999999995316e-05, 2.347300000000302e-05, 2.4137999999999937e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:09.719" endtime="20201030 15:52:09.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.739" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.736" endtime="20201030 15:52:09.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.744" level="INFO">VALUE: [2.4291999999995206e-05, 2.3943999999997967e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.3513999999995316e-05, 2.347300000000302e-05, 2.4137999999999937e-05, 2.3819999999993846e-05, 2.413899999999941e-05, 2.3806000000001215e-05, 2.3957999999997537e-05, 2.366699999999805e-05, 2.381900000000131e-05, 2.4513999999996317e-05, 2.4291999999995206e-05, 2.4305999999994776e-05, 2.413899999999941e-05, 2.3943999999997967e-05, 2.4443999999998467e-05, 2.413899999999941e-05, 2.4457999999998037e-05, 2.3763999999995566e-05, 2.412499999999984e-05, 2.3792000000001645e-05, 2.4485999999997177e-05, 2.3637999999999437e-05, 2.3806000000001215e-05, 2.397299999999658e-05, 2.3486000000003115e-05, 2.3943999999997967e-05, 2.3430000000004836e-05, 2.3958000000004476e-05, 2.3806000000001215e-05, 2.4137999999999937e-05, 2.345899999999651e-05, 2.412499999999984e-05, 2.3986000000003616e-05, 2.3597999999999675e-05, 2.413900000000635e-05, 2.363899999999891e-05, 2.34169999999978e-05, 2.4471999999997607e-05, 2.4292000000002145e-05, 2.4304999999995303e-05, 2.4500000000003685e-05, 2.3458000000003976e-05, 2.413899999999941e-05, 2.3972000000004046e-05, 2.4137999999999937e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.741" endtime="20201030 15:52:09.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.730" endtime="20201030 15:52:09.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.757" endtime="20201030 15:52:09.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.752" endtime="20201030 15:52:09.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.750" endtime="20201030 15:52:09.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.266" endtime="20201030 15:52:09.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.265" endtime="20201030 15:52:09.782"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.804" endtime="20201030 15:52:09.820"></status>
</kw>
<msg timestamp="20201030 15:52:09.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.801" endtime="20201030 15:52:09.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.823" endtime="20201030 15:52:09.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.829" endtime="20201030 15:52:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.794" endtime="20201030 15:52:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.788" endtime="20201030 15:52:09.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.853" endtime="20201030 15:52:10.200"></status>
</kw>
<msg timestamp="20201030 15:52:10.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039275167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039305847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.849" endtime="20201030 15:52:10.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039275167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039305847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.209" endtime="20201030 15:52:10.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.228" endtime="20201030 15:52:10.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.842" endtime="20201030 15:52:10.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.837" endtime="20201030 15:52:10.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.245" level="INFO">${RESULT} = [{'diff': 3.067999999999821e-05}, {'diff': 3.113899999999947e-05}, {'diff': 3.083300000000094e-05}, {'diff': 3.131900000000187e-05}, {'diff': 3.115299999999904e-05}, {'diff': 3.076400000000257e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:10.236" endtime="20201030 15:52:10.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.256" level="INFO">${ACCURACY} = {'diff': [3.067999999999821e-05, 3.113899999999947e-05, 3.083300000000094e-05, 3.131900000000187e-05, 3.115299999999904e-05, 3.076400000000257e-05, 3.066699999999811e-05, 3.1318999999994934e-05, 3.052...</msg>
<status status="PASS" starttime="20201030 15:52:10.247" endtime="20201030 15:52:10.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.266" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.264" endtime="20201030 15:52:10.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.272" level="INFO">VALUE: [3.067999999999821e-05, 3.113899999999947e-05, 3.083300000000094e-05, 3.131900000000187e-05, 3.115299999999904e-05, 3.076400000000257e-05, 3.066699999999811e-05, 3.1318999999994934e-05, 3.052800000000189e-05, 3.065299999999854e-05, 3.0499999999995808e-05, 3.101399999999588e-05, 3.098600000000368e-05, 3.133399999999398e-05, 3.098599999999674e-05, 3.100000000000325e-05, 3.0486000000003177e-05, 3.122199999999742e-05, 3.115199999999957e-05, 3.101400000000282e-05, 3.081900000000137e-05, 3.116599999999914e-05, 3.133300000000144e-05, 3.13050000000023e-05, 3.1138e-05, 3.115199999999957e-05, 3.063899999999897e-05, 3.13050000000023e-05, 3.117999999999871e-05, 3.150000000000375e-05, 3.061099999999983e-05, 3.148599999999724e-05, 3.098599999999674e-05, 3.065299999999854e-05, 3.098700000000315e-05, 3.083300000000094e-05, 3.063899999999897e-05, 3.081900000000137e-05, 3.048599999999624e-05, 3.115199999999957e-05, 3.065299999999854e-05, 3.081900000000137e-05, 3.063899999999897e-05, 3.1304999999995364e-05, 3.152800000000289e-05, 3.09449999999975e-05, 3.063800000000644e-05, 3.063899999999897e-05, 3.048599999999624e-05, 3.09579999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.269" endtime="20201030 15:52:10.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.257" endtime="20201030 15:52:10.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.284" endtime="20201030 15:52:10.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.280" endtime="20201030 15:52:10.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.277" endtime="20201030 15:52:10.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.784" endtime="20201030 15:52:10.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.783" endtime="20201030 15:52:10.309"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.332" endtime="20201030 15:52:10.349"></status>
</kw>
<msg timestamp="20201030 15:52:10.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.329" endtime="20201030 15:52:10.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.352" endtime="20201030 15:52:10.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.359" endtime="20201030 15:52:10.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.321" endtime="20201030 15:52:10.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.315" endtime="20201030 15:52:10.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.382" endtime="20201030 15:52:10.727"></status>
</kw>
<msg timestamp="20201030 15:52:10.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040010917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040041722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.379" endtime="20201030 15:52:10.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040010917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040041722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.737" endtime="20201030 15:52:10.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.756" endtime="20201030 15:52:10.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.372" endtime="20201030 15:52:10.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.367" endtime="20201030 15:52:10.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.773" level="INFO">${RESULT} = [{'diff': 3.08050000000018e-05}, {'diff': 3.132000000000135e-05}, {'diff': 3.048599999999624e-05}, {'diff': 3.0514000000002317e-05}, {'diff': 3.076399999999563e-05}, {'diff': 3.094399999999803e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:10.764" endtime="20201030 15:52:10.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.782" level="INFO">${ACCURACY} = {'diff': [3.08050000000018e-05, 3.132000000000135e-05, 3.048599999999624e-05, 3.0514000000002317e-05, 3.076399999999563e-05, 3.094399999999803e-05, 3.0500000000002747e-05, 3.0499999999995808e-05, 3.08...</msg>
<status status="PASS" starttime="20201030 15:52:10.775" endtime="20201030 15:52:10.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.793" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.790" endtime="20201030 15:52:10.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.798" level="INFO">VALUE: [3.08050000000018e-05, 3.132000000000135e-05, 3.048599999999624e-05, 3.0514000000002317e-05, 3.076399999999563e-05, 3.094399999999803e-05, 3.0500000000002747e-05, 3.0499999999995808e-05, 3.0818999999994434e-05, 3.0458999999996572e-05, 3.13050000000023e-05, 3.13050000000023e-05, 3.102800000000239e-05, 3.1318999999994934e-05, 3.065300000000548e-05, 3.098600000000368e-05, 3.083300000000094e-05, 3.115299999999904e-05, 3.083300000000094e-05, 3.06249999999994e-05, 3.131900000000187e-05, 3.097199999999717e-05, 3.115299999999904e-05, 3.1318999999994934e-05, 3.098700000000315e-05, 3.115299999999904e-05, 3.082000000000085e-05, 3.083400000000042e-05, 3.080600000000128e-05, 3.097300000000358e-05, 3.090299999999879e-05, 3.115299999999904e-05, 3.081900000000137e-05, 3.1013000000003343e-05, 3.082000000000085e-05, 3.115299999999904e-05, 3.065299999999854e-05, 3.122199999999742e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.0499999999995808e-05, 3.065199999999907e-05, 3.097200000000411e-05, 3.065299999999854e-05, 3.080600000000128e-05, 3.148599999999724e-05, 3.119400000000522e-05, 3.116699999999861e-05, 3.069399999999778e-05, 3.136100000000058e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.795" endtime="20201030 15:52:10.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.784" endtime="20201030 15:52:10.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.810" endtime="20201030 15:52:10.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.806" endtime="20201030 15:52:10.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.804" endtime="20201030 15:52:10.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.311" endtime="20201030 15:52:10.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.310" endtime="20201030 15:52:10.835"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.858" endtime="20201030 15:52:10.875"></status>
</kw>
<msg timestamp="20201030 15:52:10.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.854" endtime="20201030 15:52:10.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.878" endtime="20201030 15:52:10.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.885" endtime="20201030 15:52:10.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.847" endtime="20201030 15:52:10.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.842" endtime="20201030 15:52:10.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.908" endtime="20201030 15:52:11.242"></status>
</kw>
<msg timestamp="20201030 15:52:11.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040689125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040720444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.905" endtime="20201030 15:52:11.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040689125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040720444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.252" endtime="20201030 15:52:11.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.271" endtime="20201030 15:52:11.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.897" endtime="20201030 15:52:11.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.893" endtime="20201030 15:52:11.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.288" level="INFO">${RESULT} = [{'diff': 3.131900000000187e-05}, {'diff': 3.093100000000487e-05}, {'diff': 3.0486000000003177e-05}, {'diff': 3.065300000000548e-05}, {'diff': 3.098600000000368e-05}, {'diff': 3.088899999999922e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.279" endtime="20201030 15:52:11.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.297" level="INFO">${ACCURACY} = {'diff': [3.131900000000187e-05, 3.093100000000487e-05, 3.0486000000003177e-05, 3.065300000000548e-05, 3.098600000000368e-05, 3.088899999999922e-05, 3.084700000000051e-05, 3.13050000000023e-05, 3.0666...</msg>
<status status="PASS" starttime="20201030 15:52:11.290" endtime="20201030 15:52:11.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.308" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.306" endtime="20201030 15:52:11.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.314" level="INFO">VALUE: [3.131900000000187e-05, 3.093100000000487e-05, 3.0486000000003177e-05, 3.065300000000548e-05, 3.098600000000368e-05, 3.088899999999922e-05, 3.084700000000051e-05, 3.13050000000023e-05, 3.066699999999811e-05, 3.115299999999904e-05, 3.113899999999947e-05, 3.149999999999681e-05, 3.065300000000548e-05, 3.118099999999818e-05, 3.148599999999724e-05, 3.116699999999861e-05, 3.082000000000085e-05, 3.099999999999631e-05, 3.063899999999897e-05, 3.113899999999947e-05, 3.0486000000003177e-05, 3.115299999999904e-05, 3.098599999999674e-05, 3.069399999999778e-05, 3.098600000000368e-05, 3.116699999999861e-05, 3.066599999999864e-05, 3.063899999999897e-05, 3.0486000000003177e-05, 3.065300000000548e-05, 3.097200000000411e-05, 3.080600000000128e-05, 3.098600000000368e-05, 3.100000000000325e-05, 3.054200000000146e-05, 3.065299999999854e-05, 3.098599999999674e-05, 3.047199999999667e-05, 3.115299999999904e-05, 3.129200000000221e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.081900000000137e-05, 3.097200000000411e-05, 3.115199999999957e-05, 3.081900000000137e-05, 3.09579999999976e-05, 3.065299999999854e-05, 3.113899999999947e-05, 3.080600000000128e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.311" endtime="20201030 15:52:11.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.299" endtime="20201030 15:52:11.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.328" endtime="20201030 15:52:11.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.322" endtime="20201030 15:52:11.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.319" endtime="20201030 15:52:11.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.837" endtime="20201030 15:52:11.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.836" endtime="20201030 15:52:11.353"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.377" endtime="20201030 15:52:11.393"></status>
</kw>
<msg timestamp="20201030 15:52:11.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.373" endtime="20201030 15:52:11.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.396" endtime="20201030 15:52:11.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.403" endtime="20201030 15:52:11.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.365" endtime="20201030 15:52:11.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.359" endtime="20201030 15:52:11.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.426" endtime="20201030 15:52:11.773"></status>
</kw>
<msg timestamp="20201030 15:52:11.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041041236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041072361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.423" endtime="20201030 15:52:11.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041041236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041072361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.782" endtime="20201030 15:52:11.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.801" endtime="20201030 15:52:11.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.416" endtime="20201030 15:52:11.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.411" endtime="20201030 15:52:11.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.818" level="INFO">${RESULT} = [{'diff': 3.11249999999999e-05}, {'diff': 3.0472000000003607e-05}, {'diff': 3.130600000000178e-05}, {'diff': 3.1318999999994934e-05}, {'diff': 3.097199999999717e-05}, {'diff': 3.076400000000257e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.809" endtime="20201030 15:52:11.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.829" level="INFO">${ACCURACY} = {'diff': [3.11249999999999e-05, 3.0472000000003607e-05, 3.130600000000178e-05, 3.1318999999994934e-05, 3.097199999999717e-05, 3.076400000000257e-05, 3.063899999999897e-05, 3.069500000000419e-05, 3.065...</msg>
<status status="PASS" starttime="20201030 15:52:11.820" endtime="20201030 15:52:11.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.840" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.837" endtime="20201030 15:52:11.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.845" level="INFO">VALUE: [3.11249999999999e-05, 3.0472000000003607e-05, 3.130600000000178e-05, 3.1318999999994934e-05, 3.097199999999717e-05, 3.076400000000257e-05, 3.063899999999897e-05, 3.069500000000419e-05, 3.065299999999854e-05, 3.102800000000239e-05, 3.080600000000128e-05, 3.133399999999398e-05, 3.063899999999897e-05, 3.148599999999724e-05, 3.1348000000000487e-05, 3.100000000000325e-05, 3.129200000000221e-05, 3.082000000000085e-05, 3.148600000000418e-05, 3.079199999999477e-05, 3.132000000000135e-05, 3.055600000000103e-05, 3.113899999999947e-05, 3.086100000000008e-05, 3.115199999999957e-05, 3.065299999999854e-05, 3.13050000000023e-05, 3.133300000000144e-05, 3.123599999999699e-05, 3.080600000000128e-05, 3.065299999999854e-05, 3.115299999999904e-05, 3.048599999999624e-05, 3.0472000000003607e-05, 3.113900000000641e-05, 3.06249999999994e-05, 3.0416999999997862e-05, 3.115299999999904e-05, 3.13050000000023e-05, 3.133399999999398e-05, 3.048599999999624e-05, 3.098600000000368e-05, 3.118099999999818e-05, 3.115200000000651e-05, 3.133400000000092e-05, 3.063899999999897e-05, 3.066699999999811e-05, 3.147299999999714e-05, 3.099999999999631e-05, 3.065299999999854e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.842" endtime="20201030 15:52:11.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.831" endtime="20201030 15:52:11.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.857" endtime="20201030 15:52:11.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.853" endtime="20201030 15:52:11.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.851" endtime="20201030 15:52:11.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.355" endtime="20201030 15:52:11.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.354" endtime="20201030 15:52:11.883"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.905" endtime="20201030 15:52:11.921"></status>
</kw>
<msg timestamp="20201030 15:52:11.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.902" endtime="20201030 15:52:11.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.924" endtime="20201030 15:52:11.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.931" endtime="20201030 15:52:11.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.895" endtime="20201030 15:52:11.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.889" endtime="20201030 15:52:11.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.954" endtime="20201030 15:52:12.288"></status>
</kw>
<msg timestamp="20201030 15:52:12.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03951625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039547431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:11.950" endtime="20201030 15:52:12.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03951625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039547431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:12.297" endtime="20201030 15:52:12.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.316" endtime="20201030 15:52:12.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.943" endtime="20201030 15:52:12.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.939" endtime="20201030 15:52:12.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.333" level="INFO">${RESULT} = [{'diff': 3.118099999999818e-05}, {'diff': 3.047199999999667e-05}, {'diff': 3.134700000000101e-05}, {'diff': 3.131900000000187e-05}, {'diff': 3.1318999999994934e-05}, {'diff': 3.077800000000214e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:12.325" endtime="20201030 15:52:12.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.344" level="INFO">${ACCURACY} = {'diff': [3.118099999999818e-05, 3.047199999999667e-05, 3.134700000000101e-05, 3.131900000000187e-05, 3.1318999999994934e-05, 3.077800000000214e-05, 3.133399999999398e-05, 3.1332999999994504e-05, 3.13...</msg>
<status status="PASS" starttime="20201030 15:52:12.335" endtime="20201030 15:52:12.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.355" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.353" endtime="20201030 15:52:12.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.361" level="INFO">VALUE: [3.118099999999818e-05, 3.047199999999667e-05, 3.134700000000101e-05, 3.131900000000187e-05, 3.1318999999994934e-05, 3.077800000000214e-05, 3.133399999999398e-05, 3.1332999999994504e-05, 3.1304999999995364e-05, 3.063899999999897e-05, 3.083300000000094e-05, 3.148599999999724e-05, 3.068100000000462e-05, 3.066600000000558e-05, 3.0499999999995808e-05, 3.133400000000092e-05, 3.0486000000003177e-05, 3.132000000000135e-05, 3.113900000000641e-05, 3.131999999999441e-05, 3.133400000000092e-05, 3.151399999999638e-05, 3.150000000000375e-05, 3.101400000000282e-05, 3.084700000000051e-05, 3.1263000000003593e-05, 3.083300000000094e-05, 3.134700000000101e-05, 3.116699999999861e-05, 3.0486000000003177e-05, 3.065299999999854e-05, 3.079200000000171e-05, 3.150000000000375e-05, 3.065200000000601e-05, 3.132000000000135e-05, 3.094399999999803e-05, 3.063899999999897e-05, 3.148599999999724e-05, 3.067999999999821e-05, 3.098599999999674e-05, 3.0472000000003607e-05, 3.077800000000214e-05, 3.129200000000221e-05, 3.101400000000282e-05, 3.082000000000085e-05, 3.100000000000325e-05, 3.08050000000018e-05, 3.150000000000375e-05, 3.070800000000429e-05, 3.130600000000178e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.358" endtime="20201030 15:52:12.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.346" endtime="20201030 15:52:12.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.373" endtime="20201030 15:52:12.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.369" endtime="20201030 15:52:12.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.366" endtime="20201030 15:52:12.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.885" endtime="20201030 15:52:12.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.883" endtime="20201030 15:52:12.399"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.423" endtime="20201030 15:52:12.439"></status>
</kw>
<msg timestamp="20201030 15:52:12.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.419" endtime="20201030 15:52:12.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.442" endtime="20201030 15:52:12.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.448" endtime="20201030 15:52:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.412" endtime="20201030 15:52:12.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.405" endtime="20201030 15:52:12.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.472" endtime="20201030 15:52:12.813"></status>
</kw>
<msg timestamp="20201030 15:52:12.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041503958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041535111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.468" endtime="20201030 15:52:12.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041503958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041535111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.823" endtime="20201030 15:52:12.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.841" endtime="20201030 15:52:12.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.461" endtime="20201030 15:52:12.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.456" endtime="20201030 15:52:12.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.858" level="INFO">${RESULT} = [{'diff': 3.115299999999904e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.100000000000325e-05}, {'diff': 3.1304999999995364e-05}, {'diff': 3.066699999999811e-05}, {'diff': 3.131999999999441e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:12.850" endtime="20201030 15:52:12.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.868" level="INFO">${ACCURACY} = {'diff': [3.115299999999904e-05, 3.065299999999854e-05, 3.100000000000325e-05, 3.1304999999995364e-05, 3.066699999999811e-05, 3.131999999999441e-05, 3.090199999999932e-05, 3.145800000000504e-05, 3.050...</msg>
<status status="PASS" starttime="20201030 15:52:12.860" endtime="20201030 15:52:12.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.879" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.876" endtime="20201030 15:52:12.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.884" level="INFO">VALUE: [3.115299999999904e-05, 3.065299999999854e-05, 3.100000000000325e-05, 3.1304999999995364e-05, 3.066699999999811e-05, 3.131999999999441e-05, 3.090199999999932e-05, 3.145800000000504e-05, 3.0500000000002747e-05, 3.065299999999854e-05, 3.080600000000128e-05, 3.0818999999994434e-05, 3.098599999999674e-05, 3.065299999999854e-05, 3.098600000000368e-05, 3.1318999999994934e-05, 3.081900000000137e-05, 3.065300000000548e-05, 3.1304999999995364e-05, 3.081900000000137e-05, 3.081900000000137e-05, 3.1318999999994934e-05, 3.09579999999976e-05, 3.06249999999994e-05, 3.082000000000085e-05, 3.097300000000358e-05, 3.131900000000187e-05, 3.112500000000684e-05, 3.150000000000375e-05, 3.0472000000003607e-05, 3.081900000000137e-05, 3.148700000000365e-05, 3.066699999999811e-05, 3.065199999999907e-05, 3.132000000000135e-05, 3.133300000000144e-05, 3.047199999999667e-05, 3.044399999999753e-05, 3.09579999999976e-05, 3.101400000000282e-05, 3.098599999999674e-05, 3.13050000000023e-05, 3.092999999999846e-05, 3.065299999999854e-05, 3.06249999999994e-05, 3.090299999999879e-05, 3.129199999999527e-05, 3.083300000000094e-05, 3.133300000000144e-05, 3.115300000000598e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.881" endtime="20201030 15:52:12.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.870" endtime="20201030 15:52:12.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.896" endtime="20201030 15:52:12.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.892" endtime="20201030 15:52:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.890" endtime="20201030 15:52:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.401" endtime="20201030 15:52:12.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.400" endtime="20201030 15:52:12.921"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.944" endtime="20201030 15:52:12.961"></status>
</kw>
<msg timestamp="20201030 15:52:12.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.941" endtime="20201030 15:52:12.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.964" endtime="20201030 15:52:12.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.971" endtime="20201030 15:52:12.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.933" endtime="20201030 15:52:12.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.928" endtime="20201030 15:52:12.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.994" endtime="20201030 15:52:13.328"></status>
</kw>
<msg timestamp="20201030 15:52:13.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040949153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040980111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.991" endtime="20201030 15:52:13.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040949153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040980111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.338" endtime="20201030 15:52:13.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.356" endtime="20201030 15:52:13.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.983" endtime="20201030 15:52:13.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.979" endtime="20201030 15:52:13.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.374" level="INFO">${RESULT} = [{'diff': 3.09579999999976e-05}, {'diff': 3.147199999999767e-05}, {'diff': 3.083300000000094e-05}, {'diff': 3.131900000000187e-05}, {'diff': 3.115299999999904e-05}, {'diff': 3.136100000000058e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:13.365" endtime="20201030 15:52:13.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.383" level="INFO">${ACCURACY} = {'diff': [3.09579999999976e-05, 3.147199999999767e-05, 3.083300000000094e-05, 3.131900000000187e-05, 3.115299999999904e-05, 3.136100000000058e-05, 3.147200000000461e-05, 3.079100000000223e-05, 3.13050...</msg>
<status status="PASS" starttime="20201030 15:52:13.376" endtime="20201030 15:52:13.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.394" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.392" endtime="20201030 15:52:13.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.399" level="INFO">VALUE: [3.09579999999976e-05, 3.147199999999767e-05, 3.083300000000094e-05, 3.131900000000187e-05, 3.115299999999904e-05, 3.136100000000058e-05, 3.147200000000461e-05, 3.079100000000223e-05, 3.13050000000023e-05, 3.048599999999624e-05, 3.099999999999631e-05, 3.048599999999624e-05, 3.150000000000375e-05, 3.098599999999674e-05, 3.098599999999674e-05, 3.0804999999994864e-05, 3.097199999999717e-05, 3.130600000000178e-05, 3.145800000000504e-05, 3.117999999999871e-05, 3.130600000000178e-05, 3.1318999999994934e-05, 3.065299999999854e-05, 3.048599999999624e-05, 3.08050000000018e-05, 3.0472000000003607e-05, 3.083300000000094e-05, 3.065300000000548e-05, 3.097199999999717e-05, 3.065300000000548e-05, 3.113899999999947e-05, 3.061099999999983e-05, 3.047199999999667e-05, 3.133300000000144e-05, 3.068100000000462e-05, 3.080600000000128e-05, 3.11249999999999e-05, 3.1304999999995364e-05, 3.1512999999996905e-05, 3.1526999999996475e-05, 3.098700000000315e-05, 3.130600000000178e-05, 3.063900000000591e-05, 3.098600000000368e-05, 3.081900000000137e-05, 3.065299999999854e-05, 3.066699999999811e-05, 3.08050000000018e-05, 3.079200000000171e-05, 3.116699999999861e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.396" endtime="20201030 15:52:13.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.385" endtime="20201030 15:52:13.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.470" endtime="20201030 15:52:13.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.464" endtime="20201030 15:52:13.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.462" endtime="20201030 15:52:13.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.923" endtime="20201030 15:52:13.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.922" endtime="20201030 15:52:13.495"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.518" endtime="20201030 15:52:13.534"></status>
</kw>
<msg timestamp="20201030 15:52:13.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.515" endtime="20201030 15:52:13.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.538" endtime="20201030 15:52:13.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.544" endtime="20201030 15:52:13.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.507" endtime="20201030 15:52:13.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.502" endtime="20201030 15:52:13.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.578" endtime="20201030 15:52:13.929"></status>
</kw>
<msg timestamp="20201030 15:52:13.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040039819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040077653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.572" endtime="20201030 15:52:13.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040039819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040077653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.938" endtime="20201030 15:52:13.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.956" endtime="20201030 15:52:13.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.557" endtime="20201030 15:52:13.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.552" endtime="20201030 15:52:13.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.973" level="INFO">${RESULT} = [{'diff': 3.783400000000048e-05}, {'diff': 3.79859999999968e-05}, {'diff': 3.8180999999998244e-05}, {'diff': 3.786199999999962e-05}, {'diff': 3.801400000000288e-05}, {'diff': 3.8347000000001075e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:13.965" endtime="20201030 15:52:13.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.984" level="INFO">${ACCURACY} = {'diff': [3.783400000000048e-05, 3.79859999999968e-05, 3.8180999999998244e-05, 3.786199999999962e-05, 3.801400000000288e-05, 3.8347000000001075e-05, 3.799999999999637e-05, 3.801399999999594e-05, 3.783...</msg>
<status status="PASS" starttime="20201030 15:52:13.975" endtime="20201030 15:52:13.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.995" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.993" endtime="20201030 15:52:13.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.000" level="INFO">VALUE: [3.783400000000048e-05, 3.79859999999968e-05, 3.8180999999998244e-05, 3.786199999999962e-05, 3.801400000000288e-05, 3.8347000000001075e-05, 3.799999999999637e-05, 3.801399999999594e-05, 3.7833000000001005e-05, 3.7624999999999464e-05, 3.847199999999773e-05, 3.79859999999968e-05, 3.7805000000001865e-05, 3.7832999999994066e-05, 3.750000000000281e-05, 3.8347000000001075e-05, 3.7847000000000575e-05, 3.766700000000511e-05, 3.748600000000324e-05, 3.8166999999998674e-05, 3.818100000000518e-05, 3.8346999999994136e-05, 3.799999999999637e-05, 3.780600000000134e-05, 3.801399999999594e-05, 3.801400000000288e-05, 3.774999999999612e-05, 3.833400000000098e-05, 3.800000000000331e-05, 3.7666999999998174e-05, 3.801399999999594e-05, 3.7666999999998174e-05, 3.768000000000521e-05, 3.8458999999997634e-05, 3.747199999999673e-05, 3.8180999999998244e-05, 3.849999999999687e-05, 3.850000000000381e-05, 3.800000000000331e-05, 3.800000000000331e-05, 3.7652999999998604e-05, 3.849999999999687e-05, 3.8166999999998674e-05, 3.8333000000001505e-05, 3.801399999999594e-05, 3.7833000000001005e-05, 3.769500000000425e-05, 3.7652999999998604e-05, 3.815300000000604e-05, 3.8180999999998244e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.997" endtime="20201030 15:52:14.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.986" endtime="20201030 15:52:14.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.012" endtime="20201030 15:52:14.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.008" endtime="20201030 15:52:14.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.006" endtime="20201030 15:52:14.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.497" endtime="20201030 15:52:14.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.496" endtime="20201030 15:52:14.037"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.060" endtime="20201030 15:52:14.076"></status>
</kw>
<msg timestamp="20201030 15:52:14.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.057" endtime="20201030 15:52:14.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.080" endtime="20201030 15:52:14.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.086" endtime="20201030 15:52:14.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.049" endtime="20201030 15:52:14.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.044" endtime="20201030 15:52:14.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.110" endtime="20201030 15:52:14.439"></status>
</kw>
<msg timestamp="20201030 15:52:14.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.106" endtime="20201030 15:52:14.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.448" endtime="20201030 15:52:14.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.467" endtime="20201030 15:52:14.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.099" endtime="20201030 15:52:14.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.094" endtime="20201030 15:52:14.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.485" level="INFO">${RESULT} = [{'diff': 3.7805000000001865e-05}, {'diff': 3.769400000000478e-05}, {'diff': 3.7708999999996884e-05}, {'diff': 3.8041000000002545e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.7847000000000575e-0...</msg>
<status status="PASS" starttime="20201030 15:52:14.476" endtime="20201030 15:52:14.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.497" level="INFO">${ACCURACY} = {'diff': [3.7805000000001865e-05, 3.769400000000478e-05, 3.7708999999996884e-05, 3.8041000000002545e-05, 3.8347000000001075e-05, 3.7847000000000575e-05, 3.819500000000475e-05, 3.8166999999998674e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:14.487" endtime="20201030 15:52:14.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.507" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.505" endtime="20201030 15:52:14.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.513" level="INFO">VALUE: [3.7805000000001865e-05, 3.769400000000478e-05, 3.7708999999996884e-05, 3.8041000000002545e-05, 3.8347000000001075e-05, 3.7847000000000575e-05, 3.819500000000475e-05, 3.8166999999998674e-05, 3.8152999999999104e-05, 3.750000000000281e-05, 3.851400000000338e-05, 3.765199999999913e-05, 3.766700000000511e-05, 3.7666999999998174e-05, 3.76659999999987e-05, 3.804199999999508e-05, 3.774999999999612e-05, 3.7847000000000575e-05, 3.768100000000468e-05, 3.797200000000417e-05, 3.801399999999594e-05, 3.781999999999397e-05, 3.8222999999996954e-05, 3.749999999999587e-05, 3.7666999999998174e-05, 3.7555000000001615e-05, 3.7680999999997744e-05, 3.750000000000281e-05, 3.752800000000195e-05, 3.858400000000123e-05, 3.786199999999962e-05, 3.76659999999987e-05, 3.8347000000001075e-05, 3.802800000000245e-05, 3.8333000000001505e-05, 3.818000000000571e-05, 3.7804999999994926e-05, 3.7861000000000145e-05, 3.779199999999483e-05, 3.7805000000001865e-05, 3.833400000000098e-05, 3.81659999999992e-05, 3.7569000000001185e-05, 3.7680999999997744e-05, 3.7652999999998604e-05, 3.749999999999587e-05, 3.824999999999662e-05, 3.7652999999998604e-05, 3.799999999999637e-05, 3.751399999999544e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.510" endtime="20201030 15:52:14.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.498" endtime="20201030 15:52:14.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.525" endtime="20201030 15:52:14.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.521" endtime="20201030 15:52:14.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.518" endtime="20201030 15:52:14.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.040" endtime="20201030 15:52:14.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.038" endtime="20201030 15:52:14.550"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.572" endtime="20201030 15:52:14.588"></status>
</kw>
<msg timestamp="20201030 15:52:14.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.569" endtime="20201030 15:52:14.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.591" endtime="20201030 15:52:14.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.598" endtime="20201030 15:52:14.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.562" endtime="20201030 15:52:14.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.556" endtime="20201030 15:52:14.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.621" endtime="20201030 15:52:14.956"></status>
</kw>
<msg timestamp="20201030 15:52:14.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03908, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039117972, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:14.617" endtime="20201030 15:52:14.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03908, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039117972, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:14.965" endtime="20201030 15:52:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.983" endtime="20201030 15:52:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.610" endtime="20201030 15:52:14.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.606" endtime="20201030 15:52:14.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.001" level="INFO">${RESULT} = [{'diff': 3.797200000000417e-05}, {'diff': 3.790200000000632e-05}, {'diff': 3.782000000000091e-05}, {'diff': 3.750000000000281e-05}, {'diff': 3.797200000000417e-05}, {'diff': 3.74859999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:14.992" endtime="20201030 15:52:15.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.010" level="INFO">${ACCURACY} = {'diff': [3.797200000000417e-05, 3.790200000000632e-05, 3.782000000000091e-05, 3.750000000000281e-05, 3.797200000000417e-05, 3.74859999999963e-05, 3.819399999999834e-05, 3.8333000000001505e-05, 3.7833...</msg>
<status status="PASS" starttime="20201030 15:52:15.003" endtime="20201030 15:52:15.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.021" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.019" endtime="20201030 15:52:15.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.026" level="INFO">VALUE: [3.797200000000417e-05, 3.790200000000632e-05, 3.782000000000091e-05, 3.750000000000281e-05, 3.797200000000417e-05, 3.74859999999963e-05, 3.819399999999834e-05, 3.8333000000001505e-05, 3.7833000000001005e-05, 3.8416999999998924e-05, 3.7847000000000575e-05, 3.76659999999987e-05, 3.7847000000000575e-05, 3.826400000000313e-05, 3.750000000000281e-05, 3.77780000000022e-05, 3.81659999999992e-05, 3.8180999999998244e-05, 3.799999999999637e-05, 3.834800000000055e-05, 3.7680999999997744e-05, 3.7888999999999284e-05, 3.74859999999963e-05, 3.7819000000001435e-05, 3.7666999999998174e-05, 3.8166999999998674e-05, 3.7833000000001005e-05, 3.8332999999994566e-05, 3.801400000000288e-05, 3.800000000000331e-05, 3.782000000000091e-05, 3.7847000000000575e-05, 3.833400000000098e-05, 3.798600000000374e-05, 3.822200000000442e-05, 3.8332999999994566e-05, 3.851399999999644e-05, 3.8361000000000645e-05, 3.8152999999999104e-05, 3.834800000000055e-05, 3.7805000000001865e-05, 3.765300000000554e-05, 3.8166999999998674e-05, 3.7847000000000575e-05, 3.7916999999998424e-05, 3.780600000000134e-05, 3.7847000000000575e-05, 3.765199999999913e-05, 3.798600000000374e-05, 3.8180999999998244e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.023" endtime="20201030 15:52:15.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.012" endtime="20201030 15:52:15.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.038" endtime="20201030 15:52:15.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.034" endtime="20201030 15:52:15.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.032" endtime="20201030 15:52:15.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.552" endtime="20201030 15:52:15.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.551" endtime="20201030 15:52:15.063"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.086" endtime="20201030 15:52:15.103"></status>
</kw>
<msg timestamp="20201030 15:52:15.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.082" endtime="20201030 15:52:15.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.106" endtime="20201030 15:52:15.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.112" endtime="20201030 15:52:15.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.075" endtime="20201030 15:52:15.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.070" endtime="20201030 15:52:15.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.135" endtime="20201030 15:52:15.467"></status>
</kw>
<msg timestamp="20201030 15:52:15.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040459389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040497403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.132" endtime="20201030 15:52:15.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040459389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040497403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.476" endtime="20201030 15:52:15.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.495" endtime="20201030 15:52:15.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.125" endtime="20201030 15:52:15.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.120" endtime="20201030 15:52:15.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.513" level="INFO">${RESULT} = [{'diff': 3.801400000000288e-05}, {'diff': 3.776399999999569e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.782000000000091e-05}, {'diff': 3.849999999999687e-05}, {'diff': 3.7652999999998604e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:15.504" endtime="20201030 15:52:15.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.522" level="INFO">${ACCURACY} = {'diff': [3.801400000000288e-05, 3.776399999999569e-05, 3.7652999999998604e-05, 3.782000000000091e-05, 3.849999999999687e-05, 3.7652999999998604e-05, 3.783400000000048e-05, 3.7666999999998174e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:52:15.515" endtime="20201030 15:52:15.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.533" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.531" endtime="20201030 15:52:15.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.539" level="INFO">VALUE: [3.801400000000288e-05, 3.776399999999569e-05, 3.7652999999998604e-05, 3.782000000000091e-05, 3.849999999999687e-05, 3.7652999999998604e-05, 3.783400000000048e-05, 3.7666999999998174e-05, 3.8555000000002615e-05, 3.8347000000001075e-05, 3.850000000000381e-05, 3.8347000000001075e-05, 3.74859999999963e-05, 3.783400000000048e-05, 3.763900000000597e-05, 3.8333000000001505e-05, 3.818100000000518e-05, 3.851400000000338e-05, 3.800000000000331e-05, 3.7597000000000325e-05, 3.8319000000001935e-05, 3.8569000000002185e-05, 3.7652999999998604e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.849999999999687e-05, 3.8388999999999784e-05, 3.800000000000331e-05, 3.751399999999544e-05, 3.801399999999594e-05, 3.8318999999994996e-05, 3.8180999999998244e-05, 3.7666999999998174e-05, 3.750000000000281e-05, 3.768100000000468e-05, 3.81659999999992e-05, 3.833400000000098e-05, 3.801400000000288e-05, 3.8347000000001075e-05, 3.815199999999963e-05, 3.800000000000331e-05, 3.8111000000000395e-05, 3.7832999999994066e-05, 3.8318999999994996e-05, 3.801400000000288e-05, 3.8166999999998674e-05, 3.830600000000184e-05, 3.750000000000281e-05, 3.752799999999501e-05, 3.7652999999998604e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.536" endtime="20201030 15:52:15.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.524" endtime="20201030 15:52:15.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.553" endtime="20201030 15:52:15.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.547" endtime="20201030 15:52:15.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.544" endtime="20201030 15:52:15.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.065" endtime="20201030 15:52:15.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.064" endtime="20201030 15:52:15.577"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.600" endtime="20201030 15:52:15.617"></status>
</kw>
<msg timestamp="20201030 15:52:15.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.597" endtime="20201030 15:52:15.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.620" endtime="20201030 15:52:15.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.627" endtime="20201030 15:52:15.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.590" endtime="20201030 15:52:15.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.584" endtime="20201030 15:52:15.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.650" endtime="20201030 15:52:16.003"></status>
</kw>
<msg timestamp="20201030 15:52:16.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039074264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039111931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.646" endtime="20201030 15:52:16.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039074264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039111931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.012" endtime="20201030 15:52:16.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.031" endtime="20201030 15:52:16.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.639" endtime="20201030 15:52:16.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.635" endtime="20201030 15:52:16.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.049" level="INFO">${RESULT} = [{'diff': 3.766700000000511e-05}, {'diff': 3.748600000000324e-05}, {'diff': 3.8152999999999104e-05}, {'diff': 3.751399999999544e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.851399999999644e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:16.040" endtime="20201030 15:52:16.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.060" level="INFO">${ACCURACY} = {'diff': [3.766700000000511e-05, 3.748600000000324e-05, 3.8152999999999104e-05, 3.751399999999544e-05, 3.7652999999998604e-05, 3.851399999999644e-05, 3.8333000000001505e-05, 3.768100000000468e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:52:16.051" endtime="20201030 15:52:16.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.071" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.069" endtime="20201030 15:52:16.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.077" level="INFO">VALUE: [3.766700000000511e-05, 3.748600000000324e-05, 3.8152999999999104e-05, 3.751399999999544e-05, 3.7652999999998604e-05, 3.851399999999644e-05, 3.8333000000001505e-05, 3.768100000000468e-05, 3.8347000000001075e-05, 3.76659999999987e-05, 3.8166999999998674e-05, 3.830600000000184e-05, 3.8152999999999104e-05, 3.8166999999998674e-05, 3.770799999999741e-05, 3.8152999999999104e-05, 3.801400000000288e-05, 3.8138999999999534e-05, 3.833399999999404e-05, 3.8402999999999354e-05, 3.8333000000001505e-05, 3.8166999999998674e-05, 3.8305000000002365e-05, 3.799999999999637e-05, 3.7833000000001005e-05, 3.7526999999995536e-05, 3.768100000000468e-05, 3.7832999999994066e-05, 3.833400000000098e-05, 3.770799999999741e-05, 3.770900000000382e-05, 3.801400000000288e-05, 3.833400000000098e-05, 3.799999999999637e-05, 3.75979999999998e-05, 3.766600000000564e-05, 3.8111000000000395e-05, 3.822200000000442e-05, 3.8319000000001935e-05, 3.832000000000141e-05, 3.8472999999997204e-05, 3.834800000000055e-05, 3.851399999999644e-05, 3.833399999999404e-05, 3.754200000000152e-05, 3.798600000000374e-05, 3.852800000000295e-05, 3.801400000000288e-05, 3.81659999999992e-05, 3.8180999999998244e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.074" endtime="20201030 15:52:16.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.062" endtime="20201030 15:52:16.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.090" endtime="20201030 15:52:16.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.085" endtime="20201030 15:52:16.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.083" endtime="20201030 15:52:16.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.580" endtime="20201030 15:52:16.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.578" endtime="20201030 15:52:16.115"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.138" endtime="20201030 15:52:16.155"></status>
</kw>
<msg timestamp="20201030 15:52:16.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.135" endtime="20201030 15:52:16.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.159" endtime="20201030 15:52:16.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.165" endtime="20201030 15:52:16.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.127" endtime="20201030 15:52:16.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.122" endtime="20201030 15:52:16.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.188" endtime="20201030 15:52:16.532"></status>
</kw>
<msg timestamp="20201030 15:52:16.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040282667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040321181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.184" endtime="20201030 15:52:16.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040282667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040321181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.542" endtime="20201030 15:52:16.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.561" endtime="20201030 15:52:16.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.177" endtime="20201030 15:52:16.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.173" endtime="20201030 15:52:16.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.578" level="INFO">${RESULT} = [{'diff': 3.851399999999644e-05}, {'diff': 3.7680999999997744e-05}, {'diff': 3.836200000000012e-05}, {'diff': 3.784800000000005e-05}, {'diff': 3.8318999999994996e-05}, {'diff': 3.772199999999698e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:16.569" endtime="20201030 15:52:16.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.589" level="INFO">${ACCURACY} = {'diff': [3.851399999999644e-05, 3.7680999999997744e-05, 3.836200000000012e-05, 3.784800000000005e-05, 3.8318999999994996e-05, 3.772199999999698e-05, 3.8361000000000645e-05, 3.748600000000324e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:52:16.580" endtime="20201030 15:52:16.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.600" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.597" endtime="20201030 15:52:16.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.605" level="INFO">VALUE: [3.851399999999644e-05, 3.7680999999997744e-05, 3.836200000000012e-05, 3.784800000000005e-05, 3.8318999999994996e-05, 3.772199999999698e-05, 3.8361000000000645e-05, 3.748600000000324e-05, 3.817999999999877e-05, 3.7832999999994066e-05, 3.751400000000238e-05, 3.822200000000442e-05, 3.819399999999834e-05, 3.751400000000238e-05, 3.7861000000000145e-05, 3.790199999999938e-05, 3.852800000000295e-05, 3.782000000000091e-05, 3.817999999999877e-05, 3.817999999999877e-05, 3.834800000000055e-05, 3.800000000000331e-05, 3.8347000000001075e-05, 3.8361000000000645e-05, 3.7680999999997744e-05, 3.767999999999827e-05, 3.817999999999877e-05, 3.8375000000000214e-05, 3.7847000000000575e-05, 3.850000000000381e-05, 3.7818999999994496e-05, 3.8402999999999354e-05, 3.784800000000005e-05, 3.751400000000238e-05, 3.769399999999784e-05, 3.8152999999999104e-05, 3.8375000000000214e-05, 3.799999999999637e-05, 3.833400000000098e-05, 3.750000000000281e-05, 3.7847000000000575e-05, 3.836199999999318e-05, 3.7680999999997744e-05, 3.804200000000202e-05, 3.7818999999994496e-05, 3.856999999999472e-05, 3.751400000000238e-05, 3.766700000000511e-05, 3.802800000000245e-05, 3.752800000000195e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.602" endtime="20201030 15:52:16.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.591" endtime="20201030 15:52:16.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.617" endtime="20201030 15:52:16.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.613" endtime="20201030 15:52:16.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.611" endtime="20201030 15:52:16.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.117" endtime="20201030 15:52:16.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.116" endtime="20201030 15:52:16.643"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.665" endtime="20201030 15:52:16.682"></status>
</kw>
<msg timestamp="20201030 15:52:16.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.662" endtime="20201030 15:52:16.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.685" endtime="20201030 15:52:16.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.691" endtime="20201030 15:52:16.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.655" endtime="20201030 15:52:16.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.649" endtime="20201030 15:52:16.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.714" endtime="20201030 15:52:17.061"></status>
</kw>
<msg timestamp="20201030 15:52:17.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039124903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039162486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.711" endtime="20201030 15:52:17.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039124903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039162486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.071" endtime="20201030 15:52:17.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.089" endtime="20201030 15:52:17.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.704" endtime="20201030 15:52:17.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.700" endtime="20201030 15:52:17.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.106" level="INFO">${RESULT} = [{'diff': 3.7583000000000755e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.751399999999544e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.823599999999705e-05...</msg>
<status status="PASS" starttime="20201030 15:52:17.097" endtime="20201030 15:52:17.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.116" level="INFO">${ACCURACY} = {'diff': [3.7583000000000755e-05, 3.8347000000001075e-05, 3.751399999999544e-05, 3.8138999999999534e-05, 3.8347000000001075e-05, 3.823599999999705e-05, 3.8347000000001075e-05, 3.852800000000295e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:52:17.108" endtime="20201030 15:52:17.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.126" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.124" endtime="20201030 15:52:17.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.132" level="INFO">VALUE: [3.7583000000000755e-05, 3.8347000000001075e-05, 3.751399999999544e-05, 3.8138999999999534e-05, 3.8347000000001075e-05, 3.823599999999705e-05, 3.8347000000001075e-05, 3.852800000000295e-05, 3.7819000000001435e-05, 3.751400000000238e-05, 3.8166999999998674e-05, 3.802799999999551e-05, 3.816700000000561e-05, 3.7680999999997744e-05, 3.7513000000002905e-05, 3.781999999999397e-05, 3.7818999999994496e-05, 3.76659999999987e-05, 3.817999999999877e-05, 3.766700000000511e-05, 3.815300000000604e-05, 3.818100000000518e-05, 3.8333000000001505e-05, 3.769500000000425e-05, 3.8319000000001935e-05, 3.826399999999619e-05, 3.848600000000424e-05, 3.8152999999999104e-05, 3.8180999999998244e-05, 3.8152999999999104e-05, 3.784800000000005e-05, 3.850000000000381e-05, 3.7638999999999034e-05, 3.8305000000002365e-05, 3.800000000000331e-05, 3.801399999999594e-05, 3.818000000000571e-05, 3.817999999999877e-05, 3.76659999999987e-05, 3.7888999999999284e-05, 3.826399999999619e-05, 3.8347000000001075e-05, 3.8333000000001505e-05, 3.84859999999973e-05, 3.8013000000003405e-05, 3.784800000000005e-05, 3.7847000000000575e-05, 3.800000000000331e-05, 3.81659999999992e-05, 3.8166999999998674e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.129" endtime="20201030 15:52:17.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.117" endtime="20201030 15:52:17.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.144" endtime="20201030 15:52:17.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.140" endtime="20201030 15:52:17.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.137" endtime="20201030 15:52:17.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.645" endtime="20201030 15:52:17.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.643" endtime="20201030 15:52:17.169"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.191" endtime="20201030 15:52:17.210"></status>
</kw>
<msg timestamp="20201030 15:52:17.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.188" endtime="20201030 15:52:17.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.214" endtime="20201030 15:52:17.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.220" endtime="20201030 15:52:17.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.181" endtime="20201030 15:52:17.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.175" endtime="20201030 15:52:17.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.243" endtime="20201030 15:52:17.585"></status>
</kw>
<msg timestamp="20201030 15:52:17.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040772972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.239" endtime="20201030 15:52:17.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040772972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.595" endtime="20201030 15:52:17.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.614" endtime="20201030 15:52:17.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.232" endtime="20201030 15:52:17.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.228" endtime="20201030 15:52:17.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.631" level="INFO">${RESULT} = [{'diff': 4.45139999999955e-05}, {'diff': 4.5013999999996e-05}, {'diff': 4.555600000000215e-05}, {'diff': 4.536200000000018e-05}, {'diff': 4.4681000000004745e-05}, {'diff': 4.491599999999901e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:17.622" endtime="20201030 15:52:17.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.640" level="INFO">${ACCURACY} = {'diff': [4.45139999999955e-05, 4.5013999999996e-05, 4.555600000000215e-05, 4.536200000000018e-05, 4.4681000000004745e-05, 4.491599999999901e-05, 4.45269999999956e-05, 4.469400000000484e-05, 4.5513999...</msg>
<status status="PASS" starttime="20201030 15:52:17.633" endtime="20201030 15:52:17.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.651" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.649" endtime="20201030 15:52:17.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.656" level="INFO">VALUE: [4.45139999999955e-05, 4.5013999999996e-05, 4.555600000000215e-05, 4.536200000000018e-05, 4.4681000000004745e-05, 4.491599999999901e-05, 4.45269999999956e-05, 4.469400000000484e-05, 4.55139999999965e-05, 4.502799999999557e-05, 4.4833000000001066e-05, 4.55139999999965e-05, 4.4667000000005175e-05, 4.484800000000011e-05, 4.518000000000577e-05, 4.554100000000311e-05, 4.55139999999965e-05, 4.4861000000000206e-05, 4.4680999999997806e-05, 4.519400000000534e-05, 4.4681000000004745e-05, 4.509800000000036e-05, 4.451400000000244e-05, 4.486199999999968e-05, 4.502800000000251e-05, 4.5180999999998306e-05, 4.501400000000294e-05, 4.455600000000115e-05, 4.4861000000000206e-05, 4.519400000000534e-05, 4.495799999999772e-05, 4.555600000000215e-05, 4.450000000000287e-05, 4.4680999999997806e-05, 4.502799999999557e-05, 4.5125000000000026e-05, 4.5361000000000706e-05, 4.451400000000244e-05, 4.48469999999937e-05, 4.5208999999997446e-05, 4.554200000000258e-05, 4.517999999999883e-05, 4.536200000000018e-05, 4.502800000000251e-05, 4.5125000000000026e-05, 4.5209000000004385e-05, 4.4861000000000206e-05, 4.554199999999564e-05, 4.473600000000355e-05, 4.447199999999679e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.653" endtime="20201030 15:52:17.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.642" endtime="20201030 15:52:17.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.674" endtime="20201030 15:52:17.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.664" endtime="20201030 15:52:17.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.662" endtime="20201030 15:52:17.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.171" endtime="20201030 15:52:17.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.170" endtime="20201030 15:52:17.699"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.723" endtime="20201030 15:52:17.743"></status>
</kw>
<msg timestamp="20201030 15:52:17.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.718" endtime="20201030 15:52:17.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.746" endtime="20201030 15:52:17.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.753" endtime="20201030 15:52:17.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.711" endtime="20201030 15:52:17.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.705" endtime="20201030 15:52:17.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.776" endtime="20201030 15:52:18.112"></status>
</kw>
<msg timestamp="20201030 15:52:18.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042159097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042207986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.773" endtime="20201030 15:52:18.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042159097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042207986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.121" endtime="20201030 15:52:18.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.140" endtime="20201030 15:52:18.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.765" endtime="20201030 15:52:18.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.761" endtime="20201030 15:52:18.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.157" level="INFO">${RESULT} = [{'diff': 4.8889000000003346e-05}, {'diff': 4.8486999999999836e-05}, {'diff': 4.834700000000414e-05}, {'diff': 4.827699999999935e-05}, {'diff': 4.8445000000001126e-05}, {'diff': 4.887499999999684e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:18.148" endtime="20201030 15:52:18.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.167" level="INFO">${ACCURACY} = {'diff': [4.8889000000003346e-05, 4.8486999999999836e-05, 4.834700000000414e-05, 4.827699999999935e-05, 4.8445000000001126e-05, 4.887499999999684e-05, 4.847200000000079e-05, 4.906999999999828e-05, 4.8...</msg>
<status status="PASS" starttime="20201030 15:52:18.159" endtime="20201030 15:52:18.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.178" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.176" endtime="20201030 15:52:18.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.184" level="INFO">VALUE: [4.8889000000003346e-05, 4.8486999999999836e-05, 4.834700000000414e-05, 4.827699999999935e-05, 4.8445000000001126e-05, 4.887499999999684e-05, 4.847200000000079e-05, 4.906999999999828e-05, 4.886099999999727e-05, 4.862499999999659e-05, 4.875000000000018e-05, 4.831999999999753e-05, 4.85139999999995e-05, 4.866600000000276e-05, 4.902799999999957e-05, 4.824999999999968e-05, 4.847200000000079e-05, 4.893099999999512e-05, 4.8429999999995144e-05, 4.848600000000036e-05, 4.915200000000369e-05, 4.843099999999462e-05, 4.908299999999838e-05, 4.85139999999995e-05, 4.875000000000018e-05, 4.829199999999839e-05, 4.924999999999374e-05, 4.904199999999914e-05, 4.8639000000003096e-05, 4.891699999999555e-05, 4.8695000000001376e-05, 4.880599999999846e-05, 4.833299999999763e-05, 4.9181000000002306e-05, 4.912499999999709e-05, 4.8473000000000266e-05, 4.9181000000002306e-05, 4.823600000000011e-05, 4.8957999999994783e-05, 4.827799999999882e-05, 4.904199999999914e-05, 4.909700000000489e-05, 4.902799999999957e-05, 4.820800000000097e-05, 4.909700000000489e-05, 4.836099999999677e-05, 4.891600000000301e-05, 4.909800000000436e-05, 4.911099999999752e-05, 4.923600000000111e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.180" endtime="20201030 15:52:18.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.169" endtime="20201030 15:52:18.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.196" endtime="20201030 15:52:18.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.192" endtime="20201030 15:52:18.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.189" endtime="20201030 15:52:18.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.701" endtime="20201030 15:52:18.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.700" endtime="20201030 15:52:18.221"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.243" endtime="20201030 15:52:18.260"></status>
</kw>
<msg timestamp="20201030 15:52:18.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.240" endtime="20201030 15:52:18.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.263" endtime="20201030 15:52:18.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.270" endtime="20201030 15:52:18.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.233" endtime="20201030 15:52:18.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.227" endtime="20201030 15:52:18.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.292" endtime="20201030 15:52:18.639"></status>
</kw>
<msg timestamp="20201030 15:52:18.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038831903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038881986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.289" endtime="20201030 15:52:18.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038831903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038881986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.648" endtime="20201030 15:52:18.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.667" endtime="20201030 15:52:18.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.282" endtime="20201030 15:52:18.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.278" endtime="20201030 15:52:18.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.684" level="INFO">${RESULT} = [{'diff': 5.008299999999938e-05}, {'diff': 5.025000000000168e-05}, {'diff': 4.948599999999442e-05}, {'diff': 4.980599999999946e-05}, {'diff': 5.000000000000143e-05}, {'diff': 4.9417000000002986e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:18.676" endtime="20201030 15:52:18.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.696" level="INFO">${ACCURACY} = {'diff': [5.008299999999938e-05, 5.025000000000168e-05, 4.948599999999442e-05, 4.980599999999946e-05, 5.000000000000143e-05, 4.9417000000002986e-05, 4.955600000000615e-05, 5.011100000000546e-05, 4.984...</msg>
<status status="PASS" starttime="20201030 15:52:18.686" endtime="20201030 15:52:18.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.707" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.704" endtime="20201030 15:52:18.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.712" level="INFO">VALUE: [5.008299999999938e-05, 5.025000000000168e-05, 4.948599999999442e-05, 4.980599999999946e-05, 5.000000000000143e-05, 4.9417000000002986e-05, 4.955600000000615e-05, 5.011100000000546e-05, 4.98469999999987e-05, 5.0207999999996034e-05, 4.979100000000042e-05, 4.950000000000093e-05, 4.9721999999995103e-05, 5.018000000000383e-05, 4.929099999999992e-05, 4.938899999999691e-05, 4.979100000000042e-05, 4.9903000000003916e-05, 4.9429999999996144e-05, 5.022200000000254e-05, 4.972200000000204e-05, 5.006899999999981e-05, 5.005599999999971e-05, 5.025000000000168e-05, 5.006999999999928e-05, 4.947200000000179e-05, 4.93469999999982e-05, 4.951399999999356e-05, 4.956999999999878e-05, 4.955599999999921e-05, 5.025000000000168e-05, 5.025000000000168e-05, 5.002800000000057e-05, 5.011099999999852e-05, 4.961100000000496e-05, 5.026400000000125e-05, 4.929099999999992e-05, 4.959699999999845e-05, 5.013899999999766e-05, 4.994499999999569e-05, 5.000000000000143e-05, 4.9917000000003486e-05, 5.000000000000143e-05, 4.9679999999996394e-05, 5.008399999999885e-05, 4.93339999999981e-05, 4.961099999999802e-05, 4.986099999999827e-05, 4.9375000000004277e-05, 4.950000000000093e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.709" endtime="20201030 15:52:18.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.697" endtime="20201030 15:52:18.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.791" endtime="20201030 15:52:18.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.786" endtime="20201030 15:52:18.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.784" endtime="20201030 15:52:18.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.223" endtime="20201030 15:52:18.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.221" endtime="20201030 15:52:18.816"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.838" endtime="20201030 15:52:18.856"></status>
</kw>
<msg timestamp="20201030 15:52:18.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.835" endtime="20201030 15:52:18.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.860" endtime="20201030 15:52:18.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.866" endtime="20201030 15:52:18.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.828" endtime="20201030 15:52:18.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.822" endtime="20201030 15:52:18.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.889" endtime="20201030 15:52:19.226"></status>
</kw>
<msg timestamp="20201030 15:52:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039769181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039819431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.886" endtime="20201030 15:52:19.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039769181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039819431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.235" endtime="20201030 15:52:19.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.254" endtime="20201030 15:52:19.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.879" endtime="20201030 15:52:19.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.874" endtime="20201030 15:52:19.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.271" level="INFO">${RESULT} = [{'diff': 5.025000000000168e-05}, {'diff': 5.0681000000003806e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.077700000000185e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.055600000000021e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:19.263" endtime="20201030 15:52:19.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.281" level="INFO">${ACCURACY} = {'diff': [5.025000000000168e-05, 5.0681000000003806e-05, 5.112499999999909e-05, 5.077700000000185e-05, 5.030599999999996e-05, 5.055600000000021e-05, 5.076399999999481e-05, 5.055500000000074e-05, 5.030...</msg>
<status status="PASS" starttime="20201030 15:52:19.273" endtime="20201030 15:52:19.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.292" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.289" endtime="20201030 15:52:19.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.297" level="INFO">VALUE: [5.025000000000168e-05, 5.0681000000003806e-05, 5.112499999999909e-05, 5.077700000000185e-05, 5.030599999999996e-05, 5.055600000000021e-05, 5.076399999999481e-05, 5.055500000000074e-05, 5.030599999999996e-05, 5.105500000000124e-05, 5.075000000000218e-05, 5.126399999999531e-05, 5.032000000000647e-05, 5.1014000000002e-05, 5.03339999999991e-05, 5.109699999999995e-05, 5.0971999999996354e-05, 5.1181000000004306e-05, 5.087499999999884e-05, 5.083300000000013e-05, 5.031999999999953e-05, 5.068099999999687e-05, 5.0193999999996464e-05, 5.0387999999998434e-05, 5.125000000000268e-05, 5.063899999999816e-05, 5.033300000000657e-05, 5.068000000000433e-05, 5.093099999999712e-05, 5.108300000000038e-05, 5.094400000000415e-05, 5.050000000000193e-05, 5.036099999999877e-05, 5.031900000000006e-05, 5.033299999999963e-05, 5.107000000000028e-05, 5.091699999999755e-05, 5.068000000000433e-05, 5.109799999999942e-05, 5.048600000000236e-05, 5.065299999999773e-05, 5.031999999999953e-05, 5.0429999999997144e-05, 5.0459000000002696e-05, 5.088899999999841e-05, 5.074999999999524e-05, 5.058299999999988e-05, 5.056900000000031e-05, 5.105600000000071e-05, 5.043099999999662e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.294" endtime="20201030 15:52:19.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.283" endtime="20201030 15:52:19.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.310" endtime="20201030 15:52:19.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.305" endtime="20201030 15:52:19.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.303" endtime="20201030 15:52:19.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.818" endtime="20201030 15:52:19.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.816" endtime="20201030 15:52:19.335"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.357" endtime="20201030 15:52:19.377"></status>
</kw>
<msg timestamp="20201030 15:52:19.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.354" endtime="20201030 15:52:19.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.380" endtime="20201030 15:52:19.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.386" endtime="20201030 15:52:19.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.347" endtime="20201030 15:52:19.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.341" endtime="20201030 15:52:19.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.410" endtime="20201030 15:52:19.744"></status>
</kw>
<msg timestamp="20201030 15:52:19.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041008472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041059986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.407" endtime="20201030 15:52:19.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041008472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041059986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.754" endtime="20201030 15:52:19.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.773" endtime="20201030 15:52:19.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.400" endtime="20201030 15:52:19.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.395" endtime="20201030 15:52:19.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.790" level="INFO">${RESULT} = [{'diff': 5.15140000000025e-05}, {'diff': 5.1471999999996854e-05}, {'diff': 5.179200000000189e-05}, {'diff': 5.207000000000128e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.222299999999708e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:19.781" endtime="20201030 15:52:19.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.800" level="INFO">${ACCURACY} = {'diff': [5.15140000000025e-05, 5.1471999999996854e-05, 5.179200000000189e-05, 5.207000000000128e-05, 5.187499999999984e-05, 5.222299999999708e-05, 5.173600000000361e-05, 5.181899999999462e-05, 5.1374...</msg>
<status status="PASS" starttime="20201030 15:52:19.792" endtime="20201030 15:52:19.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.810" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.808" endtime="20201030 15:52:19.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.816" level="INFO">VALUE: [5.15140000000025e-05, 5.1471999999996854e-05, 5.179200000000189e-05, 5.207000000000128e-05, 5.187499999999984e-05, 5.222299999999708e-05, 5.173600000000361e-05, 5.181899999999462e-05, 5.137499999999934e-05, 5.161100000000002e-05, 5.137499999999934e-05, 5.129200000000139e-05, 5.172200000000404e-05, 5.1971999999997354e-05, 5.215299999999923e-05, 5.229199999999545e-05, 5.154100000000217e-05, 5.188899999999941e-05, 5.209700000000095e-05, 5.138899999999891e-05, 5.200000000000343e-05, 5.218099999999837e-05, 5.137499999999934e-05, 5.211199999999999e-05, 5.2249999999996743e-05, 5.152799999999513e-05, 5.159700000000045e-05, 5.162499999999959e-05, 5.213899999999966e-05, 5.2165999999999324e-05, 5.198600000000386e-05, 5.1737000000003086e-05, 5.206900000000181e-05, 5.202800000000257e-05, 5.1499999999995993e-05, 5.187499999999984e-05, 5.190299999999898e-05, 5.1387999999999434e-05, 5.162499999999959e-05, 5.191699999999855e-05, 5.175000000000318e-05, 5.1917000000005487e-05, 5.1721999999997104e-05, 5.126399999999531e-05, 5.145899999999676e-05, 5.130500000000149e-05, 5.2235999999997174e-05, 5.213899999999966e-05, 5.18470000000007e-05, 5.129200000000139e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.813" endtime="20201030 15:52:19.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.801" endtime="20201030 15:52:19.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.830" endtime="20201030 15:52:19.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.824" endtime="20201030 15:52:19.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.821" endtime="20201030 15:52:19.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.337" endtime="20201030 15:52:19.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.336" endtime="20201030 15:52:19.855"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.878" endtime="20201030 15:52:19.895"></status>
</kw>
<msg timestamp="20201030 15:52:19.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.874" endtime="20201030 15:52:19.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.899" endtime="20201030 15:52:19.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.905" endtime="20201030 15:52:19.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.867" endtime="20201030 15:52:19.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.861" endtime="20201030 15:52:19.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.929" endtime="20201030 15:52:20.271"></status>
</kw>
<msg timestamp="20201030 15:52:20.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03965725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039710306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:19.925" endtime="20201030 15:52:20.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03965725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039710306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:20.281" endtime="20201030 15:52:20.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.300" endtime="20201030 15:52:20.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.918" endtime="20201030 15:52:20.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.913" endtime="20201030 15:52:20.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.317" level="INFO">${RESULT} = [{'diff': 5.305600000000271e-05}, {'diff': 5.230599999999502e-05}, {'diff': 5.28470000000017e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.237500000000034e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:20.308" endtime="20201030 15:52:20.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.327" level="INFO">${ACCURACY} = {'diff': [5.305600000000271e-05, 5.230599999999502e-05, 5.28470000000017e-05, 5.287500000000084e-05, 5.26669999999993e-05, 5.237500000000034e-05, 5.244400000000565e-05, 5.31669999999998e-05, 5.2930999...</msg>
<status status="PASS" starttime="20201030 15:52:20.319" endtime="20201030 15:52:20.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.338" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.336" endtime="20201030 15:52:20.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.344" level="INFO">VALUE: [5.305600000000271e-05, 5.230599999999502e-05, 5.28470000000017e-05, 5.287500000000084e-05, 5.26669999999993e-05, 5.237500000000034e-05, 5.244400000000565e-05, 5.31669999999998e-05, 5.293099999999912e-05, 5.229099999999598e-05, 5.245899999999776e-05, 5.2957999999998784e-05, 5.227800000000282e-05, 5.323600000000511e-05, 5.318099999999937e-05, 5.232000000000153e-05, 5.293099999999912e-05, 5.2971999999998354e-05, 5.280499999999605e-05, 5.294499999999869e-05, 5.2402000000000004e-05, 5.247299999999733e-05, 5.3221999999998604e-05, 5.262500000000059e-05, 5.2457999999998284e-05, 5.312500000000109e-05, 5.304099999999673e-05, 5.2763999999996813e-05, 5.256900000000231e-05, 5.281900000000256e-05, 5.236200000000024e-05, 5.2931000000006057e-05, 5.229100000000292e-05, 5.298600000000486e-05, 5.283299999999519e-05, 5.262500000000059e-05, 5.319499999999894e-05, 5.241699999999905e-05, 5.279199999999595e-05, 5.294499999999869e-05, 5.2693999999998964e-05, 5.2499999999996994e-05, 5.2457999999998284e-05, 5.3179999999999894e-05, 5.3014000000004e-05, 5.262500000000059e-05, 5.280600000000246e-05, 5.241699999999905e-05, 5.312500000000109e-05, 5.237500000000034e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.341" endtime="20201030 15:52:20.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.329" endtime="20201030 15:52:20.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.356" endtime="20201030 15:52:20.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.352" endtime="20201030 15:52:20.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.350" endtime="20201030 15:52:20.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.857" endtime="20201030 15:52:20.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.856" endtime="20201030 15:52:20.382"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.404" endtime="20201030 15:52:20.422"></status>
</kw>
<msg timestamp="20201030 15:52:20.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.401" endtime="20201030 15:52:20.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.425" endtime="20201030 15:52:20.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.432" endtime="20201030 15:52:20.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.394" endtime="20201030 15:52:20.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.388" endtime="20201030 15:52:20.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.455" endtime="20201030 15:52:20.793"></status>
</kw>
<msg timestamp="20201030 15:52:20.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039546667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.452" endtime="20201030 15:52:20.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039546667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039600917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.802" endtime="20201030 15:52:20.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.821" endtime="20201030 15:52:20.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.444" endtime="20201030 15:52:20.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.440" endtime="20201030 15:52:20.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.838" level="INFO">${RESULT} = [{'diff': 5.4249999999998744e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.3944000000000214e-05}, {'diff': 5.408299999999644e-05}, {'diff': 5.3971999999999354e-05}, {'diff': 5.363900000000116e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:20.829" endtime="20201030 15:52:20.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.850" level="INFO">${ACCURACY} = {'diff': [5.4249999999998744e-05, 5.362500000000159e-05, 5.3944000000000214e-05, 5.408299999999644e-05, 5.3971999999999354e-05, 5.363900000000116e-05, 5.3777999999997383e-05, 5.368099999999987e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:20.840" endtime="20201030 15:52:20.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.861" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.858" endtime="20201030 15:52:20.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.866" level="INFO">VALUE: [5.4249999999998744e-05, 5.362500000000159e-05, 5.3944000000000214e-05, 5.408299999999644e-05, 5.3971999999999354e-05, 5.363900000000116e-05, 5.3777999999997383e-05, 5.368099999999987e-05, 5.405599999999677e-05, 5.3971999999999354e-05, 5.3721999999999104e-05, 5.4027999999997633e-05, 5.3513999999997564e-05, 5.331900000000306e-05, 5.329199999999645e-05, 5.331999999999559e-05, 5.409699999999601e-05, 5.4249999999998744e-05, 5.3513999999997564e-05, 5.334699999999526e-05, 5.340300000000048e-05, 5.388900000000141e-05, 5.4194000000000464e-05, 5.3402000000001004e-05, 5.35140000000045e-05, 5.337500000000134e-05, 5.3499999999997994e-05, 5.409700000000295e-05, 5.4277999999997883e-05, 5.3971999999999354e-05, 5.409800000000242e-05, 5.361100000000202e-05, 5.3930000000000644e-05, 5.3763999999997814e-05, 5.337500000000134e-05, 5.369499999999944e-05, 5.3443999999999714e-05, 5.365300000000073e-05, 5.3527999999997133e-05, 5.395899999999926e-05, 5.407000000000328e-05, 5.340300000000048e-05, 5.332000000000253e-05, 5.3902000000001504e-05, 5.420899999999951e-05, 5.387500000000184e-05, 5.388899999999447e-05, 5.33470000000022e-05, 5.40549999999973e-05, 5.358399999999541e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.863" endtime="20201030 15:52:20.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.851" endtime="20201030 15:52:20.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.879" endtime="20201030 15:52:20.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.874" endtime="20201030 15:52:20.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.872" endtime="20201030 15:52:20.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.384" endtime="20201030 15:52:20.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.382" endtime="20201030 15:52:20.904"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.926" endtime="20201030 15:52:20.944"></status>
</kw>
<msg timestamp="20201030 15:52:20.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.923" endtime="20201030 15:52:20.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.948" endtime="20201030 15:52:20.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.954" endtime="20201030 15:52:20.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.916" endtime="20201030 15:52:20.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.910" endtime="20201030 15:52:20.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.977" endtime="20201030 15:52:21.315"></status>
</kw>
<msg timestamp="20201030 15:52:21.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039568375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.974" endtime="20201030 15:52:21.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039568375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.325" endtime="20201030 15:52:21.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.344" endtime="20201030 15:52:21.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.967" endtime="20201030 15:52:21.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.962" endtime="20201030 15:52:21.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.361" level="INFO">${RESULT} = [{'diff': 5.459699999999651e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.436099999999583e-05}, {'diff': 5.48749999999959e-05}, {'diff': 5.5222000000000604e-05}, {'diff': 5.4416000000001574e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:21.352" endtime="20201030 15:52:21.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.370" level="INFO">${ACCURACY} = {'diff': [5.459699999999651e-05, 5.4735999999999674e-05, 5.436099999999583e-05, 5.48749999999959e-05, 5.5222000000000604e-05, 5.4416000000001574e-05, 5.450000000000593e-05, 5.4999999999999494e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:52:21.363" endtime="20201030 15:52:21.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.381" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.379" endtime="20201030 15:52:21.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.387" level="INFO">VALUE: [5.459699999999651e-05, 5.4735999999999674e-05, 5.436099999999583e-05, 5.48749999999959e-05, 5.5222000000000604e-05, 5.4416000000001574e-05, 5.450000000000593e-05, 5.4999999999999494e-05, 5.506899999999787e-05, 5.5249999999999744e-05, 5.4901999999995565e-05, 5.497299999999983e-05, 5.445899999999976e-05, 5.4972000000000354e-05, 5.480499999999805e-05, 5.5194000000001464e-05, 5.4638000000002684e-05, 5.487500000000284e-05, 5.441699999999411e-05, 5.484699999999676e-05, 5.486100000000327e-05, 5.4708000000000534e-05, 5.4277999999997883e-05, 5.440300000000148e-05, 5.486099999999633e-05, 5.483300000000413e-05, 5.4652000000002254e-05, 5.458399999999641e-05, 5.443100000000062e-05, 5.436100000000277e-05, 5.504100000000567e-05, 5.4985999999999924e-05, 5.519500000000094e-05, 5.509800000000342e-05, 5.527800000000582e-05, 5.434699999999626e-05, 5.4985999999999924e-05, 5.461100000000302e-05, 5.465299999999479e-05, 5.461100000000302e-05, 5.438900000000191e-05, 5.5263999999999314e-05, 5.459699999999651e-05, 5.4513999999998564e-05, 5.5263999999999314e-05, 5.479100000000542e-05, 5.462500000000259e-05, 5.461100000000302e-05, 5.507000000000428e-05, 5.5041999999998203e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.383" endtime="20201030 15:52:21.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.372" endtime="20201030 15:52:21.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.399" endtime="20201030 15:52:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.395" endtime="20201030 15:52:21.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.392" endtime="20201030 15:52:21.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.906" endtime="20201030 15:52:21.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.905" endtime="20201030 15:52:21.424"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.447" endtime="20201030 15:52:21.466"></status>
</kw>
<msg timestamp="20201030 15:52:21.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.443" endtime="20201030 15:52:21.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.470" endtime="20201030 15:52:21.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.476" endtime="20201030 15:52:21.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.436" endtime="20201030 15:52:21.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.431" endtime="20201030 15:52:21.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.499" endtime="20201030 15:52:21.853"></status>
</kw>
<msg timestamp="20201030 15:52:21.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041048222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.496" endtime="20201030 15:52:21.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040992514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041048222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.862" endtime="20201030 15:52:21.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.881" endtime="20201030 15:52:21.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.489" endtime="20201030 15:52:21.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.484" endtime="20201030 15:52:21.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.898" level="INFO">${RESULT} = [{'diff': 5.5708000000001534e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.627700000000041e-05}, {'diff': 5.583300000000513e-05}, {'diff': 5.5513999999999564e-05}, {'diff': 5.620900000000151e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:21.889" endtime="20201030 15:52:21.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.907" level="INFO">${ACCURACY} = {'diff': [5.5708000000001534e-05, 5.5472000000000854e-05, 5.627700000000041e-05, 5.583300000000513e-05, 5.5513999999999564e-05, 5.620900000000151e-05, 5.5388000000003434e-05, 5.581999999999809e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:21.900" endtime="20201030 15:52:21.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.918" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.916" endtime="20201030 15:52:21.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.923" level="INFO">VALUE: [5.5708000000001534e-05, 5.5472000000000854e-05, 5.627700000000041e-05, 5.583300000000513e-05, 5.5513999999999564e-05, 5.620900000000151e-05, 5.5388000000003434e-05, 5.581999999999809e-05, 5.572300000000058e-05, 5.5387999999996496e-05, 5.5430000000002144e-05, 5.5415999999995635e-05, 5.611099999999758e-05, 5.6014000000000064e-05, 5.58749999999969e-05, 5.533300000000463e-05, 5.5915999999996135e-05, 5.5944000000002214e-05, 5.530499999999855e-05, 5.590300000000298e-05, 5.601300000000059e-05, 5.53470000000042e-05, 5.5958000000001784e-05, 5.5263999999999314e-05, 5.5722000000001104e-05, 5.531899999999812e-05, 5.606999999999834e-05, 5.5291999999998453e-05, 5.61670000000028e-05, 5.616699999999586e-05, 5.5527999999999134e-05, 5.5527999999999134e-05, 5.5750000000000244e-05, 5.58749999999969e-05, 5.5679999999995455e-05, 5.602800000000657e-05, 5.537500000000334e-05, 5.58749999999969e-05, 5.595900000000126e-05, 5.56949999999945e-05, 5.61670000000028e-05, 5.5986000000000924e-05, 5.6264000000000314e-05, 5.559700000000445e-05, 5.581999999999809e-05, 5.581999999999809e-05, 5.586100000000427e-05, 5.5458000000001284e-05, 5.5458000000001284e-05, 5.5958000000001784e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.920" endtime="20201030 15:52:21.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.909" endtime="20201030 15:52:21.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.937" endtime="20201030 15:52:21.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.932" endtime="20201030 15:52:21.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.929" endtime="20201030 15:52:21.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.426" endtime="20201030 15:52:21.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.425" endtime="20201030 15:52:21.962"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.985" endtime="20201030 15:52:22.002"></status>
</kw>
<msg timestamp="20201030 15:52:22.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.981" endtime="20201030 15:52:22.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.006" endtime="20201030 15:52:22.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.012" endtime="20201030 15:52:22.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.974" endtime="20201030 15:52:22.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.969" endtime="20201030 15:52:22.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.035" endtime="20201030 15:52:22.365"></status>
</kw>
<msg timestamp="20201030 15:52:22.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038791222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038847653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.032" endtime="20201030 15:52:22.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038791222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038847653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.374" endtime="20201030 15:52:22.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.393" endtime="20201030 15:52:22.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.024" endtime="20201030 15:52:22.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.020" endtime="20201030 15:52:22.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.410" level="INFO">${RESULT} = [{'diff': 5.643100000000262e-05}, {'diff': 5.681899999999962e-05}, {'diff': 5.6429999999996205e-05}, {'diff': 5.679100000000048e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.6277999999999884e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:22.401" endtime="20201030 15:52:22.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.420" level="INFO">${ACCURACY} = {'diff': [5.643100000000262e-05, 5.681899999999962e-05, 5.6429999999996205e-05, 5.679100000000048e-05, 5.6500000000000994e-05, 5.6277999999999884e-05, 5.623700000000065e-05, 5.7028000000000634e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:22.412" endtime="20201030 15:52:22.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.431" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.429" endtime="20201030 15:52:22.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.436" level="INFO">VALUE: [5.643100000000262e-05, 5.681899999999962e-05, 5.6429999999996205e-05, 5.679100000000048e-05, 5.6500000000000994e-05, 5.6277999999999884e-05, 5.623700000000065e-05, 5.7028000000000634e-05, 5.65549999999998e-05, 5.691700000000355e-05, 5.651300000000109e-05, 5.6514000000000564e-05, 5.718099999999643e-05, 5.631899999999912e-05, 5.68749999999979e-05, 5.708299999999944e-05, 5.690299999999704e-05, 5.638899999999697e-05, 5.6665999999996886e-05, 5.658399999999841e-05, 5.708299999999944e-05, 5.7250000000001744e-05, 5.7250000000001744e-05, 5.6305999999999023e-05, 5.718100000000337e-05, 5.645900000000176e-05, 5.712499999999815e-05, 5.7193999999996525e-05, 5.684800000000517e-05, 5.7194000000003464e-05, 5.654100000000023e-05, 5.708300000000638e-05, 5.627700000000041e-05, 5.6500000000000994e-05, 5.684699999999876e-05, 5.713899999999772e-05, 5.6458000000002284e-05, 5.6500000000000994e-05, 5.713899999999772e-05, 5.7264000000001314e-05, 5.6750000000001244e-05, 5.6305999999999023e-05, 5.694499999999575e-05, 5.6443999999995775e-05, 5.7014000000001064e-05, 5.641700000000305e-05, 5.661199999999755e-05, 5.6805999999999524e-05, 5.6778000000000384e-05, 5.6915999999997136e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.434" endtime="20201030 15:52:22.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.422" endtime="20201030 15:52:22.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.449" endtime="20201030 15:52:22.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.445" endtime="20201030 15:52:22.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.442" endtime="20201030 15:52:22.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.964" endtime="20201030 15:52:22.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.963" endtime="20201030 15:52:22.474"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.496" endtime="20201030 15:52:22.514"></status>
</kw>
<msg timestamp="20201030 15:52:22.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.493" endtime="20201030 15:52:22.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.517" endtime="20201030 15:52:22.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.524" endtime="20201030 15:52:22.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.486" endtime="20201030 15:52:22.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.480" endtime="20201030 15:52:22.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.546" endtime="20201030 15:52:22.875"></status>
</kw>
<msg timestamp="20201030 15:52:22.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038876722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038934306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.543" endtime="20201030 15:52:22.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038876722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038934306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.885" endtime="20201030 15:52:22.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.903" endtime="20201030 15:52:22.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.536" endtime="20201030 15:52:22.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.532" endtime="20201030 15:52:22.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.920" level="INFO">${RESULT} = [{'diff': 5.7583999999999413e-05}, {'diff': 5.7500000000001994e-05}, {'diff': 5.741700000000405e-05}, {'diff': 5.7514000000001564e-05}, {'diff': 5.8249999999995805e-05}, {'diff': 5.7887999999998996e-0...</msg>
<status status="PASS" starttime="20201030 15:52:22.912" endtime="20201030 15:52:22.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.935" level="INFO">${ACCURACY} = {'diff': [5.7583999999999413e-05, 5.7500000000001994e-05, 5.741700000000405e-05, 5.7514000000001564e-05, 5.8249999999995805e-05, 5.7887999999998996e-05, 5.788899999999847e-05, 5.747299999999539e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:22.922" endtime="20201030 15:52:22.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.946" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.944" endtime="20201030 15:52:22.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.951" level="INFO">VALUE: [5.7583999999999413e-05, 5.7500000000001994e-05, 5.741700000000405e-05, 5.7514000000001564e-05, 5.8249999999995805e-05, 5.7887999999998996e-05, 5.788899999999847e-05, 5.747299999999539e-05, 5.7528000000001134e-05, 5.8264000000002314e-05, 5.773700000000215e-05, 5.7527999999994195e-05, 5.7444000000003714e-05, 5.8014000000002064e-05, 5.816699999999786e-05, 5.745900000000276e-05, 5.802699999999522e-05, 5.733299999999969e-05, 5.75550000000008e-05, 5.7694000000003964e-05, 5.8014000000002064e-05, 5.8250000000002744e-05, 5.7306000000000024e-05, 5.8235999999996235e-05, 5.811099999999958e-05, 5.8263999999995375e-05, 5.8194999999997e-05, 5.795900000000326e-05, 5.745900000000276e-05, 5.7792000000000954e-05, 5.8042000000001204e-05, 5.7958000000003784e-05, 5.759699999999951e-05, 5.7458000000003284e-05, 5.834700000000026e-05, 5.8194999999997e-05, 5.7750000000002244e-05, 5.8042000000001204e-05, 5.7556000000000274e-05, 5.7486000000002424e-05, 5.73749999999984e-05, 5.7763999999994875e-05, 5.7306000000000024e-05, 5.7792000000000954e-05, 5.808300000000044e-05, 5.8056000000000774e-05, 5.7444000000003714e-05, 5.8278000000001884e-05, 5.811099999999958e-05, 5.786099999999933e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.948" endtime="20201030 15:52:22.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.937" endtime="20201030 15:52:22.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.964" endtime="20201030 15:52:22.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.960" endtime="20201030 15:52:22.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.957" endtime="20201030 15:52:22.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.476" endtime="20201030 15:52:22.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.475" endtime="20201030 15:52:22.989"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.011" endtime="20201030 15:52:23.029"></status>
</kw>
<msg timestamp="20201030 15:52:23.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.008" endtime="20201030 15:52:23.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.032" endtime="20201030 15:52:23.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.038" endtime="20201030 15:52:23.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.001" endtime="20201030 15:52:23.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.995" endtime="20201030 15:52:23.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.061" endtime="20201030 15:52:23.394"></status>
</kw>
<msg timestamp="20201030 15:52:23.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039082069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039140875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.058" endtime="20201030 15:52:23.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039082069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039140875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.403" endtime="20201030 15:52:23.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.422" endtime="20201030 15:52:23.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.051" endtime="20201030 15:52:23.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.046" endtime="20201030 15:52:23.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.439" level="INFO">${RESULT} = [{'diff': 5.8806000000001524e-05}, {'diff': 5.85550000000018e-05}, {'diff': 5.8750000000003244e-05}, {'diff': 5.8943999999998276e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.8278000000001884e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:23.430" endtime="20201030 15:52:23.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.449" level="INFO">${ACCURACY} = {'diff': [5.8806000000001524e-05, 5.85550000000018e-05, 5.8750000000003244e-05, 5.8943999999998276e-05, 5.838899999999897e-05, 5.8278000000001884e-05, 5.856900000000137e-05, 5.8513999999995625e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:23.441" endtime="20201030 15:52:23.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.460" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.457" endtime="20201030 15:52:23.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.465" level="INFO">VALUE: [5.8806000000001524e-05, 5.85550000000018e-05, 5.8750000000003244e-05, 5.8943999999998276e-05, 5.838899999999897e-05, 5.8278000000001884e-05, 5.856900000000137e-05, 5.8513999999995625e-05, 5.8472000000003854e-05, 5.9221999999997665e-05, 5.877699999999597e-05, 5.891699999999861e-05, 5.9000000000003494e-05, 5.8791999999995015e-05, 5.8958000000004784e-05, 5.9028000000002634e-05, 5.831900000000112e-05, 5.844500000000419e-05, 5.8834000000000664e-05, 5.8665999999998886e-05, 5.8499999999996055e-05, 5.8320000000000594e-05, 5.831900000000112e-05, 5.854100000000223e-05, 5.8972000000004354e-05, 5.862499999999965e-05, 5.88749999999999e-05, 5.8292000000001454e-05, 5.859700000000051e-05, 5.866699999999836e-05, 5.877700000000291e-05, 5.8750000000003244e-05, 5.9263999999996375e-05, 5.8292000000001454e-05, 5.893099999999818e-05, 5.9264000000003314e-05, 5.880500000000205e-05, 5.8957999999997845e-05, 5.904100000000273e-05, 5.8249999999995805e-05, 5.8820000000001094e-05, 5.905499999999536e-05, 5.8347999999999733e-05, 5.8542000000001704e-05, 5.893099999999818e-05, 5.866699999999836e-05, 5.8958000000004784e-05, 5.919500000000494e-05, 5.834700000000026e-05, 5.890299999999904e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.462" endtime="20201030 15:52:23.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.451" endtime="20201030 15:52:23.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.477" endtime="20201030 15:52:23.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.473" endtime="20201030 15:52:23.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.470" endtime="20201030 15:52:23.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.991" endtime="20201030 15:52:23.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.989" endtime="20201030 15:52:23.502"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.524" endtime="20201030 15:52:23.544"></status>
</kw>
<msg timestamp="20201030 15:52:23.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.521" endtime="20201030 15:52:23.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.547" endtime="20201030 15:52:23.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.553" endtime="20201030 15:52:23.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.514" endtime="20201030 15:52:23.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.508" endtime="20201030 15:52:23.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.576" endtime="20201030 15:52:23.912"></status>
</kw>
<msg timestamp="20201030 15:52:23.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040336319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040396458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.573" endtime="20201030 15:52:23.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040336319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040396458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.922" endtime="20201030 15:52:23.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.941" endtime="20201030 15:52:23.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.566" endtime="20201030 15:52:23.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.561" endtime="20201030 15:52:23.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.958" level="INFO">${RESULT} = [{'diff': 6.013900000000072e-05}, {'diff': 5.9834000000001664e-05}, {'diff': 5.940299999999954e-05}, {'diff': 6.0070000000002344e-05}, {'diff': 5.954099999999629e-05}, {'diff': 5.93750000000004e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:23.949" endtime="20201030 15:52:23.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.967" level="INFO">${ACCURACY} = {'diff': [6.013900000000072e-05, 5.9834000000001664e-05, 5.940299999999954e-05, 6.0070000000002344e-05, 5.954099999999629e-05, 5.93750000000004e-05, 5.9556000000002274e-05, 5.968099999999893e-05, 6.02...</msg>
<status status="PASS" starttime="20201030 15:52:23.960" endtime="20201030 15:52:23.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.978" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.976" endtime="20201030 15:52:23.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.984" level="INFO">VALUE: [6.013900000000072e-05, 5.9834000000001664e-05, 5.940299999999954e-05, 6.0070000000002344e-05, 5.954099999999629e-05, 5.93750000000004e-05, 5.9556000000002274e-05, 5.968099999999893e-05, 6.020899999999857e-05, 6.0028000000003634e-05, 5.9500000000003994e-05, 5.9263999999996375e-05, 5.941699999999911e-05, 5.9486000000004424e-05, 6.0014000000004064e-05, 5.9665999999999886e-05, 5.934700000000126e-05, 5.9443999999998776e-05, 5.966699999999936e-05, 5.9402000000000066e-05, 6.0055999999995835e-05, 6.0249999999997805e-05, 5.977699999999697e-05, 6.011100000000158e-05, 6.020900000000551e-05, 6.0056000000002774e-05, 5.9820000000002094e-05, 6.004099999999679e-05, 6.00550000000033e-05, 5.9943999999999276e-05, 5.9819999999995155e-05, 6.0207999999999096e-05, 5.9791999999996015e-05, 5.9902000000000566e-05, 6.0221999999998665e-05, 5.9513999999996625e-05, 5.9929999999999706e-05, 5.9513999999996625e-05, 5.993099999999918e-05, 5.995899999999832e-05, 5.997300000000483e-05, 6.0207999999999096e-05, 6.0179999999999956e-05, 6.0098000000001484e-05, 5.9764000000003814e-05, 6.0264000000004314e-05, 6.0250000000004744e-05, 6.0166000000000386e-05, 6.0166000000000386e-05, 5.9957999999998846e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.980" endtime="20201030 15:52:23.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.969" endtime="20201030 15:52:23.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.997" endtime="20201030 15:52:24.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.992" endtime="20201030 15:52:24.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.989" endtime="20201030 15:52:24.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.504" endtime="20201030 15:52:24.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.503" endtime="20201030 15:52:24.023"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.046" endtime="20201030 15:52:24.064"></status>
</kw>
<msg timestamp="20201030 15:52:24.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.042" endtime="20201030 15:52:24.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.067" endtime="20201030 15:52:24.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.074" endtime="20201030 15:52:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.035" endtime="20201030 15:52:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.029" endtime="20201030 15:52:24.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.097" endtime="20201030 15:52:24.432"></status>
</kw>
<msg timestamp="20201030 15:52:24.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039671861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039732389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.094" endtime="20201030 15:52:24.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039671861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039732389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.441" endtime="20201030 15:52:24.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.460" endtime="20201030 15:52:24.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.086" endtime="20201030 15:52:24.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.082" endtime="20201030 15:52:24.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.477" level="INFO">${RESULT} = [{'diff': 6.0527999999997195e-05}, {'diff': 6.1014000000005064e-05}, {'diff': 6.05550000000038e-05}, {'diff': 6.0263999999997375e-05}, {'diff': 6.118000000000096e-05}, {'diff': 6.0916000000001136e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:24.468" endtime="20201030 15:52:24.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.488" level="INFO">${ACCURACY} = {'diff': [6.0527999999997195e-05, 6.1014000000005064e-05, 6.05550000000038e-05, 6.0263999999997375e-05, 6.118000000000096e-05, 6.0916000000001136e-05, 6.044499999999925e-05, 6.120899999999957e-05, 6.1...</msg>
<status status="PASS" starttime="20201030 15:52:24.479" endtime="20201030 15:52:24.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.499" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.497" endtime="20201030 15:52:24.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.504" level="INFO">VALUE: [6.0527999999997195e-05, 6.1014000000005064e-05, 6.05550000000038e-05, 6.0263999999997375e-05, 6.118000000000096e-05, 6.0916000000001136e-05, 6.044499999999925e-05, 6.120899999999957e-05, 6.108399999999597e-05, 6.0235999999998235e-05, 6.126399999999838e-05, 6.0916000000001136e-05, 6.0334000000002164e-05, 6.0541999999996765e-05, 6.0305999999996085e-05, 6.118100000000043e-05, 6.1195e-05, 6.036100000000183e-05, 6.030499999999661e-05, 6.062500000000165e-05, 6.07629999999984e-05, 6.08750000000019e-05, 6.10699999999964e-05, 6.120899999999957e-05, 6.118100000000043e-05, 6.084699999999582e-05, 6.083300000000319e-05, 6.107000000000334e-05, 6.068099999999993e-05, 6.041700000000011e-05, 6.066700000000036e-05, 6.12080000000001e-05, 6.086099999999539e-05, 6.0612000000001554e-05, 6.0569999999995905e-05, 6.112500000000215e-05, 6.0334000000002164e-05, 6.093100000000018e-05, 6.119399999999359e-05, 6.034700000000226e-05, 6.063900000000122e-05, 6.0985999999998985e-05, 6.061100000000208e-05, 6.0472000000005854e-05, 6.109700000000301e-05, 6.077699999999797e-05, 6.0707999999999596e-05, 6.0986000000005924e-05, 6.0471999999998916e-05, 6.044499999999925e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.501" endtime="20201030 15:52:24.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.490" endtime="20201030 15:52:24.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.517" endtime="20201030 15:52:24.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.512" endtime="20201030 15:52:24.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.510" endtime="20201030 15:52:24.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.025" endtime="20201030 15:52:24.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.024" endtime="20201030 15:52:24.542"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.564" endtime="20201030 15:52:24.582"></status>
</kw>
<msg timestamp="20201030 15:52:24.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.561" endtime="20201030 15:52:24.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.586" endtime="20201030 15:52:24.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.592" endtime="20201030 15:52:24.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.554" endtime="20201030 15:52:24.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.548" endtime="20201030 15:52:24.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.615" endtime="20201030 15:52:24.950"></status>
</kw>
<msg timestamp="20201030 15:52:24.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039155806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039217833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.612" endtime="20201030 15:52:24.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039155806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039217833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.959" endtime="20201030 15:52:24.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.978" endtime="20201030 15:52:24.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.605" endtime="20201030 15:52:24.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.600" endtime="20201030 15:52:24.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.995" level="INFO">${RESULT} = [{'diff': 6.202699999999922e-05}, {'diff': 6.180499999999811e-05}, {'diff': 6.188900000000247e-05}, {'diff': 6.205600000000477e-05}, {'diff': 6.155499999999786e-05}, {'diff': 6.17080000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:24.986" endtime="20201030 15:52:24.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.006" level="INFO">${ACCURACY} = {'diff': [6.202699999999922e-05, 6.180499999999811e-05, 6.188900000000247e-05, 6.205600000000477e-05, 6.155499999999786e-05, 6.17080000000006e-05, 6.158300000000394e-05, 6.211099999999664e-05, 6.17779...</msg>
<status status="PASS" starttime="20201030 15:52:24.997" endtime="20201030 15:52:25.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.017" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.015" endtime="20201030 15:52:25.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.023" level="INFO">VALUE: [6.202699999999922e-05, 6.180499999999811e-05, 6.188900000000247e-05, 6.205600000000477e-05, 6.155499999999786e-05, 6.17080000000006e-05, 6.158300000000394e-05, 6.211099999999664e-05, 6.177799999999845e-05, 6.184700000000376e-05, 6.218100000000143e-05, 6.222200000000067e-05, 6.148599999999949e-05, 6.15420000000047e-05, 6.20829999999975e-05, 6.19029999999951e-05, 6.211100000000358e-05, 6.134700000000326e-05, 6.138899999999503e-05, 6.129099999999804e-05, 6.190200000000257e-05, 6.190200000000257e-05, 6.227799999999895e-05, 6.173600000000667e-05, 6.227799999999895e-05, 6.154199999999777e-05, 6.1582999999997e-05, 6.209700000000401e-05, 6.170900000000007e-05, 6.218100000000143e-05, 6.223600000000024e-05, 6.141699999999417e-05, 6.22499999999998e-05, 6.15699999999969e-05, 6.20279999999987e-05, 6.1888000000003e-05, 6.183300000000419e-05, 6.143100000000068e-05, 6.205599999999784e-05, 6.147199999999992e-05, 6.205499999999836e-05, 6.211099999999664e-05, 6.145899999999982e-05, 6.187499999999596e-05, 6.222200000000067e-05, 6.141600000000164e-05, 6.216700000000186e-05, 6.152699999999872e-05, 6.140300000000154e-05, 6.208300000000444e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.019" endtime="20201030 15:52:25.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.008" endtime="20201030 15:52:25.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.035" endtime="20201030 15:52:25.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.031" endtime="20201030 15:52:25.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.028" endtime="20201030 15:52:25.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.544" endtime="20201030 15:52:25.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.543" endtime="20201030 15:52:25.060"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.083" endtime="20201030 15:52:25.101"></status>
</kw>
<msg timestamp="20201030 15:52:25.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.079" endtime="20201030 15:52:25.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.104" endtime="20201030 15:52:25.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.111" endtime="20201030 15:52:25.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.072" endtime="20201030 15:52:25.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.066" endtime="20201030 15:52:25.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.134" endtime="20201030 15:52:25.471"></status>
</kw>
<msg timestamp="20201030 15:52:25.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03949525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039558514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:25.131" endtime="20201030 15:52:25.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03949525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039558514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:25.481" endtime="20201030 15:52:25.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.500" endtime="20201030 15:52:25.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.123" endtime="20201030 15:52:25.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.119" endtime="20201030 15:52:25.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.517" level="INFO">${RESULT} = [{'diff': 6.326400000000038e-05}, {'diff': 6.273600000000074e-05}, {'diff': 6.23750000000034e-05}, {'diff': 6.266700000000236e-05}, {'diff': 6.266699999999542e-05}, {'diff': 6.240300000000254e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:25.508" endtime="20201030 15:52:25.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.526" level="INFO">${ACCURACY} = {'diff': [6.326400000000038e-05, 6.273600000000074e-05, 6.23750000000034e-05, 6.266700000000236e-05, 6.266699999999542e-05, 6.240300000000254e-05, 6.245800000000135e-05, 6.319400000000253e-05, 6.29590...</msg>
<status status="PASS" starttime="20201030 15:52:25.519" endtime="20201030 15:52:25.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.537" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.535" endtime="20201030 15:52:25.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.543" level="INFO">VALUE: [6.326400000000038e-05, 6.273600000000074e-05, 6.23750000000034e-05, 6.266700000000236e-05, 6.266699999999542e-05, 6.240300000000254e-05, 6.245800000000135e-05, 6.319400000000253e-05, 6.295900000000132e-05, 6.30829999999985e-05, 6.316599999999645e-05, 6.236100000000383e-05, 6.244500000000125e-05, 6.250000000000006e-05, 6.309700000000501e-05, 6.234699999999732e-05, 6.281900000000562e-05, 6.248600000000049e-05, 6.301400000000013e-05, 6.272200000000117e-05, 6.238899999999603e-05, 6.302700000000022e-05, 6.248600000000049e-05, 6.288899999999653e-05, 6.244500000000125e-05, 6.316700000000286e-05, 6.2582999999998e-05, 6.30279999999997e-05, 6.293100000000218e-05, 6.297200000000142e-05, 6.290300000000304e-05, 6.281999999999816e-05, 6.27500000000003e-05, 6.30829999999985e-05, 6.298600000000099e-05, 6.291700000000261e-05, 6.23750000000034e-05, 6.318100000000243e-05, 6.244399999999484e-05, 6.323600000000124e-05, 6.32500000000008e-05, 6.290300000000304e-05, 6.247200000000092e-05, 6.248600000000049e-05, 6.34029999999966e-05, 6.279199999999902e-05, 6.240200000000307e-05, 6.287499999999696e-05, 6.279199999999902e-05, 6.245799999999441e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.540" endtime="20201030 15:52:25.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.528" endtime="20201030 15:52:25.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.555" endtime="20201030 15:52:25.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.551" endtime="20201030 15:52:25.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.548" endtime="20201030 15:52:25.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.062" endtime="20201030 15:52:25.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.061" endtime="20201030 15:52:25.580"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.603" endtime="20201030 15:52:25.623"></status>
</kw>
<msg timestamp="20201030 15:52:25.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.600" endtime="20201030 15:52:25.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.626" endtime="20201030 15:52:25.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.632" endtime="20201030 15:52:25.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.592" endtime="20201030 15:52:25.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.586" endtime="20201030 15:52:25.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.656" endtime="20201030 15:52:26.018"></status>
</kw>
<msg timestamp="20201030 15:52:26.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041022347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.652" endtime="20201030 15:52:26.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041022347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.028" endtime="20201030 15:52:26.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.046" endtime="20201030 15:52:26.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.645" endtime="20201030 15:52:26.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.641" endtime="20201030 15:52:26.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.063" level="INFO">${RESULT} = [{'diff': 6.362499999999771e-05}, {'diff': 6.347300000000139e-05}, {'diff': 6.40699999999994e-05}, {'diff': 6.370799999999566e-05}, {'diff': 6.379200000000002e-05}, {'diff': 6.419400000000353e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:26.055" endtime="20201030 15:52:26.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.073" level="INFO">${ACCURACY} = {'diff': [6.362499999999771e-05, 6.347300000000139e-05, 6.40699999999994e-05, 6.370799999999566e-05, 6.379200000000002e-05, 6.419400000000353e-05, 6.430500000000061e-05, 6.338899999999703e-05, 6.40140...</msg>
<status status="PASS" starttime="20201030 15:52:26.065" endtime="20201030 15:52:26.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.083" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.081" endtime="20201030 15:52:26.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.089" level="INFO">VALUE: [6.362499999999771e-05, 6.347300000000139e-05, 6.40699999999994e-05, 6.370799999999566e-05, 6.379200000000002e-05, 6.419400000000353e-05, 6.430500000000061e-05, 6.338899999999703e-05, 6.401400000000113e-05, 6.397200000000242e-05, 6.347199999999498e-05, 6.40280000000007e-05, 6.383299999999925e-05, 6.354199999999977e-05, 6.388899999999753e-05, 6.354199999999977e-05, 6.395899999999538e-05, 6.370900000000207e-05, 6.40829999999995e-05, 6.42229999999952e-05, 6.363900000000422e-05, 6.412500000000515e-05, 6.42500000000018e-05, 6.34029999999966e-05, 6.372300000000164e-05, 6.42500000000018e-05, 6.411099999999864e-05, 6.404200000000027e-05, 6.329199999999952e-05, 6.345799999999541e-05, 6.366599999999695e-05, 6.422200000000267e-05, 6.351400000000063e-05, 6.37500000000013e-05, 6.383300000000619e-05, 6.390199999999763e-05, 6.36950000000025e-05, 6.326400000000038e-05, 6.397200000000242e-05, 6.404200000000027e-05, 6.42359999999953e-05, 6.363899999999728e-05, 6.334699999999832e-05, 6.345800000000235e-05, 6.340300000000354e-05, 6.368000000000346e-05, 6.387499999999796e-05, 6.327700000000047e-05, 6.429100000000104e-05, 6.413799999999831e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.086" endtime="20201030 15:52:26.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.074" endtime="20201030 15:52:26.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.104" endtime="20201030 15:52:26.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.097" endtime="20201030 15:52:26.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.094" endtime="20201030 15:52:26.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.582" endtime="20201030 15:52:26.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.581" endtime="20201030 15:52:26.129"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.151" endtime="20201030 15:52:26.169"></status>
</kw>
<msg timestamp="20201030 15:52:26.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.148" endtime="20201030 15:52:26.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.173" endtime="20201030 15:52:26.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.180" endtime="20201030 15:52:26.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.141" endtime="20201030 15:52:26.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.135" endtime="20201030 15:52:26.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.203" endtime="20201030 15:52:26.535"></status>
</kw>
<msg timestamp="20201030 15:52:26.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038918958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038983556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.200" endtime="20201030 15:52:26.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038918958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038983556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.545" endtime="20201030 15:52:26.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.563" endtime="20201030 15:52:26.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.193" endtime="20201030 15:52:26.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.188" endtime="20201030 15:52:26.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.580" level="INFO">${RESULT} = [{'diff': 6.459800000000598e-05}, {'diff': 6.448600000000249e-05}, {'diff': 6.52229999999962e-05}, {'diff': 6.455500000000086e-05}, {'diff': 6.449999999999512e-05}, {'diff': 6.470900000000307e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:26.571" endtime="20201030 15:52:26.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.591" level="INFO">${ACCURACY} = {'diff': [6.459800000000598e-05, 6.448600000000249e-05, 6.52229999999962e-05, 6.455500000000086e-05, 6.449999999999512e-05, 6.470900000000307e-05, 6.502700000000222e-05, 6.484699999999982e-05, 6.50830...</msg>
<status status="PASS" starttime="20201030 15:52:26.582" endtime="20201030 15:52:26.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.602" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.599" endtime="20201030 15:52:26.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.607" level="INFO">VALUE: [6.459800000000598e-05, 6.448600000000249e-05, 6.52229999999962e-05, 6.455500000000086e-05, 6.449999999999512e-05, 6.470900000000307e-05, 6.502700000000222e-05, 6.484699999999982e-05, 6.50830000000005e-05, 6.5277999999995e-05, 6.50280000000017e-05, 6.519499999999706e-05, 6.488899999999853e-05, 6.473700000000221e-05, 6.529100000000204e-05, 6.522199999999673e-05, 6.480599999999365e-05, 6.504200000000127e-05, 6.469499999999656e-05, 6.483300000000025e-05, 6.433399999999923e-05, 6.516699999999792e-05, 6.480600000000059e-05, 6.45280000000012e-05, 6.47779999999945e-05, 6.50700000000004e-05, 6.430600000000009e-05, 6.52080000000041e-05, 6.472199999999623e-05, 6.516700000000486e-05, 6.509799999999955e-05, 6.449999999999512e-05, 6.483300000000025e-05, 6.458399999999948e-05, 6.465299999999785e-05, 6.495899999999638e-05, 6.433399999999923e-05, 6.483399999999973e-05, 6.47500000000023e-05, 6.469499999999656e-05, 6.509700000000007e-05, 6.447199999999598e-05, 6.506900000000093e-05, 6.433299999999975e-05, 6.427700000000147e-05, 6.522200000000367e-05, 6.50280000000017e-05, 6.486099999999939e-05, 6.431900000000018e-05, 6.511099999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.604" endtime="20201030 15:52:26.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.593" endtime="20201030 15:52:26.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.619" endtime="20201030 15:52:26.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.615" endtime="20201030 15:52:26.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.612" endtime="20201030 15:52:26.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.131" endtime="20201030 15:52:26.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.130" endtime="20201030 15:52:26.644"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.666" endtime="20201030 15:52:26.684"></status>
</kw>
<msg timestamp="20201030 15:52:26.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.663" endtime="20201030 15:52:26.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.688" endtime="20201030 15:52:26.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.694" endtime="20201030 15:52:26.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.656" endtime="20201030 15:52:26.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.650" endtime="20201030 15:52:26.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.718" endtime="20201030 15:52:27.059"></status>
</kw>
<msg timestamp="20201030 15:52:27.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038813097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038878556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.715" endtime="20201030 15:52:27.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038813097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038878556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.068" endtime="20201030 15:52:27.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.086" endtime="20201030 15:52:27.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.708" endtime="20201030 15:52:27.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.703" endtime="20201030 15:52:27.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.103" level="INFO">${RESULT} = [{'diff': 6.545900000000382e-05}, {'diff': 6.609800000000055e-05}, {'diff': 6.551400000000263e-05}, {'diff': 6.576400000000288e-05}, {'diff': 6.60280000000027e-05}, {'diff': 6.612500000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:27.095" endtime="20201030 15:52:27.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.114" level="INFO">${ACCURACY} = {'diff': [6.545900000000382e-05, 6.609800000000055e-05, 6.551400000000263e-05, 6.576400000000288e-05, 6.60280000000027e-05, 6.612500000000021e-05, 6.592999999999877e-05, 6.616600000000639e-05, 6.54589...</msg>
<status status="PASS" starttime="20201030 15:52:27.105" endtime="20201030 15:52:27.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.125" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.123" endtime="20201030 15:52:27.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.131" level="INFO">VALUE: [6.545900000000382e-05, 6.609800000000055e-05, 6.551400000000263e-05, 6.576400000000288e-05, 6.60280000000027e-05, 6.612500000000021e-05, 6.592999999999877e-05, 6.616600000000639e-05, 6.545899999999688e-05, 6.538899999999903e-05, 6.598600000000399e-05, 6.618099999999849e-05, 6.60559999999949e-05, 6.527800000000195e-05, 6.59029999999991e-05, 6.53479999999998e-05, 6.559700000000057e-05, 6.587499999999996e-05, 6.554200000000177e-05, 6.573600000000374e-05, 6.545899999999688e-05, 6.538899999999903e-05, 6.544399999999784e-05, 6.611100000000064e-05, 6.54159999999987e-05, 6.588899999999953e-05, 6.576400000000288e-05, 6.619399999999859e-05, 6.593099999999824e-05, 6.579200000000202e-05, 6.544499999999731e-05, 6.587499999999996e-05, 6.624999999999687e-05, 6.624999999999687e-05, 6.559700000000057e-05, 6.551399999999569e-05, 6.556900000000143e-05, 6.590199999999963e-05, 6.5583000000001e-05, 6.590199999999963e-05, 6.552799999999526e-05, 6.60700000000014e-05, 6.617999999999902e-05, 6.573600000000374e-05, 6.633299999999481e-05, 6.598599999999705e-05, 6.601400000000313e-05, 6.555500000000186e-05, 6.586100000000039e-05, 6.588899999999953e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.127" endtime="20201030 15:52:27.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.116" endtime="20201030 15:52:27.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.143" endtime="20201030 15:52:27.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.139" endtime="20201030 15:52:27.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.136" endtime="20201030 15:52:27.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.646" endtime="20201030 15:52:27.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.645" endtime="20201030 15:52:27.168"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.191" endtime="20201030 15:52:27.210"></status>
</kw>
<msg timestamp="20201030 15:52:27.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.187" endtime="20201030 15:52:27.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.213" endtime="20201030 15:52:27.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.220" endtime="20201030 15:52:27.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.180" endtime="20201030 15:52:27.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.174" endtime="20201030 15:52:27.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.242" endtime="20201030 15:52:27.582"></status>
</kw>
<msg timestamp="20201030 15:52:27.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039131986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039198764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.239" endtime="20201030 15:52:27.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039131986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039198764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.592" endtime="20201030 15:52:27.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.610" endtime="20201030 15:52:27.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.232" endtime="20201030 15:52:27.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.227" endtime="20201030 15:52:27.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.627" level="INFO">${RESULT} = [{'diff': 6.677799999999651e-05}, {'diff': 6.718099999999949e-05}, {'diff': 6.72359999999983e-05}, {'diff': 6.702699999999728e-05}, {'diff': 6.665200000000038e-05}, {'diff': 6.716699999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:27.619" endtime="20201030 15:52:27.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.637" level="INFO">${ACCURACY} = {'diff': [6.677799999999651e-05, 6.718099999999949e-05, 6.72359999999983e-05, 6.702699999999728e-05, 6.665200000000038e-05, 6.716699999999992e-05, 6.67500000000043e-05, 6.651399999999669e-05, 6.662500...</msg>
<status status="PASS" starttime="20201030 15:52:27.629" endtime="20201030 15:52:27.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.647" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.645" endtime="20201030 15:52:27.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.653" level="INFO">VALUE: [6.677799999999651e-05, 6.718099999999949e-05, 6.72359999999983e-05, 6.702699999999728e-05, 6.665200000000038e-05, 6.716699999999992e-05, 6.67500000000043e-05, 6.651399999999669e-05, 6.662500000000071e-05, 6.687500000000096e-05, 6.669499999999856e-05, 6.693099999999924e-05, 6.633400000000123e-05, 6.693099999999924e-05, 6.67359999999978e-05, 6.694499999999881e-05, 6.720799999999916e-05, 6.662500000000071e-05, 6.695800000000585e-05, 6.723600000000524e-05, 6.679100000000354e-05, 6.659700000000157e-05, 6.658299999999506e-05, 6.674999999999737e-05, 6.694399999999934e-05, 6.634700000000132e-05, 6.716699999999992e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.702799999999676e-05, 6.697199999999848e-05, 6.666699999999942e-05, 6.711100000000164e-05, 6.630600000000209e-05, 6.634700000000132e-05, 6.720799999999916e-05, 6.661100000000114e-05, 6.706900000000293e-05, 6.724999999999787e-05, 6.680500000000311e-05, 6.711100000000164e-05, 6.659700000000157e-05, 6.649999999999712e-05, 6.704099999999685e-05, 6.672200000000517e-05, 6.676400000000388e-05, 6.644500000000525e-05, 6.726399999999744e-05, 6.666599999999995e-05, 6.651400000000363e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.650" endtime="20201030 15:52:27.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.638" endtime="20201030 15:52:27.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.665" endtime="20201030 15:52:27.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.661" endtime="20201030 15:52:27.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.658" endtime="20201030 15:52:27.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.170" endtime="20201030 15:52:27.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.169" endtime="20201030 15:52:27.690"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.712" endtime="20201030 15:52:27.736"></status>
</kw>
<msg timestamp="20201030 15:52:27.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.709" endtime="20201030 15:52:27.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.739" endtime="20201030 15:52:27.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.746" endtime="20201030 15:52:27.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.702" endtime="20201030 15:52:27.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.696" endtime="20201030 15:52:27.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.769" endtime="20201030 15:52:28.101"></status>
</kw>
<msg timestamp="20201030 15:52:28.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044596014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044664167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.766" endtime="20201030 15:52:28.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044596014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044664167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.110" endtime="20201030 15:52:28.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.129" endtime="20201030 15:52:28.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.759" endtime="20201030 15:52:28.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.754" endtime="20201030 15:52:28.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.146" level="INFO">${RESULT} = [{'diff': 6.815299999999441e-05}, {'diff': 6.830599999999715e-05}, {'diff': 6.815300000000135e-05}, {'diff': 6.731999999999572e-05}, {'diff': 6.806899999999699e-05}, {'diff': 6.822199999999973e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:28.137" endtime="20201030 15:52:28.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.155" level="INFO">${ACCURACY} = {'diff': [6.815299999999441e-05, 6.830599999999715e-05, 6.815300000000135e-05, 6.731999999999572e-05, 6.806899999999699e-05, 6.822199999999973e-05, 6.770799999999966e-05, 6.733300000000275e-05, 6.8098...</msg>
<status status="PASS" starttime="20201030 15:52:28.148" endtime="20201030 15:52:28.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.165" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.163" endtime="20201030 15:52:28.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.171" level="INFO">VALUE: [6.815299999999441e-05, 6.830599999999715e-05, 6.815300000000135e-05, 6.731999999999572e-05, 6.806899999999699e-05, 6.822199999999973e-05, 6.770799999999966e-05, 6.733300000000275e-05, 6.809800000000255e-05, 6.779200000000402e-05, 6.801399999999819e-05, 6.79030000000011e-05, 6.819500000000006e-05, 6.824999999999887e-05, 6.816599999999451e-05, 6.761100000000214e-05, 6.747299999999845e-05, 6.818000000000102e-05, 6.81109999999957e-05, 6.794400000000034e-05, 6.793100000000024e-05, 6.777799999999751e-05, 6.769499999999956e-05, 6.766700000000042e-05, 6.751399999999769e-05, 6.812500000000221e-05, 6.773700000000521e-05, 6.801399999999819e-05, 6.815300000000135e-05, 6.747199999999898e-05, 6.762500000000171e-05, 6.730599999999615e-05, 6.788899999999459e-05, 6.731900000000318e-05, 6.761100000000214e-05, 6.812500000000221e-05, 6.795799999999991e-05, 6.791599999999426e-05, 6.812499999999527e-05, 6.786099999999545e-05, 6.761100000000214e-05, 6.748599999999855e-05, 6.819400000000059e-05, 6.748600000000549e-05, 6.738900000000103e-05, 6.748599999999855e-05, 6.769400000000009e-05, 6.744399999999984e-05, 6.74160000000007e-05, 6.75979999999951e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.168" endtime="20201030 15:52:28.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.157" endtime="20201030 15:52:28.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.185" endtime="20201030 15:52:28.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.179" endtime="20201030 15:52:28.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.176" endtime="20201030 15:52:28.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.692" endtime="20201030 15:52:28.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.691" endtime="20201030 15:52:28.210"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.232" endtime="20201030 15:52:28.250"></status>
</kw>
<msg timestamp="20201030 15:52:28.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.229" endtime="20201030 15:52:28.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.253" endtime="20201030 15:52:28.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.260" endtime="20201030 15:52:28.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.221" endtime="20201030 15:52:28.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.216" endtime="20201030 15:52:28.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.283" endtime="20201030 15:52:28.613"></status>
</kw>
<msg timestamp="20201030 15:52:28.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038890778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038959903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.279" endtime="20201030 15:52:28.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038890778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038959903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.622" endtime="20201030 15:52:28.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.640" endtime="20201030 15:52:28.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.272" endtime="20201030 15:52:28.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.268" endtime="20201030 15:52:28.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.657" level="INFO">${RESULT} = [{'diff': 6.912499999999627e-05}, {'diff': 6.85700000000039e-05}, {'diff': 6.893000000000177e-05}, {'diff': 6.866600000000195e-05}, {'diff': 6.85280000000052e-05}, {'diff': 6.873699999999927e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:28.649" endtime="20201030 15:52:28.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.668" level="INFO">${ACCURACY} = {'diff': [6.912499999999627e-05, 6.85700000000039e-05, 6.893000000000177e-05, 6.866600000000195e-05, 6.85280000000052e-05, 6.873699999999927e-05, 6.918100000000149e-05, 6.861199999999568e-05, 6.852799...</msg>
<status status="PASS" starttime="20201030 15:52:28.659" endtime="20201030 15:52:28.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.679" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.676" endtime="20201030 15:52:28.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.684" level="INFO">VALUE: [6.912499999999627e-05, 6.85700000000039e-05, 6.893000000000177e-05, 6.866600000000195e-05, 6.85280000000052e-05, 6.873699999999927e-05, 6.918100000000149e-05, 6.861199999999568e-05, 6.852799999999826e-05, 6.884799999999636e-05, 6.916700000000192e-05, 6.838899999999509e-05, 6.911100000000364e-05, 6.890299999999516e-05, 6.908399999999704e-05, 6.865200000000238e-05, 6.927799999999901e-05, 6.868100000000099e-05, 6.911100000000364e-05, 6.890299999999516e-05, 6.884799999999636e-05, 6.877799999999851e-05, 6.848599999999955e-05, 6.831899999999724e-05, 6.851399999999869e-05, 6.837500000000246e-05, 6.888900000000253e-05, 6.863900000000228e-05, 6.866700000000142e-05, 6.85700000000039e-05, 6.865299999999491e-05, 6.862499999999577e-05, 6.920900000000063e-05, 6.912499999999627e-05, 6.87359999999998e-05, 6.831899999999724e-05, 6.913900000000278e-05, 6.841599999999476e-05, 6.843000000000127e-05, 6.902799999999876e-05, 6.855600000000434e-05, 6.837499999999552e-05, 6.870800000000066e-05, 6.927799999999901e-05, 6.909699999999713e-05, 6.847199999999998e-05, 6.838900000000203e-05, 6.880599999999765e-05, 6.908399999999704e-05, 6.851400000000563e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.681" endtime="20201030 15:52:28.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.670" endtime="20201030 15:52:28.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.696" endtime="20201030 15:52:28.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.692" endtime="20201030 15:52:28.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.690" endtime="20201030 15:52:28.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.212" endtime="20201030 15:52:28.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.210" endtime="20201030 15:52:28.721"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.743" endtime="20201030 15:52:28.762"></status>
</kw>
<msg timestamp="20201030 15:52:28.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.740" endtime="20201030 15:52:28.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.765" endtime="20201030 15:52:28.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.771" endtime="20201030 15:52:28.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.733" endtime="20201030 15:52:28.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.727" endtime="20201030 15:52:28.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.794" endtime="20201030 15:52:29.125"></status>
</kw>
<msg timestamp="20201030 15:52:29.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038896597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038966264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.791" endtime="20201030 15:52:29.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038896597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038966264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.134" endtime="20201030 15:52:29.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.153" endtime="20201030 15:52:29.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.784" endtime="20201030 15:52:29.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.779" endtime="20201030 15:52:29.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.170" level="INFO">${RESULT} = [{'diff': 6.966700000000242e-05}, {'diff': 6.940299999999566e-05}, {'diff': 6.966700000000242e-05}, {'diff': 6.931999999999772e-05}, {'diff': 6.991700000000267e-05}, {'diff': 7.015299999999641e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:29.161" endtime="20201030 15:52:29.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.181" level="INFO">${ACCURACY} = {'diff': [6.966700000000242e-05, 6.940299999999566e-05, 6.966700000000242e-05, 6.931999999999772e-05, 6.991700000000267e-05, 7.015299999999641e-05, 6.943100000000174e-05, 6.948599999999361e-05, 7.0194...</msg>
<status status="PASS" starttime="20201030 15:52:29.172" endtime="20201030 15:52:29.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.192" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.190" endtime="20201030 15:52:29.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.197" level="INFO">VALUE: [6.966700000000242e-05, 6.940299999999566e-05, 6.966700000000242e-05, 6.931999999999772e-05, 6.991700000000267e-05, 7.015299999999641e-05, 6.943100000000174e-05, 6.948599999999361e-05, 7.019400000000259e-05, 6.992999999999583e-05, 6.994400000000234e-05, 6.962500000000371e-05, 7.001300000000071e-05, 6.958400000000448e-05, 7.026400000000044e-05, 7.027700000000053e-05, 6.970900000000113e-05, 7.012499999999727e-05, 7.026400000000044e-05, 7.000000000000062e-05, 6.995900000000138e-05, 6.975000000000037e-05, 6.998600000000105e-05, 6.97360000000008e-05, 6.969499999999462e-05, 7.001400000000019e-05, 6.981899999999874e-05, 7.006899999999899e-05, 6.981899999999874e-05, 6.975000000000037e-05, 6.940299999999566e-05, 6.969400000000209e-05, 7.02230000000012e-05, 6.995800000000191e-05, 7.005600000000584e-05, 7.025000000000087e-05, 7.008299999999856e-05, 6.958399999999754e-05, 6.984699999999788e-05, 7.019400000000259e-05, 6.931899999999824e-05, 6.951399999999969e-05, 6.991700000000267e-05, 7.015300000000335e-05, 7.00979999999976e-05, 7.025000000000087e-05, 6.930499999999867e-05, 7.012499999999727e-05, 6.965300000000285e-05, 6.947300000000045e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.194" endtime="20201030 15:52:29.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.183" endtime="20201030 15:52:29.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.210" endtime="20201030 15:52:29.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.205" endtime="20201030 15:52:29.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.203" endtime="20201030 15:52:29.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.723" endtime="20201030 15:52:29.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.722" endtime="20201030 15:52:29.234"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.257" endtime="20201030 15:52:29.275"></status>
</kw>
<msg timestamp="20201030 15:52:29.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.253" endtime="20201030 15:52:29.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.279" endtime="20201030 15:52:29.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.285" endtime="20201030 15:52:29.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.246" endtime="20201030 15:52:29.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.241" endtime="20201030 15:52:29.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.308" endtime="20201030 15:52:29.642"></status>
</kw>
<msg timestamp="20201030 15:52:29.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039012819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039083486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.305" endtime="20201030 15:52:29.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039012819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039083486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.652" endtime="20201030 15:52:29.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.670" endtime="20201030 15:52:29.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.298" endtime="20201030 15:52:29.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.293" endtime="20201030 15:52:29.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.687" level="INFO">${RESULT} = [{'diff': 7.066700000000342e-05}, {'diff': 7.119499999999612e-05}, {'diff': 7.044500000000231e-05}, {'diff': 7.059699999999863e-05}, {'diff': 7.098600000000205e-05}, {'diff': 7.084699999999888e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:29.678" endtime="20201030 15:52:29.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.696" level="INFO">${ACCURACY} = {'diff': [7.066700000000342e-05, 7.119499999999612e-05, 7.044500000000231e-05, 7.059699999999863e-05, 7.098600000000205e-05, 7.084699999999888e-05, 7.059700000000557e-05, 7.065199999999744e-05, 7.0805...</msg>
<status status="PASS" starttime="20201030 15:52:29.689" endtime="20201030 15:52:29.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.707" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.705" endtime="20201030 15:52:29.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.712" level="INFO">VALUE: [7.066700000000342e-05, 7.119499999999612e-05, 7.044500000000231e-05, 7.059699999999863e-05, 7.098600000000205e-05, 7.084699999999888e-05, 7.059700000000557e-05, 7.065199999999744e-05, 7.080500000000017e-05, 7.098600000000205e-05, 7.115299999999741e-05, 7.11109999999987e-05, 7.1069e-05, 7.101399999999425e-05, 7.040199999999719e-05, 7.036100000000489e-05, 7.081999999999922e-05, 7.112499999999827e-05, 7.077800000000051e-05, 7.090199999999769e-05, 7.100000000000162e-05, 7.065300000000385e-05, 7.098599999999511e-05, 7.034700000000532e-05, 7.12910000000011e-05, 7.098600000000205e-05, 7.095800000000291e-05, 7.037499999999752e-05, 7.038900000000403e-05, 7.118100000000349e-05, 7.119399999999665e-05, 7.038799999999762e-05, 7.034699999999838e-05, 7.043000000000327e-05, 7.104100000000085e-05, 7.034699999999838e-05, 7.108299999999956e-05, 7.101400000000119e-05, 7.066600000000395e-05, 7.045800000000241e-05, 7.086099999999845e-05, 7.084699999999888e-05, 7.119400000000359e-05, 7.034699999999838e-05, 7.087499999999802e-05, 7.105500000000042e-05, 7.124999999999493e-05, 7.1069e-05, 7.100000000000162e-05, 7.069399999999615e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.709" endtime="20201030 15:52:29.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.698" endtime="20201030 15:52:29.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.725" endtime="20201030 15:52:29.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.720" endtime="20201030 15:52:29.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.718" endtime="20201030 15:52:29.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.237" endtime="20201030 15:52:29.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.235" endtime="20201030 15:52:29.749"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.775" endtime="20201030 15:52:29.795"></status>
</kw>
<msg timestamp="20201030 15:52:29.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.772" endtime="20201030 15:52:29.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.799" endtime="20201030 15:52:29.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.805" endtime="20201030 15:52:29.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.761" endtime="20201030 15:52:29.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.756" endtime="20201030 15:52:29.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.828" endtime="20201030 15:52:30.163"></status>
</kw>
<msg timestamp="20201030 15:52:30.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044158014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044229611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.825" endtime="20201030 15:52:30.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044158014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044229611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.172" endtime="20201030 15:52:30.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.191" endtime="20201030 15:52:30.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.818" endtime="20201030 15:52:30.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.813" endtime="20201030 15:52:30.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.211" level="INFO">${RESULT} = [{'diff': 7.159699999999963e-05}, {'diff': 7.163900000000528e-05}, {'diff': 7.209799999999961e-05}, {'diff': 7.22910000000021e-05}, {'diff': 7.207000000000047e-05}, {'diff': 7.184699999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:30.202" endtime="20201030 15:52:30.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.220" level="INFO">${ACCURACY} = {'diff': [7.159699999999963e-05, 7.163900000000528e-05, 7.209799999999961e-05, 7.22910000000021e-05, 7.207000000000047e-05, 7.184699999999988e-05, 7.151400000000169e-05, 7.234700000000038e-05, 7.15690...</msg>
<status status="PASS" starttime="20201030 15:52:30.213" endtime="20201030 15:52:30.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.231" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.229" endtime="20201030 15:52:30.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.236" level="INFO">VALUE: [7.159699999999963e-05, 7.163900000000528e-05, 7.209799999999961e-05, 7.22910000000021e-05, 7.207000000000047e-05, 7.184699999999988e-05, 7.151400000000169e-05, 7.234700000000038e-05, 7.15690000000005e-05, 7.150000000000212e-05, 7.145899999999594e-05, 7.176400000000194e-05, 7.136099999999895e-05, 7.184699999999988e-05, 7.172200000000323e-05, 7.156999999999997e-05, 7.184799999999936e-05, 7.136100000000589e-05, 7.148600000000255e-05, 7.15560000000004e-05, 7.216699999999798e-05, 7.177800000000151e-05, 7.148600000000255e-05, 7.188900000000553e-05, 7.183300000000031e-05, 7.179200000000108e-05, 7.190299999999816e-05, 7.144499999999637e-05, 7.208300000000056e-05, 7.177800000000151e-05, 7.204200000000133e-05, 7.180600000000065e-05, 7.144499999999637e-05, 7.193000000000477e-05, 7.215299999999841e-05, 7.219400000000459e-05, 7.163899999999834e-05, 7.229200000000158e-05, 7.208400000000004e-05, 7.142999999999733e-05, 7.167999999999758e-05, 7.148600000000255e-05, 7.166699999999748e-05, 7.133299999999981e-05, 7.167999999999758e-05, 7.191699999999773e-05, 7.19030000000051e-05, 7.215299999999841e-05, 7.134700000000632e-05, 7.187500000000596e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.233" endtime="20201030 15:52:30.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.222" endtime="20201030 15:52:30.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.250" endtime="20201030 15:52:30.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.244" endtime="20201030 15:52:30.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.242" endtime="20201030 15:52:30.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.752" endtime="20201030 15:52:30.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.750" endtime="20201030 15:52:30.275"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.298" endtime="20201030 15:52:30.317"></status>
</kw>
<msg timestamp="20201030 15:52:30.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.295" endtime="20201030 15:52:30.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.320" endtime="20201030 15:52:30.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.326" endtime="20201030 15:52:30.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.287" endtime="20201030 15:52:30.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.282" endtime="20201030 15:52:30.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.353" endtime="20201030 15:52:30.717"></status>
</kw>
<msg timestamp="20201030 15:52:30.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039731361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.348" endtime="20201030 15:52:30.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039731361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.726" endtime="20201030 15:52:30.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.745" endtime="20201030 15:52:30.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.339" endtime="20201030 15:52:30.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.334" endtime="20201030 15:52:30.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.762" level="INFO">${RESULT} = [{'diff': 7.300000000000362e-05}, {'diff': 7.238899999999909e-05}, {'diff': 7.308400000000104e-05}, {'diff': 7.258300000000106e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.312500000000027e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:30.753" endtime="20201030 15:52:30.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.772" level="INFO">${ACCURACY} = {'diff': [7.300000000000362e-05, 7.238899999999909e-05, 7.308400000000104e-05, 7.258300000000106e-05, 7.316699999999898e-05, 7.312500000000027e-05, 7.233400000000029e-05, 7.288899999999959e-05, 7.2347...</msg>
<status status="PASS" starttime="20201030 15:52:30.764" endtime="20201030 15:52:30.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.783" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.781" endtime="20201030 15:52:30.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.789" level="INFO">VALUE: [7.300000000000362e-05, 7.238899999999909e-05, 7.308400000000104e-05, 7.258300000000106e-05, 7.316699999999898e-05, 7.312500000000027e-05, 7.233400000000029e-05, 7.288899999999959e-05, 7.234700000000038e-05, 7.330600000000215e-05, 7.286100000000045e-05, 7.286100000000045e-05, 7.236099999999995e-05, 7.30839999999941e-05, 7.254200000000183e-05, 7.26110000000002e-05, 7.313800000000037e-05, 7.313899999999984e-05, 7.238899999999909e-05, 7.25690000000015e-05, 7.300000000000362e-05, 7.270800000000466e-05, 7.234700000000038e-05, 7.274999999999643e-05, 7.319499999999812e-05, 7.287500000000002e-05, 7.302800000000276e-05, 7.276400000000294e-05, 7.329200000000258e-05, 7.311200000000018e-05, 7.241599999999876e-05, 7.304200000000233e-05, 7.269499999999762e-05, 7.315199999999994e-05, 7.316699999999898e-05, 7.301400000000319e-05, 7.300000000000362e-05, 7.29309999999983e-05, 7.230600000000115e-05, 7.308400000000104e-05, 7.268099999999805e-05, 7.258299999999412e-05, 7.292999999999883e-05, 7.304200000000233e-05, 7.301399999999625e-05, 7.311099999999376e-05, 7.263899999999934e-05, 7.279200000000208e-05, 7.252799999999532e-05, 7.258300000000106e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.785" endtime="20201030 15:52:30.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.774" endtime="20201030 15:52:30.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.801" endtime="20201030 15:52:30.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.797" endtime="20201030 15:52:30.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.794" endtime="20201030 15:52:30.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.277" endtime="20201030 15:52:30.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.276" endtime="20201030 15:52:30.826"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.848" endtime="20201030 15:52:30.867"></status>
</kw>
<msg timestamp="20201030 15:52:30.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.845" endtime="20201030 15:52:30.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.870" endtime="20201030 15:52:30.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.876" endtime="20201030 15:52:30.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.838" endtime="20201030 15:52:30.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.832" endtime="20201030 15:52:30.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.899" endtime="20201030 15:52:31.240"></status>
</kw>
<msg timestamp="20201030 15:52:31.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039026389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039099778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.896" endtime="20201030 15:52:31.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039026389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039099778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.249" endtime="20201030 15:52:31.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.268" endtime="20201030 15:52:31.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.889" endtime="20201030 15:52:31.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.884" endtime="20201030 15:52:31.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.285" level="INFO">${RESULT} = [{'diff': 7.338900000000009e-05}, {'diff': 7.390200000000069e-05}, {'diff': 7.4069000000003e-05}, {'diff': 7.391699999999973e-05}, {'diff': 7.352800000000326e-05}, {'diff': 7.42360000000053e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:31.276" endtime="20201030 15:52:31.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.296" level="INFO">${ACCURACY} = {'diff': [7.338900000000009e-05, 7.390200000000069e-05, 7.4069000000003e-05, 7.391699999999973e-05, 7.352800000000326e-05, 7.42360000000053e-05, 7.408300000000256e-05, 7.395799999999897e-05, 7.4263999...</msg>
<status status="PASS" starttime="20201030 15:52:31.287" endtime="20201030 15:52:31.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.307" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.304" endtime="20201030 15:52:31.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.312" level="INFO">VALUE: [7.338900000000009e-05, 7.390200000000069e-05, 7.4069000000003e-05, 7.391699999999973e-05, 7.352800000000326e-05, 7.42360000000053e-05, 7.408300000000256e-05, 7.395799999999897e-05, 7.42639999999975e-05, 7.416699999999998e-05, 7.363900000000034e-05, 7.369400000000609e-05, 7.358400000000154e-05, 7.350000000000412e-05, 7.365299999999991e-05, 7.397200000000548e-05, 7.34439999999989e-05, 7.397200000000548e-05, 7.351400000000369e-05, 7.430600000000315e-05, 7.430600000000315e-05, 7.33189999999953e-05, 7.39309999999993e-05, 7.35969999999947e-05, 7.376300000000446e-05, 7.345799999999847e-05, 7.372199999999829e-05, 7.351399999999675e-05, 7.354100000000335e-05, 7.409700000000213e-05, 7.415300000000041e-05, 7.345899999999794e-05, 7.350000000000412e-05, 7.345899999999794e-05, 7.351400000000369e-05, 7.393000000000677e-05, 7.372299999999776e-05, 7.356899999999555e-05, 7.340299999999966e-05, 7.423599999999836e-05, 7.365200000000044e-05, 7.365299999999991e-05, 7.42769999999976e-05, 7.367999999999958e-05, 7.349999999999718e-05, 7.391600000000026e-05, 7.386200000000093e-05, 7.395899999999844e-05, 7.345799999999847e-05, 7.41389999999939e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.309" endtime="20201030 15:52:31.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.298" endtime="20201030 15:52:31.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.324" endtime="20201030 15:52:31.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.320" endtime="20201030 15:52:31.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.317" endtime="20201030 15:52:31.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.828" endtime="20201030 15:52:31.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.827" endtime="20201030 15:52:31.349"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.371" endtime="20201030 15:52:31.390"></status>
</kw>
<msg timestamp="20201030 15:52:31.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.368" endtime="20201030 15:52:31.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.393" endtime="20201030 15:52:31.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.399" endtime="20201030 15:52:31.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.361" endtime="20201030 15:52:31.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.355" endtime="20201030 15:52:31.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.423" endtime="20201030 15:52:31.755"></status>
</kw>
<msg timestamp="20201030 15:52:31.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038942903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039017583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.419" endtime="20201030 15:52:31.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038942903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039017583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.764" endtime="20201030 15:52:31.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.783" endtime="20201030 15:52:31.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.412" endtime="20201030 15:52:31.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.407" endtime="20201030 15:52:31.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.800" level="INFO">${RESULT} = [{'diff': 7.468000000000058e-05}, {'diff': 7.469400000000015e-05}, {'diff': 7.497200000000648e-05}, {'diff': 7.481900000000374e-05}, {'diff': 7.5069000000004e-05}, {'diff': 7.5069000000004e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:52:31.791" endtime="20201030 15:52:31.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.809" level="INFO">${ACCURACY} = {'diff': [7.468000000000058e-05, 7.469400000000015e-05, 7.497200000000648e-05, 7.481900000000374e-05, 7.5069000000004e-05, 7.5069000000004e-05, 7.512500000000227e-05, 7.504199999999739e-05, 7.52639999...</msg>
<status status="PASS" starttime="20201030 15:52:31.802" endtime="20201030 15:52:31.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.820" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.817" endtime="20201030 15:52:31.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.825" level="INFO">VALUE: [7.468000000000058e-05, 7.469400000000015e-05, 7.497200000000648e-05, 7.481900000000374e-05, 7.5069000000004e-05, 7.5069000000004e-05, 7.512500000000227e-05, 7.504199999999739e-05, 7.52639999999985e-05, 7.512500000000227e-05, 7.476400000000494e-05, 7.513800000000237e-05, 7.530500000000467e-05, 7.477799999999757e-05, 7.438900000000109e-05, 7.465200000000144e-05, 7.511099999999576e-05, 7.431999999999578e-05, 7.474999999999843e-05, 7.443000000000033e-05, 7.50560000000039e-05, 7.436100000000195e-05, 7.516599999999457e-05, 7.46110000000022e-05, 7.444499999999937e-05, 7.447199999999904e-05, 7.516700000000098e-05, 7.466600000000101e-05, 7.448599999999861e-05, 7.50839999999961e-05, 7.532000000000372e-05, 7.468000000000058e-05, 7.462500000000177e-05, 7.523599999999936e-05, 7.472199999999929e-05, 7.523599999999936e-05, 7.512500000000227e-05, 7.483300000000331e-05, 7.466700000000048e-05, 7.432000000000272e-05, 7.467999999999364e-05, 7.50969999999962e-05, 7.458300000000306e-05, 7.522199999999979e-05, 7.479199999999714e-05, 7.523599999999936e-05, 7.440299999999372e-05, 7.452700000000478e-05, 7.463900000000134e-05, 7.52769999999986e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.822" endtime="20201030 15:52:31.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.811" endtime="20201030 15:52:31.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.837" endtime="20201030 15:52:31.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.833" endtime="20201030 15:52:31.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.831" endtime="20201030 15:52:31.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.351" endtime="20201030 15:52:31.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.350" endtime="20201030 15:52:31.862"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.884" endtime="20201030 15:52:31.905"></status>
</kw>
<msg timestamp="20201030 15:52:31.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.881" endtime="20201030 15:52:31.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.908" endtime="20201030 15:52:31.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.914" endtime="20201030 15:52:31.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.874" endtime="20201030 15:52:31.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.869" endtime="20201030 15:52:31.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.937" endtime="20201030 15:52:32.270"></status>
</kw>
<msg timestamp="20201030 15:52:32.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040442306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040518056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.934" endtime="20201030 15:52:32.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040442306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040518056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.280" endtime="20201030 15:52:32.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.298" endtime="20201030 15:52:32.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.927" endtime="20201030 15:52:32.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.922" endtime="20201030 15:52:32.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.315" level="INFO">${RESULT} = [{'diff': 7.574999999999943e-05}, {'diff': 7.608299999999762e-05}, {'diff': 7.56389999999954e-05}, {'diff': 7.591600000000226e-05}, {'diff': 7.537499999999558e-05}, {'diff': 7.590200000000269e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:32.306" endtime="20201030 15:52:32.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.324" level="INFO">${ACCURACY} = {'diff': [7.574999999999943e-05, 7.608299999999762e-05, 7.56389999999954e-05, 7.591600000000226e-05, 7.537499999999558e-05, 7.590200000000269e-05, 7.602799999999882e-05, 7.602699999999935e-05, 7.61390...</msg>
<status status="PASS" starttime="20201030 15:52:32.317" endtime="20201030 15:52:32.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.335" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.333" endtime="20201030 15:52:32.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.340" level="INFO">VALUE: [7.574999999999943e-05, 7.608299999999762e-05, 7.56389999999954e-05, 7.591600000000226e-05, 7.537499999999558e-05, 7.590200000000269e-05, 7.602799999999882e-05, 7.602699999999935e-05, 7.613900000000284e-05, 7.60839999999971e-05, 7.605499999999848e-05, 7.563900000000234e-05, 7.556899999999755e-05, 7.569500000000062e-05, 7.563900000000234e-05, 7.586099999999651e-05, 7.572200000000029e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.604199999999839e-05, 7.606899999999805e-05, 7.554199999999789e-05, 7.574999999999943e-05, 7.579200000000508e-05, 7.54440000000009e-05, 7.599999999999968e-05, 7.622300000000026e-05, 7.551399999999875e-05, 7.586099999999651e-05, 7.545899999999994e-05, 7.612499999999633e-05, 7.594500000000087e-05, 7.563900000000234e-05, 7.548599999999961e-05, 7.549999999999918e-05, 7.533300000000381e-05, 7.609800000000361e-05, 7.551399999999875e-05, 7.548599999999961e-05, 7.633299999999787e-05, 7.541700000000123e-05, 7.595800000000097e-05, 7.594500000000087e-05, 7.55560000000044e-05, 7.537500000000252e-05, 7.595800000000097e-05, 7.620800000000122e-05, 7.558400000000354e-05, 7.633299999999787e-05, 7.544500000000037e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.337" endtime="20201030 15:52:32.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.326" endtime="20201030 15:52:32.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.354" endtime="20201030 15:52:32.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.348" endtime="20201030 15:52:32.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.346" endtime="20201030 15:52:32.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.864" endtime="20201030 15:52:32.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.863" endtime="20201030 15:52:32.379"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.401" endtime="20201030 15:52:32.420"></status>
</kw>
<msg timestamp="20201030 15:52:32.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.398" endtime="20201030 15:52:32.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.424" endtime="20201030 15:52:32.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.430" endtime="20201030 15:52:32.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.391" endtime="20201030 15:52:32.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.385" endtime="20201030 15:52:32.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.453" endtime="20201030 15:52:32.786"></status>
</kw>
<msg timestamp="20201030 15:52:32.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038927278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039003792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.450" endtime="20201030 15:52:32.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038927278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039003792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.795" endtime="20201030 15:52:32.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.814" endtime="20201030 15:52:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.442" endtime="20201030 15:52:32.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.438" endtime="20201030 15:52:32.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.831" level="INFO">${RESULT} = [{'diff': 7.651399999999975e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.697200000000154e-05}, {'diff': 7.68189999999988e-05}, {'diff': 7.652799999999932e-05}, {'diff': 7.65839999999976e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:32.822" endtime="20201030 15:52:32.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.846" level="INFO">${ACCURACY} = {'diff': [7.651399999999975e-05, 7.647200000000104e-05, 7.697200000000154e-05, 7.68189999999988e-05, 7.652799999999932e-05, 7.65839999999976e-05, 7.701400000000025e-05, 7.645800000000147e-05, 7.690300...</msg>
<status status="PASS" starttime="20201030 15:52:32.833" endtime="20201030 15:52:32.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.857" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.855" endtime="20201030 15:52:32.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.862" level="INFO">VALUE: [7.651399999999975e-05, 7.647200000000104e-05, 7.697200000000154e-05, 7.68189999999988e-05, 7.652799999999932e-05, 7.65839999999976e-05, 7.701400000000025e-05, 7.645800000000147e-05, 7.690300000000316e-05, 7.651300000000028e-05, 7.698600000000111e-05, 7.64440000000019e-05, 7.651399999999975e-05, 7.700000000000068e-05, 7.705599999999896e-05, 7.688899999999665e-05, 7.645800000000147e-05, 7.659700000000463e-05, 7.6764e-05, 7.69310000000023e-05, 7.688799999999718e-05, 7.715300000000341e-05, 7.670800000000172e-05, 7.687500000000402e-05, 7.71389999999969e-05, 7.654099999999942e-05, 7.736099999999801e-05, 7.681900000000574e-05, 7.686099999999751e-05, 7.719500000000212e-05, 7.701400000000025e-05, 7.636099999999701e-05, 7.677799999999957e-05, 7.712499999999733e-05, 7.722200000000179e-05, 7.680499999999923e-05, 7.651399999999975e-05, 7.723600000000136e-05, 7.630599999999821e-05, 7.662499999999683e-05, 7.670800000000172e-05, 7.633299999999787e-05, 7.633299999999787e-05, 7.661099999999726e-05, 7.716600000000351e-05, 7.713900000000384e-05, 7.673600000000086e-05, 7.648700000000008e-05, 7.7069000000006e-05, 7.702799999999982e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.859" endtime="20201030 15:52:32.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.848" endtime="20201030 15:52:32.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.875" endtime="20201030 15:52:32.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.871" endtime="20201030 15:52:32.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.868" endtime="20201030 15:52:32.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.381" endtime="20201030 15:52:32.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.380" endtime="20201030 15:52:32.900"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.923" endtime="20201030 15:52:32.941"></status>
</kw>
<msg timestamp="20201030 15:52:32.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.919" endtime="20201030 15:52:32.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.945" endtime="20201030 15:52:32.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.951" endtime="20201030 15:52:32.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.912" endtime="20201030 15:52:32.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.906" endtime="20201030 15:52:32.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.974" endtime="20201030 15:52:33.312"></status>
</kw>
<msg timestamp="20201030 15:52:33.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039491083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039568542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.971" endtime="20201030 15:52:33.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039491083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039568542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.322" endtime="20201030 15:52:33.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.340" endtime="20201030 15:52:33.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.964" endtime="20201030 15:52:33.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.959" endtime="20201030 15:52:33.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.357" level="INFO">${RESULT} = [{'diff': 7.7458999999995e-05}, {'diff': 7.748700000000108e-05}, {'diff': 7.819399999999671e-05}, {'diff': 7.83190000000003e-05}, {'diff': 7.790299999999722e-05}, {'diff': 7.808299999999962e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:33.349" endtime="20201030 15:52:33.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.369" level="INFO">${ACCURACY} = {'diff': [7.7458999999995e-05, 7.748700000000108e-05, 7.819399999999671e-05, 7.83190000000003e-05, 7.790299999999722e-05, 7.808299999999962e-05, 7.756899999999955e-05, 7.812500000000527e-05, 7.8221999...</msg>
<status status="PASS" starttime="20201030 15:52:33.360" endtime="20201030 15:52:33.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.380" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.377" endtime="20201030 15:52:33.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.385" level="INFO">VALUE: [7.7458999999995e-05, 7.748700000000108e-05, 7.819399999999671e-05, 7.83190000000003e-05, 7.790299999999722e-05, 7.808299999999962e-05, 7.756899999999955e-05, 7.812500000000527e-05, 7.822199999999585e-05, 7.794399999999646e-05, 7.769400000000315e-05, 7.83190000000003e-05, 7.775000000000143e-05, 7.811099999999876e-05, 7.759700000000563e-05, 7.786099999999851e-05, 7.813900000000484e-05, 7.809700000000613e-05, 7.745800000000247e-05, 7.827800000000107e-05, 7.74719999999951e-05, 7.747200000000204e-05, 7.762499999999783e-05, 7.798599999999517e-05, 7.767999999999664e-05, 7.780599999999971e-05, 7.733399999999835e-05, 7.773600000000186e-05, 7.811099999999876e-05, 7.784699999999894e-05, 7.82640000000015e-05, 7.769399999999621e-05, 7.800000000000168e-05, 7.816699999999704e-05, 7.829200000000064e-05, 7.72640000000005e-05, 7.779100000000067e-05, 7.79169999999968e-05, 7.740299999999672e-05, 7.817999999999714e-05, 7.791700000000373e-05, 7.82640000000015e-05, 7.755599999999946e-05, 7.804100000000092e-05, 7.822199999999585e-05, 7.751400000000075e-05, 7.747300000000151e-05, 7.802800000000082e-05, 7.780599999999971e-05, 7.813900000000484e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.382" endtime="20201030 15:52:33.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.370" endtime="20201030 15:52:33.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.397" endtime="20201030 15:52:33.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.393" endtime="20201030 15:52:33.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.391" endtime="20201030 15:52:33.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.902" endtime="20201030 15:52:33.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.901" endtime="20201030 15:52:33.423"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.445" endtime="20201030 15:52:33.466"></status>
</kw>
<msg timestamp="20201030 15:52:33.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.442" endtime="20201030 15:52:33.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.469" endtime="20201030 15:52:33.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.476" endtime="20201030 15:52:33.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.435" endtime="20201030 15:52:33.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.429" endtime="20201030 15:52:33.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.499" endtime="20201030 15:52:33.848"></status>
</kw>
<msg timestamp="20201030 15:52:33.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039857375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.496" endtime="20201030 15:52:33.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039857375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.858" endtime="20201030 15:52:33.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.876" endtime="20201030 15:52:33.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.488" endtime="20201030 15:52:33.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.484" endtime="20201030 15:52:33.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.894" level="INFO">${RESULT} = [{'diff': 7.88190000000008e-05}, {'diff': 7.922300000000326e-05}, {'diff': 7.84169999999973e-05}, {'diff': 7.89719999999966e-05}, {'diff': 7.902800000000182e-05}, {'diff': 7.848599999999567e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:33.885" endtime="20201030 15:52:33.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.903" level="INFO">${ACCURACY} = {'diff': [7.88190000000008e-05, 7.922300000000326e-05, 7.84169999999973e-05, 7.89719999999966e-05, 7.902800000000182e-05, 7.848599999999567e-05, 7.882000000000028e-05, 7.837499999999858e-05, 7.8583000...</msg>
<status status="PASS" starttime="20201030 15:52:33.896" endtime="20201030 15:52:33.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.914" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.912" endtime="20201030 15:52:33.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.919" level="INFO">VALUE: [7.88190000000008e-05, 7.922300000000326e-05, 7.84169999999973e-05, 7.89719999999966e-05, 7.902800000000182e-05, 7.848599999999567e-05, 7.882000000000028e-05, 7.837499999999858e-05, 7.858300000000012e-05, 7.877800000000157e-05, 7.851400000000175e-05, 7.85839999999996e-05, 7.9151999999999e-05, 7.894399999999746e-05, 7.89589999999965e-05, 7.905600000000096e-05, 7.838899999999815e-05, 7.83890000000051e-05, 7.887499999999908e-05, 7.841600000000476e-05, 7.877800000000157e-05, 7.920800000000422e-05, 7.917999999999814e-05, 7.912499999999933e-05, 7.92640000000025e-05, 7.911099999999976e-05, 7.88890000000056e-05, 7.919499999999718e-05, 7.836099999999901e-05, 7.844399999999696e-05, 7.89440000000044e-05, 7.837499999999858e-05, 7.93190000000013e-05, 7.887499999999908e-05, 7.851400000000175e-05, 7.869500000000362e-05, 7.893000000000483e-05, 7.911099999999976e-05, 7.879200000000114e-05, 7.86519999999985e-05, 7.841600000000476e-05, 7.843099999999686e-05, 7.929200000000164e-05, 7.922199999999685e-05, 7.907000000000053e-05, 7.858400000000654e-05, 7.858300000000012e-05, 7.838899999999815e-05, 7.843099999999686e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.916" endtime="20201030 15:52:33.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.905" endtime="20201030 15:52:33.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.932" endtime="20201030 15:52:33.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.927" endtime="20201030 15:52:33.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.925" endtime="20201030 15:52:33.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.425" endtime="20201030 15:52:33.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.423" endtime="20201030 15:52:33.957"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.980" endtime="20201030 15:52:34.002"></status>
</kw>
<msg timestamp="20201030 15:52:34.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.976" endtime="20201030 15:52:34.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.005" endtime="20201030 15:52:34.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.011" endtime="20201030 15:52:34.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.969" endtime="20201030 15:52:34.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.963" endtime="20201030 15:52:34.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.035" endtime="20201030 15:52:34.382"></status>
</kw>
<msg timestamp="20201030 15:52:34.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041168639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.031" endtime="20201030 15:52:34.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041168639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.391" endtime="20201030 15:52:34.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.410" endtime="20201030 15:52:34.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.024" endtime="20201030 15:52:34.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.020" endtime="20201030 15:52:34.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.427" level="INFO">${RESULT} = [{'diff': 7.99169999999988e-05}, {'diff': 7.984700000000094e-05}, {'diff': 7.969399999999821e-05}, {'diff': 8.022199999999785e-05}, {'diff': 7.948600000000361e-05}, {'diff': 7.99719999999976e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:34.418" endtime="20201030 15:52:34.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.436" level="INFO">${ACCURACY} = {'diff': [7.99169999999988e-05, 7.984700000000094e-05, 7.969399999999821e-05, 8.022199999999785e-05, 7.948600000000361e-05, 7.99719999999976e-05, 7.979200000000214e-05, 7.999999999999674e-05, 7.993099...</msg>
<status status="PASS" starttime="20201030 15:52:34.429" endtime="20201030 15:52:34.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.447" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.445" endtime="20201030 15:52:34.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.453" level="INFO">VALUE: [7.99169999999988e-05, 7.984700000000094e-05, 7.969399999999821e-05, 8.022199999999785e-05, 7.948600000000361e-05, 7.99719999999976e-05, 7.979200000000214e-05, 7.999999999999674e-05, 7.993099999999836e-05, 8.004200000000239e-05, 8.030600000000221e-05, 7.998600000000411e-05, 7.958300000000113e-05, 7.987500000000008e-05, 7.993099999999836e-05, 7.988899999999965e-05, 8.033299999999494e-05, 8.002800000000282e-05, 8.030600000000221e-05, 7.948599999999667e-05, 7.99719999999976e-05, 7.969499999999768e-05, 7.995799999999803e-05, 8.03049999999958e-05, 8.007000000000153e-05, 7.977800000000257e-05, 8.024999999999699e-05, 8.000000000000368e-05, 7.961100000000026e-05, 7.96389999999994e-05, 7.934700000000044e-05, 8.024999999999699e-05, 7.933400000000035e-05, 7.956899999999462e-05, 8.008300000000163e-05, 7.945800000000447e-05, 8.00970000000012e-05, 7.958300000000113e-05, 7.976299999999659e-05, 8.012500000000033e-05, 7.997200000000454e-05, 7.987500000000008e-05, 8.013800000000043e-05, 8.002800000000282e-05, 7.968100000000505e-05, 7.938799999999968e-05, 8.022200000000479e-05, 7.965299999999897e-05, 7.982000000000128e-05, 8.031999999999484e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.449" endtime="20201030 15:52:34.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.438" endtime="20201030 15:52:34.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.472" endtime="20201030 15:52:34.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.466" endtime="20201030 15:52:34.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.464" endtime="20201030 15:52:34.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.959" endtime="20201030 15:52:34.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.958" endtime="20201030 15:52:34.497"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.520" endtime="20201030 15:52:34.541"></status>
</kw>
<msg timestamp="20201030 15:52:34.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.517" endtime="20201030 15:52:34.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.544" endtime="20201030 15:52:34.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.551" endtime="20201030 15:52:34.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.510" endtime="20201030 15:52:34.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.504" endtime="20201030 15:52:34.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.574" endtime="20201030 15:52:34.923"></status>
</kw>
<msg timestamp="20201030 15:52:34.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039952014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040032694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.571" endtime="20201030 15:52:34.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039952014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040032694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.932" endtime="20201030 15:52:34.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.951" endtime="20201030 15:52:34.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.564" endtime="20201030 15:52:34.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.559" endtime="20201030 15:52:34.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.968" level="INFO">${RESULT} = [{'diff': 8.067999999999964e-05}, {'diff': 8.062500000000083e-05}, {'diff': 8.077799999999663e-05}, {'diff': 8.106999999999559e-05}, {'diff': 8.109800000000167e-05}, {'diff': 8.081899999999587e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:34.959" endtime="20201030 15:52:34.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.979" level="INFO">${ACCURACY} = {'diff': [8.067999999999964e-05, 8.062500000000083e-05, 8.077799999999663e-05, 8.106999999999559e-05, 8.109800000000167e-05, 8.081899999999587e-05, 8.132000000000278e-05, 8.088900000000065e-05, 8.0707...</msg>
<status status="PASS" starttime="20201030 15:52:34.970" endtime="20201030 15:52:34.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.990" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.987" endtime="20201030 15:52:34.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.995" level="INFO">VALUE: [8.067999999999964e-05, 8.062500000000083e-05, 8.077799999999663e-05, 8.106999999999559e-05, 8.109800000000167e-05, 8.081899999999587e-05, 8.132000000000278e-05, 8.088900000000065e-05, 8.070799999999878e-05, 8.125000000000493e-05, 8.040300000000666e-05, 8.05970000000017e-05, 8.106899999999612e-05, 8.054200000000289e-05, 8.105599999999602e-05, 8.090199999999381e-05, 8.075000000000443e-05, 8.062500000000083e-05, 8.120899999999875e-05, 8.116600000000057e-05, 8.094399999999946e-05, 8.113899999999397e-05, 8.07770000000041e-05, 8.062500000000083e-05, 8.102799999999688e-05, 8.133299999999594e-05, 8.111099999999483e-05, 8.101400000000425e-05, 8.104100000000392e-05, 8.06390000000004e-05, 8.088900000000065e-05, 8.109699999999526e-05, 8.056900000000256e-05, 8.036100000000101e-05, 8.044399999999896e-05, 8.066699999999954e-05, 8.112500000000133e-05, 8.116600000000057e-05, 8.086100000000151e-05, 8.037500000000058e-05, 8.104199999999645e-05, 8.101399999999731e-05, 8.080500000000324e-05, 8.125000000000493e-05, 8.070899999999825e-05, 8.107000000000253e-05, 8.106899999999612e-05, 8.105599999999602e-05, 8.13049999999968e-05, 8.038900000000015e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.992" endtime="20201030 15:52:34.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.981" endtime="20201030 15:52:34.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.008" endtime="20201030 15:52:35.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.003" endtime="20201030 15:52:35.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.001" endtime="20201030 15:52:35.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.500" endtime="20201030 15:52:35.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.498" endtime="20201030 15:52:35.033"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.056" endtime="20201030 15:52:35.076"></status>
</kw>
<msg timestamp="20201030 15:52:35.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.052" endtime="20201030 15:52:35.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.080" endtime="20201030 15:52:35.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.086" endtime="20201030 15:52:35.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.045" endtime="20201030 15:52:35.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.039" endtime="20201030 15:52:35.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.109" endtime="20201030 15:52:35.455"></status>
</kw>
<msg timestamp="20201030 15:52:35.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039679889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.106" endtime="20201030 15:52:35.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039679889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.465" endtime="20201030 15:52:35.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.484" endtime="20201030 15:52:35.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.099" endtime="20201030 15:52:35.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.094" endtime="20201030 15:52:35.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.501" level="INFO">${RESULT} = [{'diff': 8.194400000000046e-05}, {'diff': 8.218100000000061e-05}, {'diff': 8.213899999999497e-05}, {'diff': 8.209799999999573e-05}, {'diff': 8.206900000000406e-05}, {'diff': 8.136100000000202e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:35.492" endtime="20201030 15:52:35.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.512" level="INFO">${ACCURACY} = {'diff': [8.194400000000046e-05, 8.218100000000061e-05, 8.213899999999497e-05, 8.209799999999573e-05, 8.206900000000406e-05, 8.136100000000202e-05, 8.231999999999684e-05, 8.172199999999935e-05, 8.2125...</msg>
<status status="PASS" starttime="20201030 15:52:35.503" endtime="20201030 15:52:35.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.523" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.521" endtime="20201030 15:52:35.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.528" level="INFO">VALUE: [8.194400000000046e-05, 8.218100000000061e-05, 8.213899999999497e-05, 8.209799999999573e-05, 8.206900000000406e-05, 8.136100000000202e-05, 8.231999999999684e-05, 8.172199999999935e-05, 8.212500000000234e-05, 8.186100000000252e-05, 8.202799999999788e-05, 8.218000000000114e-05, 8.202799999999788e-05, 8.219400000000071e-05, 8.14170000000003e-05, 8.154199999999695e-05, 8.163899999999447e-05, 8.177799999999763e-05, 8.204199999999745e-05, 8.216700000000104e-05, 8.218000000000114e-05, 8.176399999999806e-05, 8.138900000000115e-05, 8.166700000000054e-05, 8.227699999999866e-05, 8.19170000000008e-05, 8.226399999999856e-05, 8.205599999999702e-05, 8.209799999999573e-05, 8.198599999999917e-05, 8.209699999999626e-05, 8.177699999999816e-05, 8.220800000000028e-05, 8.19719999999996e-05, 8.166700000000054e-05, 8.187500000000208e-05, 8.14170000000003e-05, 8.138900000000115e-05, 8.180500000000424e-05, 8.218100000000061e-05, 8.145799999999953e-05, 8.212500000000234e-05, 8.18190000000038e-05, 8.233299999999694e-05, 8.220800000000028e-05, 8.155500000000399e-05, 8.201399999999831e-05, 8.149999999999824e-05, 8.209699999999626e-05, 8.202799999999788e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.525" endtime="20201030 15:52:35.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.514" endtime="20201030 15:52:35.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.541" endtime="20201030 15:52:35.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.537" endtime="20201030 15:52:35.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.534" endtime="20201030 15:52:35.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.035" endtime="20201030 15:52:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.034" endtime="20201030 15:52:35.566"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.589" endtime="20201030 15:52:35.610"></status>
</kw>
<msg timestamp="20201030 15:52:35.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.586" endtime="20201030 15:52:35.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.613" endtime="20201030 15:52:35.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.619" endtime="20201030 15:52:35.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.579" endtime="20201030 15:52:35.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.573" endtime="20201030 15:52:35.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.643" endtime="20201030 15:52:36.009"></status>
</kw>
<msg timestamp="20201030 15:52:36.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039704347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03978725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:35.639" endtime="20201030 15:52:36.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039704347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03978725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:36.018" endtime="20201030 15:52:36.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.037" endtime="20201030 15:52:36.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.632" endtime="20201030 15:52:36.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.627" endtime="20201030 15:52:36.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.054" level="INFO">${RESULT} = [{'diff': 8.290300000000222e-05}, {'diff': 8.244400000000096e-05}, {'diff': 8.311100000000377e-05}, {'diff': 8.306899999999812e-05}, {'diff': 8.265300000000197e-05}, {'diff': 8.315300000000247e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:36.045" endtime="20201030 15:52:36.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.064" level="INFO">${ACCURACY} = {'diff': [8.290300000000222e-05, 8.244400000000096e-05, 8.311100000000377e-05, 8.306899999999812e-05, 8.265300000000197e-05, 8.315300000000247e-05, 8.33049999999988e-05, 8.318000000000214e-05, 8.24159...</msg>
<status status="PASS" starttime="20201030 15:52:36.056" endtime="20201030 15:52:36.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.075" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.072" endtime="20201030 15:52:36.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.080" level="INFO">VALUE: [8.290300000000222e-05, 8.244400000000096e-05, 8.311100000000377e-05, 8.306899999999812e-05, 8.265300000000197e-05, 8.315300000000247e-05, 8.33049999999988e-05, 8.318000000000214e-05, 8.241599999999488e-05, 8.327799999999913e-05, 8.333299999999794e-05, 8.301399999999931e-05, 8.333299999999794e-05, 8.304199999999845e-05, 8.331899999999837e-05, 8.241600000000182e-05, 8.304200000000539e-05, 8.24720000000001e-05, 8.272200000000035e-05, 8.248599999999967e-05, 8.273599999999992e-05, 8.287500000000309e-05, 8.244400000000096e-05, 8.26390000000024e-05, 8.249999999999924e-05, 8.326399999999956e-05, 8.336099999999708e-05, 8.318000000000214e-05, 8.259699999999676e-05, 8.28049999999983e-05, 8.283400000000385e-05, 8.252799999999838e-05, 8.274999999999949e-05, 8.243000000000139e-05, 8.27919999999982e-05, 8.249999999999924e-05, 8.333399999999741e-05, 8.337500000000359e-05, 8.305599999999802e-05, 8.297199999999366e-05, 8.283399999999691e-05, 8.240300000000172e-05, 8.299999999999974e-05, 8.252799999999838e-05, 8.309699999999726e-05, 8.290299999999529e-05, 8.248599999999967e-05, 8.323600000000042e-05, 8.276299999999959e-05, 8.315199999999606e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.077" endtime="20201030 15:52:36.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.065" endtime="20201030 15:52:36.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.093" endtime="20201030 15:52:36.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.088" endtime="20201030 15:52:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.086" endtime="20201030 15:52:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.568" endtime="20201030 15:52:36.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.567" endtime="20201030 15:52:36.117"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.140" endtime="20201030 15:52:36.161"></status>
</kw>
<msg timestamp="20201030 15:52:36.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.137" endtime="20201030 15:52:36.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.164" endtime="20201030 15:52:36.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.171" endtime="20201030 15:52:36.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.130" endtime="20201030 15:52:36.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.124" endtime="20201030 15:52:36.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.196" endtime="20201030 15:52:36.531"></status>
</kw>
<msg timestamp="20201030 15:52:36.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040951403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041035667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.192" endtime="20201030 15:52:36.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040951403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041035667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.541" endtime="20201030 15:52:36.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.559" endtime="20201030 15:52:36.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.185" endtime="20201030 15:52:36.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.180" endtime="20201030 15:52:36.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.577" level="INFO">${RESULT} = [{'diff': 8.426400000000056e-05}, {'diff': 8.395800000000203e-05}, {'diff': 8.3944999999995e-05}, {'diff': 8.400000000000074e-05}, {'diff': 8.395799999999509e-05}, {'diff': 8.354199999999895e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:36.568" endtime="20201030 15:52:36.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.587" level="INFO">${ACCURACY} = {'diff': [8.426400000000056e-05, 8.395800000000203e-05, 8.3944999999995e-05, 8.400000000000074e-05, 8.395799999999509e-05, 8.354199999999895e-05, 8.368000000000264e-05, 8.358300000000513e-05, 8.365300...</msg>
<status status="PASS" starttime="20201030 15:52:36.579" endtime="20201030 15:52:36.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.598" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.595" endtime="20201030 15:52:36.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.604" level="INFO">VALUE: [8.426400000000056e-05, 8.395800000000203e-05, 8.3944999999995e-05, 8.400000000000074e-05, 8.395799999999509e-05, 8.354199999999895e-05, 8.368000000000264e-05, 8.358300000000513e-05, 8.365300000000297e-05, 8.379099999999973e-05, 8.405599999999902e-05, 8.352799999999938e-05, 8.340299999999579e-05, 8.409699999999826e-05, 8.427800000000013e-05, 8.338899999999622e-05, 8.347300000000057e-05, 8.39590000000015e-05, 8.420800000000228e-05, 8.411099999999783e-05, 8.420800000000228e-05, 8.355499999999905e-05, 8.376400000000006e-05, 8.429100000000023e-05, 8.42919999999997e-05, 8.337499999999665e-05, 8.402799999999988e-05, 8.41390000000039e-05, 8.342999999999545e-05, 8.361100000000427e-05, 8.41249999999974e-05, 8.391599999999638e-05, 8.381899999999887e-05, 8.402700000000041e-05, 8.37919999999992e-05, 8.345800000000153e-05, 8.392999999999595e-05, 8.361100000000427e-05, 8.430599999999927e-05, 8.415199999999706e-05, 8.380500000000624e-05, 8.415300000000348e-05, 8.338899999999622e-05, 8.408299999999869e-05, 8.350000000000024e-05, 8.408299999999869e-05, 8.36669999999956e-05, 8.405499999999955e-05, 8.379099999999973e-05, 8.39999999999938e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.600" endtime="20201030 15:52:36.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.589" endtime="20201030 15:52:36.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.618" endtime="20201030 15:52:36.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.613" endtime="20201030 15:52:36.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.610" endtime="20201030 15:52:36.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.120" endtime="20201030 15:52:36.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.118" endtime="20201030 15:52:36.644"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.666" endtime="20201030 15:52:36.686"></status>
</kw>
<msg timestamp="20201030 15:52:36.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.663" endtime="20201030 15:52:36.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.689" endtime="20201030 15:52:36.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.695" endtime="20201030 15:52:36.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.656" endtime="20201030 15:52:36.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.650" endtime="20201030 15:52:36.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.719" endtime="20201030 15:52:37.053"></status>
</kw>
<msg timestamp="20201030 15:52:37.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039718458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039803208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.716" endtime="20201030 15:52:37.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039718458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039803208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.062" endtime="20201030 15:52:37.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.081" endtime="20201030 15:52:37.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.708" endtime="20201030 15:52:37.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.703" endtime="20201030 15:52:37.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.098" level="INFO">${RESULT} = [{'diff': 8.475000000000149e-05}, {'diff': 8.536099999999908e-05}, {'diff': 8.536099999999908e-05}, {'diff': 8.513899999999797e-05}, {'diff': 8.526400000000156e-05}, {'diff': 8.508299999999969e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.089" endtime="20201030 15:52:37.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.109" level="INFO">${ACCURACY} = {'diff': [8.475000000000149e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.513899999999797e-05, 8.526400000000156e-05, 8.508299999999969e-05, 8.511099999999883e-05, 8.530600000000027e-05, 8.4820...</msg>
<status status="PASS" starttime="20201030 15:52:37.100" endtime="20201030 15:52:37.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.120" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.117" endtime="20201030 15:52:37.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.125" level="INFO">VALUE: [8.475000000000149e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.513899999999797e-05, 8.526400000000156e-05, 8.508299999999969e-05, 8.511099999999883e-05, 8.530600000000027e-05, 8.482000000000628e-05, 8.4944999999996e-05, 8.436099999999808e-05, 8.505600000000002e-05, 8.444500000000243e-05, 8.506999999999959e-05, 8.519399999999677e-05, 8.486099999999858e-05, 8.475000000000149e-05, 8.522200000000285e-05, 8.483399999999891e-05, 8.530600000000027e-05, 8.458399999999866e-05, 8.455500000000005e-05, 8.455500000000005e-05, 8.491699999999686e-05, 8.523600000000242e-05, 8.465299999999704e-05, 8.447199999999516e-05, 8.49720000000026e-05, 8.472200000000235e-05, 8.51249999999984e-05, 8.487499999999815e-05, 8.454199999999995e-05, 8.470900000000225e-05, 8.472300000000182e-05, 8.509699999999926e-05, 8.477799999999369e-05, 8.44720000000021e-05, 8.437499999999765e-05, 8.470900000000225e-05, 8.480599999999977e-05, 8.45970000000057e-05, 8.46249999999979e-05, 8.454199999999995e-05, 8.444500000000243e-05, 8.525000000000199e-05, 8.462500000000484e-05, 8.518100000000361e-05, 8.527799999999419e-05, 8.524999999999505e-05, 8.475000000000149e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.122" endtime="20201030 15:52:37.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.110" endtime="20201030 15:52:37.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.138" endtime="20201030 15:52:37.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.133" endtime="20201030 15:52:37.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.131" endtime="20201030 15:52:37.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.646" endtime="20201030 15:52:37.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.644" endtime="20201030 15:52:37.163"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.185" endtime="20201030 15:52:37.205"></status>
</kw>
<msg timestamp="20201030 15:52:37.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.182" endtime="20201030 15:52:37.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.209" endtime="20201030 15:52:37.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.215" endtime="20201030 15:52:37.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.175" endtime="20201030 15:52:37.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.169" endtime="20201030 15:52:37.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.240" endtime="20201030 15:52:37.574"></status>
</kw>
<msg timestamp="20201030 15:52:37.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039397278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039482639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.237" endtime="20201030 15:52:37.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039397278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039482639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.584" endtime="20201030 15:52:37.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.602" endtime="20201030 15:52:37.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.229" endtime="20201030 15:52:37.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.224" endtime="20201030 15:52:37.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.619" level="INFO">${RESULT} = [{'diff': 8.536099999999908e-05}, {'diff': 8.542999999999745e-05}, {'diff': 8.557000000000009e-05}, {'diff': 8.633300000000094e-05}, {'diff': 8.570900000000325e-05}, {'diff': 8.558300000000019e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.611" endtime="20201030 15:52:37.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.631" level="INFO">${ACCURACY} = {'diff': [8.536099999999908e-05, 8.542999999999745e-05, 8.557000000000009e-05, 8.633300000000094e-05, 8.570900000000325e-05, 8.558300000000019e-05, 8.537499999999865e-05, 8.538899999999822e-05, 8.5486...</msg>
<status status="PASS" starttime="20201030 15:52:37.621" endtime="20201030 15:52:37.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.641" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.639" endtime="20201030 15:52:37.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.647" level="INFO">VALUE: [8.536099999999908e-05, 8.542999999999745e-05, 8.557000000000009e-05, 8.633300000000094e-05, 8.570900000000325e-05, 8.558300000000019e-05, 8.537499999999865e-05, 8.538899999999822e-05, 8.548600000000267e-05, 8.557000000000009e-05, 8.54170000000043e-05, 8.591699999999786e-05, 8.586099999999958e-05, 8.5847e-05, 8.59720000000036e-05, 8.542999999999745e-05, 8.56249999999989e-05, 8.536099999999908e-05, 8.566700000000455e-05, 8.56390000000054e-05, 8.536100000000602e-05, 8.557000000000009e-05, 8.559699999999976e-05, 8.559699999999976e-05, 8.600000000000274e-05, 8.550000000000224e-05, 8.575000000000249e-05, 8.587499999999915e-05, 8.559699999999976e-05, 8.557000000000009e-05, 8.583300000000044e-05, 8.573600000000292e-05, 8.608300000000069e-05, 8.575000000000249e-05, 8.554200000000095e-05, 8.631900000000137e-05, 8.633400000000041e-05, 8.63050000000018e-05, 8.616700000000505e-05, 8.538899999999822e-05, 8.570900000000325e-05, 8.620799999999734e-05, 8.608300000000069e-05, 8.554200000000095e-05, 8.558300000000019e-05, 8.568099999999718e-05, 8.573600000000292e-05, 8.624999999999605e-05, 8.611099999999983e-05, 8.568100000000411e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.644" endtime="20201030 15:52:37.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.632" endtime="20201030 15:52:37.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.659" endtime="20201030 15:52:37.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.655" endtime="20201030 15:52:37.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.652" endtime="20201030 15:52:37.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.165" endtime="20201030 15:52:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.164" endtime="20201030 15:52:37.684"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.707" endtime="20201030 15:52:37.727"></status>
</kw>
<msg timestamp="20201030 15:52:37.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.704" endtime="20201030 15:52:37.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.730" endtime="20201030 15:52:37.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.736" endtime="20201030 15:52:37.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.697" endtime="20201030 15:52:37.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.691" endtime="20201030 15:52:37.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.760" endtime="20201030 15:52:38.100"></status>
</kw>
<msg timestamp="20201030 15:52:38.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039593236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039680014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.756" endtime="20201030 15:52:38.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039593236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039680014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.110" endtime="20201030 15:52:38.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.129" endtime="20201030 15:52:38.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.749" endtime="20201030 15:52:38.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.744" endtime="20201030 15:52:38.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.146" level="INFO">${RESULT} = [{'diff': 8.677800000000263e-05}, {'diff': 8.68199999999944e-05}, {'diff': 8.708300000000169e-05}, {'diff': 8.71799999999992e-05}, {'diff': 8.651400000000281e-05}, {'diff': 8.698599999999723e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:38.137" endtime="20201030 15:52:38.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.156" level="INFO">${ACCURACY} = {'diff': [8.677800000000263e-05, 8.68199999999944e-05, 8.708300000000169e-05, 8.71799999999992e-05, 8.651400000000281e-05, 8.698599999999723e-05, 8.66249999999999e-05, 8.673600000000392e-05, 8.6555000...</msg>
<status status="PASS" starttime="20201030 15:52:38.148" endtime="20201030 15:52:38.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.166" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.164" endtime="20201030 15:52:38.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.172" level="INFO">VALUE: [8.677800000000263e-05, 8.68199999999944e-05, 8.708300000000169e-05, 8.71799999999992e-05, 8.651400000000281e-05, 8.698599999999723e-05, 8.66249999999999e-05, 8.673600000000392e-05, 8.655500000000205e-05, 8.693099999999843e-05, 8.693099999999843e-05, 8.652799999999544e-05, 8.690199999999981e-05, 8.64999999999963e-05, 8.718099999999868e-05, 8.690299999999929e-05, 8.658300000000119e-05, 8.686100000000058e-05, 8.644399999999802e-05, 8.682000000000134e-05, 8.718099999999868e-05, 8.730600000000227e-05, 8.690299999999929e-05, 8.638899999999922e-05, 8.66249999999999e-05, 8.657000000000109e-05, 8.718100000000562e-05, 8.665299999999904e-05, 8.73470000000015e-05, 8.6847000000001e-05, 8.644400000000496e-05, 8.670800000000478e-05, 8.663899999999947e-05, 8.644500000000443e-05, 8.640299999999879e-05, 8.690199999999981e-05, 8.737500000000065e-05, 8.687500000000015e-05, 8.661100000000033e-05, 8.674999999999655e-05, 8.644399999999802e-05, 8.642999999999845e-05, 8.648600000000367e-05, 8.713899999999997e-05, 8.720899999999782e-05, 8.676400000000306e-05, 8.686100000000058e-05, 8.719499999999825e-05, 8.69999999999968e-05, 8.677800000000263e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.169" endtime="20201030 15:52:38.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.157" endtime="20201030 15:52:38.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.184" endtime="20201030 15:52:38.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.180" endtime="20201030 15:52:38.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.177" endtime="20201030 15:52:38.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.687" endtime="20201030 15:52:38.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.685" endtime="20201030 15:52:38.209"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.232" endtime="20201030 15:52:38.254"></status>
</kw>
<msg timestamp="20201030 15:52:38.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.228" endtime="20201030 15:52:38.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.258" endtime="20201030 15:52:38.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.265" endtime="20201030 15:52:38.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.221" endtime="20201030 15:52:38.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.216" endtime="20201030 15:52:38.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.289" endtime="20201030 15:52:38.636"></status>
</kw>
<msg timestamp="20201030 15:52:38.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040941083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041029278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.285" endtime="20201030 15:52:38.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040941083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041029278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.645" endtime="20201030 15:52:38.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.664" endtime="20201030 15:52:38.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.278" endtime="20201030 15:52:38.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.273" endtime="20201030 15:52:38.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.681" level="INFO">${RESULT} = [{'diff': 8.819499999999925e-05}, {'diff': 8.809699999999532e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.752799999999644e-05}, {'diff': 8.761099999999439e-05}, {'diff': 8.730599999999533e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:38.673" endtime="20201030 15:52:38.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.691" level="INFO">${ACCURACY} = {'diff': [8.819499999999925e-05, 8.809699999999532e-05, 8.736100000000108e-05, 8.752799999999644e-05, 8.761099999999439e-05, 8.730599999999533e-05, 8.833400000000241e-05, 8.822199999999891e-05, 8.8263...</msg>
<status status="PASS" starttime="20201030 15:52:38.683" endtime="20201030 15:52:38.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.702" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.699" endtime="20201030 15:52:38.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.707" level="INFO">VALUE: [8.819499999999925e-05, 8.809699999999532e-05, 8.736100000000108e-05, 8.752799999999644e-05, 8.761099999999439e-05, 8.730599999999533e-05, 8.833400000000241e-05, 8.822199999999891e-05, 8.826399999999762e-05, 8.791699999999986e-05, 8.804099999999704e-05, 8.762499999999396e-05, 8.78199999999954e-05, 8.769399999999927e-05, 8.784699999999507e-05, 8.836100000000208e-05, 8.766600000000013e-05, 8.822199999999891e-05, 8.813900000000097e-05, 8.745800000000553e-05, 8.752700000000391e-05, 8.752799999999644e-05, 8.752699999999697e-05, 8.755499999999611e-05, 8.78050000000033e-05, 8.76669999999996e-05, 8.765200000000056e-05, 8.819499999999925e-05, 8.758299999999525e-05, 8.770799999999884e-05, 8.797199999999866e-05, 8.745799999999859e-05, 8.765300000000004e-05, 8.770799999999884e-05, 8.834700000000251e-05, 8.802800000000388e-05, 8.773599999999798e-05, 8.74999999999973e-05, 8.830599999999633e-05, 8.811100000000183e-05, 8.752800000000338e-05, 8.823599999999848e-05, 8.750000000000424e-05, 8.802800000000388e-05, 8.815300000000054e-05, 8.76250000000009e-05, 8.779199999999626e-05, 8.838899999999428e-05, 8.74869999999972e-05, 8.81250000000014e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.704" endtime="20201030 15:52:38.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.693" endtime="20201030 15:52:38.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.721" endtime="20201030 15:52:38.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.715" endtime="20201030 15:52:38.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.713" endtime="20201030 15:52:38.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.211" endtime="20201030 15:52:38.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.210" endtime="20201030 15:52:38.746"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.769" endtime="20201030 15:52:38.790"></status>
</kw>
<msg timestamp="20201030 15:52:38.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.766" endtime="20201030 15:52:38.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.794" endtime="20201030 15:52:38.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.802" endtime="20201030 15:52:38.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.759" endtime="20201030 15:52:38.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.753" endtime="20201030 15:52:38.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.826" endtime="20201030 15:52:39.172"></status>
</kw>
<msg timestamp="20201030 15:52:39.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039969069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.822" endtime="20201030 15:52:39.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039969069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.181" endtime="20201030 15:52:39.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.200" endtime="20201030 15:52:39.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.815" endtime="20201030 15:52:39.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.810" endtime="20201030 15:52:39.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.217" level="INFO">${RESULT} = [{'diff': 8.933300000000394e-05}, {'diff': 8.934700000000351e-05}, {'diff': 8.906900000000412e-05}, {'diff': 8.909800000000273e-05}, {'diff': 8.91670000000011e-05}, {'diff': 8.844400000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:39.208" endtime="20201030 15:52:39.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.228" level="INFO">${ACCURACY} = {'diff': [8.933300000000394e-05, 8.934700000000351e-05, 8.906900000000412e-05, 8.909800000000273e-05, 8.91670000000011e-05, 8.844400000000002e-05, 8.88329999999965e-05, 8.834700000000251e-05, 8.919400...</msg>
<status status="PASS" starttime="20201030 15:52:39.219" endtime="20201030 15:52:39.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.239" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.236" endtime="20201030 15:52:39.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.244" level="INFO">VALUE: [8.933300000000394e-05, 8.934700000000351e-05, 8.906900000000412e-05, 8.909800000000273e-05, 8.91670000000011e-05, 8.844400000000002e-05, 8.88329999999965e-05, 8.834700000000251e-05, 8.919400000000077e-05, 8.890299999999435e-05, 8.891700000000086e-05, 8.930600000000427e-05, 8.86250000000019e-05, 8.911100000000283e-05, 8.891600000000138e-05, 8.876399999999812e-05, 8.884800000000248e-05, 8.91659999999947e-05, 8.86670000000006e-05, 8.855600000000352e-05, 8.851300000000534e-05, 8.852699999999797e-05, 8.929099999999829e-05, 8.834700000000251e-05, 8.923599999999948e-05, 8.880499999999736e-05, 8.893000000000095e-05, 8.933300000000394e-05, 8.854100000000448e-05, 8.912499999999546e-05, 8.874999999999855e-05, 8.86250000000019e-05, 8.902800000000488e-05, 8.908299999999675e-05, 8.927699999999872e-05, 8.91250000000024e-05, 8.883400000000291e-05, 8.838900000000122e-05, 8.920899999999982e-05, 8.852799999999744e-05, 8.898599999999923e-05, 8.91800000000012e-05, 8.933300000000394e-05, 8.873599999999898e-05, 8.89999999999988e-05, 8.918100000000068e-05, 8.877700000000516e-05, 8.883300000000344e-05, 8.901399999999837e-05, 8.931899999999743e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.241" endtime="20201030 15:52:39.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.230" endtime="20201030 15:52:39.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.257" endtime="20201030 15:52:39.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.252" endtime="20201030 15:52:39.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.250" endtime="20201030 15:52:39.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.748" endtime="20201030 15:52:39.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.747" endtime="20201030 15:52:39.282"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.306" endtime="20201030 15:52:39.327"></status>
</kw>
<msg timestamp="20201030 15:52:39.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.303" endtime="20201030 15:52:39.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.331" endtime="20201030 15:52:39.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.337" endtime="20201030 15:52:39.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.295" endtime="20201030 15:52:39.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.289" endtime="20201030 15:52:39.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.361" endtime="20201030 15:52:39.707"></status>
</kw>
<msg timestamp="20201030 15:52:39.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041617833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041707625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.357" endtime="20201030 15:52:39.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041617833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041707625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.717" endtime="20201030 15:52:39.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.735" endtime="20201030 15:52:39.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.350" endtime="20201030 15:52:39.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.345" endtime="20201030 15:52:39.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.753" level="INFO">${RESULT} = [{'diff': 8.979199999999826e-05}, {'diff': 8.938899999999528e-05}, {'diff': 8.995800000000109e-05}, {'diff': 8.948599999999973e-05}, {'diff': 9.005499999999861e-05}, {'diff': 8.936099999999614e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.744" endtime="20201030 15:52:39.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.764" level="INFO">${ACCURACY} = {'diff': [8.979199999999826e-05, 8.938899999999528e-05, 8.995800000000109e-05, 8.948599999999973e-05, 9.005499999999861e-05, 8.936099999999614e-05, 8.968100000000118e-05, 9.045800000000159e-05, 9.0110...</msg>
<status status="PASS" starttime="20201030 15:52:39.755" endtime="20201030 15:52:39.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.775" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.773" endtime="20201030 15:52:39.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.780" level="INFO">VALUE: [8.979199999999826e-05, 8.938899999999528e-05, 8.995800000000109e-05, 8.948599999999973e-05, 9.005499999999861e-05, 8.936099999999614e-05, 8.968100000000118e-05, 9.045800000000159e-05, 9.011099999999689e-05, 8.945800000000059e-05, 8.998600000000023e-05, 8.979199999999826e-05, 8.983400000000391e-05, 9.004099999999904e-05, 8.979199999999826e-05, 8.993100000000143e-05, 8.944400000000102e-05, 9.030499999999886e-05, 8.991700000000186e-05, 8.961100000000333e-05, 8.992999999999501e-05, 8.980599999999783e-05, 9.034699999999757e-05, 8.99999999999998e-05, 9.01670000000021e-05, 9.020800000000134e-05, 8.977799999999869e-05, 8.954199999999801e-05, 8.991700000000186e-05, 9.006899999999818e-05, 8.970800000000084e-05, 8.972200000000041e-05, 8.944400000000102e-05, 8.941600000000188e-05, 9.022200000000091e-05, 8.997199999999372e-05, 8.941600000000188e-05, 8.98199999999974e-05, 9.015200000000306e-05, 8.99999999999998e-05, 8.938899999999528e-05, 8.956899999999768e-05, 8.986099999999664e-05, 8.970800000000084e-05, 8.977800000000563e-05, 9.018100000000168e-05, 8.983300000000444e-05, 8.943100000000093e-05, 8.956899999999768e-05, 8.98329999999975e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.777" endtime="20201030 15:52:39.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.766" endtime="20201030 15:52:39.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.799" endtime="20201030 15:52:39.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.794" endtime="20201030 15:52:39.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.792" endtime="20201030 15:52:39.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.284" endtime="20201030 15:52:39.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.283" endtime="20201030 15:52:39.824"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.846" endtime="20201030 15:52:39.867"></status>
</kw>
<msg timestamp="20201030 15:52:39.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.843" endtime="20201030 15:52:39.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.871" endtime="20201030 15:52:39.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.877" endtime="20201030 15:52:39.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.836" endtime="20201030 15:52:39.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.830" endtime="20201030 15:52:39.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.900" endtime="20201030 15:52:40.249"></status>
</kw>
<msg timestamp="20201030 15:52:40.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039720194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.897" endtime="20201030 15:52:40.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039720194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.259" endtime="20201030 15:52:40.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.277" endtime="20201030 15:52:40.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.890" endtime="20201030 15:52:40.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.885" endtime="20201030 15:52:40.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.295" level="INFO">${RESULT} = [{'diff': 9.090299999999635e-05}, {'diff': 9.117999999999626e-05}, {'diff': 9.084700000000501e-05}, {'diff': 9.048600000000073e-05}, {'diff': 9.086099999999764e-05}, {'diff': 9.06250000000039e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:40.286" endtime="20201030 15:52:40.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.304" level="INFO">${ACCURACY} = {'diff': [9.090299999999635e-05, 9.117999999999626e-05, 9.084700000000501e-05, 9.048600000000073e-05, 9.086099999999764e-05, 9.06250000000039e-05, 9.063900000000347e-05, 9.080599999999883e-05, 9.09169...</msg>
<status status="PASS" starttime="20201030 15:52:40.297" endtime="20201030 15:52:40.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.316" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.313" endtime="20201030 15:52:40.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.322" level="INFO">VALUE: [9.090299999999635e-05, 9.117999999999626e-05, 9.084700000000501e-05, 9.048600000000073e-05, 9.086099999999764e-05, 9.06250000000039e-05, 9.063900000000347e-05, 9.080599999999883e-05, 9.091699999999592e-05, 9.079099999999979e-05, 9.051399999999987e-05, 9.11529999999966e-05, 9.084699999999807e-05, 9.093000000000295e-05, 9.095800000000209e-05, 9.073600000000098e-05, 9.088900000000372e-05, 9.136099999999814e-05, 9.122200000000191e-05, 9.063900000000347e-05, 9.079199999999926e-05, 9.047200000000116e-05, 9.073600000000098e-05, 9.138900000000422e-05, 9.052799999999944e-05, 9.106899999999918e-05, 9.093100000000243e-05, 9.08329999999985e-05, 9.063799999999705e-05, 9.06529999999961e-05, 9.076400000000012e-05, 9.065300000000304e-05, 9.081899999999893e-05, 9.058399999999772e-05, 9.065300000000304e-05, 9.058299999999825e-05, 9.126300000000115e-05, 9.106999999999865e-05, 9.040299999999585e-05, 9.036100000000408e-05, 9.097200000000166e-05, 9.10000000000008e-05, 9.122200000000191e-05, 9.058299999999825e-05, 9.108299999999875e-05, 9.119400000000277e-05, 9.104199999999951e-05, 9.127800000000019e-05, 9.061099999999739e-05, 9.109699999999832e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.318" endtime="20201030 15:52:40.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.306" endtime="20201030 15:52:40.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.335" endtime="20201030 15:52:40.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.330" endtime="20201030 15:52:40.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.328" endtime="20201030 15:52:40.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.826" endtime="20201030 15:52:40.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.825" endtime="20201030 15:52:40.361"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.383" endtime="20201030 15:52:40.406"></status>
</kw>
<msg timestamp="20201030 15:52:40.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.380" endtime="20201030 15:52:40.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.409" endtime="20201030 15:52:40.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.415" endtime="20201030 15:52:40.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.373" endtime="20201030 15:52:40.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.367" endtime="20201030 15:52:40.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.439" endtime="20201030 15:52:40.787"></status>
</kw>
<msg timestamp="20201030 15:52:40.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041373847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041465611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.436" endtime="20201030 15:52:40.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041373847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041465611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.797" endtime="20201030 15:52:40.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.815" endtime="20201030 15:52:40.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.428" endtime="20201030 15:52:40.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.424" endtime="20201030 15:52:40.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.833" level="INFO">${RESULT} = [{'diff': 9.176400000000112e-05}, {'diff': 9.154100000000054e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.226400000000162e-05}, {'diff': 9.140199999999737e-05}, {'diff': 9.154200000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.824" endtime="20201030 15:52:40.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.842" level="INFO">${ACCURACY} = {'diff': [9.176400000000112e-05, 9.154100000000054e-05, 9.159699999999882e-05, 9.226400000000162e-05, 9.140199999999737e-05, 9.154200000000001e-05, 9.18199999999994e-05, 9.21529999999976e-05, 9.190199...</msg>
<status status="PASS" starttime="20201030 15:52:40.835" endtime="20201030 15:52:40.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.853" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.851" endtime="20201030 15:52:40.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.858" level="INFO">VALUE: [9.176400000000112e-05, 9.154100000000054e-05, 9.159699999999882e-05, 9.226400000000162e-05, 9.140199999999737e-05, 9.154200000000001e-05, 9.18199999999994e-05, 9.21529999999976e-05, 9.190199999999787e-05, 9.143099999999599e-05, 9.234799999999904e-05, 9.201399999999443e-05, 9.186099999999864e-05, 9.15000000000013e-05, 9.179200000000026e-05, 9.137499999999771e-05, 9.222299999999545e-05, 9.14859999999948e-05, 9.151400000000087e-05, 9.134699999999857e-05, 9.162499999999796e-05, 9.198600000000223e-05, 9.212499999999846e-05, 9.165300000000404e-05, 9.16659999999972e-05, 9.188899999999778e-05, 9.180599999999983e-05, 9.206900000000018e-05, 9.198600000000223e-05, 9.17079999999959e-05, 9.209799999999879e-05, 9.226399999999468e-05, 9.187499999999821e-05, 9.173600000000198e-05, 9.161099999999839e-05, 9.208299999999975e-05, 9.223600000000248e-05, 9.155500000000011e-05, 9.190300000000429e-05, 9.220899999999588e-05, 9.194400000000352e-05, 9.208399999999922e-05, 9.21659999999977e-05, 9.152800000000044e-05, 9.163799999999805e-05, 9.176400000000112e-05, 9.193000000000395e-05, 9.175000000000155e-05, 9.137499999999771e-05, 9.195799999999615e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.855" endtime="20201030 15:52:40.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.844" endtime="20201030 15:52:40.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.872" endtime="20201030 15:52:40.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.866" endtime="20201030 15:52:40.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.864" endtime="20201030 15:52:40.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.363" endtime="20201030 15:52:40.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.361" endtime="20201030 15:52:40.897"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.920" endtime="20201030 15:52:40.941"></status>
</kw>
<msg timestamp="20201030 15:52:40.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.917" endtime="20201030 15:52:40.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.945" endtime="20201030 15:52:40.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.951" endtime="20201030 15:52:40.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.910" endtime="20201030 15:52:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.904" endtime="20201030 15:52:40.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.974" endtime="20201030 15:52:41.323"></status>
</kw>
<msg timestamp="20201030 15:52:41.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039806292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039898708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.971" endtime="20201030 15:52:41.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039806292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039898708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.332" endtime="20201030 15:52:41.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.351" endtime="20201030 15:52:41.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.964" endtime="20201030 15:52:41.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.959" endtime="20201030 15:52:41.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.369" level="INFO">${RESULT} = [{'diff': 9.241599999999794e-05}, {'diff': 9.307000000000065e-05}, {'diff': 9.245799999999665e-05}, {'diff': 9.277800000000169e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.333400000000047e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:41.360" endtime="20201030 15:52:41.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.380" level="INFO">${ACCURACY} = {'diff': [9.241599999999794e-05, 9.307000000000065e-05, 9.245799999999665e-05, 9.277800000000169e-05, 9.309700000000032e-05, 9.333400000000047e-05, 9.323600000000348e-05, 9.258399999999972e-05, 9.2708...</msg>
<status status="PASS" starttime="20201030 15:52:41.372" endtime="20201030 15:52:41.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.391" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.389" endtime="20201030 15:52:41.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.397" level="INFO">VALUE: [9.241599999999794e-05, 9.307000000000065e-05, 9.245799999999665e-05, 9.277800000000169e-05, 9.309700000000032e-05, 9.333400000000047e-05, 9.323600000000348e-05, 9.258399999999972e-05, 9.270800000000384e-05, 9.258399999999972e-05, 9.287499999999921e-05, 9.244399999999708e-05, 9.277800000000169e-05, 9.287499999999921e-05, 9.308400000000022e-05, 9.284700000000007e-05, 9.33200000000009e-05, 9.240199999999837e-05, 9.313899999999903e-05, 9.334700000000057e-05, 9.262499999999896e-05, 9.33200000000009e-05, 9.336100000000014e-05, 9.251400000000187e-05, 9.256900000000068e-05, 9.286199999999911e-05, 9.269399999999733e-05, 9.294399999999758e-05, 9.301400000000237e-05, 9.263899999999853e-05, 9.29859999999963e-05, 9.25000000000023e-05, 9.281899999999399e-05, 9.320800000000434e-05, 9.281999999999346e-05, 9.284700000000007e-05, 9.286099999999964e-05, 9.290300000000529e-05, 9.329099999999535e-05, 9.25000000000023e-05, 9.256900000000068e-05, 9.23879999999988e-05, 9.338899999999928e-05, 9.311099999999989e-05, 9.302800000000194e-05, 9.263900000000547e-05, 9.255600000000058e-05, 9.316700000000511e-05, 9.308300000000075e-05, 9.230600000000033e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.394" endtime="20201030 15:52:41.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.382" endtime="20201030 15:52:41.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.409" endtime="20201030 15:52:41.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.405" endtime="20201030 15:52:41.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.402" endtime="20201030 15:52:41.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.900" endtime="20201030 15:52:41.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.898" endtime="20201030 15:52:41.435"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.457" endtime="20201030 15:52:41.479"></status>
</kw>
<msg timestamp="20201030 15:52:41.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.454" endtime="20201030 15:52:41.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.482" endtime="20201030 15:52:41.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.488" endtime="20201030 15:52:41.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.447" endtime="20201030 15:52:41.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.441" endtime="20201030 15:52:41.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.512" endtime="20201030 15:52:41.858"></status>
</kw>
<msg timestamp="20201030 15:52:41.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039901736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039995917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.508" endtime="20201030 15:52:41.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039901736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039995917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.867" endtime="20201030 15:52:41.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.886" endtime="20201030 15:52:41.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.501" endtime="20201030 15:52:41.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.496" endtime="20201030 15:52:41.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.903" level="INFO">${RESULT} = [{'diff': 9.418099999999874e-05}, {'diff': 9.384700000000107e-05}, {'diff': 9.423699999999702e-05}, {'diff': 9.392999999999901e-05}, {'diff': 9.387500000000021e-05}, {'diff': 9.406900000000218e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:41.894" endtime="20201030 15:52:41.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.915" level="INFO">${ACCURACY} = {'diff': [9.418099999999874e-05, 9.384700000000107e-05, 9.423699999999702e-05, 9.392999999999901e-05, 9.387500000000021e-05, 9.406900000000218e-05, 9.401399999999643e-05, 9.425000000000405e-05, 9.4278...</msg>
<status status="PASS" starttime="20201030 15:52:41.905" endtime="20201030 15:52:41.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.926" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.923" endtime="20201030 15:52:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.931" level="INFO">VALUE: [9.418099999999874e-05, 9.384700000000107e-05, 9.423699999999702e-05, 9.392999999999901e-05, 9.387500000000021e-05, 9.406900000000218e-05, 9.401399999999643e-05, 9.425000000000405e-05, 9.427800000000319e-05, 9.377799999999575e-05, 9.357000000000115e-05, 9.344399999999808e-05, 9.345900000000407e-05, 9.341700000000536e-05, 9.429200000000276e-05, 9.42079999999984e-05, 9.404199999999557e-05, 9.422199999999797e-05, 9.394399999999858e-05, 9.351400000000287e-05, 9.426400000000362e-05, 9.358300000000125e-05, 9.372300000000389e-05, 9.412500000000046e-05, 9.358300000000125e-05, 9.443099999999899e-05, 9.38200000000014e-05, 9.375000000000355e-05, 9.376400000000312e-05, 9.423700000000396e-05, 9.372200000000441e-05, 9.347300000000364e-05, 9.390299999999935e-05, 9.379199999999532e-05, 9.397199999999772e-05, 9.356900000000168e-05, 9.429199999999582e-05, 9.41659999999997e-05, 9.338899999999928e-05, 9.38330000000015e-05, 9.434700000000157e-05, 9.387500000000021e-05, 9.337499999999971e-05, 9.351399999999593e-05, 9.35279999999955e-05, 9.355599999999464e-05, 9.426400000000362e-05, 9.34859999999968e-05, 9.347199999999722e-05, 9.3945000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.928" endtime="20201030 15:52:41.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.916" endtime="20201030 15:52:41.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.944" endtime="20201030 15:52:41.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.939" endtime="20201030 15:52:41.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.937" endtime="20201030 15:52:41.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.437" endtime="20201030 15:52:41.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.435" endtime="20201030 15:52:41.969"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.992" endtime="20201030 15:52:42.013"></status>
</kw>
<msg timestamp="20201030 15:52:42.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.988" endtime="20201030 15:52:42.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.016" endtime="20201030 15:52:42.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.023" endtime="20201030 15:52:42.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.981" endtime="20201030 15:52:42.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.975" endtime="20201030 15:52:42.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.046" endtime="20201030 15:52:42.395"></status>
</kw>
<msg timestamp="20201030 15:52:42.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039889125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:42.043" endtime="20201030 15:52:42.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039889125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:42.405" endtime="20201030 15:52:42.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.424" endtime="20201030 15:52:42.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.035" endtime="20201030 15:52:42.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.031" endtime="20201030 15:52:42.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.441" level="INFO">${RESULT} = [{'diff': 9.462500000000096e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.477799999999675e-05}, {'diff': 9.493000000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:42.433" endtime="20201030 15:52:42.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.451" level="INFO">${ACCURACY} = {'diff': [9.462500000000096e-05, 9.486100000000164e-05, 9.488900000000078e-05, 9.486100000000164e-05, 9.477799999999675e-05, 9.493000000000001e-05, 9.531999999999596e-05, 9.504100000000404e-05, 9.4792...</msg>
<status status="PASS" starttime="20201030 15:52:42.444" endtime="20201030 15:52:42.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.462" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.460" endtime="20201030 15:52:42.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.467" level="INFO">VALUE: [9.462500000000096e-05, 9.486100000000164e-05, 9.488900000000078e-05, 9.486100000000164e-05, 9.477799999999675e-05, 9.493000000000001e-05, 9.531999999999596e-05, 9.504100000000404e-05, 9.479200000000326e-05, 9.442999999999951e-05, 9.502800000000394e-05, 9.51660000000007e-05, 9.477799999999675e-05, 9.512500000000146e-05, 9.477699999999728e-05, 9.493100000000643e-05, 9.476399999999718e-05, 9.461200000000086e-05, 9.49859999999983e-05, 9.488900000000078e-05, 9.511100000000189e-05, 9.515200000000112e-05, 9.437500000000071e-05, 9.523599999999854e-05, 9.531899999999649e-05, 9.509699999999538e-05, 9.534700000000257e-05, 9.45279999999965e-05, 9.512500000000146e-05, 9.457000000000215e-05, 9.506900000000318e-05, 9.494499999999906e-05, 9.445800000000559e-05, 9.490300000000035e-05, 9.48200000000024e-05, 9.472199999999847e-05, 9.474999999999761e-05, 9.515299999999366e-05, 9.51660000000007e-05, 9.46530000000001e-05, 9.458400000000172e-05, 9.525000000000505e-05, 9.505500000000361e-05, 9.447200000000516e-05, 9.436100000000114e-05, 9.440299999999985e-05, 9.509800000000179e-05, 9.495799999999915e-05, 9.44859999999978e-05, 9.513900000000103e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.464" endtime="20201030 15:52:42.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.453" endtime="20201030 15:52:42.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.480" endtime="20201030 15:52:42.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.476" endtime="20201030 15:52:42.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.473" endtime="20201030 15:52:42.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.971" endtime="20201030 15:52:42.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.970" endtime="20201030 15:52:42.505"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.528" endtime="20201030 15:52:42.550"></status>
</kw>
<msg timestamp="20201030 15:52:42.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.525" endtime="20201030 15:52:42.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.553" endtime="20201030 15:52:42.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.559" endtime="20201030 15:52:42.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.517" endtime="20201030 15:52:42.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.512" endtime="20201030 15:52:42.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.583" endtime="20201030 15:52:42.939"></status>
</kw>
<msg timestamp="20201030 15:52:42.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041448264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041544125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.579" endtime="20201030 15:52:42.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041448264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041544125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.949" endtime="20201030 15:52:42.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.968" endtime="20201030 15:52:42.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.572" endtime="20201030 15:52:42.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.567" endtime="20201030 15:52:42.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.986" level="INFO">${RESULT} = [{'diff': 9.586100000000264e-05}, {'diff': 9.545799999999965e-05}, {'diff': 9.593100000000049e-05}, {'diff': 9.593100000000049e-05}, {'diff': 9.577799999999775e-05}, {'diff': 9.595800000000015e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:42.977" endtime="20201030 15:52:42.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.995" level="INFO">${ACCURACY} = {'diff': [9.586100000000264e-05, 9.545799999999965e-05, 9.593100000000049e-05, 9.593100000000049e-05, 9.577799999999775e-05, 9.595800000000015e-05, 9.540300000000085e-05, 9.563899999999459e-05, 9.5639...</msg>
<status status="PASS" starttime="20201030 15:52:42.988" endtime="20201030 15:52:42.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.007" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.004" endtime="20201030 15:52:43.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.012" level="INFO">VALUE: [9.586100000000264e-05, 9.545799999999965e-05, 9.593100000000049e-05, 9.593100000000049e-05, 9.577799999999775e-05, 9.595800000000015e-05, 9.540300000000085e-05, 9.563899999999459e-05, 9.563900000000153e-05, 9.547199999999922e-05, 9.630500000000486e-05, 9.56530000000011e-05, 9.563900000000153e-05, 9.61530000000016e-05, 9.623599999999954e-05, 9.561100000000239e-05, 9.573599999999904e-05, 9.574999999999861e-05, 9.609800000000279e-05, 9.63059999999974e-05, 9.62080000000004e-05, 9.618000000000126e-05, 9.573599999999904e-05, 9.569400000000033e-05, 9.601399999999843e-05, 9.543099999999999e-05, 9.611200000000236e-05, 9.631999999999696e-05, 9.630499999999792e-05, 9.543000000000051e-05, 9.579200000000426e-05, 9.580600000000383e-05, 9.563900000000153e-05, 9.580499999999742e-05, 9.604199999999757e-05, 9.630500000000486e-05, 9.569400000000033e-05, 9.562499999999502e-05, 9.538900000000128e-05, 9.62080000000004e-05, 9.604199999999757e-05, 9.595800000000015e-05, 9.586100000000264e-05, 9.61660000000017e-05, 9.583400000000297e-05, 9.590300000000135e-05, 9.569400000000033e-05, 9.554199999999707e-05, 9.608300000000375e-05, 9.624999999999911e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.009" endtime="20201030 15:52:43.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.997" endtime="20201030 15:52:43.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.031" endtime="20201030 15:52:43.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.021" endtime="20201030 15:52:43.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.018" endtime="20201030 15:52:43.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.507" endtime="20201030 15:52:43.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.506" endtime="20201030 15:52:43.056"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.079" endtime="20201030 15:52:43.101"></status>
</kw>
<msg timestamp="20201030 15:52:43.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.076" endtime="20201030 15:52:43.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.104" endtime="20201030 15:52:43.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.111" endtime="20201030 15:52:43.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.068" endtime="20201030 15:52:43.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.063" endtime="20201030 15:52:43.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.135" endtime="20201030 15:52:43.482"></status>
</kw>
<msg timestamp="20201030 15:52:43.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040040903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040137917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.131" endtime="20201030 15:52:43.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040040903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040137917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.491" endtime="20201030 15:52:43.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.511" endtime="20201030 15:52:43.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.124" endtime="20201030 15:52:43.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.119" endtime="20201030 15:52:43.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.528" level="INFO">${RESULT} = [{'diff': 9.701399999999943e-05}, {'diff': 9.722199999999404e-05}, {'diff': 9.733400000000447e-05}, {'diff': 9.656899999999774e-05}, {'diff': 9.706899999999824e-05}, {'diff': 9.699999999999986e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:43.519" endtime="20201030 15:52:43.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.538" level="INFO">${ACCURACY} = {'diff': [9.701399999999943e-05, 9.722199999999404e-05, 9.733400000000447e-05, 9.656899999999774e-05, 9.706899999999824e-05, 9.699999999999986e-05, 9.659700000000382e-05, 9.706999999999771e-05, 9.7027...</msg>
<status status="PASS" starttime="20201030 15:52:43.530" endtime="20201030 15:52:43.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.549" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.547" endtime="20201030 15:52:43.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.554" level="INFO">VALUE: [9.701399999999943e-05, 9.722199999999404e-05, 9.733400000000447e-05, 9.656899999999774e-05, 9.706899999999824e-05, 9.699999999999986e-05, 9.659700000000382e-05, 9.706999999999771e-05, 9.7027999999999e-05, 9.661100000000339e-05, 9.686100000000364e-05, 9.674999999999961e-05, 9.701399999999943e-05, 9.697200000000072e-05, 9.731999999999796e-05, 9.657000000000415e-05, 9.712500000000346e-05, 9.668000000000176e-05, 9.651399999999893e-05, 9.647200000000022e-05, 9.669400000000133e-05, 9.693100000000149e-05, 9.659800000000329e-05, 9.716599999999576e-05, 9.697199999999379e-05, 9.733399999999753e-05, 9.674999999999961e-05, 9.654199999999807e-05, 9.738900000000328e-05, 9.652699999999903e-05, 9.719400000000183e-05, 9.722200000000097e-05, 9.662500000000296e-05, 9.686100000000364e-05, 9.736100000000414e-05, 9.643000000000151e-05, 9.688899999999584e-05, 9.69730000000002e-05, 9.672200000000047e-05, 9.699999999999986e-05, 9.637499999999577e-05, 9.73479999999971e-05, 9.647200000000022e-05, 9.677799999999875e-05, 9.693000000000201e-05, 9.708399999999728e-05, 9.723600000000054e-05, 9.726399999999968e-05, 9.7027999999999e-05, 9.712500000000346e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.551" endtime="20201030 15:52:43.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.540" endtime="20201030 15:52:43.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.567" endtime="20201030 15:52:43.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.562" endtime="20201030 15:52:43.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.560" endtime="20201030 15:52:43.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.058" endtime="20201030 15:52:43.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.057" endtime="20201030 15:52:43.591"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.614" endtime="20201030 15:52:43.633"></status>
</kw>
<msg timestamp="20201030 15:52:43.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.610" endtime="20201030 15:52:43.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.637" endtime="20201030 15:52:43.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.643" endtime="20201030 15:52:43.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.603" endtime="20201030 15:52:43.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.598" endtime="20201030 15:52:43.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.666" endtime="20201030 15:52:43.997"></status>
</kw>
<msg timestamp="20201030 15:52:44.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038814597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038912542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.663" endtime="20201030 15:52:44.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038814597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038912542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.007" endtime="20201030 15:52:44.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.026" endtime="20201030 15:52:44.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.655" endtime="20201030 15:52:44.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.651" endtime="20201030 15:52:44.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.043" level="INFO">${RESULT} = [{'diff': 9.794500000000206e-05}, {'diff': 9.77080000000019e-05}, {'diff': 9.83479999999981e-05}, {'diff': 9.78059999999989e-05}, {'diff': 9.755599999999864e-05}, {'diff': 9.784700000000507e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:44.034" endtime="20201030 15:52:44.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.054" level="INFO">${ACCURACY} = {'diff': [9.794500000000206e-05, 9.77080000000019e-05, 9.83479999999981e-05, 9.78059999999989e-05, 9.755599999999864e-05, 9.784700000000507e-05, 9.768000000000276e-05, 9.769400000000233e-05, 9.8347000...</msg>
<status status="PASS" starttime="20201030 15:52:44.045" endtime="20201030 15:52:44.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.064" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.062" endtime="20201030 15:52:44.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.070" level="INFO">VALUE: [9.794500000000206e-05, 9.77080000000019e-05, 9.83479999999981e-05, 9.78059999999989e-05, 9.755599999999864e-05, 9.784700000000507e-05, 9.768000000000276e-05, 9.769400000000233e-05, 9.834700000000557e-05, 9.825000000000111e-05, 9.737500000000371e-05, 9.805499999999967e-05, 9.772200000000147e-05, 9.808399999999828e-05, 9.745899999999419e-05, 9.74860000000008e-05, 9.755499999999917e-05, 9.826400000000068e-05, 9.794400000000258e-05, 9.79159999999965e-05, 9.777799999999975e-05, 9.806899999999924e-05, 9.777799999999975e-05, 9.741699999999548e-05, 9.829100000000035e-05, 9.79159999999965e-05, 9.766700000000267e-05, 9.774999999999368e-05, 9.740300000000285e-05, 9.808299999999881e-05, 9.76530000000031e-05, 9.790300000000335e-05, 9.758299999999831e-05, 9.813899999999709e-05, 9.790299999999641e-05, 9.772199999999454e-05, 9.818100000000274e-05, 9.793100000000249e-05, 9.794399999999565e-05, 9.816700000000317e-05, 9.824999999999418e-05, 9.784699999999813e-05, 9.773600000000104e-05, 9.750000000000036e-05, 9.794400000000258e-05, 9.750000000000036e-05, 9.743000000000251e-05, 9.822200000000197e-05, 9.834699999999863e-05, 9.762499999999702e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.067" endtime="20201030 15:52:44.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.055" endtime="20201030 15:52:44.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.082" endtime="20201030 15:52:44.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.078" endtime="20201030 15:52:44.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.075" endtime="20201030 15:52:44.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.593" endtime="20201030 15:52:44.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.592" endtime="20201030 15:52:44.107"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.129" endtime="20201030 15:52:44.149"></status>
</kw>
<msg timestamp="20201030 15:52:44.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.126" endtime="20201030 15:52:44.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.152" endtime="20201030 15:52:44.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.159" endtime="20201030 15:52:44.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.119" endtime="20201030 15:52:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.113" endtime="20201030 15:52:44.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.182" endtime="20201030 15:52:44.515"></status>
</kw>
<msg timestamp="20201030 15:52:44.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039120236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039218722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.178" endtime="20201030 15:52:44.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039120236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039218722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.524" endtime="20201030 15:52:44.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.543" endtime="20201030 15:52:44.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.171" endtime="20201030 15:52:44.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.167" endtime="20201030 15:52:44.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.560" level="INFO">${RESULT} = [{'diff': 9.848599999999486e-05}, {'diff': 9.906999999999971e-05}, {'diff': 9.850000000000136e-05}, {'diff': 9.922199999999604e-05}, {'diff': 9.880500000000042e-05}, {'diff': 9.913799999999862e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:44.551" endtime="20201030 15:52:44.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.569" level="INFO">${ACCURACY} = {'diff': [9.848599999999486e-05, 9.906999999999971e-05, 9.850000000000136e-05, 9.922199999999604e-05, 9.880500000000042e-05, 9.913799999999862e-05, 9.89159999999975e-05, 9.868100000000324e-05, 9.84170...</msg>
<status status="PASS" starttime="20201030 15:52:44.562" endtime="20201030 15:52:44.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.580" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.577" endtime="20201030 15:52:44.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.585" level="INFO">VALUE: [9.848599999999486e-05, 9.906999999999971e-05, 9.850000000000136e-05, 9.922199999999604e-05, 9.880500000000042e-05, 9.913799999999862e-05, 9.89159999999975e-05, 9.868100000000324e-05, 9.841700000000342e-05, 9.906900000000024e-05, 9.851400000000093e-05, 9.926400000000168e-05, 9.904200000000057e-05, 9.905500000000067e-05, 9.90410000000011e-05, 9.855599999999964e-05, 9.906999999999971e-05, 9.867999999999683e-05, 9.862499999999802e-05, 9.894500000000306e-05, 9.943099999999705e-05, 9.934699999999963e-05, 9.8415999999997e-05, 9.865299999999716e-05, 9.850000000000136e-05, 9.923600000000254e-05, 9.884699999999913e-05, 9.905500000000067e-05, 9.843100000000299e-05, 9.861100000000539e-05, 9.915200000000512e-05, 9.934699999999963e-05, 9.937499999999877e-05, 9.841699999999648e-05, 9.905600000000014e-05, 9.863899999999759e-05, 9.872200000000247e-05, 9.898599999999536e-05, 9.925000000000211e-05, 9.859799999999835e-05, 9.926399999999475e-05, 9.905600000000014e-05, 9.88059999999999e-05, 9.917999999999733e-05, 9.911199999999842e-05, 9.858400000000572e-05, 9.854200000000007e-05, 9.88479999999986e-05, 9.908299999999981e-05, 9.86530000000041e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.582" endtime="20201030 15:52:44.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.571" endtime="20201030 15:52:44.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.597" endtime="20201030 15:52:44.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.593" endtime="20201030 15:52:44.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.591" endtime="20201030 15:52:44.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.109" endtime="20201030 15:52:44.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.108" endtime="20201030 15:52:44.622"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.644" endtime="20201030 15:52:44.666"></status>
</kw>
<msg timestamp="20201030 15:52:44.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.641" endtime="20201030 15:52:44.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.669" endtime="20201030 15:52:44.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.675" endtime="20201030 15:52:44.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.634" endtime="20201030 15:52:44.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.628" endtime="20201030 15:52:44.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.698" endtime="20201030 15:52:45.031"></status>
</kw>
<msg timestamp="20201030 15:52:45.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040525361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040624806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.695" endtime="20201030 15:52:45.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040525361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040624806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.041" endtime="20201030 15:52:45.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.059" endtime="20201030 15:52:45.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.688" endtime="20201030 15:52:45.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.684" endtime="20201030 15:52:45.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.076" level="INFO">${RESULT} = [{'diff': 9.944499999999662e-05}, {'diff': 9.93609999999992e-05}, {'diff': 9.950000000000236e-05}, {'diff': 9.981900000000099e-05}, {'diff': 9.941699999999748e-05}, {'diff': 0.0001002359999999966}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:45.067" endtime="20201030 15:52:45.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.085" level="INFO">${ACCURACY} = {'diff': [9.944499999999662e-05, 9.93609999999992e-05, 9.950000000000236e-05, 9.981900000000099e-05, 9.941699999999748e-05, 0.0001002359999999966, 9.965299999999816e-05, 9.947199999999629e-05, 0.00010...</msg>
<status status="PASS" starttime="20201030 15:52:45.078" endtime="20201030 15:52:45.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.096" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.094" endtime="20201030 15:52:45.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.101" level="INFO">VALUE: [9.944499999999662e-05, 9.93609999999992e-05, 9.950000000000236e-05, 9.981900000000099e-05, 9.941699999999748e-05, 0.0001002359999999966, 9.965299999999816e-05, 9.947199999999629e-05, 0.0001003060000000014, 0.00010009700000000038, 9.997199999999679e-05, 9.98060000000009e-05, 9.995800000000415e-05, 0.00010013800000000656, 0.00010033400000000053, 9.969500000000381e-05, 9.951400000000193e-05, 0.00010011099999999995, 9.955600000000064e-05, 9.93609999999992e-05, 9.97080000000039e-05, 9.969400000000433e-05, 9.940299999999791e-05, 9.977800000000175e-05, 0.00010013799999999962, 0.00010008400000000028, 0.00010033300000000106, 0.0001001939999999979, 0.00010008400000000028, 9.949999999999543e-05, 9.951400000000193e-05, 0.00010020799999999747, 9.94860000000028e-05, 0.00010015299999999866, 9.937499999999877e-05, 9.975000000000261e-05, 0.00010011099999999995, 9.990299999999841e-05, 9.958300000000031e-05, 9.963899999999859e-05, 9.958399999999978e-05, 9.940299999999791e-05, 9.954200000000107e-05, 9.942999999999758e-05, 9.965299999999816e-05, 0.00010011099999999995, 0.0001003339999999936, 9.962499999999902e-05, 9.979100000000185e-05, 9.979100000000185e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.098" endtime="20201030 15:52:45.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.087" endtime="20201030 15:52:45.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.115" endtime="20201030 15:52:45.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.109" endtime="20201030 15:52:45.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.107" endtime="20201030 15:52:45.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.624" endtime="20201030 15:52:45.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.623" endtime="20201030 15:52:45.140"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.162" endtime="20201030 15:52:45.182"></status>
</kw>
<msg timestamp="20201030 15:52:45.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.159" endtime="20201030 15:52:45.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.185" endtime="20201030 15:52:45.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.192" endtime="20201030 15:52:45.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.152" endtime="20201030 15:52:45.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.146" endtime="20201030 15:52:45.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.215" endtime="20201030 15:52:45.546"></status>
</kw>
<msg timestamp="20201030 15:52:45.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038925417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039026208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.211" endtime="20201030 15:52:45.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038925417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039026208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.555" endtime="20201030 15:52:45.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.573" endtime="20201030 15:52:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.204" endtime="20201030 15:52:45.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.200" endtime="20201030 15:52:45.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.590" level="INFO">${RESULT} = [{'diff': 0.00010079100000000285}, {'diff': 0.00010065299999999916}, {'diff': 0.00010065299999999916}, {'diff': 0.00010043099999999805}, {'diff': 0.00010112500000000052}, {'diff': 0.000100778000000002...</msg>
<status status="PASS" starttime="20201030 15:52:45.581" endtime="20201030 15:52:45.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.600" level="INFO">${ACCURACY} = {'diff': [0.00010079100000000285, 0.00010065299999999916, 0.00010065299999999916, 0.00010043099999999805, 0.00010112500000000052, 0.00010077800000000275, 0.00010087500000000027, 0.00010126400000000368...</msg>
<status status="PASS" starttime="20201030 15:52:45.592" endtime="20201030 15:52:45.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.611" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.609" endtime="20201030 15:52:45.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.616" level="INFO">VALUE: [0.00010079100000000285, 0.00010065299999999916, 0.00010065299999999916, 0.00010043099999999805, 0.00010112500000000052, 0.00010077800000000275, 0.00010087500000000027, 0.00010126400000000368, 0.00010137500000000077, 0.00010097299999999726, 0.00010119499999999837, 0.00010094499999999812, 0.00010066699999999873, 0.00010115200000000019, 0.00010115299999999966, 0.0001010559999999952, 0.00010115299999999966, 0.00010124999999999718, 0.00010133299999999512, 0.00010048699999999633, 0.00010122199999999804, 0.00010125000000000411, 0.00010105600000000214, 0.00010140299999999991, 0.00010081899999999505, 0.00010065299999999916, 0.00010076399999999625, 0.00010137500000000077, 0.00010137500000000077, 0.0001009159999999995, 0.00010152699999999709, 0.00010063899999999959, 0.0001004860000000038, 0.00010134799999999416, 0.0001013610000000012, 0.000101028000000003, 0.00010063899999999959, 0.00010101400000000343, 0.00010116599999999976, 0.00010095799999999822, 0.00010115200000000019, 0.00010036199999999967, 0.00010109800000000085, 0.00010108300000000181, 0.00010052700000000303, 0.0001007080000000049, 0.00010134700000000163, 0.00010113800000000062, 0.00010083400000000103, 0.00010091699999999898]</msg>
<status status="PASS" starttime="20201030 15:52:45.613" endtime="20201030 15:52:45.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.602" endtime="20201030 15:52:45.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.629" endtime="20201030 15:52:45.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.624" endtime="20201030 15:52:45.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.622" endtime="20201030 15:52:45.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.142" endtime="20201030 15:52:45.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.141" endtime="20201030 15:52:45.653"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.676" endtime="20201030 15:52:45.696"></status>
</kw>
<msg timestamp="20201030 15:52:45.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.672" endtime="20201030 15:52:45.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.699" endtime="20201030 15:52:45.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.705" endtime="20201030 15:52:45.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.665" endtime="20201030 15:52:45.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.660" endtime="20201030 15:52:45.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.728" endtime="20201030 15:52:46.060"></status>
</kw>
<msg timestamp="20201030 15:52:46.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038867653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038969764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.725" endtime="20201030 15:52:46.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038867653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038969764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.070" endtime="20201030 15:52:46.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.088" endtime="20201030 15:52:46.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.718" endtime="20201030 15:52:46.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.713" endtime="20201030 15:52:46.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.105" level="INFO">${RESULT} = [{'diff': 0.00010211099999999501}, {'diff': 0.00010208300000000281}, {'diff': 0.00010211100000000195}, {'diff': 0.00010198599999999836}, {'diff': 0.00010145799999999872}, {'diff': 0.000102097000000002...</msg>
<status status="PASS" starttime="20201030 15:52:46.096" endtime="20201030 15:52:46.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.116" level="INFO">${ACCURACY} = {'diff': [0.00010211099999999501, 0.00010208300000000281, 0.00010211100000000195, 0.00010198599999999836, 0.00010145799999999872, 0.00010209700000000238, 0.00010152799999999657, 0.00010165300000000016...</msg>
<status status="PASS" starttime="20201030 15:52:46.107" endtime="20201030 15:52:46.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.126" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.124" endtime="20201030 15:52:46.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.132" level="INFO">VALUE: [0.00010211099999999501, 0.00010208300000000281, 0.00010211100000000195, 0.00010198599999999836, 0.00010145799999999872, 0.00010209700000000238, 0.00010152799999999657, 0.00010165300000000016, 0.00010140200000000044, 0.00010143099999999905, 0.00010230499999999698, 0.00010212500000000152, 0.00010183400000000203, 0.0001013610000000012, 0.00010220799999999947, 0.00010233300000000306, 0.00010229199999999689, 0.00010174999999999768, 0.0001020139999999975, 0.00010162500000000102, 0.00010224999999999818, 0.0001021809999999998, 0.0001021809999999998, 0.00010197299999999826, 0.00010184699999999519, 0.00010177700000000428, 0.00010145799999999872, 0.00010209699999999544, 0.00010145799999999872, 0.00010229200000000382, 0.00010227799999999732, 0.00010163799999999418, 0.00010177800000000375, 0.00010211100000000195, 0.0001021809999999998, 0.00010188900000000084, 0.00010215200000000119, 0.00010219500000000631, 0.00010144399999999915, 0.0001013610000000012, 0.00010222299999999851, 0.00010229099999999741, 0.0001017359999999981, 0.00010197199999999879, 0.00010231899999999655, 0.00010143099999999905, 0.00010194499999999912, 0.00010220799999999947, 0.00010224999999999818, 0.000102028000000004]</msg>
<status status="PASS" starttime="20201030 15:52:46.129" endtime="20201030 15:52:46.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.117" endtime="20201030 15:52:46.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.144" endtime="20201030 15:52:46.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.140" endtime="20201030 15:52:46.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.137" endtime="20201030 15:52:46.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.655" endtime="20201030 15:52:46.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.654" endtime="20201030 15:52:46.169"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.192" endtime="20201030 15:52:46.212"></status>
</kw>
<msg timestamp="20201030 15:52:46.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.189" endtime="20201030 15:52:46.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.215" endtime="20201030 15:52:46.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.221" endtime="20201030 15:52:46.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.181" endtime="20201030 15:52:46.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.176" endtime="20201030 15:52:46.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.248" endtime="20201030 15:52:46.584"></status>
</kw>
<msg timestamp="20201030 15:52:46.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039131208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.244" endtime="20201030 15:52:46.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039131208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.593" endtime="20201030 15:52:46.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.612" endtime="20201030 15:52:46.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.235" endtime="20201030 15:52:46.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.230" endtime="20201030 15:52:46.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.629" level="INFO">${RESULT} = [{'diff': 0.0001031810000000008}, {'diff': 0.00010272299999999901}, {'diff': 0.00010319500000000037}, {'diff': 0.00010332000000000396}, {'diff': 0.00010298599999999936}, {'diff': 0.0001032499999999991...</msg>
<status status="PASS" starttime="20201030 15:52:46.620" endtime="20201030 15:52:46.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.638" level="INFO">${ACCURACY} = {'diff': [0.0001031810000000008, 0.00010272299999999901, 0.00010319500000000037, 0.00010332000000000396, 0.00010298599999999936, 0.00010324999999999918, 0.00010329099999999841, 0.00010341599999999507,...</msg>
<status status="PASS" starttime="20201030 15:52:46.631" endtime="20201030 15:52:46.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.648" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.646" endtime="20201030 15:52:46.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.654" level="INFO">VALUE: [0.0001031810000000008, 0.00010272299999999901, 0.00010319500000000037, 0.00010332000000000396, 0.00010298599999999936, 0.00010324999999999918, 0.00010329099999999841, 0.00010341599999999507, 0.0001033480000000031, 0.0001025689999999968, 0.0001033339999999966, 0.00010244499999999962, 0.0001028610000000027, 0.00010288900000000184, 0.00010259699999999594, 0.000102416000000001, 0.00010322299999999951, 0.00010322200000000004, 0.00010244499999999962, 0.00010297199999999979, 0.00010308300000000381, 0.00010304200000000457, 0.00010299999999999893, 0.00010248599999999886, 0.00010261100000000245, 0.00010263800000000212, 0.00010249999999999843, 0.00010311099999999601, 0.00010325000000000611, 0.00010320800000000047, 0.00010280499999999748, 0.00010302799999999807, 0.00010240300000000091, 0.00010259799999999542, 0.00010249999999999843, 0.00010276399999999825, 0.00010266700000000073, 0.0001027359999999991, 0.00010338799999999593, 0.0001031940000000009, 0.00010325000000000611, 0.00010281899999999705, 0.00010274999999999868, 0.0001026940000000004, 0.00010241700000000048, 0.00010322299999999951, 0.00010329199999999789, 0.0001028889999999949, 0.00010334699999999669, 0.0001025689999999968]</msg>
<status status="PASS" starttime="20201030 15:52:46.651" endtime="20201030 15:52:46.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.639" endtime="20201030 15:52:46.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.669" endtime="20201030 15:52:46.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.663" endtime="20201030 15:52:46.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.660" endtime="20201030 15:52:46.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.171" endtime="20201030 15:52:46.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.170" endtime="20201030 15:52:46.694"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.716" endtime="20201030 15:52:46.738"></status>
</kw>
<msg timestamp="20201030 15:52:46.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.713" endtime="20201030 15:52:46.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.741" endtime="20201030 15:52:46.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.748" endtime="20201030 15:52:46.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.706" endtime="20201030 15:52:46.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.700" endtime="20201030 15:52:46.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.771" endtime="20201030 15:52:47.100"></status>
</kw>
<msg timestamp="20201030 15:52:47.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040953014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041057208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.768" endtime="20201030 15:52:47.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040953014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041057208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.109" endtime="20201030 15:52:47.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.127" endtime="20201030 15:52:47.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.760" endtime="20201030 15:52:47.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.756" endtime="20201030 15:52:47.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.144" level="INFO">${RESULT} = [{'diff': 0.00010419399999999496}, {'diff': 0.00010402699999999959}, {'diff': 0.00010429099999999941}, {'diff': 0.00010430500000000592}, {'diff': 0.00010391700000000198}, {'diff': 0.000103986000000000...</msg>
<status status="PASS" starttime="20201030 15:52:47.135" endtime="20201030 15:52:47.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.153" level="INFO">${ACCURACY} = {'diff': [0.00010419399999999496, 0.00010402699999999959, 0.00010429099999999941, 0.00010430500000000592, 0.00010391700000000198, 0.00010398600000000036, 0.00010393000000000208, 0.00010419500000000137...</msg>
<status status="PASS" starttime="20201030 15:52:47.146" endtime="20201030 15:52:47.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.163" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.161" endtime="20201030 15:52:47.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.169" level="INFO">VALUE: [0.00010419399999999496, 0.00010402699999999959, 0.00010429099999999941, 0.00010430500000000592, 0.00010391700000000198, 0.00010398600000000036, 0.00010393000000000208, 0.00010419500000000137, 0.00010363899999999565, 0.00010429199999999889, 0.00010425000000000018, 0.00010387500000000327, 0.00010391700000000198, 0.0001036940000000014, 0.00010404099999999916, 0.0001035689999999978, 0.00010348599999999986, 0.00010381899999999805, 0.00010362499999999608, 0.00010363900000000259, 0.00010412500000000352, 0.00010390299999999547, 0.00010419500000000137, 0.00010365300000000216, 0.00010390300000000241, 0.0001041940000000019, 0.00010348599999999986, 0.00010430499999999898, 0.00010345800000000072, 0.00010418000000000233, 0.00010376399999999925, 0.00010402699999999959, 0.00010406900000000524, 0.00010433299999999812, 0.0001040559999999982, 0.00010384699999999719, 0.00010426399999999975, 0.0001039160000000025, 0.00010355499999999823, 0.00010356999999999728, 0.00010406999999999778, 0.00010433299999999812, 0.00010362500000000302, 0.00010359699999999694, 0.00010383299999999762, 0.00010394400000000165, 0.00010411100000000395, 0.00010352799999999857, 0.00010397200000000079, 0.00010437499999999683]</msg>
<status status="PASS" starttime="20201030 15:52:47.166" endtime="20201030 15:52:47.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.155" endtime="20201030 15:52:47.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.183" endtime="20201030 15:52:47.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.177" endtime="20201030 15:52:47.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.174" endtime="20201030 15:52:47.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.696" endtime="20201030 15:52:47.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.695" endtime="20201030 15:52:47.207"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.230" endtime="20201030 15:52:47.250"></status>
</kw>
<msg timestamp="20201030 15:52:47.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.227" endtime="20201030 15:52:47.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.253" endtime="20201030 15:52:47.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.259" endtime="20201030 15:52:47.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.219" endtime="20201030 15:52:47.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.214" endtime="20201030 15:52:47.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.282" endtime="20201030 15:52:47.613"></status>
</kw>
<msg timestamp="20201030 15:52:47.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038911819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039016389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.279" endtime="20201030 15:52:47.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038911819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039016389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.622" endtime="20201030 15:52:47.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.640" endtime="20201030 15:52:47.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.272" endtime="20201030 15:52:47.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.267" endtime="20201030 15:52:47.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.657" level="INFO">${RESULT} = [{'diff': 0.00010456999999999828}, {'diff': 0.00010455499999999923}, {'diff': 0.00010444500000000162}, {'diff': 0.00010448599999999392}, {'diff': 0.00010440299999999597}, {'diff': 0.000104916999999996...</msg>
<status status="PASS" starttime="20201030 15:52:47.648" endtime="20201030 15:52:47.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.667" level="INFO">${ACCURACY} = {'diff': [0.00010456999999999828, 0.00010455499999999923, 0.00010444500000000162, 0.00010448599999999392, 0.00010440299999999597, 0.00010491699999999604, 0.00010479099999999991, 0.0001047219999999946,...</msg>
<status status="PASS" starttime="20201030 15:52:47.659" endtime="20201030 15:52:47.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.678" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.676" endtime="20201030 15:52:47.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.683" level="INFO">VALUE: [0.00010456999999999828, 0.00010455499999999923, 0.00010444500000000162, 0.00010448599999999392, 0.00010440299999999597, 0.00010491699999999604, 0.00010479099999999991, 0.0001047219999999946, 0.00010463900000000359, 0.0001048610000000047, 0.00010463900000000359, 0.00010513899999999715, 0.00010452799999999957, 0.00010443100000000205, 0.00010463900000000359, 0.00010462500000000402, 0.00010437499999999683, 0.0001045559999999987, 0.00010495900000000169, 0.00010511100000000495, 0.0001053889999999974, 0.00010475000000000068, 0.00010520800000000247, 0.00010511100000000495, 0.00010519500000000237, 0.00010497200000000179, 0.00010476400000000025, 0.000104514, 0.00010494500000000212, 0.00010519500000000237, 0.00010484699999999819, 0.00010536199999999774, 0.00010445800000000172, 0.00010530599999999946, 0.00010479200000000632, 0.0001052219999999951, 0.00010441700000000248, 0.00010437500000000377, 0.00010495799999999528, 0.00010487499999999733, 0.00010540300000000391, 0.00010450000000000043, 0.00010515300000000366, 0.00010525000000000118, 0.00010504199999999964, 0.00010534700000000563, 0.00010504100000000016, 0.00010494399999999571, 0.0001053610000000052, 0.00010465299999999622]</msg>
<status status="PASS" starttime="20201030 15:52:47.680" endtime="20201030 15:52:47.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.669" endtime="20201030 15:52:47.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.695" endtime="20201030 15:52:47.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.691" endtime="20201030 15:52:47.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.689" endtime="20201030 15:52:47.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.210" endtime="20201030 15:52:47.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.208" endtime="20201030 15:52:47.720"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.742" endtime="20201030 15:52:47.763"></status>
</kw>
<msg timestamp="20201030 15:52:47.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.739" endtime="20201030 15:52:47.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.766" endtime="20201030 15:52:47.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.772" endtime="20201030 15:52:47.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.732" endtime="20201030 15:52:47.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.726" endtime="20201030 15:52:47.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.795" endtime="20201030 15:52:48.127"></status>
</kw>
<msg timestamp="20201030 15:52:48.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038811806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038917681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.792" endtime="20201030 15:52:48.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038811806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038917681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.136" endtime="20201030 15:52:48.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.154" endtime="20201030 15:52:48.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.785" endtime="20201030 15:52:48.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.780" endtime="20201030 15:52:48.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.171" level="INFO">${RESULT} = [{'diff': 0.00010587500000000527}, {'diff': 0.00010616700000000423}, {'diff': 0.0001055559999999997}, {'diff': 0.00010565299999999722}, {'diff': 0.00010548600000000186}, {'diff': 0.0001056669999999967...</msg>
<status status="PASS" starttime="20201030 15:52:48.162" endtime="20201030 15:52:48.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.186" level="INFO">${ACCURACY} = {'diff': [0.00010587500000000527, 0.00010616700000000423, 0.0001055559999999997, 0.00010565299999999722, 0.00010548600000000186, 0.00010566699999999679, 0.00010570800000000297, 0.00010586099999999876,...</msg>
<status status="PASS" starttime="20201030 15:52:48.173" endtime="20201030 15:52:48.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.197" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.195" endtime="20201030 15:52:48.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.202" level="INFO">VALUE: [0.00010587500000000527, 0.00010616700000000423, 0.0001055559999999997, 0.00010565299999999722, 0.00010548600000000186, 0.00010566699999999679, 0.00010570800000000297, 0.00010586099999999876, 0.0001060140000000015, 0.0001061810000000038, 0.00010568099999999636, 0.0001064019999999985, 0.00010622200000000304, 0.00010611099999999901, 0.00010550000000000143, 0.00010545800000000272, 0.00010611099999999901, 0.00010598600000000236, 0.00010594500000000312, 0.00010620799999999653, 0.00010615299999999772, 0.00010541599999999707, 0.00010615299999999772, 0.00010543099999999611, 0.0001055559999999997, 0.00010619499999999643, 0.00010575000000000168, 0.00010540299999999697, 0.00010559799999999842, 0.0001062360000000026, 0.00010579099999999397, 0.00010611199999999849, 0.00010604200000000064, 0.00010583300000000656, 0.00010595799999999628, 0.00010569399999999646, 0.00010629200000000089, 0.00010558299999999937, 0.00010543099999999611, 0.00010583299999999962, 0.00010587499999999833, 0.0001060140000000015, 0.00010570800000000297, 0.00010600000000000193, 0.00010594399999999671, 0.00010600000000000193, 0.00010565300000000416, 0.00010547199999999535, 0.000105416000000004, 0.00010544499999999568]</msg>
<status status="PASS" starttime="20201030 15:52:48.199" endtime="20201030 15:52:48.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.188" endtime="20201030 15:52:48.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.214" endtime="20201030 15:52:48.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.210" endtime="20201030 15:52:48.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.208" endtime="20201030 15:52:48.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.722" endtime="20201030 15:52:48.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.721" endtime="20201030 15:52:48.239"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.261" endtime="20201030 15:52:48.282"></status>
</kw>
<msg timestamp="20201030 15:52:48.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.258" endtime="20201030 15:52:48.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.285" endtime="20201030 15:52:48.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.291" endtime="20201030 15:52:48.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.251" endtime="20201030 15:52:48.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.245" endtime="20201030 15:52:48.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.314" endtime="20201030 15:52:48.647"></status>
</kw>
<msg timestamp="20201030 15:52:48.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038967625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039074861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.311" endtime="20201030 15:52:48.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038967625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039074861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.656" endtime="20201030 15:52:48.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.674" endtime="20201030 15:52:48.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.304" endtime="20201030 15:52:48.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.299" endtime="20201030 15:52:48.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.691" level="INFO">${RESULT} = [{'diff': 0.0001072360000000036}, {'diff': 0.00010709700000000044}, {'diff': 0.00010665300000000516}, {'diff': 0.00010719499999999743}, {'diff': 0.00010694500000000412}, {'diff': 0.0001073050000000019...</msg>
<status status="PASS" starttime="20201030 15:52:48.682" endtime="20201030 15:52:48.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.700" level="INFO">${ACCURACY} = {'diff': [0.0001072360000000036, 0.00010709700000000044, 0.00010665300000000516, 0.00010719499999999743, 0.00010694500000000412, 0.00010730500000000198, 0.00010712499999999958, 0.0001070140000000025, ...</msg>
<status status="PASS" starttime="20201030 15:52:48.693" endtime="20201030 15:52:48.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.710" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.708" endtime="20201030 15:52:48.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.716" level="INFO">VALUE: [0.0001072360000000036, 0.00010709700000000044, 0.00010665300000000516, 0.00010719499999999743, 0.00010694500000000412, 0.00010730500000000198, 0.00010712499999999958, 0.0001070140000000025, 0.00010719399999999796, 0.00010704100000000216, 0.00010690299999999847, 0.00010663900000000559, 0.00010722200000000404, 0.00010724999999999624, 0.00010747200000000429, 0.00010652699999999515, 0.0001068889999999989, 0.00010642999999999764, 0.00010640300000000491, 0.0001065690000000008, 0.00010694399999999771, 0.00010722200000000404, 0.00010680500000000148, 0.00010683300000000062, 0.00010730600000000146, 0.00010711100000000001, 0.00010668099999999736, 0.00010713899999999915, 0.00010702800000000207, 0.00010730499999999504, 0.00010680600000000096, 0.00010666699999999779, 0.00010733300000000112, 0.00010642999999999764, 0.00010718099999999786, 0.00010727799999999538, 0.00010663900000000559, 0.00010720800000000447, 0.00010663899999999865, 0.000106514000000002, 0.0001070419999999947, 0.0001067360000000031, 0.00010715299999999872, 0.00010666699999999779, 0.00010658300000000037, 0.00010686099999999976, 0.00010650000000000243, 0.00010713899999999915, 0.00010636099999999926, 0.00010641699999999754]</msg>
<status status="PASS" starttime="20201030 15:52:48.713" endtime="20201030 15:52:48.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.701" endtime="20201030 15:52:48.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.728" endtime="20201030 15:52:48.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.724" endtime="20201030 15:52:48.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.721" endtime="20201030 15:52:48.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.241" endtime="20201030 15:52:48.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.240" endtime="20201030 15:52:48.753"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.775" endtime="20201030 15:52:48.797"></status>
</kw>
<msg timestamp="20201030 15:52:48.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.772" endtime="20201030 15:52:48.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.800" endtime="20201030 15:52:48.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.806" endtime="20201030 15:52:48.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.765" endtime="20201030 15:52:48.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.759" endtime="20201030 15:52:48.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.829" endtime="20201030 15:52:49.160"></status>
</kw>
<msg timestamp="20201030 15:52:49.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040333611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.826" endtime="20201030 15:52:49.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040333611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.169" endtime="20201030 15:52:49.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.187" endtime="20201030 15:52:49.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.819" endtime="20201030 15:52:49.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.814" endtime="20201030 15:52:49.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.204" level="INFO">${RESULT} = [{'diff': 0.00010815299999999972}, {'diff': 0.00010823599999999767}, {'diff': 0.00010795799999999828}, {'diff': 0.00010827799999999638}, {'diff': 0.00010752799999999563}, {'diff': 0.000108054999999995...</msg>
<status status="PASS" starttime="20201030 15:52:49.196" endtime="20201030 15:52:49.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.213" level="INFO">${ACCURACY} = {'diff': [0.00010815299999999972, 0.00010823599999999767, 0.00010795799999999828, 0.00010827799999999638, 0.00010752799999999563, 0.0001080549999999958, 0.00010793099999999861, 0.00010822200000000504,...</msg>
<status status="PASS" starttime="20201030 15:52:49.206" endtime="20201030 15:52:49.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.224" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.222" endtime="20201030 15:52:49.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.229" level="INFO">VALUE: [0.00010815299999999972, 0.00010823599999999767, 0.00010795799999999828, 0.00010827799999999638, 0.00010752799999999563, 0.0001080549999999958, 0.00010793099999999861, 0.00010822200000000504, 0.00010741699999999854, 0.00010798599999999742, 0.0001075690000000018, 0.00010797199999999785, 0.00010811100000000101, 0.00010831900000000255, 0.00010779200000000239, 0.00010756999999999434, 0.00010772300000000401, 0.00010809700000000144, 0.00010834699999999475, 0.00010766699999999879, 0.00010792999999999914, 0.00010752800000000257, 0.00010832000000000203, 0.00010822299999999757, 0.00010781900000000205, 0.00010812500000000058, 0.00010748600000000386, 0.00010797199999999785, 0.00010754100000000266, 0.00010804099999999622, 0.00010820800000000547, 0.00010811100000000101, 0.00010841600000000007, 0.00010756899999999486, 0.00010777700000000334, 0.00010772299999999707, 0.00010813799999999374, 0.00010752800000000257, 0.00010834700000000169, 0.00010776399999999631, 0.00010770799999999803, 0.00010805500000000273, 0.00010815200000000025, 0.00010829199999999595, 0.00010770900000000444, 0.0001073889999999994, 0.00010743100000000505, 0.00010744399999999821, 0.00010809700000000144, 0.00010747200000000429]</msg>
<status status="PASS" starttime="20201030 15:52:49.226" endtime="20201030 15:52:49.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.215" endtime="20201030 15:52:49.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.243" endtime="20201030 15:52:49.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.237" endtime="20201030 15:52:49.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.235" endtime="20201030 15:52:49.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.755" endtime="20201030 15:52:49.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.754" endtime="20201030 15:52:49.268"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.290" endtime="20201030 15:52:49.310"></status>
</kw>
<msg timestamp="20201030 15:52:49.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.287" endtime="20201030 15:52:49.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.314" endtime="20201030 15:52:49.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.320" endtime="20201030 15:52:49.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.280" endtime="20201030 15:52:49.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.274" endtime="20201030 15:52:49.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.343" endtime="20201030 15:52:49.674"></status>
</kw>
<msg timestamp="20201030 15:52:49.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038967056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039075556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.340" endtime="20201030 15:52:49.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038967056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039075556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.683" endtime="20201030 15:52:49.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.701" endtime="20201030 15:52:49.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.333" endtime="20201030 15:52:49.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.328" endtime="20201030 15:52:49.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.718" level="INFO">${RESULT} = [{'diff': 0.00010849999999999749}, {'diff': 0.00010852800000000357}, {'diff': 0.00010884800000000167}, {'diff': 0.00010855599999999577}, {'diff': 0.00010848600000000486}, {'diff': 0.000109055999999996...</msg>
<status status="PASS" starttime="20201030 15:52:49.709" endtime="20201030 15:52:49.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.728" level="INFO">${ACCURACY} = {'diff': [0.00010849999999999749, 0.00010852800000000357, 0.00010884800000000167, 0.00010855599999999577, 0.00010848600000000486, 0.00010905599999999627, 0.00010927799999999738, 0.00010874999999999774...</msg>
<status status="PASS" starttime="20201030 15:52:49.720" endtime="20201030 15:52:49.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.739" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.737" endtime="20201030 15:52:49.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.744" level="INFO">VALUE: [0.00010849999999999749, 0.00010852800000000357, 0.00010884800000000167, 0.00010855599999999577, 0.00010848600000000486, 0.00010905599999999627, 0.00010927799999999738, 0.00010874999999999774, 0.00010897199999999885, 0.00010875000000000468, 0.00010876399999999731, 0.00010881899999999611, 0.000108514000000004, 0.00010920799999999953, 0.00010893099999999961, 0.000108596999999995, 0.00010890300000000047, 0.00010881899999999611, 0.00010866699999999979, 0.00010904200000000364, 0.00010869499999999893, 0.00010918099999999986, 0.0001092360000000056, 0.00010858299999999543, 0.00010940300000000097, 0.00010918099999999986, 0.00010858400000000185, 0.00010937500000000183, 0.00010877800000000382, 0.00010843099999999911, 0.00010920799999999953, 0.00010929199999999695, 0.00010893099999999961, 0.00010941700000000054, 0.00010912500000000158, 0.00010922299999999857, 0.00010922299999999857, 0.00010918099999999986, 0.0001094169999999936, 0.00010924999999999824, 0.00010894399999999971, 0.00010865300000000022, 0.00010927800000000432, 0.00010897299999999832, 0.0001092360000000056, 0.00010874999999999774, 0.00010927800000000432, 0.0001092219999999991, 0.00010866699999999979, 0.00010919499999999943]</msg>
<status status="PASS" starttime="20201030 15:52:49.741" endtime="20201030 15:52:49.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.730" endtime="20201030 15:52:49.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.756" endtime="20201030 15:52:49.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.752" endtime="20201030 15:52:49.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.750" endtime="20201030 15:52:49.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.270" endtime="20201030 15:52:49.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.269" endtime="20201030 15:52:49.781"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.803" endtime="20201030 15:52:49.824"></status>
</kw>
<msg timestamp="20201030 15:52:49.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.800" endtime="20201030 15:52:49.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.827" endtime="20201030 15:52:49.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.833" endtime="20201030 15:52:49.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.793" endtime="20201030 15:52:49.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.787" endtime="20201030 15:52:49.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.856" endtime="20201030 15:52:50.186"></status>
</kw>
<msg timestamp="20201030 15:52:50.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03889425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039004569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:49.853" endtime="20201030 15:52:50.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03889425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039004569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:50.195" endtime="20201030 15:52:50.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.213" endtime="20201030 15:52:50.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.846" endtime="20201030 15:52:50.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.841" endtime="20201030 15:52:50.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.230" level="INFO">${RESULT} = [{'diff': 0.00011031900000000455}, {'diff': 0.00010991600000000157}, {'diff': 0.0001103890000000024}, {'diff': 0.0001100690000000043}, {'diff': 0.00010969400000000046}, {'diff': 0.00011016699999999435...</msg>
<status status="PASS" starttime="20201030 15:52:50.222" endtime="20201030 15:52:50.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.241" level="INFO">${ACCURACY} = {'diff': [0.00011031900000000455, 0.00010991600000000157, 0.0001103890000000024, 0.0001100690000000043, 0.00010969400000000046, 0.00011016699999999435, 0.00010974999999999874, 0.00010991700000000104, ...</msg>
<status status="PASS" starttime="20201030 15:52:50.232" endtime="20201030 15:52:50.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.252" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.250" endtime="20201030 15:52:50.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.257" level="INFO">VALUE: [0.00011031900000000455, 0.00010991600000000157, 0.0001103890000000024, 0.0001100690000000043, 0.00010969400000000046, 0.00011016699999999435, 0.00010974999999999874, 0.00010991700000000104, 0.00010976400000000525, 0.0001100419999999977, 0.00010993100000000061, 0.00010958399999999591, 0.00010944499999999968, 0.00010943100000000011, 0.00010944400000000021, 0.00011019400000000096, 0.00011029099999999847, 0.00010948599999999892, 0.00011027800000000532, 0.00011030599999999752, 0.00011002800000000507, 0.00010987499999999539, 0.00010963900000000165, 0.00010976400000000525, 0.0001100969999999965, 0.00011023599999999967, 0.00010991700000000104, 0.00010999999999999899, 0.00010973699999999864, 0.000109902000000002, 0.00010983299999999668, 0.0001103890000000024, 0.00010948600000000586, 0.00010991700000000104, 0.00010956999999999634, 0.00011037500000000283, 0.00011038799999999599, 0.00011027799999999838, 0.00010970800000000003, 0.00010990299999999453, 0.000109514000000005, 0.00010979199999999745, 0.00011013900000000215, 0.00011002800000000507, 0.00011044399999999427, 0.00011043099999999417, 0.00010958299999999643, 0.00010948599999999892, 0.00010982000000000353, 0.00010959700000000294]</msg>
<status status="PASS" starttime="20201030 15:52:50.254" endtime="20201030 15:52:50.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.243" endtime="20201030 15:52:50.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.274" endtime="20201030 15:52:50.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.270" endtime="20201030 15:52:50.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.267" endtime="20201030 15:52:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.783" endtime="20201030 15:52:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.782" endtime="20201030 15:52:50.299"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.321" endtime="20201030 15:52:50.341"></status>
</kw>
<msg timestamp="20201030 15:52:50.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.318" endtime="20201030 15:52:50.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.345" endtime="20201030 15:52:50.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.351" endtime="20201030 15:52:50.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.311" endtime="20201030 15:52:50.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.305" endtime="20201030 15:52:50.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.374" endtime="20201030 15:52:50.717"></status>
</kw>
<msg timestamp="20201030 15:52:50.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039167667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.371" endtime="20201030 15:52:50.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039167667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.726" endtime="20201030 15:52:50.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.744" endtime="20201030 15:52:50.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.364" endtime="20201030 15:52:50.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.359" endtime="20201030 15:52:50.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.761" level="INFO">${RESULT} = [{'diff': 0.00011079200000000539}, {'diff': 0.00011074999999999974}, {'diff': 0.00011066700000000179}, {'diff': 0.000111209000000001}, {'diff': 0.00011101399999999956}, {'diff': 0.00011097200000000085...</msg>
<status status="PASS" starttime="20201030 15:52:50.753" endtime="20201030 15:52:50.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.770" level="INFO">${ACCURACY} = {'diff': [0.00011079200000000539, 0.00011074999999999974, 0.00011066700000000179, 0.000111209000000001, 0.00011101399999999956, 0.00011097200000000085, 0.0001105419999999982, 0.000110596999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:50.763" endtime="20201030 15:52:50.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.781" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.779" endtime="20201030 15:52:50.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.786" level="INFO">VALUE: [0.00011079200000000539, 0.00011074999999999974, 0.00011066700000000179, 0.000111209000000001, 0.00011101399999999956, 0.00011097200000000085, 0.0001105419999999982, 0.000110596999999997, 0.00011081899999999811, 0.00011065200000000275, 0.00011108400000000435, 0.00011093100000000161, 0.00011126399999999981, 0.00011047200000000035, 0.0001104169999999946, 0.00011076399999999931, 0.00011134700000000469, 0.00011123599999999373, 0.00011066700000000179, 0.00011065199999999581, 0.00011118000000000239, 0.00011111099999999707, 0.00011099999999999999, 0.00011062499999999614, 0.00011137499999999689, 0.000111209000000001, 0.0001109169999999951, 0.00011090300000000247, 0.00011073600000000017, 0.0001110140000000065, 0.00011070800000000103, 0.0001112220000000011, 0.00011088899999999596, 0.00011109799999999698, 0.00011040300000000197, 0.00011073600000000017, 0.00011115299999999578, 0.00011119399999999502, 0.00011120800000000153, 0.00011052799999999863, 0.00011144399999999527, 0.0001110969999999975, 0.00011073600000000017, 0.00011052699999999915, 0.00011129099999999947, 0.00011063799999999624, 0.00011087499999999639, 0.00011045800000000078, 0.00011082000000000453, 0.00011058299999999743]</msg>
<status status="PASS" starttime="20201030 15:52:50.783" endtime="20201030 15:52:50.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.772" endtime="20201030 15:52:50.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.799" endtime="20201030 15:52:50.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.794" endtime="20201030 15:52:50.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.792" endtime="20201030 15:52:50.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.301" endtime="20201030 15:52:50.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.300" endtime="20201030 15:52:50.823"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.848" endtime="20201030 15:52:50.870"></status>
</kw>
<msg timestamp="20201030 15:52:50.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.844" endtime="20201030 15:52:50.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.874" endtime="20201030 15:52:50.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.880" endtime="20201030 15:52:50.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.836" endtime="20201030 15:52:50.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.830" endtime="20201030 15:52:50.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.903" endtime="20201030 15:52:51.233"></status>
</kw>
<msg timestamp="20201030 15:52:51.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043143653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.900" endtime="20201030 15:52:51.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043143653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.242" endtime="20201030 15:52:51.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.260" endtime="20201030 15:52:51.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.893" endtime="20201030 15:52:51.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.888" endtime="20201030 15:52:51.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.277" level="INFO">${RESULT} = [{'diff': 0.00011199999999999405}, {'diff': 0.00011206999999999884}, {'diff': 0.00011173599999999423}, {'diff': 0.00011229100000000047}, {'diff': 0.00011173600000000117}, {'diff': 0.000111972000000001...</msg>
<status status="PASS" starttime="20201030 15:52:51.268" endtime="20201030 15:52:51.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.286" level="INFO">${ACCURACY} = {'diff': [0.00011199999999999405, 0.00011206999999999884, 0.00011173599999999423, 0.00011229100000000047, 0.00011173600000000117, 0.00011197200000000185, 0.00011161200000000399, 0.00011183299999999868...</msg>
<status status="PASS" starttime="20201030 15:52:51.279" endtime="20201030 15:52:51.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.297" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.294" endtime="20201030 15:52:51.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.302" level="INFO">VALUE: [0.00011199999999999405, 0.00011206999999999884, 0.00011173599999999423, 0.00011229100000000047, 0.00011173600000000117, 0.00011197200000000185, 0.00011161200000000399, 0.00011183299999999868, 0.00011166699999999585, 0.00011181899999999911, 0.00011184699999999825, 0.00011225000000000124, 0.00011194399999999577, 0.00011187499999999739, 0.00011234799999999823, 0.00011215199999999731, 0.0001117090000000015, 0.00011219500000000243, 0.00011243099999999617, 0.00011218099999999592, 0.000111596999999998, 0.00011190300000000347, 0.0001123619999999978, 0.00011175000000000074, 0.00011145900000000125, 0.0001124299999999967, 0.00011193100000000261, 0.0001120969999999985, 0.00011223600000000167, 0.00011186099999999782, 0.0001120969999999985, 0.00011188799999999749, 0.00011141599999999613, 0.0001123340000000056, 0.00011198700000000089, 0.00011184799999999773, 0.00011238899999999746, 0.00011148700000000039, 0.00011158299999999843, 0.00011201400000000056, 0.00011200000000000099, 0.00011156899999999886, 0.00011168000000000289, 0.00011240299999999703, 0.00011166600000000332, 0.0001120969999999985, 0.00011216699999999635, 0.00011156999999999834, 0.00011213899999999721, 0.00011213799999999774]</msg>
<status status="PASS" starttime="20201030 15:52:51.299" endtime="20201030 15:52:51.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.288" endtime="20201030 15:52:51.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.316" endtime="20201030 15:52:51.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.310" endtime="20201030 15:52:51.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.308" endtime="20201030 15:52:51.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.825" endtime="20201030 15:52:51.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.824" endtime="20201030 15:52:51.341"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.363" endtime="20201030 15:52:51.384"></status>
</kw>
<msg timestamp="20201030 15:52:51.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.360" endtime="20201030 15:52:51.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.387" endtime="20201030 15:52:51.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.393" endtime="20201030 15:52:51.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.353" endtime="20201030 15:52:51.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.347" endtime="20201030 15:52:51.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.416" endtime="20201030 15:52:51.749"></status>
</kw>
<msg timestamp="20201030 15:52:51.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038963486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039076333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.413" endtime="20201030 15:52:51.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038963486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039076333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.758" endtime="20201030 15:52:51.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.776" endtime="20201030 15:52:51.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.406" endtime="20201030 15:52:51.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.401" endtime="20201030 15:52:51.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.793" level="INFO">${RESULT} = [{'diff': 0.00011284699999999925}, {'diff': 0.00011302700000000165}, {'diff': 0.00011308399999999941}, {'diff': 0.00011255599999999977}, {'diff': 0.0001133749999999989}, {'diff': 0.0001124720000000023...</msg>
<status status="PASS" starttime="20201030 15:52:51.785" endtime="20201030 15:52:51.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.804" level="INFO">${ACCURACY} = {'diff': [0.00011284699999999925, 0.00011302700000000165, 0.00011308399999999941, 0.00011255599999999977, 0.0001133749999999989, 0.00011247200000000235, 0.00011251399999999412, 0.00011295899999999581,...</msg>
<status status="PASS" starttime="20201030 15:52:51.795" endtime="20201030 15:52:51.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.814" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.812" endtime="20201030 15:52:51.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.820" level="INFO">VALUE: [0.00011284699999999925, 0.00011302700000000165, 0.00011308399999999941, 0.00011255599999999977, 0.0001133749999999989, 0.00011247200000000235, 0.00011251399999999412, 0.00011295899999999581, 0.00011323599999999573, 0.00011248600000000192, 0.00011256999999999934, 0.00011300000000000199, 0.00011329200000000095, 0.00011281900000000011, 0.00011338799999999899, 0.00011258299999999943, 0.00011311099999999907, 0.00011256899999999986, 0.00011261099999999857, 0.00011300000000000199, 0.00011308299999999993, 0.00011317999999999745, 0.00011273599999999523, 0.00011265300000000422, 0.00011319500000000343, 0.00011298600000000242, 0.0001128749999999984, 0.00011316699999999735, 0.00011327799999999444, 0.00011255599999999977, 0.0001133749999999989, 0.0001127220000000026, 0.00011297300000000232, 0.00011312499999999864, 0.00011312500000000558, 0.00011263799999999824, 0.00011317999999999745, 0.00011319400000000396, 0.0001132220000000031, 0.00011338899999999846, 0.00011323600000000267, 0.00011290300000000447, 0.00011258299999999943, 0.00011248600000000192, 0.00011313899999999821, 0.00011308299999999993, 0.00011262499999999814, 0.00011268100000000336, 0.00011331900000000061, 0.00011308299999999993]</msg>
<status status="PASS" starttime="20201030 15:52:51.817" endtime="20201030 15:52:51.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.805" endtime="20201030 15:52:51.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.832" endtime="20201030 15:52:51.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.828" endtime="20201030 15:52:51.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.825" endtime="20201030 15:52:51.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.343" endtime="20201030 15:52:51.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.342" endtime="20201030 15:52:51.857"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.879" endtime="20201030 15:52:51.900"></status>
</kw>
<msg timestamp="20201030 15:52:51.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.876" endtime="20201030 15:52:51.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.903" endtime="20201030 15:52:51.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.909" endtime="20201030 15:52:51.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.869" endtime="20201030 15:52:51.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.863" endtime="20201030 15:52:51.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.932" endtime="20201030 15:52:52.264"></status>
</kw>
<msg timestamp="20201030 15:52:52.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038921611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039035278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.929" endtime="20201030 15:52:52.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038921611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039035278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.273" endtime="20201030 15:52:52.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.291" endtime="20201030 15:52:52.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.922" endtime="20201030 15:52:52.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.917" endtime="20201030 15:52:52.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.308" level="INFO">${RESULT} = [{'diff': 0.00011366699999999785}, {'diff': 0.00011391700000000504}, {'diff': 0.00011440299999999903}, {'diff': 0.00011368100000000436}, {'diff': 0.00011352700000000215}, {'diff': 0.000113736000000003...</msg>
<status status="PASS" starttime="20201030 15:52:52.299" endtime="20201030 15:52:52.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.318" level="INFO">${ACCURACY} = {'diff': [0.00011366699999999785, 0.00011391700000000504, 0.00011440299999999903, 0.00011368100000000436, 0.00011352700000000215, 0.00011373600000000317, 0.0001144169999999986, 0.00011352800000000163,...</msg>
<status status="PASS" starttime="20201030 15:52:52.310" endtime="20201030 15:52:52.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.329" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.327" endtime="20201030 15:52:52.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.334" level="INFO">VALUE: [0.00011366699999999785, 0.00011391700000000504, 0.00011440299999999903, 0.00011368100000000436, 0.00011352700000000215, 0.00011373600000000317, 0.0001144169999999986, 0.00011352800000000163, 0.0001139169999999981, 0.00011384700000000025, 0.00011347199999999641, 0.00011379200000000145, 0.00011377800000000188, 0.00011381900000000111, 0.0001138749999999994, 0.00011440300000000597, 0.00011426400000000281, 0.00011352799999999469, 0.00011430600000000152, 0.00011361099999999957, 0.00011379099999999504, 0.00011390299999999853, 0.00011363899999999871, 0.00011440300000000597, 0.00011373700000000264, 0.00011404100000000222, 0.00011395799999999734, 0.00011434800000000023, 0.00011411100000000007, 0.00011361099999999957, 0.00011379200000000145, 0.00011416699999999835, 0.0001142220000000041, 0.00011369399999999752, 0.00011377800000000188, 0.00011345899999999631, 0.00011397300000000332, 0.0001137499999999958, 0.00011429100000000247, 0.00011348599999999598, 0.00011425000000000324, 0.00011436100000000032, 0.00011447200000000435, 0.00011356900000000086, 0.00011383300000000068, 0.00011369399999999752, 0.00011361100000000651, 0.00011423599999999673, 0.00011345800000000378, 0.00011347300000000282]</msg>
<status status="PASS" starttime="20201030 15:52:52.331" endtime="20201030 15:52:52.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.320" endtime="20201030 15:52:52.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.347" endtime="20201030 15:52:52.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.343" endtime="20201030 15:52:52.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.340" endtime="20201030 15:52:52.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.859" endtime="20201030 15:52:52.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.858" endtime="20201030 15:52:52.372"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.394" endtime="20201030 15:52:52.415"></status>
</kw>
<msg timestamp="20201030 15:52:52.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.391" endtime="20201030 15:52:52.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.418" endtime="20201030 15:52:52.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.424" endtime="20201030 15:52:52.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.384" endtime="20201030 15:52:52.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.378" endtime="20201030 15:52:52.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.447" endtime="20201030 15:52:52.782"></status>
</kw>
<msg timestamp="20201030 15:52:52.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038835806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038950875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.444" endtime="20201030 15:52:52.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038835806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038950875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.791" endtime="20201030 15:52:52.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.809" endtime="20201030 15:52:52.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.437" endtime="20201030 15:52:52.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.432" endtime="20201030 15:52:52.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.826" level="INFO">${RESULT} = [{'diff': 0.00011506900000000236}, {'diff': 0.0001147220000000046}, {'diff': 0.0001148049999999956}, {'diff': 0.00011466699999999885}, {'diff': 0.00011448600000000392}, {'diff': 0.00011520899999999806...</msg>
<status status="PASS" starttime="20201030 15:52:52.817" endtime="20201030 15:52:52.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.835" level="INFO">${ACCURACY} = {'diff': [0.00011506900000000236, 0.0001147220000000046, 0.0001148049999999956, 0.00011466699999999885, 0.00011448600000000392, 0.00011520899999999806, 0.000114597000000001, 0.00011444499999999774, 0....</msg>
<status status="PASS" starttime="20201030 15:52:52.828" endtime="20201030 15:52:52.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.845" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.843" endtime="20201030 15:52:52.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.851" level="INFO">VALUE: [0.00011506900000000236, 0.0001147220000000046, 0.0001148049999999956, 0.00011466699999999885, 0.00011448600000000392, 0.00011520899999999806, 0.000114597000000001, 0.00011444499999999774, 0.00011543099999999917, 0.00011511100000000107, 0.00011501399999999662, 0.00011484700000000125, 0.00011536100000000132, 0.00011530500000000304, 0.00011455499999999535, 0.0001145550000000023, 0.00011448600000000392, 0.00011512500000000064, 0.00011467999999999895, 0.00011516699999999935, 0.00011447199999999741, 0.00011447299999999688, 0.00011534700000000175, 0.0001152499999999973, 0.0001152770000000039, 0.00011450000000000349, 0.00011447199999999741, 0.00011445899999999731, 0.00011484700000000125, 0.00011538900000000046, 0.00011511100000000107, 0.00011519499999999849, 0.00011445900000000425, 0.0001153750000000009, 0.00011497199999999791, 0.00011452799999999569, 0.00011512500000000064, 0.00011508400000000141, 0.00011501399999999662, 0.00011451400000000306, 0.00011527799999999644, 0.00011501400000000356, 0.00011511100000000107, 0.0001148620000000003, 0.00011540300000000003, 0.00011452800000000263, 0.00011529099999999654, 0.0001148750000000004, 0.00011462500000000014, 0.00011527699999999697]</msg>
<status status="PASS" starttime="20201030 15:52:52.848" endtime="20201030 15:52:52.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.836" endtime="20201030 15:52:52.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.863" endtime="20201030 15:52:52.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.859" endtime="20201030 15:52:52.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.856" endtime="20201030 15:52:52.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.374" endtime="20201030 15:52:52.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.373" endtime="20201030 15:52:52.888"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.910" endtime="20201030 15:52:52.937"></status>
</kw>
<msg timestamp="20201030 15:52:52.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.907" endtime="20201030 15:52:52.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.940" endtime="20201030 15:52:52.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.946" endtime="20201030 15:52:52.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.900" endtime="20201030 15:52:52.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.894" endtime="20201030 15:52:52.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.969" endtime="20201030 15:52:53.300"></status>
</kw>
<msg timestamp="20201030 15:52:53.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044756014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044871542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.966" endtime="20201030 15:52:53.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044756014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044871542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.309" endtime="20201030 15:52:53.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.327" endtime="20201030 15:52:53.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.959" endtime="20201030 15:52:53.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.954" endtime="20201030 15:52:53.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.344" level="INFO">${RESULT} = [{'diff': 0.00011552800000000363}, {'diff': 0.00011566699999999985}, {'diff': 0.00011579100000000397}, {'diff': 0.00011552700000000415}, {'diff': 0.00011586100000000182}, {'diff': 0.000116403000000001...</msg>
<status status="PASS" starttime="20201030 15:52:53.336" endtime="20201030 15:52:53.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.353" level="INFO">${ACCURACY} = {'diff': [0.00011552800000000363, 0.00011566699999999985, 0.00011579100000000397, 0.00011552700000000415, 0.00011586100000000182, 0.00011640300000000103, 0.00011595799999999934, 0.0001162499999999983,...</msg>
<status status="PASS" starttime="20201030 15:52:53.346" endtime="20201030 15:52:53.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.364" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.362" endtime="20201030 15:52:53.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.369" level="INFO">VALUE: [0.00011552800000000363, 0.00011566699999999985, 0.00011579100000000397, 0.00011552700000000415, 0.00011586100000000182, 0.00011640300000000103, 0.00011595799999999934, 0.0001162499999999983, 0.00011623600000000567, 0.0001157499999999978, 0.0001164170000000006, 0.00011605600000000327, 0.00011551399999999712, 0.00011631900000000361, 0.00011554100000000372, 0.00011558300000000243, 0.00011567999999999995, 0.0001162499999999983, 0.00011558399999999497, 0.00011599999999999805, 0.00011562500000000114, 0.00011576400000000431, 0.00011584700000000225, 0.00011573600000000517, 0.00011593099999999967, 0.0001160970000000025, 0.00011636100000000232, 0.00011645799999999984, 0.00011637499999999495, 0.00011547200000000535, 0.00011594499999999924, 0.00011608300000000293, 0.00011605599999999633, 0.00011616700000000035, 0.00011615299999999384, 0.0001162499999999983, 0.0001159170000000001, 0.00011623599999999873, 0.00011629200000000395, 0.00011630599999999658, 0.00011547200000000535, 0.0001162369999999982, 0.00011629200000000395, 0.00011550000000000449, 0.00011616600000000088, 0.00011551399999999712, 0.00011613900000000121, 0.00011573600000000517, 0.00011637499999999495, 0.00011548599999999798]</msg>
<status status="PASS" starttime="20201030 15:52:53.366" endtime="20201030 15:52:53.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.355" endtime="20201030 15:52:53.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.383" endtime="20201030 15:52:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.377" endtime="20201030 15:52:53.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.375" endtime="20201030 15:52:53.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.890" endtime="20201030 15:52:53.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.889" endtime="20201030 15:52:53.408"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.430" endtime="20201030 15:52:53.451"></status>
</kw>
<msg timestamp="20201030 15:52:53.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.427" endtime="20201030 15:52:53.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.454" endtime="20201030 15:52:53.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.461" endtime="20201030 15:52:53.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.420" endtime="20201030 15:52:53.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.414" endtime="20201030 15:52:53.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.483" endtime="20201030 15:52:53.815"></status>
</kw>
<msg timestamp="20201030 15:52:53.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038873458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038990264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.480" endtime="20201030 15:52:53.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038873458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038990264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.824" endtime="20201030 15:52:53.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.842" endtime="20201030 15:52:53.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.473" endtime="20201030 15:52:53.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.469" endtime="20201030 15:52:53.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.862" level="INFO">${RESULT} = [{'diff': 0.00011680599999999708}, {'diff': 0.0001168750000000024}, {'diff': 0.00011722200000000016}, {'diff': 0.00011647199999999941}, {'diff': 0.00011736099999999638}, {'diff': 0.0001173609999999963...</msg>
<status status="PASS" starttime="20201030 15:52:53.852" endtime="20201030 15:52:53.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.872" level="INFO">${ACCURACY} = {'diff': [0.00011680599999999708, 0.0001168750000000024, 0.00011722200000000016, 0.00011647199999999941, 0.00011736099999999638, 0.00011736099999999638, 0.00011669499999999999, 0.00011733300000000418,...</msg>
<status status="PASS" starttime="20201030 15:52:53.864" endtime="20201030 15:52:53.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.883" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.881" endtime="20201030 15:52:53.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.888" level="INFO">VALUE: [0.00011680599999999708, 0.0001168750000000024, 0.00011722200000000016, 0.00011647199999999941, 0.00011736099999999638, 0.00011736099999999638, 0.00011669499999999999, 0.00011733300000000418, 0.0001168049999999976, 0.00011719500000000049, 0.00011697199999999991, 0.0001172629999999994, 0.00011716600000000188, 0.00011649999999999855, 0.00011727799999999844, 0.00011666700000000085, 0.00011732000000000409, 0.00011652699999999822, 0.00011716700000000135, 0.00011645799999999984, 0.00011733400000000366, 0.00011655599999999683, 0.00011676400000000531, 0.00011705600000000427, 0.00011645799999999984, 0.00011690300000000153, 0.00011719500000000049, 0.00011650000000000549, 0.00011676399999999837, 0.00011738900000000246, 0.00011695899999999981, 0.00011670899999999956, 0.00011640300000000103, 0.00011705599999999733, 0.00011690200000000206, 0.00011672299999999913, 0.00011711099999999613, 0.00011736099999999638, 0.00011722299999999963, 0.00011683400000000316, 0.00011718000000000145, 0.00011655499999999736, 0.0001165699999999964, 0.00011720800000000059, 0.00011658300000000343, 0.00011695800000000034, 0.00011695800000000034, 0.00011695899999999981, 0.00011649999999999855, 0.00011644499999999974]</msg>
<status status="PASS" starttime="20201030 15:52:53.885" endtime="20201030 15:52:53.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.874" endtime="20201030 15:52:53.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.900" endtime="20201030 15:52:53.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.896" endtime="20201030 15:52:53.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.894" endtime="20201030 15:52:53.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.410" endtime="20201030 15:52:53.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.409" endtime="20201030 15:52:53.925"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.948" endtime="20201030 15:52:53.969"></status>
</kw>
<msg timestamp="20201030 15:52:53.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.944" endtime="20201030 15:52:53.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.972" endtime="20201030 15:52:53.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.978" endtime="20201030 15:52:53.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.937" endtime="20201030 15:52:53.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.932" endtime="20201030 15:52:53.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.001" endtime="20201030 15:52:54.332"></status>
</kw>
<msg timestamp="20201030 15:52:54.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039172042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039290236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.998" endtime="20201030 15:52:54.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039172042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039290236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.341" endtime="20201030 15:52:54.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.359" endtime="20201030 15:52:54.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.991" endtime="20201030 15:52:54.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.986" endtime="20201030 15:52:54.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.376" level="INFO">${RESULT} = [{'diff': 0.00011819400000000202}, {'diff': 0.00011755599999999783}, {'diff': 0.00011805600000000527}, {'diff': 0.00011786099999999688}, {'diff': 0.00011805499999999886}, {'diff': 0.000117971999999993...</msg>
<status status="PASS" starttime="20201030 15:52:54.368" endtime="20201030 15:52:54.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.387" level="INFO">${ACCURACY} = {'diff': [0.00011819400000000202, 0.00011755599999999783, 0.00011805600000000527, 0.00011786099999999688, 0.00011805499999999886, 0.00011797199999999397, 0.00011827699999999997, 0.0001175829999999975,...</msg>
<status status="PASS" starttime="20201030 15:52:54.378" endtime="20201030 15:52:54.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.398" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.395" endtime="20201030 15:52:54.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.403" level="INFO">VALUE: [0.00011819400000000202, 0.00011755599999999783, 0.00011805600000000527, 0.00011786099999999688, 0.00011805499999999886, 0.00011797199999999397, 0.00011827699999999997, 0.0001175829999999975, 0.00011755599999999783, 0.00011847200000000141, 0.00011808399999999747, 0.00011757000000000434, 0.00011779099999999904, 0.00011822300000000063, 0.00011752799999999869, 0.00011748699999999945, 0.00011801399999999962, 0.00011748599999999998, 0.00011747200000000041, 0.00011748699999999945, 0.00011773600000000023, 0.00011788899999999602, 0.00011829099999999954, 0.00011797200000000091, 0.00011801300000000015, 0.00011791600000000263, 0.00011842999999999576, 0.00011770900000000056, 0.0001178620000000033, 0.00011761099999999663, 0.00011815199999999637, 0.00011763899999999577, 0.00011798600000000048, 0.0001178750000000034, 0.00011818000000000245, 0.00011815300000000278, 0.00011805599999999833, 0.00011755600000000477, 0.00011768099999999448, 0.00011759799999999654, 0.00011745800000000084, 0.00011802799999999919, 0.00011807000000000484, 0.00011801399999999962, 0.00011770900000000056, 0.00011745800000000084, 0.0001183750000000039, 0.00011805600000000527, 0.0001178750000000034, 0.00011777799999999894]</msg>
<status status="PASS" starttime="20201030 15:52:54.400" endtime="20201030 15:52:54.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.389" endtime="20201030 15:52:54.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.415" endtime="20201030 15:52:54.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.411" endtime="20201030 15:52:54.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.409" endtime="20201030 15:52:54.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.927" endtime="20201030 15:52:54.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.926" endtime="20201030 15:52:54.440"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.463" endtime="20201030 15:52:54.484"></status>
</kw>
<msg timestamp="20201030 15:52:54.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.460" endtime="20201030 15:52:54.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.487" endtime="20201030 15:52:54.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.493" endtime="20201030 15:52:54.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.452" endtime="20201030 15:52:54.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.446" endtime="20201030 15:52:54.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.516" endtime="20201030 15:52:54.850"></status>
</kw>
<msg timestamp="20201030 15:52:54.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039577667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.513" endtime="20201030 15:52:54.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039577667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.860" endtime="20201030 15:52:54.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.877" endtime="20201030 15:52:54.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.506" endtime="20201030 15:52:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.501" endtime="20201030 15:52:54.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.894" level="INFO">${RESULT} = [{'diff': 0.0001185699999999984}, {'diff': 0.00011919399999999608}, {'diff': 0.00011927800000000044}, {'diff': 0.00011911099999999814}, {'diff': 0.00011855599999999883}, {'diff': 0.0001190130000000011...</msg>
<status status="PASS" starttime="20201030 15:52:54.886" endtime="20201030 15:52:54.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.903" level="INFO">${ACCURACY} = {'diff': [0.0001185699999999984, 0.00011919399999999608, 0.00011927800000000044, 0.00011911099999999814, 0.00011855599999999883, 0.00011901300000000115, 0.00011850000000000055, 0.00011879200000000645,...</msg>
<status status="PASS" starttime="20201030 15:52:54.896" endtime="20201030 15:52:54.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.914" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.912" endtime="20201030 15:52:54.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.919" level="INFO">VALUE: [0.0001185699999999984, 0.00011919399999999608, 0.00011927800000000044, 0.00011911099999999814, 0.00011855599999999883, 0.00011901300000000115, 0.00011850000000000055, 0.00011879200000000645, 0.000119082999999999, 0.00011861100000000457, 0.00011927800000000044, 0.00011865299999999634, 0.00011894400000000277, 0.0001185699999999984, 0.00011852799999999969, 0.0001192500000000013, 0.0001186249999999972, 0.00011850000000000055, 0.0001189300000000032, 0.00011902700000000072, 0.00011926400000000087, 0.00011886199999999736, 0.00011861100000000457, 0.00011920800000000259, 0.00011855499999999936, 0.00011877799999999994, 0.00011927800000000044, 0.00011908300000000593, 0.00011918000000000345, 0.00011849999999999361, 0.00011909699999999857, 0.00011938899999999752, 0.00011908399999999847, 0.00011845800000000184, 0.0001193050000000001, 0.00011948600000000198, 0.00011940300000000403, 0.00011937499999999795, 0.00011848600000000098, 0.00011873599999999429, 0.00011897200000000191, 0.000118695000000002, 0.00011933299999999925, 0.00011863900000000371, 0.0001188049999999996, 0.00011873600000000123, 0.00011851399999999318, 0.00011916600000000388, 0.00011873600000000123, 0.00011911099999999814]</msg>
<status status="PASS" starttime="20201030 15:52:54.916" endtime="20201030 15:52:54.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.905" endtime="20201030 15:52:54.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.932" endtime="20201030 15:52:54.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.927" endtime="20201030 15:52:54.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.925" endtime="20201030 15:52:54.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.442" endtime="20201030 15:52:54.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.441" endtime="20201030 15:52:54.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.343" endtime="20201030 15:52:54.957"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:02.221" endtime="20201030 15:52:54.958" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.975" endtime="20201030 15:52:54.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.971" endtime="20201030 15:52:54.998"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.032" endtime="20201030 15:52:55.048"></status>
</kw>
<msg timestamp="20201030 15:52:55.049" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.029" endtime="20201030 15:52:55.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.051" endtime="20201030 15:52:55.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.062" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:55.058" endtime="20201030 15:52:55.062"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:55.022" endtime="20201030 15:52:55.064"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:55.016" endtime="20201030 15:52:55.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.013" endtime="20201030 15:52:55.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:55.074" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:55.073" endtime="20201030 15:52:55.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.068" endtime="20201030 15:52:55.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.010" endtime="20201030 15:52:55.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.008" endtime="20201030 15:52:55.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.078" endtime="20201030 15:52:55.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.004" endtime="20201030 15:52:55.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.000" endtime="20201030 15:52:55.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.969" endtime="20201030 15:52:55.085"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.109" endtime="20201030 15:52:55.124"></status>
</kw>
<msg timestamp="20201030 15:52:55.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.105" endtime="20201030 15:52:55.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.127" endtime="20201030 15:52:55.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.134" endtime="20201030 15:52:55.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.098" endtime="20201030 15:52:55.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.093" endtime="20201030 15:52:55.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.157" endtime="20201030 15:52:55.500"></status>
</kw>
<msg timestamp="20201030 15:52:55.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125709931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125732, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:55.154" endtime="20201030 15:52:55.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125709931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125732, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:55.509" endtime="20201030 15:52:55.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.528" endtime="20201030 15:52:55.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.146" endtime="20201030 15:52:55.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.142" endtime="20201030 15:52:55.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.545" level="INFO">${RESULT} = [{'diff': 2.206900000001344e-05}, {'diff': 2.1556000000005904e-05}, {'diff': 2.188899999999716e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.1236000000007804e-05}, {'diff': 2.188899999999716e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:55.536" endtime="20201030 15:52:55.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.554" level="INFO">${ACCURACY} = {'diff': [2.206900000001344e-05, 2.1556000000005904e-05, 2.188899999999716e-05, 2.2041999999999895e-05, 2.1236000000007804e-05, 2.188899999999716e-05, 2.170799999998141e-05, 2.1055999999991526e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:55.547" endtime="20201030 15:52:55.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.565" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.563" endtime="20201030 15:52:55.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.570" level="INFO">VALUE: [2.206900000001344e-05, 2.1556000000005904e-05, 2.188899999999716e-05, 2.2041999999999895e-05, 2.1236000000007804e-05, 2.188899999999716e-05, 2.170799999998141e-05, 2.1055999999991526e-05, 2.1736000000022182e-05, 2.1542000000013273e-05, 2.1708000000009164e-05, 2.1250000000000435e-05, 2.1735999999994426e-05, 2.1708000000009164e-05, 2.1846999999991512e-05, 2.18610000000119e-05, 2.1417000000023556e-05, 2.1526999999993413e-05, 2.1582999999991692e-05, 2.14169999999958e-05, 2.187500000000453e-05, 2.170799999998141e-05, 2.1028000000006264e-05, 2.140300000000317e-05, 2.1709000000008638e-05, 2.1263999999993066e-05, 2.1556000000005904e-05, 2.1709000000008638e-05, 2.1388999999982783e-05, 2.134700000000489e-05, 2.1666000000003516e-05, 2.1209000000022016e-05, 2.1222000000015173e-05, 2.138900000001054e-05, 2.2028000000007264e-05, 2.1556000000005904e-05, 2.0972000000007984e-05, 2.155500000000643e-05, 2.20969999999987e-05, 2.1791999999992706e-05, 2.188899999999716e-05, 2.15410000000138e-05, 2.1054999999992052e-05, 2.1013999999985877e-05, 2.18610000000119e-05, 2.1554999999978675e-05, 2.1068999999984683e-05, 2.1222000000015173e-05, 2.18610000000119e-05, 2.1889000000024916e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.567" endtime="20201030 15:52:55.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.556" endtime="20201030 15:52:55.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.582" endtime="20201030 15:52:55.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.577" endtime="20201030 15:52:55.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.575" endtime="20201030 15:52:55.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.088" endtime="20201030 15:52:55.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.087" endtime="20201030 15:52:55.607"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.629" endtime="20201030 15:52:55.650"></status>
</kw>
<msg timestamp="20201030 15:52:55.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.626" endtime="20201030 15:52:55.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.653" endtime="20201030 15:52:55.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.660" endtime="20201030 15:52:55.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.619" endtime="20201030 15:52:55.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.613" endtime="20201030 15:52:55.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.683" endtime="20201030 15:52:56.013"></status>
</kw>
<msg timestamp="20201030 15:52:56.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04548825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045509278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:55.679" endtime="20201030 15:52:56.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04548825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045509278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:56.022" endtime="20201030 15:52:56.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.041" endtime="20201030 15:52:56.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.672" endtime="20201030 15:52:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.668" endtime="20201030 15:52:56.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.058" level="INFO">${RESULT} = [{'diff': 2.1027999999999325e-05}, {'diff': 2.1180000000002586e-05}, {'diff': 2.1652000000003946e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.1041999999998895e-05}, {'diff': 2.123700000000034e-0...</msg>
<status status="PASS" starttime="20201030 15:52:56.049" endtime="20201030 15:52:56.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.067" level="INFO">${ACCURACY} = {'diff': [2.1027999999999325e-05, 2.1180000000002586e-05, 2.1652000000003946e-05, 2.1250000000000435e-05, 2.1041999999998895e-05, 2.123700000000034e-05, 2.143100000000231e-05, 2.1222000000001295e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:56.060" endtime="20201030 15:52:56.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.078" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.076" endtime="20201030 15:52:56.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.083" level="INFO">VALUE: [2.1027999999999325e-05, 2.1180000000002586e-05, 2.1652000000003946e-05, 2.1250000000000435e-05, 2.1041999999998895e-05, 2.123700000000034e-05, 2.143100000000231e-05, 2.1222000000001295e-05, 2.187500000000453e-05, 2.12090000000012e-05, 2.1194000000002156e-05, 2.1222000000001295e-05, 2.13890000000036e-05, 2.1222000000001295e-05, 2.1736000000001365e-05, 2.2055999999999465e-05, 2.1707999999995287e-05, 2.188899999999716e-05, 2.1069999999998035e-05, 2.1707999999995287e-05, 2.1041999999998895e-05, 2.106899999999856e-05, 2.138899999999666e-05, 2.137499999999709e-05, 2.1722000000001795e-05, 2.1555999999998965e-05, 2.13890000000036e-05, 2.1542000000006334e-05, 2.1222000000001295e-05, 2.1541999999999395e-05, 2.1235999999993926e-05, 2.104099999999942e-05, 2.1972000000002045e-05, 2.2069999999999035e-05, 2.133299999999838e-05, 2.1541999999999395e-05, 2.1208000000001725e-05, 2.1222000000001295e-05, 2.18890000000041e-05, 2.12090000000012e-05, 2.1221999999994356e-05, 2.187499999999759e-05, 2.112500000000378e-05, 2.1555999999998965e-05, 2.12770000000001e-05, 2.1708000000002226e-05, 2.1680000000003086e-05, 2.1708000000002226e-05, 2.1722000000001795e-05, 2.1208000000001725e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.080" endtime="20201030 15:52:56.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.069" endtime="20201030 15:52:56.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.096" endtime="20201030 15:52:56.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.091" endtime="20201030 15:52:56.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.088" endtime="20201030 15:52:56.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.609" endtime="20201030 15:52:56.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.607" endtime="20201030 15:52:56.121"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.145" endtime="20201030 15:52:56.160"></status>
</kw>
<msg timestamp="20201030 15:52:56.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.141" endtime="20201030 15:52:56.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.163" endtime="20201030 15:52:56.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.169" endtime="20201030 15:52:56.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.134" endtime="20201030 15:52:56.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.128" endtime="20201030 15:52:56.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.192" endtime="20201030 15:52:56.527"></status>
</kw>
<msg timestamp="20201030 15:52:56.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039748306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039769569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.189" endtime="20201030 15:52:56.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039748306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039769569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.537" endtime="20201030 15:52:56.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.556" endtime="20201030 15:52:56.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.182" endtime="20201030 15:52:56.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.177" endtime="20201030 15:52:56.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.573" level="INFO">${RESULT} = [{'diff': 2.126300000000053e-05}, {'diff': 2.1222000000001295e-05}, {'diff': 2.138899999999666e-05}, {'diff': 2.137500000000403e-05}, {'diff': 2.1819999999998785e-05}, {'diff': 2.191700000000324e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:56.564" endtime="20201030 15:52:56.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.584" level="INFO">${ACCURACY} = {'diff': [2.126300000000053e-05, 2.1222000000001295e-05, 2.138899999999666e-05, 2.137500000000403e-05, 2.1819999999998785e-05, 2.191700000000324e-05, 2.1208000000001725e-05, 2.155499999999949e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 15:52:56.575" endtime="20201030 15:52:56.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.595" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.593" endtime="20201030 15:52:56.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.600" level="INFO">VALUE: [2.126300000000053e-05, 2.1222000000001295e-05, 2.138899999999666e-05, 2.137500000000403e-05, 2.1819999999998785e-05, 2.191700000000324e-05, 2.1208000000001725e-05, 2.155499999999949e-05, 2.1236000000000865e-05, 2.1041999999998895e-05, 2.152700000000035e-05, 2.187500000000453e-05, 2.2041999999999895e-05, 2.155499999999949e-05, 2.187499999999759e-05, 2.140299999999623e-05, 2.1208000000001725e-05, 2.1541999999999395e-05, 2.1207999999994787e-05, 2.1208000000001725e-05, 2.187499999999759e-05, 2.1527999999999825e-05, 2.1722000000001795e-05, 2.119500000000163e-05, 2.205499999999999e-05, 2.1708000000002226e-05, 2.186099999999802e-05, 2.1570000000005474e-05, 2.14169999999958e-05, 2.1722000000001795e-05, 2.1541999999999395e-05, 2.1541999999999395e-05, 2.116700000000249e-05, 2.186100000000496e-05, 2.1708000000002226e-05, 2.155499999999949e-05, 2.204100000000042e-05, 2.12090000000012e-05, 2.115300000000292e-05, 2.187500000000453e-05, 2.1528000000006764e-05, 2.190300000000367e-05, 2.1041999999998895e-05, 2.1555999999998965e-05, 2.18890000000041e-05, 2.1750000000000935e-05, 2.2000000000001185e-05, 2.1707999999995287e-05, 2.152700000000035e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.597" endtime="20201030 15:52:56.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.586" endtime="20201030 15:52:56.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.612" endtime="20201030 15:52:56.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.608" endtime="20201030 15:52:56.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.605" endtime="20201030 15:52:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.124" endtime="20201030 15:52:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.122" endtime="20201030 15:52:56.638"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.661" endtime="20201030 15:52:56.676"></status>
</kw>
<msg timestamp="20201030 15:52:56.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.657" endtime="20201030 15:52:56.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.679" endtime="20201030 15:52:56.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.686" endtime="20201030 15:52:56.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.650" endtime="20201030 15:52:56.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.644" endtime="20201030 15:52:56.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.709" endtime="20201030 15:52:57.047"></status>
</kw>
<msg timestamp="20201030 15:52:57.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040670333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040691444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.706" endtime="20201030 15:52:57.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040670333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040691444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.056" endtime="20201030 15:52:57.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.075" endtime="20201030 15:52:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.698" endtime="20201030 15:52:57.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.694" endtime="20201030 15:52:57.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.092" level="INFO">${RESULT} = [{'diff': 2.111099999999727e-05}, {'diff': 2.1402000000003696e-05}, {'diff': 2.156899999999906e-05}, {'diff': 2.1194000000002156e-05}, {'diff': 2.140300000000317e-05}, {'diff': 2.112500000000378e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:57.084" endtime="20201030 15:52:57.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.104" level="INFO">${ACCURACY} = {'diff': [2.111099999999727e-05, 2.1402000000003696e-05, 2.156899999999906e-05, 2.1194000000002156e-05, 2.140300000000317e-05, 2.112500000000378e-05, 2.187499999999759e-05, 2.154099999999992e-05, 2.11...</msg>
<status status="PASS" starttime="20201030 15:52:57.095" endtime="20201030 15:52:57.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.116" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.113" endtime="20201030 15:52:57.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.121" level="INFO">VALUE: [2.111099999999727e-05, 2.1402000000003696e-05, 2.156899999999906e-05, 2.1194000000002156e-05, 2.140300000000317e-05, 2.112500000000378e-05, 2.187499999999759e-05, 2.154099999999992e-05, 2.118099999999512e-05, 2.138899999999666e-05, 2.105499999999899e-05, 2.1542000000006334e-05, 2.13890000000036e-05, 2.187499999999759e-05, 2.1721999999994857e-05, 2.152700000000035e-05, 2.154099999999992e-05, 2.122300000000077e-05, 2.1236000000000865e-05, 2.187499999999759e-05, 2.137500000000403e-05, 2.1708000000002226e-05, 2.18890000000041e-05, 2.1041999999998895e-05, 2.1236000000000865e-05, 2.187499999999759e-05, 2.18890000000041e-05, 2.1264000000000005e-05, 2.1707999999995287e-05, 2.184700000000539e-05, 2.1694000000002656e-05, 2.1208000000001725e-05, 2.1236000000000865e-05, 2.155499999999949e-05, 2.2041999999999895e-05, 2.18890000000041e-05, 2.172299999999433e-05, 2.2041999999999895e-05, 2.1208000000001725e-05, 2.1722000000001795e-05, 2.140299999999623e-05, 2.187500000000453e-05, 2.137500000000403e-05, 2.136100000000446e-05, 2.1764000000000505e-05, 2.187499999999759e-05, 2.2055999999999465e-05, 2.1207999999994787e-05, 2.1736000000001365e-05, 2.1027999999999325e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.118" endtime="20201030 15:52:57.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.106" endtime="20201030 15:52:57.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.134" endtime="20201030 15:52:57.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.129" endtime="20201030 15:52:57.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.127" endtime="20201030 15:52:57.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.640" endtime="20201030 15:52:57.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.639" endtime="20201030 15:52:57.159"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.181" endtime="20201030 15:52:57.196"></status>
</kw>
<msg timestamp="20201030 15:52:57.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.178" endtime="20201030 15:52:57.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.200" endtime="20201030 15:52:57.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.206" endtime="20201030 15:52:57.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.171" endtime="20201030 15:52:57.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.165" endtime="20201030 15:52:57.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.229" endtime="20201030 15:52:57.566"></status>
</kw>
<msg timestamp="20201030 15:52:57.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039708792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.226" endtime="20201030 15:52:57.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039687583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039708792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.575" endtime="20201030 15:52:57.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.594" endtime="20201030 15:52:57.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.219" endtime="20201030 15:52:57.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.214" endtime="20201030 15:52:57.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.612" level="INFO">${RESULT} = [{'diff': 2.12090000000012e-05}, {'diff': 2.105499999999899e-05}, {'diff': 2.162500000000428e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.102699999999985e-05}, {'diff': 2.1527999999999825e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:57.602" endtime="20201030 15:52:57.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.621" level="INFO">${ACCURACY} = {'diff': [2.12090000000012e-05, 2.105499999999899e-05, 2.162500000000428e-05, 2.1541999999999395e-05, 2.102699999999985e-05, 2.1527999999999825e-05, 2.156899999999906e-05, 2.18890000000041e-05, 2.1055...</msg>
<status status="PASS" starttime="20201030 15:52:57.614" endtime="20201030 15:52:57.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.632" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.630" endtime="20201030 15:52:57.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.637" level="INFO">VALUE: [2.12090000000012e-05, 2.105499999999899e-05, 2.162500000000428e-05, 2.1541999999999395e-05, 2.102699999999985e-05, 2.1527999999999825e-05, 2.156899999999906e-05, 2.18890000000041e-05, 2.1055999999998465e-05, 2.1236000000000865e-05, 2.187499999999759e-05, 2.2000000000001185e-05, 2.1250000000000435e-05, 2.122300000000077e-05, 2.1707999999995287e-05, 2.137499999999709e-05, 2.1819999999998785e-05, 2.140300000000317e-05, 2.1722000000001795e-05, 2.1694000000002656e-05, 2.1222000000001295e-05, 2.1722000000001795e-05, 2.152700000000035e-05, 2.0958000000001475e-05, 2.138899999999666e-05, 2.204100000000042e-05, 2.1514000000000255e-05, 2.18890000000041e-05, 2.2028000000000325e-05, 2.1722000000001795e-05, 2.1415999999996327e-05, 2.1165999999996077e-05, 2.1166000000003016e-05, 2.187500000000453e-05, 2.1222000000001295e-05, 2.119499999999469e-05, 2.1694000000002656e-05, 2.187499999999759e-05, 2.1541999999999395e-05, 2.202700000000085e-05, 2.187500000000453e-05, 2.154099999999992e-05, 2.141700000000274e-05, 2.187500000000453e-05, 2.206899999999956e-05, 2.119500000000163e-05, 2.12090000000012e-05, 2.194500000000238e-05, 2.1527999999999825e-05, 2.155499999999949e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.634" endtime="20201030 15:52:57.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.623" endtime="20201030 15:52:57.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.650" endtime="20201030 15:52:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.645" endtime="20201030 15:52:57.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.643" endtime="20201030 15:52:57.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.161" endtime="20201030 15:52:57.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.160" endtime="20201030 15:52:57.675"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.697" endtime="20201030 15:52:57.718"></status>
</kw>
<msg timestamp="20201030 15:52:57.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.694" endtime="20201030 15:52:57.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.722" endtime="20201030 15:52:57.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.728" endtime="20201030 15:52:57.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.687" endtime="20201030 15:52:57.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.681" endtime="20201030 15:52:57.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.751" endtime="20201030 15:52:58.093"></status>
</kw>
<msg timestamp="20201030 15:52:58.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045092903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045113958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.748" endtime="20201030 15:52:58.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045092903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045113958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.103" endtime="20201030 15:52:58.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.122" endtime="20201030 15:52:58.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.741" endtime="20201030 15:52:58.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.736" endtime="20201030 15:52:58.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.139" level="INFO">${RESULT} = [{'diff': 2.105500000000593e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.184700000000539e-05}, {'diff': 2.1042000000005834e-05}, {'diff': 2.137499999999709e-05}, {'diff': 2.1722000000001795e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:58.131" endtime="20201030 15:52:58.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.149" level="INFO">${ACCURACY} = {'diff': [2.105500000000593e-05, 2.1541999999999395e-05, 2.184700000000539e-05, 2.1042000000005834e-05, 2.137499999999709e-05, 2.1722000000001795e-05, 2.1848000000004864e-05, 2.1084000000004544e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:58.141" endtime="20201030 15:52:58.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.160" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.157" endtime="20201030 15:52:58.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.165" level="INFO">VALUE: [2.105500000000593e-05, 2.1541999999999395e-05, 2.184700000000539e-05, 2.1042000000005834e-05, 2.137499999999709e-05, 2.1722000000001795e-05, 2.1848000000004864e-05, 2.1084000000004544e-05, 2.1055999999998465e-05, 2.1887999999997687e-05, 2.187499999999759e-05, 2.170899999999476e-05, 2.181899999999931e-05, 2.116699999999555e-05, 2.1500000000000685e-05, 2.17090000000017e-05, 2.1722000000001795e-05, 2.137500000000403e-05, 2.137500000000403e-05, 2.190299999999673e-05, 2.102699999999985e-05, 2.1194000000002156e-05, 2.187499999999759e-05, 2.1707999999995287e-05, 2.1555999999998965e-05, 2.1707999999995287e-05, 2.184699999999845e-05, 2.1527999999999825e-05, 2.13890000000036e-05, 2.206899999999956e-05, 2.136100000000446e-05, 2.204100000000042e-05, 2.137499999999709e-05, 2.1527999999999825e-05, 2.155499999999949e-05, 2.187499999999759e-05, 2.1722000000001795e-05, 2.169499999999519e-05, 2.2041999999999895e-05, 2.1221999999994356e-05, 2.1708000000002226e-05, 2.138899999999666e-05, 2.152700000000035e-05, 2.1013999999999755e-05, 2.155499999999949e-05, 2.187499999999759e-05, 2.180499999999974e-05, 2.169500000000213e-05, 2.186099999999802e-05, 2.188899999999716e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.162" endtime="20201030 15:52:58.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.151" endtime="20201030 15:52:58.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.179" endtime="20201030 15:52:58.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.174" endtime="20201030 15:52:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.171" endtime="20201030 15:52:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.677" endtime="20201030 15:52:58.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.676" endtime="20201030 15:52:58.204"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.227" endtime="20201030 15:52:58.242"></status>
</kw>
<msg timestamp="20201030 15:52:58.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.224" endtime="20201030 15:52:58.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.246" endtime="20201030 15:52:58.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.252" endtime="20201030 15:52:58.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.217" endtime="20201030 15:52:58.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.211" endtime="20201030 15:52:58.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.276" endtime="20201030 15:52:58.611"></status>
</kw>
<msg timestamp="20201030 15:52:58.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039812431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039833486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.272" endtime="20201030 15:52:58.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039812431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039833486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.620" endtime="20201030 15:52:58.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.639" endtime="20201030 15:52:58.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.265" endtime="20201030 15:52:58.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.260" endtime="20201030 15:52:58.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.656" level="INFO">${RESULT} = [{'diff': 2.105499999999899e-05}, {'diff': 2.1402000000003696e-05}, {'diff': 2.18890000000041e-05}, {'diff': 2.169499999999519e-05}, {'diff': 2.137500000000403e-05}, {'diff': 2.1514000000000255e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:58.647" endtime="20201030 15:52:58.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.667" level="INFO">${ACCURACY} = {'diff': [2.105499999999899e-05, 2.1402000000003696e-05, 2.18890000000041e-05, 2.169499999999519e-05, 2.137500000000403e-05, 2.1514000000000255e-05, 2.1069999999998035e-05, 2.2083999999998605e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 15:52:58.658" endtime="20201030 15:52:58.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.678" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.676" endtime="20201030 15:52:58.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.684" level="INFO">VALUE: [2.105499999999899e-05, 2.1402000000003696e-05, 2.18890000000041e-05, 2.169499999999519e-05, 2.137500000000403e-05, 2.1514000000000255e-05, 2.1069999999998035e-05, 2.2083999999998605e-05, 2.137499999999709e-05, 2.1194000000002156e-05, 2.102699999999985e-05, 2.1041999999998895e-05, 2.187500000000453e-05, 2.1819999999998785e-05, 2.188899999999716e-05, 2.1721999999994857e-05, 2.104099999999942e-05, 2.138899999999666e-05, 2.169500000000213e-05, 2.155499999999949e-05, 2.1736000000001365e-05, 2.1027999999999325e-05, 2.154099999999992e-05, 2.113900000000335e-05, 2.1222000000001295e-05, 2.1555999999998965e-05, 2.1707999999995287e-05, 2.1735999999994426e-05, 2.1041999999998895e-05, 2.155500000000643e-05, 2.1915999999996827e-05, 2.1055999999998465e-05, 2.1694000000002656e-05, 2.1277999999999575e-05, 2.138899999999666e-05, 2.1707999999995287e-05, 2.1541999999999395e-05, 2.1541999999999395e-05, 2.1013999999999755e-05, 2.1527999999999825e-05, 2.1194000000002156e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.137499999999709e-05, 2.1527999999999825e-05, 2.1041999999998895e-05, 2.187499999999759e-05, 2.1041999999998895e-05, 2.1361999999996995e-05, 2.12090000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.681" endtime="20201030 15:52:58.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.669" endtime="20201030 15:52:58.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.696" endtime="20201030 15:52:58.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.692" endtime="20201030 15:52:58.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.689" endtime="20201030 15:52:58.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.207" endtime="20201030 15:52:58.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.205" endtime="20201030 15:52:58.721"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.744" endtime="20201030 15:52:58.759"></status>
</kw>
<msg timestamp="20201030 15:52:58.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.740" endtime="20201030 15:52:58.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.762" endtime="20201030 15:52:58.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.769" endtime="20201030 15:52:58.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.733" endtime="20201030 15:52:58.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.727" endtime="20201030 15:52:58.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.792" endtime="20201030 15:52:59.127"></status>
</kw>
<msg timestamp="20201030 15:52:59.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039538111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.789" endtime="20201030 15:52:59.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039538111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.137" endtime="20201030 15:52:59.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.155" endtime="20201030 15:52:59.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.782" endtime="20201030 15:52:59.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.777" endtime="20201030 15:52:59.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.173" level="INFO">${RESULT} = [{'diff': 2.8764000000000567e-05}, {'diff': 2.8721999999994918e-05}, {'diff': 2.9041999999999957e-05}, {'diff': 2.8721999999994918e-05}, {'diff': 2.858300000000563e-05}, {'diff': 2.8736000000001427e-0...</msg>
<status status="PASS" starttime="20201030 15:52:59.164" endtime="20201030 15:52:59.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.184" level="INFO">${ACCURACY} = {'diff': [2.8764000000000567e-05, 2.8721999999994918e-05, 2.9041999999999957e-05, 2.8721999999994918e-05, 2.858300000000563e-05, 2.8736000000001427e-05, 2.861100000000477e-05, 2.840300000000323e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:59.175" endtime="20201030 15:52:59.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.195" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.193" endtime="20201030 15:52:59.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.200" level="INFO">VALUE: [2.8764000000000567e-05, 2.8721999999994918e-05, 2.9041999999999957e-05, 2.8721999999994918e-05, 2.858300000000563e-05, 2.8736000000001427e-05, 2.861100000000477e-05, 2.840300000000323e-05, 2.8555999999999027e-05, 2.80970000000047e-05, 2.8069999999998096e-05, 2.8888999999997222e-05, 2.8027999999999387e-05, 2.842999999999596e-05, 2.8222000000001357e-05, 2.8570000000005535e-05, 2.8402999999996292e-05, 2.8888999999997222e-05, 2.9083999999998666e-05, 2.8972000000002107e-05, 2.858300000000563e-05, 2.8570000000005535e-05, 2.8236000000000927e-05, 2.8736000000001427e-05, 2.890300000000373e-05, 2.89170000000033e-05, 2.818100000000212e-05, 2.8221999999994418e-05, 2.8402999999996292e-05, 2.9027000000000913e-05, 2.9055999999999527e-05, 2.8874999999997653e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.822300000000083e-05, 2.8110999999997333e-05, 2.870900000000176e-05, 2.840300000000323e-05, 2.840300000000323e-05, 2.8236000000000927e-05, 2.840199999999682e-05, 2.9082999999999193e-05, 2.8610999999997833e-05, 2.8541999999999457e-05, 2.840199999999682e-05, 2.8833999999998416e-05, 2.8527999999999887e-05, 2.894500000000244e-05, 2.8083999999997666e-05, 2.8416999999995862e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.197" endtime="20201030 15:52:59.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.186" endtime="20201030 15:52:59.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.213" endtime="20201030 15:52:59.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.209" endtime="20201030 15:52:59.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.206" endtime="20201030 15:52:59.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.723" endtime="20201030 15:52:59.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.722" endtime="20201030 15:52:59.238"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.261" endtime="20201030 15:52:59.276"></status>
</kw>
<msg timestamp="20201030 15:52:59.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.257" endtime="20201030 15:52:59.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.279" endtime="20201030 15:52:59.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.286" endtime="20201030 15:52:59.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.250" endtime="20201030 15:52:59.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.244" endtime="20201030 15:52:59.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.309" endtime="20201030 15:52:59.646"></status>
</kw>
<msg timestamp="20201030 15:52:59.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039483139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039511361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.306" endtime="20201030 15:52:59.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039483139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039511361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.655" endtime="20201030 15:52:59.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.674" endtime="20201030 15:52:59.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.298" endtime="20201030 15:52:59.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.294" endtime="20201030 15:52:59.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.691" level="INFO">${RESULT} = [{'diff': 2.8222000000001357e-05}, {'diff': 2.8902999999996792e-05}, {'diff': 2.8764000000000567e-05}, {'diff': 2.888900000000416e-05}, {'diff': 2.8568999999999123e-05}, {'diff': 2.8568999999999123e-0...</msg>
<status status="PASS" starttime="20201030 15:52:59.682" endtime="20201030 15:52:59.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.701" level="INFO">${ACCURACY} = {'diff': [2.8222000000001357e-05, 2.8902999999996792e-05, 2.8764000000000567e-05, 2.888900000000416e-05, 2.8568999999999123e-05, 2.8568999999999123e-05, 2.8236000000000927e-05, 2.8416999999995862e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:59.693" endtime="20201030 15:52:59.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.712" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.709" endtime="20201030 15:52:59.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.717" level="INFO">VALUE: [2.8222000000001357e-05, 2.8902999999996792e-05, 2.8764000000000567e-05, 2.888900000000416e-05, 2.8568999999999123e-05, 2.8568999999999123e-05, 2.8236000000000927e-05, 2.8416999999995862e-05, 2.8264000000000067e-05, 2.9055999999999527e-05, 2.8916000000003828e-05, 2.8514000000000317e-05, 2.9055999999999527e-05, 2.8070000000005035e-05, 2.840300000000323e-05, 2.862500000000434e-05, 2.8750000000000997e-05, 2.8388000000004188e-05, 2.819500000000169e-05, 2.8568999999999123e-05, 2.840300000000323e-05, 2.8402000000003758e-05, 2.8416000000003327e-05, 2.8902000000004258e-05, 2.8582999999998693e-05, 2.8722000000001857e-05, 2.8235999999993988e-05, 2.8944000000002967e-05, 2.8902999999996792e-05, 2.8916000000003828e-05, 2.8222000000001357e-05, 2.8346999999998013e-05, 2.9014000000000817e-05, 2.9068999999999623e-05, 2.8750000000000997e-05, 2.8541999999999457e-05, 2.8250000000000497e-05, 2.8888999999997222e-05, 2.8541999999999457e-05, 2.8736000000001427e-05, 2.8916999999996362e-05, 2.8555999999999027e-05, 2.9068999999999623e-05, 2.865199999999707e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8040999999999483e-05, 2.8583999999998166e-05, 2.8040999999999483e-05, 2.890300000000373e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.714" endtime="20201030 15:52:59.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.702" endtime="20201030 15:52:59.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.730" endtime="20201030 15:52:59.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.725" endtime="20201030 15:52:59.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.723" endtime="20201030 15:52:59.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.240" endtime="20201030 15:52:59.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.239" endtime="20201030 15:52:59.755"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.778" endtime="20201030 15:52:59.793"></status>
</kw>
<msg timestamp="20201030 15:52:59.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.774" endtime="20201030 15:52:59.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.797" endtime="20201030 15:52:59.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.803" endtime="20201030 15:52:59.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.767" endtime="20201030 15:52:59.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.761" endtime="20201030 15:52:59.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.828" endtime="20201030 15:53:00.165"></status>
</kw>
<msg timestamp="20201030 15:53:00.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:59.825" endtime="20201030 15:53:00.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:00.175" endtime="20201030 15:53:00.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.194" endtime="20201030 15:53:00.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.818" endtime="20201030 15:53:00.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.813" endtime="20201030 15:53:00.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.211" level="INFO">${RESULT} = [{'diff': 2.893100000000287e-05}, {'diff': 2.890300000000373e-05}, {'diff': 2.9070000000006035e-05}, {'diff': 2.891599999999689e-05}, {'diff': 2.8582999999998693e-05}, {'diff': 2.8416000000003327e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:00.202" endtime="20201030 15:53:00.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.221" level="INFO">${ACCURACY} = {'diff': [2.893100000000287e-05, 2.890300000000373e-05, 2.9070000000006035e-05, 2.891599999999689e-05, 2.8582999999998693e-05, 2.8416000000003327e-05, 2.8762999999994154e-05, 2.8069999999998096e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:53:00.213" endtime="20201030 15:53:00.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.231" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.229" endtime="20201030 15:53:00.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.237" level="INFO">VALUE: [2.893100000000287e-05, 2.890300000000373e-05, 2.9070000000006035e-05, 2.891599999999689e-05, 2.8582999999998693e-05, 2.8416000000003327e-05, 2.8762999999994154e-05, 2.8069999999998096e-05, 2.8902999999996792e-05, 2.9055000000000053e-05, 2.8610999999997833e-05, 2.9055999999999527e-05, 2.8722000000001857e-05, 2.838900000000366e-05, 2.89170000000033e-05, 2.8582999999998693e-05, 2.8735999999994488e-05, 2.8902999999996792e-05, 2.8722000000001857e-05, 2.863900000000391e-05, 2.8416999999995862e-05, 2.8569999999998597e-05, 2.862500000000434e-05, 2.8902999999996792e-05, 2.891599999999689e-05, 2.89170000000033e-05, 2.8569999999998597e-05, 2.9069999999999097e-05, 2.8568999999999123e-05, 2.9068999999999623e-05, 2.8555999999999027e-05, 2.890300000000373e-05, 2.8070000000005035e-05, 2.8554999999999553e-05, 2.9082999999999193e-05, 2.9041999999999957e-05, 2.8222000000001357e-05, 2.9110999999998333e-05, 2.8250000000000497e-05, 2.8569999999998597e-05, 2.8568999999999123e-05, 2.8416000000003327e-05, 2.9110999999998333e-05, 2.8082999999998193e-05, 2.8069000000005562e-05, 2.8569000000006062e-05, 2.8582999999998693e-05, 2.840300000000323e-05, 2.8750000000000997e-05, 2.8235999999993988e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.234" endtime="20201030 15:53:00.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.222" endtime="20201030 15:53:00.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.251" endtime="20201030 15:53:00.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.245" endtime="20201030 15:53:00.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.242" endtime="20201030 15:53:00.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.757" endtime="20201030 15:53:00.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.756" endtime="20201030 15:53:00.281"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.308" endtime="20201030 15:53:00.324"></status>
</kw>
<msg timestamp="20201030 15:53:00.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.305" endtime="20201030 15:53:00.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.327" endtime="20201030 15:53:00.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.333" endtime="20201030 15:53:00.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.297" endtime="20201030 15:53:00.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.290" endtime="20201030 15:53:00.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.357" endtime="20201030 15:53:00.693"></status>
</kw>
<msg timestamp="20201030 15:53:00.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049307417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049336, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:00.353" endtime="20201030 15:53:00.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049307417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049336, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:00.703" endtime="20201030 15:53:00.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.721" endtime="20201030 15:53:00.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.346" endtime="20201030 15:53:00.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.342" endtime="20201030 15:53:00.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.738" level="INFO">${RESULT} = [{'diff': 2.8582999999998693e-05}, {'diff': 2.8736000000001427e-05}, {'diff': 2.84170000000028e-05}, {'diff': 2.8832999999998943e-05}, {'diff': 2.8902999999996792e-05}, {'diff': 2.9084000000005605e-05...</msg>
<status status="PASS" starttime="20201030 15:53:00.730" endtime="20201030 15:53:00.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.749" level="INFO">${ACCURACY} = {'diff': [2.8582999999998693e-05, 2.8736000000001427e-05, 2.84170000000028e-05, 2.8832999999998943e-05, 2.8902999999996792e-05, 2.9084000000005605e-05, 2.8236000000000927e-05, 2.8750000000000997e-05, ...</msg>
<status status="PASS" starttime="20201030 15:53:00.740" endtime="20201030 15:53:00.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.760" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.757" endtime="20201030 15:53:00.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.765" level="INFO">VALUE: [2.8582999999998693e-05, 2.8736000000001427e-05, 2.84170000000028e-05, 2.8832999999998943e-05, 2.8902999999996792e-05, 2.9084000000005605e-05, 2.8236000000000927e-05, 2.8750000000000997e-05, 2.8236000000000927e-05, 2.8722000000001857e-05, 2.8569999999998597e-05, 2.8778000000000137e-05, 2.84170000000028e-05, 2.8569999999998597e-05, 2.8568999999999123e-05, 2.8068999999998623e-05, 2.8054999999999053e-05, 2.8222000000001357e-05, 2.8582999999998693e-05, 2.9082999999999193e-05, 2.820900000000126e-05, 2.840300000000323e-05, 2.887500000000459e-05, 2.8902999999996792e-05, 2.813900000000341e-05, 2.840300000000323e-05, 2.8222000000001357e-05, 2.8541999999999457e-05, 2.8042000000005896e-05, 2.8555999999999027e-05, 2.9055999999999527e-05, 2.8596999999998263e-05, 2.8041999999998957e-05, 2.8638999999996972e-05, 2.84170000000028e-05, 2.872300000000133e-05, 2.8583999999998166e-05, 2.8554999999999553e-05, 2.8568999999999123e-05, 2.9096999999998763e-05, 2.8750000000000997e-05, 2.8569999999998597e-05, 2.820900000000126e-05, 2.8055999999998527e-05, 2.8916999999996362e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8582999999998693e-05, 2.89579999999956e-05, 2.8736000000001427e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.762" endtime="20201030 15:53:00.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.751" endtime="20201030 15:53:00.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.783" endtime="20201030 15:53:00.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.778" endtime="20201030 15:53:00.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.776" endtime="20201030 15:53:00.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.284" endtime="20201030 15:53:00.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.282" endtime="20201030 15:53:00.808"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.831" endtime="20201030 15:53:00.850"></status>
</kw>
<msg timestamp="20201030 15:53:00.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.828" endtime="20201030 15:53:00.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.853" endtime="20201030 15:53:00.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.860" endtime="20201030 15:53:00.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.820" endtime="20201030 15:53:00.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.814" endtime="20201030 15:53:00.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.883" endtime="20201030 15:53:01.242"></status>
</kw>
<msg timestamp="20201030 15:53:01.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040543222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040571458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.880" endtime="20201030 15:53:01.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040543222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040571458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.251" endtime="20201030 15:53:01.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.269" endtime="20201030 15:53:01.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.873" endtime="20201030 15:53:01.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.868" endtime="20201030 15:53:01.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.286" level="INFO">${RESULT} = [{'diff': 2.8236000000000927e-05}, {'diff': 2.8722000000001857e-05}, {'diff': 2.8137999999997e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.8388999999996722e-05}, {'diff': 2.872300000000133e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:01.278" endtime="20201030 15:53:01.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.297" level="INFO">${ACCURACY} = {'diff': [2.8236000000000927e-05, 2.8722000000001857e-05, 2.8137999999997e-05, 2.8750000000000997e-05, 2.8388999999996722e-05, 2.872300000000133e-05, 2.8735999999994488e-05, 2.8236000000000927e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:53:01.288" endtime="20201030 15:53:01.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.308" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.306" endtime="20201030 15:53:01.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.314" level="INFO">VALUE: [2.8236000000000927e-05, 2.8722000000001857e-05, 2.8137999999997e-05, 2.8750000000000997e-05, 2.8388999999996722e-05, 2.872300000000133e-05, 2.8735999999994488e-05, 2.8236000000000927e-05, 2.8402999999996292e-05, 2.8556000000005966e-05, 2.890300000000373e-05, 2.8888999999997222e-05, 2.8416999999995862e-05, 2.8694000000002717e-05, 2.8222000000001357e-05, 2.87370000000009e-05, 2.9082999999999193e-05, 2.8388000000004188e-05, 2.8236000000000927e-05, 2.8888999999997222e-05, 2.8568999999999123e-05, 2.85970000000052e-05, 2.888900000000416e-05, 2.8235999999993988e-05, 2.8250000000000497e-05, 2.8902999999996792e-05, 2.837500000000409e-05, 2.8736000000001427e-05, 2.8388999999996722e-05, 2.8778000000000137e-05, 2.8764000000000567e-05, 2.8000000000000247e-05, 2.8055000000005992e-05, 2.8874999999997653e-05, 2.8082999999998193e-05, 2.9083999999998666e-05, 2.8236000000000927e-05, 2.8402000000003758e-05, 2.8736000000001427e-05, 2.8902000000004258e-05, 2.8902999999996792e-05, 2.8554999999999553e-05, 2.8236000000000927e-05, 2.840300000000323e-05, 2.8569999999998597e-05, 2.8722000000001857e-05, 2.84170000000028e-05, 2.8736000000001427e-05, 2.8750000000000997e-05, 2.8402999999996292e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.311" endtime="20201030 15:53:01.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.299" endtime="20201030 15:53:01.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.328" endtime="20201030 15:53:01.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.322" endtime="20201030 15:53:01.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.319" endtime="20201030 15:53:01.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.810" endtime="20201030 15:53:01.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.809" endtime="20201030 15:53:01.364"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.393" endtime="20201030 15:53:01.408"></status>
</kw>
<msg timestamp="20201030 15:53:01.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.389" endtime="20201030 15:53:01.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.411" endtime="20201030 15:53:01.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.418" endtime="20201030 15:53:01.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.382" endtime="20201030 15:53:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.375" endtime="20201030 15:53:01.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.441" endtime="20201030 15:53:01.795"></status>
</kw>
<msg timestamp="20201030 15:53:01.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055960639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055988875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.437" endtime="20201030 15:53:01.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055960639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055988875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.804" endtime="20201030 15:53:01.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.824" endtime="20201030 15:53:01.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.430" endtime="20201030 15:53:01.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.426" endtime="20201030 15:53:01.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.845" level="INFO">${RESULT} = [{'diff': 2.8236000000000927e-05}, {'diff': 2.9069999999999097e-05}, {'diff': 2.888799999999775e-05}, {'diff': 2.8235999999993988e-05}, {'diff': 2.822300000000083e-05}, {'diff': 2.8805999999999277e-05...</msg>
<status status="PASS" starttime="20201030 15:53:01.835" endtime="20201030 15:53:01.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.856" level="INFO">${ACCURACY} = {'diff': [2.8236000000000927e-05, 2.9069999999999097e-05, 2.888799999999775e-05, 2.8235999999993988e-05, 2.822300000000083e-05, 2.8805999999999277e-05, 2.8069999999998096e-05, 2.8736000000001427e-05, ...</msg>
<status status="PASS" starttime="20201030 15:53:01.848" endtime="20201030 15:53:01.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.869" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.866" endtime="20201030 15:53:01.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.875" level="INFO">VALUE: [2.8236000000000927e-05, 2.9069999999999097e-05, 2.888799999999775e-05, 2.8235999999993988e-05, 2.822300000000083e-05, 2.8805999999999277e-05, 2.8069999999998096e-05, 2.8736000000001427e-05, 2.838900000000366e-05, 2.8068999999998623e-05, 2.8055999999998527e-05, 2.8541999999999457e-05, 2.8750000000000997e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8207999999994848e-05, 2.8236000000000927e-05, 2.891599999999689e-05, 2.8236000000000927e-05, 2.8778000000000137e-05, 2.8722000000001857e-05, 2.8721999999994918e-05, 2.8054999999999053e-05, 2.8736000000001427e-05, 2.8068999999998623e-05, 2.8068999999998623e-05, 2.84170000000028e-05, 2.8055999999998527e-05, 2.8236000000000927e-05, 2.8735999999994488e-05, 2.8902000000004258e-05, 2.9069999999999097e-05, 2.8055999999998527e-05, 2.8764000000000567e-05, 2.8916999999996362e-05, 2.8388999999996722e-05, 2.8596999999998263e-05, 2.82370000000004e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.9055000000000053e-05, 2.9055999999999527e-05, 2.8333999999997916e-05, 2.890300000000373e-05, 2.87370000000009e-05, 2.8736000000001427e-05, 2.8042000000005896e-05, 2.8236000000000927e-05, 2.8735999999994488e-05, 2.8402999999996292e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.872" endtime="20201030 15:53:01.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.858" endtime="20201030 15:53:01.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.890" endtime="20201030 15:53:01.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.885" endtime="20201030 15:53:01.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.882" endtime="20201030 15:53:01.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.370" endtime="20201030 15:53:01.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.367" endtime="20201030 15:53:01.917"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.947" endtime="20201030 15:53:01.965"></status>
</kw>
<msg timestamp="20201030 15:53:01.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.942" endtime="20201030 15:53:01.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.969" endtime="20201030 15:53:01.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.977" endtime="20201030 15:53:01.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.933" endtime="20201030 15:53:01.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.926" endtime="20201030 15:53:01.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.005" endtime="20201030 15:53:02.342"></status>
</kw>
<msg timestamp="20201030 15:53:02.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049475958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049504361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.001" endtime="20201030 15:53:02.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049475958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049504361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.352" endtime="20201030 15:53:02.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.370" endtime="20201030 15:53:02.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.992" endtime="20201030 15:53:02.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.987" endtime="20201030 15:53:02.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.388" level="INFO">${RESULT} = [{'diff': 2.8402999999996292e-05}, {'diff': 2.8041999999998957e-05}, {'diff': 2.89170000000033e-05}, {'diff': 2.8402999999996292e-05}, {'diff': 2.819500000000169e-05}, {'diff': 2.8500000000000747e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:02.379" endtime="20201030 15:53:02.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.399" level="INFO">${ACCURACY} = {'diff': [2.8402999999996292e-05, 2.8041999999998957e-05, 2.89170000000033e-05, 2.8402999999996292e-05, 2.819500000000169e-05, 2.8500000000000747e-05, 2.8236000000000927e-05, 2.87370000000009e-05, 2.8...</msg>
<status status="PASS" starttime="20201030 15:53:02.390" endtime="20201030 15:53:02.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.412" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.409" endtime="20201030 15:53:02.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.418" level="INFO">VALUE: [2.8402999999996292e-05, 2.8041999999998957e-05, 2.89170000000033e-05, 2.8402999999996292e-05, 2.819500000000169e-05, 2.8500000000000747e-05, 2.8236000000000927e-05, 2.87370000000009e-05, 2.8902000000004258e-05, 2.820900000000126e-05, 2.9069999999999097e-05, 2.840300000000323e-05, 2.862500000000434e-05, 2.8208000000001787e-05, 2.8568999999999123e-05, 2.8582999999998693e-05, 2.8972000000002107e-05, 2.8070000000005035e-05, 2.8582999999998693e-05, 2.9096999999998763e-05, 2.8264000000000067e-05, 2.8930999999995932e-05, 2.838900000000366e-05, 2.8694999999995252e-05, 2.840300000000323e-05, 2.9097999999998236e-05, 2.8722000000001857e-05, 2.815300000000298e-05, 2.8583999999998166e-05, 2.843100000000237e-05, 2.8554999999999553e-05, 2.8541999999999457e-05, 2.8236000000000927e-05, 2.8583999999998166e-05, 2.8750000000000997e-05, 2.890300000000373e-05, 2.820900000000126e-05, 2.9096999999998763e-05, 2.8236000000000927e-05, 2.8541999999999457e-05, 2.8722000000001857e-05, 2.8236000000000927e-05, 2.8054999999999053e-05, 2.840300000000323e-05, 2.8014000000006756e-05, 2.9098000000005175e-05, 2.8777000000000663e-05, 2.8055999999998527e-05, 2.8916999999996362e-05, 2.8250000000000497e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.414" endtime="20201030 15:53:02.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.401" endtime="20201030 15:53:02.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.436" endtime="20201030 15:53:02.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.429" endtime="20201030 15:53:02.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.426" endtime="20201030 15:53:02.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.920" endtime="20201030 15:53:02.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.919" endtime="20201030 15:53:02.462"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.485" endtime="20201030 15:53:02.501"></status>
</kw>
<msg timestamp="20201030 15:53:02.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.482" endtime="20201030 15:53:02.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.504" endtime="20201030 15:53:02.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.510" endtime="20201030 15:53:02.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.474" endtime="20201030 15:53:02.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.468" endtime="20201030 15:53:02.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.534" endtime="20201030 15:53:02.868"></status>
</kw>
<msg timestamp="20201030 15:53:02.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.531" endtime="20201030 15:53:02.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.878" endtime="20201030 15:53:02.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.898" endtime="20201030 15:53:02.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.523" endtime="20201030 15:53:02.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.519" endtime="20201030 15:53:02.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.916" level="INFO">${RESULT} = [{'diff': 3.593000000000346e-05}, {'diff': 3.59450000000025e-05}, {'diff': 3.591700000000336e-05}, {'diff': 3.5610999999997894e-05}, {'diff': 3.508399999999773e-05}, {'diff': 3.593100000000293e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.907" endtime="20201030 15:53:02.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.931" level="INFO">${ACCURACY} = {'diff': [3.593000000000346e-05, 3.59450000000025e-05, 3.591700000000336e-05, 3.5610999999997894e-05, 3.508399999999773e-05, 3.593100000000293e-05, 3.541700000000286e-05, 3.558399999999823e-05, 3.5055...</msg>
<status status="PASS" starttime="20201030 15:53:02.918" endtime="20201030 15:53:02.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.942" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.940" endtime="20201030 15:53:02.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.947" level="INFO">VALUE: [3.593000000000346e-05, 3.59450000000025e-05, 3.591700000000336e-05, 3.5610999999997894e-05, 3.508399999999773e-05, 3.593100000000293e-05, 3.541700000000286e-05, 3.558399999999823e-05, 3.505599999999859e-05, 3.540200000000382e-05, 3.525000000000056e-05, 3.6096999999998824e-05, 3.523600000000099e-05, 3.575000000000106e-05, 3.52779999999997e-05, 3.576400000000063e-05, 3.5916999999996424e-05, 3.5416999999995924e-05, 3.57780000000002e-05, 3.5777000000000725e-05, 3.576400000000063e-05, 3.6096999999998824e-05, 3.543100000000243e-05, 3.60979999999983e-05, 3.609700000000576e-05, 3.524999999999362e-05, 3.5791000000000295e-05, 3.6068999999999685e-05, 3.523700000000046e-05, 3.5582999999998755e-05, 3.525000000000056e-05, 3.548600000000124e-05, 3.57780000000002e-05, 3.543000000000296e-05, 3.591700000000336e-05, 3.523600000000099e-05, 3.5416999999995924e-05, 3.520900000000132e-05, 3.593100000000293e-05, 3.525000000000056e-05, 3.522200000000142e-05, 3.605599999999959e-05, 3.551400000000038e-05, 3.5736999999994024e-05, 3.540199999999688e-05, 3.525000000000056e-05, 3.526400000000013e-05, 3.573600000000149e-05, 3.542999999999602e-05, 3.5082999999998254e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.944" endtime="20201030 15:53:02.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.933" endtime="20201030 15:53:02.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.960" endtime="20201030 15:53:02.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.955" endtime="20201030 15:53:02.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.953" endtime="20201030 15:53:02.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.464" endtime="20201030 15:53:02.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.463" endtime="20201030 15:53:02.985"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.008" endtime="20201030 15:53:03.024"></status>
</kw>
<msg timestamp="20201030 15:53:03.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.004" endtime="20201030 15:53:03.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.027" endtime="20201030 15:53:03.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.034" endtime="20201030 15:53:03.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.997" endtime="20201030 15:53:03.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.991" endtime="20201030 15:53:03.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.057" endtime="20201030 15:53:03.402"></status>
</kw>
<msg timestamp="20201030 15:53:03.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039971194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.054" endtime="20201030 15:53:03.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039935972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039971194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.411" endtime="20201030 15:53:03.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.430" endtime="20201030 15:53:03.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.046" endtime="20201030 15:53:03.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.042" endtime="20201030 15:53:03.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.448" level="INFO">${RESULT} = [{'diff': 3.522200000000142e-05}, {'diff': 3.541599999999645e-05}, {'diff': 3.593000000000346e-05}, {'diff': 3.608399999999873e-05}, {'diff': 3.561200000000431e-05}, {'diff': 3.558399999999823e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.439" endtime="20201030 15:53:03.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.459" level="INFO">${ACCURACY} = {'diff': [3.522200000000142e-05, 3.541599999999645e-05, 3.593000000000346e-05, 3.608399999999873e-05, 3.561200000000431e-05, 3.558399999999823e-05, 3.541700000000286e-05, 3.593100000000293e-05, 3.5596...</msg>
<status status="PASS" starttime="20201030 15:53:03.450" endtime="20201030 15:53:03.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.470" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.468" endtime="20201030 15:53:03.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.476" level="INFO">VALUE: [3.522200000000142e-05, 3.541599999999645e-05, 3.593000000000346e-05, 3.608399999999873e-05, 3.561200000000431e-05, 3.558399999999823e-05, 3.541700000000286e-05, 3.593100000000293e-05, 3.5596999999998324e-05, 3.5596999999998324e-05, 3.55979999999978e-05, 3.509700000000476e-05, 3.5402999999996354e-05, 3.5902999999996854e-05, 3.548600000000124e-05, 3.522200000000142e-05, 3.5582999999998755e-05, 3.541700000000286e-05, 3.591599999999695e-05, 3.558399999999823e-05, 3.574999999999412e-05, 3.591700000000336e-05, 3.558400000000517e-05, 3.575000000000106e-05, 3.5582999999998755e-05, 3.508399999999773e-05, 3.594399999999609e-05, 3.6068999999999685e-05, 3.573600000000149e-05, 3.556999999999866e-05, 3.591600000000389e-05, 3.5068999999998685e-05, 3.6096999999998824e-05, 3.540300000000329e-05, 3.5930999999995994e-05, 3.576400000000063e-05, 3.543000000000296e-05, 3.575000000000106e-05, 3.505599999999859e-05, 3.5096999999997824e-05, 3.525000000000056e-05, 3.5374999999997214e-05, 3.543000000000296e-05, 3.575000000000106e-05, 3.5846999999998574e-05, 3.594399999999609e-05, 3.576400000000063e-05, 3.573600000000149e-05, 3.5388999999996784e-05, 3.6096999999998824e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.473" endtime="20201030 15:53:03.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.461" endtime="20201030 15:53:03.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.489" endtime="20201030 15:53:03.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.484" endtime="20201030 15:53:03.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.482" endtime="20201030 15:53:03.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.987" endtime="20201030 15:53:03.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.986" endtime="20201030 15:53:03.514"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.536" endtime="20201030 15:53:03.552"></status>
</kw>
<msg timestamp="20201030 15:53:03.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.533" endtime="20201030 15:53:03.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.556" endtime="20201030 15:53:03.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.562" endtime="20201030 15:53:03.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.526" endtime="20201030 15:53:03.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.520" endtime="20201030 15:53:03.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.585" endtime="20201030 15:53:03.939"></status>
</kw>
<msg timestamp="20201030 15:53:03.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039887111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.582" endtime="20201030 15:53:03.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039887111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.948" endtime="20201030 15:53:03.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.966" endtime="20201030 15:53:03.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.575" endtime="20201030 15:53:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.570" endtime="20201030 15:53:03.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.983" level="INFO">${RESULT} = [{'diff': 3.573599999999455e-05}, {'diff': 3.5554999999999615e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.6082999999999255e-05}, {'diff': 3.5582999999998755e-05...</msg>
<status status="PASS" starttime="20201030 15:53:03.975" endtime="20201030 15:53:03.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.993" level="INFO">${ACCURACY} = {'diff': [3.573599999999455e-05, 3.5554999999999615e-05, 3.5582999999998755e-05, 3.526400000000013e-05, 3.6082999999999255e-05, 3.5582999999998755e-05, 3.523600000000099e-05, 3.576400000000063e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:53:03.985" endtime="20201030 15:53:03.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.004" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.001" endtime="20201030 15:53:04.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.009" level="INFO">VALUE: [3.573599999999455e-05, 3.5554999999999615e-05, 3.5582999999998755e-05, 3.526400000000013e-05, 3.6082999999999255e-05, 3.5582999999998755e-05, 3.523600000000099e-05, 3.576400000000063e-05, 3.573600000000149e-05, 3.525000000000056e-05, 3.556999999999866e-05, 3.529199999999927e-05, 3.591599999999695e-05, 3.525000000000056e-05, 3.5930999999995994e-05, 3.5916999999996424e-05, 3.60979999999983e-05, 3.525000000000056e-05, 3.591599999999695e-05, 3.572200000000192e-05, 3.590199999999738e-05, 3.5110999999997394e-05, 3.541700000000286e-05, 3.555599999999909e-05, 3.508399999999773e-05, 3.526400000000013e-05, 3.525000000000056e-05, 3.5930999999995994e-05, 3.522200000000142e-05, 3.543100000000243e-05, 3.590300000000379e-05, 3.5402999999996354e-05, 3.506999999999816e-05, 3.591700000000336e-05, 3.56250000000044e-05, 3.540300000000329e-05, 3.594400000000303e-05, 3.5596999999998324e-05, 3.541600000000339e-05, 3.530599999999884e-05, 3.591600000000389e-05, 3.559700000000526e-05, 3.525000000000056e-05, 3.593100000000293e-05, 3.5582999999998755e-05, 3.5222999999993954e-05, 3.541700000000286e-05, 3.6096999999998824e-05, 3.525000000000056e-05, 3.563900000000397e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.006" endtime="20201030 15:53:04.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.994" endtime="20201030 15:53:04.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.021" endtime="20201030 15:53:04.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.017" endtime="20201030 15:53:04.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.014" endtime="20201030 15:53:04.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.516" endtime="20201030 15:53:04.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.514" endtime="20201030 15:53:04.046"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.068" endtime="20201030 15:53:04.086"></status>
</kw>
<msg timestamp="20201030 15:53:04.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.065" endtime="20201030 15:53:04.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.089" endtime="20201030 15:53:04.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.096" endtime="20201030 15:53:04.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.058" endtime="20201030 15:53:04.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.052" endtime="20201030 15:53:04.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.120" endtime="20201030 15:53:04.452"></status>
</kw>
<msg timestamp="20201030 15:53:04.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040715681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04075075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:04.117" endtime="20201030 15:53:04.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040715681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04075075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:04.462" endtime="20201030 15:53:04.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.480" endtime="20201030 15:53:04.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.109" endtime="20201030 15:53:04.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.104" endtime="20201030 15:53:04.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.497" level="INFO">${RESULT} = [{'diff': 3.5069000000005623e-05}, {'diff': 3.572200000000192e-05}, {'diff': 3.611199999999787e-05}, {'diff': 3.576400000000063e-05}, {'diff': 3.52779999999997e-05}, {'diff': 3.592999999999652e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:04.489" endtime="20201030 15:53:04.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.506" level="INFO">${ACCURACY} = {'diff': [3.5069000000005623e-05, 3.572200000000192e-05, 3.611199999999787e-05, 3.576400000000063e-05, 3.52779999999997e-05, 3.592999999999652e-05, 3.598600000000174e-05, 3.543100000000243e-05, 3.5096...</msg>
<status status="PASS" starttime="20201030 15:53:04.499" endtime="20201030 15:53:04.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.517" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.515" endtime="20201030 15:53:04.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.522" level="INFO">VALUE: [3.5069000000005623e-05, 3.572200000000192e-05, 3.611199999999787e-05, 3.576400000000063e-05, 3.52779999999997e-05, 3.592999999999652e-05, 3.598600000000174e-05, 3.543100000000243e-05, 3.5096999999997824e-05, 3.54580000000021e-05, 3.540300000000329e-05, 3.611100000000533e-05, 3.5610999999997894e-05, 3.576400000000063e-05, 3.548600000000124e-05, 3.6096999999998824e-05, 3.505599999999859e-05, 3.540199999999688e-05, 3.541600000000339e-05, 3.541700000000286e-05, 3.59859999999948e-05, 3.593000000000346e-05, 3.5068999999998685e-05, 3.523600000000099e-05, 3.593000000000346e-05, 3.5082999999998254e-05, 3.591700000000336e-05, 3.615300000000404e-05, 3.5069000000005623e-05, 3.594399999999609e-05, 3.525000000000056e-05, 3.561100000000483e-05, 3.556999999999866e-05, 3.5582999999998755e-05, 3.575000000000106e-05, 3.5430999999995494e-05, 3.57780000000002e-05, 3.543000000000296e-05, 3.591700000000336e-05, 3.525000000000056e-05, 3.50979999999973e-05, 3.525000000000056e-05, 3.591600000000389e-05, 3.576400000000063e-05, 3.526400000000013e-05, 3.593100000000293e-05, 3.52779999999997e-05, 3.594399999999609e-05, 3.5763000000001155e-05, 3.5930999999995994e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.519" endtime="20201030 15:53:04.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.508" endtime="20201030 15:53:04.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.536" endtime="20201030 15:53:04.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.531" endtime="20201030 15:53:04.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.528" endtime="20201030 15:53:04.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.048" endtime="20201030 15:53:04.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.047" endtime="20201030 15:53:04.561"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.583" endtime="20201030 15:53:04.599"></status>
</kw>
<msg timestamp="20201030 15:53:04.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.580" endtime="20201030 15:53:04.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.603" endtime="20201030 15:53:04.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.609" endtime="20201030 15:53:04.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.573" endtime="20201030 15:53:04.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.567" endtime="20201030 15:53:04.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.632" endtime="20201030 15:53:04.971"></status>
</kw>
<msg timestamp="20201030 15:53:04.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039032264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039067847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.628" endtime="20201030 15:53:04.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039032264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039067847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.981" endtime="20201030 15:53:04.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.999" endtime="20201030 15:53:05.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.621" endtime="20201030 15:53:05.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.617" endtime="20201030 15:53:05.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.016" level="INFO">${RESULT} = [{'diff': 3.5583000000005693e-05}, {'diff': 3.559700000000526e-05}, {'diff': 3.50979999999973e-05}, {'diff': 3.6069000000006624e-05}, {'diff': 3.5569000000006123e-05}, {'diff': 3.5582999999998755e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:05.008" endtime="20201030 15:53:05.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.027" level="INFO">${ACCURACY} = {'diff': [3.5583000000005693e-05, 3.559700000000526e-05, 3.50979999999973e-05, 3.6069000000006624e-05, 3.5569000000006123e-05, 3.5582999999998755e-05, 3.591600000000389e-05, 3.525000000000056e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 15:53:05.018" endtime="20201030 15:53:05.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.038" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.036" endtime="20201030 15:53:05.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.043" level="INFO">VALUE: [3.5583000000005693e-05, 3.559700000000526e-05, 3.50979999999973e-05, 3.6069000000006624e-05, 3.5569000000006123e-05, 3.5582999999998755e-05, 3.591600000000389e-05, 3.525000000000056e-05, 3.558399999999823e-05, 3.5902999999996854e-05, 3.5930999999995994e-05, 3.558399999999823e-05, 3.5916999999996424e-05, 3.541700000000286e-05, 3.5610999999997894e-05, 3.541700000000286e-05, 3.576400000000063e-05, 3.5596999999998324e-05, 3.543100000000243e-05, 3.50700000000051e-05, 3.542999999999602e-05, 3.6082999999999255e-05, 3.5596999999998324e-05, 3.609700000000576e-05, 3.576400000000063e-05, 3.5110999999997394e-05, 3.5582999999998755e-05, 3.504199999999902e-05, 3.508399999999773e-05, 3.5416999999995924e-05, 3.523600000000099e-05, 3.522300000000089e-05, 3.523600000000099e-05, 3.592999999999652e-05, 3.54580000000021e-05, 3.611100000000533e-05, 3.590199999999738e-05, 3.5582999999998755e-05, 3.559700000000526e-05, 3.541700000000286e-05, 3.5416999999995924e-05, 3.5777000000000725e-05, 3.575000000000106e-05, 3.529199999999927e-05, 3.556999999999866e-05, 3.57780000000002e-05, 3.5874999999997714e-05, 3.608399999999873e-05, 3.575000000000106e-05, 3.575000000000106e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.040" endtime="20201030 15:53:05.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.029" endtime="20201030 15:53:05.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.055" endtime="20201030 15:53:05.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.051" endtime="20201030 15:53:05.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.049" endtime="20201030 15:53:05.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.563" endtime="20201030 15:53:05.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.562" endtime="20201030 15:53:05.080"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.103" endtime="20201030 15:53:05.118"></status>
</kw>
<msg timestamp="20201030 15:53:05.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.099" endtime="20201030 15:53:05.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.122" endtime="20201030 15:53:05.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.128" endtime="20201030 15:53:05.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.092" endtime="20201030 15:53:05.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.086" endtime="20201030 15:53:05.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.152" endtime="20201030 15:53:05.482"></status>
</kw>
<msg timestamp="20201030 15:53:05.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039126083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039161347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.149" endtime="20201030 15:53:05.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039126083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039161347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.491" endtime="20201030 15:53:05.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.510" endtime="20201030 15:53:05.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.141" endtime="20201030 15:53:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.136" endtime="20201030 15:53:05.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.526" level="INFO">${RESULT} = [{'diff': 3.526400000000013e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.541600000000339e-05}, {'diff': 3.558400000000517e-05}, {'diff': 3.5916999999996424e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:05.518" endtime="20201030 15:53:05.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.538" level="INFO">${ACCURACY} = {'diff': [3.526400000000013e-05, 3.526400000000013e-05, 3.5582999999998755e-05, 3.541600000000339e-05, 3.558400000000517e-05, 3.5916999999996424e-05, 3.525000000000056e-05, 3.544400000000253e-05, 3.54...</msg>
<status status="PASS" starttime="20201030 15:53:05.529" endtime="20201030 15:53:05.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.548" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.546" endtime="20201030 15:53:05.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.554" level="INFO">VALUE: [3.526400000000013e-05, 3.526400000000013e-05, 3.5582999999998755e-05, 3.541600000000339e-05, 3.558400000000517e-05, 3.5916999999996424e-05, 3.525000000000056e-05, 3.544400000000253e-05, 3.54859999999943e-05, 3.611100000000533e-05, 3.5916999999996424e-05, 3.594399999999609e-05, 3.5583000000005693e-05, 3.5846999999998574e-05, 3.573599999999455e-05, 3.5832999999999005e-05, 3.6096999999998824e-05, 3.561100000000483e-05, 3.591700000000336e-05, 3.525000000000056e-05, 3.551400000000038e-05, 3.5082999999998254e-05, 3.5402999999996354e-05, 3.57780000000002e-05, 3.5374999999997214e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.543100000000243e-05, 3.5610999999997894e-05, 3.543100000000243e-05, 3.555599999999909e-05, 3.540300000000329e-05, 3.576400000000063e-05, 3.545900000000157e-05, 3.573600000000149e-05, 3.523600000000099e-05, 3.52779999999997e-05, 3.5610999999997894e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.593000000000346e-05, 3.5430999999995494e-05, 3.593100000000293e-05, 3.591700000000336e-05, 3.541599999999645e-05, 3.6082999999999255e-05, 3.526400000000013e-05, 3.541599999999645e-05, 3.543100000000243e-05, 3.544400000000253e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.551" endtime="20201030 15:53:05.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.540" endtime="20201030 15:53:05.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.566" endtime="20201030 15:53:05.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.562" endtime="20201030 15:53:05.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.559" endtime="20201030 15:53:05.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.082" endtime="20201030 15:53:05.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.081" endtime="20201030 15:53:05.591"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.613" endtime="20201030 15:53:05.629"></status>
</kw>
<msg timestamp="20201030 15:53:05.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.610" endtime="20201030 15:53:05.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.632" endtime="20201030 15:53:05.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.639" endtime="20201030 15:53:05.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.603" endtime="20201030 15:53:05.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.597" endtime="20201030 15:53:05.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.661" endtime="20201030 15:53:06.001"></status>
</kw>
<msg timestamp="20201030 15:53:06.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039036875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.658" endtime="20201030 15:53:06.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039036875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.010" endtime="20201030 15:53:06.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.029" endtime="20201030 15:53:06.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.651" endtime="20201030 15:53:06.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.646" endtime="20201030 15:53:06.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.046" level="INFO">${RESULT} = [{'diff': 3.509700000000476e-05}, {'diff': 3.5777000000000725e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.556999999999866e-05}, {'diff': 3.541599999999645e-05}, {'diff': 3.525000000000056e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:06.037" endtime="20201030 15:53:06.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.055" level="INFO">${ACCURACY} = {'diff': [3.509700000000476e-05, 3.5777000000000725e-05, 3.5582999999998755e-05, 3.556999999999866e-05, 3.541599999999645e-05, 3.525000000000056e-05, 3.523600000000099e-05, 3.55700000000056e-05, 3.576...</msg>
<status status="PASS" starttime="20201030 15:53:06.048" endtime="20201030 15:53:06.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.066" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.064" endtime="20201030 15:53:06.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.071" level="INFO">VALUE: [3.509700000000476e-05, 3.5777000000000725e-05, 3.5582999999998755e-05, 3.556999999999866e-05, 3.541599999999645e-05, 3.525000000000056e-05, 3.523600000000099e-05, 3.55700000000056e-05, 3.576399999999369e-05, 3.575000000000106e-05, 3.5068999999998685e-05, 3.5068999999998685e-05, 3.5402999999996354e-05, 3.541599999999645e-05, 3.542999999999602e-05, 3.576400000000063e-05, 3.5930999999995994e-05, 3.6138999999997534e-05, 3.506999999999816e-05, 3.6082999999999255e-05, 3.5582999999998755e-05, 3.523700000000046e-05, 3.6083000000006193e-05, 3.508400000000467e-05, 3.5624999999997464e-05, 3.576399999999369e-05, 3.5082999999998254e-05, 3.5430999999995494e-05, 3.5916999999996424e-05, 3.566700000000311e-05, 3.5860999999998144e-05, 3.593000000000346e-05, 3.5916999999996424e-05, 3.5596999999998324e-05, 3.543000000000296e-05, 3.501399999999988e-05, 3.5416999999995924e-05, 3.5416999999995924e-05, 3.594399999999609e-05, 3.575000000000106e-05, 3.541700000000286e-05, 3.6082999999999255e-05, 3.526400000000013e-05, 3.5583000000005693e-05, 3.531999999999841e-05, 3.524999999999362e-05, 3.5055000000006054e-05, 3.594400000000303e-05, 3.575000000000106e-05, 3.6082999999999255e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.068" endtime="20201030 15:53:06.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.057" endtime="20201030 15:53:06.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.084" endtime="20201030 15:53:06.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.080" endtime="20201030 15:53:06.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.077" endtime="20201030 15:53:06.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.593" endtime="20201030 15:53:06.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.592" endtime="20201030 15:53:06.109"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.135" endtime="20201030 15:53:06.153"></status>
</kw>
<msg timestamp="20201030 15:53:06.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.132" endtime="20201030 15:53:06.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.156" endtime="20201030 15:53:06.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.162" endtime="20201030 15:53:06.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.124" endtime="20201030 15:53:06.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.118" endtime="20201030 15:53:06.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.187" endtime="20201030 15:53:06.519"></status>
</kw>
<msg timestamp="20201030 15:53:06.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044107708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044150167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.183" endtime="20201030 15:53:06.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044107708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044150167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.529" endtime="20201030 15:53:06.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.547" endtime="20201030 15:53:06.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.176" endtime="20201030 15:53:06.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.171" endtime="20201030 15:53:06.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.564" level="INFO">${RESULT} = [{'diff': 4.2458999999994695e-05}, {'diff': 4.2625000000004465e-05}, {'diff': 4.261199999999743e-05}, {'diff': 4.2917000000003425e-05}, {'diff': 4.3110999999998456e-05}, {'diff': 4.2431000000002494e-0...</msg>
<status status="PASS" starttime="20201030 15:53:06.556" endtime="20201030 15:53:06.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.574" level="INFO">${ACCURACY} = {'diff': [4.2458999999994695e-05, 4.2625000000004465e-05, 4.261199999999743e-05, 4.2917000000003425e-05, 4.3110999999998456e-05, 4.2431000000002494e-05, 4.2459000000001634e-05, 4.2791000000000357e-05,...</msg>
<status status="PASS" starttime="20201030 15:53:06.566" endtime="20201030 15:53:06.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.584" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.582" endtime="20201030 15:53:06.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.590" level="INFO">VALUE: [4.2458999999994695e-05, 4.2625000000004465e-05, 4.261199999999743e-05, 4.2917000000003425e-05, 4.3110999999998456e-05, 4.2431000000002494e-05, 4.2459000000001634e-05, 4.2791000000000357e-05, 4.2431000000002494e-05, 4.2582999999998816e-05, 4.276399999999375e-05, 4.2610999999997956e-05, 4.2444999999995126e-05, 4.2290999999999856e-05, 4.277800000000026e-05, 4.2931000000002995e-05, 4.261200000000437e-05, 4.309799999999836e-05, 4.222199999999454e-05, 4.2931000000002995e-05, 4.2125000000003965e-05, 4.3068999999999746e-05, 4.209799999999736e-05, 4.277800000000026e-05, 4.292999999999658e-05, 4.2305000000006365e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.258399999999829e-05, 4.2930999999996056e-05, 4.2110999999997456e-05, 4.276400000000069e-05, 4.295799999999572e-05, 4.2944999999995626e-05, 4.209799999999736e-05, 4.227799999999976e-05, 4.2209000000001384e-05, 4.295799999999572e-05, 4.258399999999829e-05, 4.276400000000069e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.281999999999897e-05, 4.227799999999976e-05, 4.242999999999608e-05, 4.276400000000069e-05, 4.245800000000216e-05, 4.276400000000069e-05, 4.2973000000001704e-05, 4.227799999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.587" endtime="20201030 15:53:06.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.575" endtime="20201030 15:53:06.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.604" endtime="20201030 15:53:06.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.598" endtime="20201030 15:53:06.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.595" endtime="20201030 15:53:06.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.113" endtime="20201030 15:53:06.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.111" endtime="20201030 15:53:06.629"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.651" endtime="20201030 15:53:06.667"></status>
</kw>
<msg timestamp="20201030 15:53:06.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.648" endtime="20201030 15:53:06.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.671" endtime="20201030 15:53:06.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.677" endtime="20201030 15:53:06.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.641" endtime="20201030 15:53:06.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.635" endtime="20201030 15:53:06.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.700" endtime="20201030 15:53:07.041"></status>
</kw>
<msg timestamp="20201030 15:53:07.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039369014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.697" endtime="20201030 15:53:07.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039369014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.050" endtime="20201030 15:53:07.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.069" endtime="20201030 15:53:07.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.690" endtime="20201030 15:53:07.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.685" endtime="20201030 15:53:07.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.086" level="INFO">${RESULT} = [{'diff': 4.2610999999997956e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.2416999999995986e-05}, {'diff': 4.2445000000002064e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.240199999999694e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:07.077" endtime="20201030 15:53:07.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.097" level="INFO">${ACCURACY} = {'diff': [4.2610999999997956e-05, 4.279199999999983e-05, 4.2416999999995986e-05, 4.2445000000002064e-05, 4.277800000000026e-05, 4.240199999999694e-05, 4.2568999999999246e-05, 4.2403000000003355e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:53:07.088" endtime="20201030 15:53:07.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.107" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.105" endtime="20201030 15:53:07.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.113" level="INFO">VALUE: [4.2610999999997956e-05, 4.279199999999983e-05, 4.2416999999995986e-05, 4.2445000000002064e-05, 4.277800000000026e-05, 4.240199999999694e-05, 4.2568999999999246e-05, 4.2403000000003355e-05, 4.3083000000006255e-05, 4.279199999999983e-05, 4.244400000000259e-05, 4.2582999999998816e-05, 4.226400000000019e-05, 4.226300000000072e-05, 4.225000000000062e-05, 4.229200000000627e-05, 4.294400000000309e-05, 4.2444999999995126e-05, 4.2082999999998316e-05, 4.2610999999997956e-05, 4.20980000000043e-05, 4.2597000000005325e-05, 4.2625000000004465e-05, 4.2360999999997706e-05, 4.2139000000003535e-05, 4.2111000000004395e-05, 4.2110999999997456e-05, 4.3110999999998456e-05, 4.311200000000487e-05, 4.28059999999994e-05, 4.277800000000026e-05, 4.294399999999615e-05, 4.2068999999998746e-05, 4.243000000000302e-05, 4.2931000000002995e-05, 4.2611000000004895e-05, 4.2445000000002064e-05, 4.2277000000000287e-05, 4.2138999999996596e-05, 4.3111000000005395e-05, 4.2402999999996416e-05, 4.227799999999976e-05, 4.2277000000000287e-05, 4.245800000000216e-05, 4.227799999999976e-05, 4.2611000000004895e-05, 4.2431000000002494e-05, 4.293000000000352e-05, 4.242999999999608e-05, 4.274999999999418e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.110" endtime="20201030 15:53:07.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.098" endtime="20201030 15:53:07.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.125" endtime="20201030 15:53:07.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.121" endtime="20201030 15:53:07.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.118" endtime="20201030 15:53:07.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.631" endtime="20201030 15:53:07.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.630" endtime="20201030 15:53:07.150"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.173" endtime="20201030 15:53:07.190"></status>
</kw>
<msg timestamp="20201030 15:53:07.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.169" endtime="20201030 15:53:07.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.193" endtime="20201030 15:53:07.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.200" endtime="20201030 15:53:07.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.162" endtime="20201030 15:53:07.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.157" endtime="20201030 15:53:07.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.224" endtime="20201030 15:53:07.567"></status>
</kw>
<msg timestamp="20201030 15:53:07.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.221" endtime="20201030 15:53:07.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.577" endtime="20201030 15:53:07.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.595" endtime="20201030 15:53:07.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.213" endtime="20201030 15:53:07.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.208" endtime="20201030 15:53:07.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.614" level="INFO">${RESULT} = [{'diff': 4.2277000000000287e-05}, {'diff': 4.276300000000122e-05}, {'diff': 4.275000000000112e-05}, {'diff': 4.2846999999998636e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.279199999999983e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:07.605" endtime="20201030 15:53:07.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.625" level="INFO">${ACCURACY} = {'diff': [4.2277000000000287e-05, 4.276300000000122e-05, 4.275000000000112e-05, 4.2846999999998636e-05, 4.276400000000069e-05, 4.279199999999983e-05, 4.28059999999994e-05, 4.227799999999976e-05, 4.297...</msg>
<status status="PASS" starttime="20201030 15:53:07.616" endtime="20201030 15:53:07.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.636" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.634" endtime="20201030 15:53:07.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.642" level="INFO">VALUE: [4.2277000000000287e-05, 4.276300000000122e-05, 4.275000000000112e-05, 4.2846999999998636e-05, 4.276400000000069e-05, 4.279199999999983e-05, 4.28059999999994e-05, 4.227799999999976e-05, 4.297199999999529e-05, 4.226400000000019e-05, 4.3082999999999316e-05, 4.226400000000019e-05, 4.275000000000112e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.294399999999615e-05, 4.2445000000002064e-05, 4.295800000000266e-05, 4.2582999999998816e-05, 4.227799999999976e-05, 4.2902999999996916e-05, 4.2554999999999676e-05, 4.226299999999378e-05, 4.275000000000112e-05, 4.2597000000005325e-05, 4.226400000000019e-05, 4.2596999999998386e-05, 4.244400000000259e-05, 4.2931000000002995e-05, 4.227799999999976e-05, 4.2082999999998316e-05, 4.2125000000003965e-05, 4.291600000000395e-05, 4.2417000000002925e-05, 4.294400000000309e-05, 4.279199999999983e-05, 4.2444999999995126e-05, 4.2624999999997526e-05, 4.3138999999997596e-05, 4.2083000000005255e-05, 4.2360999999997706e-05, 4.2610999999997956e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.2083000000005255e-05, 4.2652999999996666e-05, 4.241599999999651e-05, 4.2402999999996416e-05, 4.2931000000002995e-05, 4.2459000000001634e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.638" endtime="20201030 15:53:07.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.627" endtime="20201030 15:53:07.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.654" endtime="20201030 15:53:07.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.650" endtime="20201030 15:53:07.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.647" endtime="20201030 15:53:07.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.152" endtime="20201030 15:53:07.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.151" endtime="20201030 15:53:07.679"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.702" endtime="20201030 15:53:07.718"></status>
</kw>
<msg timestamp="20201030 15:53:07.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.699" endtime="20201030 15:53:07.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.722" endtime="20201030 15:53:07.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.728" endtime="20201030 15:53:07.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.692" endtime="20201030 15:53:07.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.686" endtime="20201030 15:53:07.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.751" endtime="20201030 15:53:08.093"></status>
</kw>
<msg timestamp="20201030 15:53:08.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039935431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.748" endtime="20201030 15:53:08.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039892986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039935431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.103" endtime="20201030 15:53:08.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.121" endtime="20201030 15:53:08.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.741" endtime="20201030 15:53:08.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.736" endtime="20201030 15:53:08.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.139" level="INFO">${RESULT} = [{'diff': 4.2445000000002064e-05}, {'diff': 4.291599999999701e-05}, {'diff': 4.2431000000002494e-05}, {'diff': 4.227799999999976e-05}, {'diff': 4.243000000000302e-05}, {'diff': 4.2611000000004895e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:08.130" endtime="20201030 15:53:08.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.148" level="INFO">${ACCURACY} = {'diff': [4.2445000000002064e-05, 4.291599999999701e-05, 4.2431000000002494e-05, 4.227799999999976e-05, 4.243000000000302e-05, 4.2611000000004895e-05, 4.229199999999933e-05, 4.2596999999998386e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:53:08.141" endtime="20201030 15:53:08.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.159" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.157" endtime="20201030 15:53:08.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.165" level="INFO">VALUE: [4.2445000000002064e-05, 4.291599999999701e-05, 4.2431000000002494e-05, 4.227799999999976e-05, 4.243000000000302e-05, 4.2611000000004895e-05, 4.229199999999933e-05, 4.2596999999998386e-05, 4.229199999999933e-05, 4.2375000000004215e-05, 4.2611000000004895e-05, 4.274999999999418e-05, 4.2096999999997886e-05, 4.292999999999658e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.2596999999998386e-05, 4.295800000000266e-05, 4.2597000000005325e-05, 4.2931000000002995e-05, 4.2402999999996416e-05, 4.308399999999879e-05, 4.295800000000266e-05, 4.2082999999998316e-05, 4.226400000000019e-05, 4.243000000000302e-05, 4.2416999999995986e-05, 4.229199999999933e-05, 4.2277000000000287e-05, 4.2209000000001384e-05, 4.227799999999976e-05, 4.274999999999418e-05, 4.2945000000002564e-05, 4.294400000000309e-05, 4.277700000000079e-05, 4.207000000000516e-05, 4.2153000000003105e-05, 4.2930999999996056e-05, 4.279199999999983e-05, 4.2596999999998386e-05, 4.300000000000137e-05, 4.250000000000087e-05, 4.2638999999997096e-05, 4.301400000000094e-05, 4.2931000000002995e-05, 4.2945000000002564e-05, 4.2959000000002134e-05, 4.276400000000069e-05, 4.226400000000019e-05, 4.2431000000002494e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.161" endtime="20201030 15:53:08.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.150" endtime="20201030 15:53:08.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.177" endtime="20201030 15:53:08.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.173" endtime="20201030 15:53:08.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.170" endtime="20201030 15:53:08.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.681" endtime="20201030 15:53:08.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.680" endtime="20201030 15:53:08.202"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.225" endtime="20201030 15:53:08.248"></status>
</kw>
<msg timestamp="20201030 15:53:08.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.221" endtime="20201030 15:53:08.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.251" endtime="20201030 15:53:08.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.258" endtime="20201030 15:53:08.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.214" endtime="20201030 15:53:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.209" endtime="20201030 15:53:08.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.282" endtime="20201030 15:53:08.631"></status>
</kw>
<msg timestamp="20201030 15:53:08.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041140264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041183111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.279" endtime="20201030 15:53:08.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041140264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041183111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.640" endtime="20201030 15:53:08.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.659" endtime="20201030 15:53:08.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.271" endtime="20201030 15:53:08.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.266" endtime="20201030 15:53:08.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.676" level="INFO">${RESULT} = [{'diff': 4.2846999999998636e-05}, {'diff': 4.243000000000302e-05}, {'diff': 4.244399999999565e-05}, {'diff': 4.26660000000037e-05}, {'diff': 4.274999999999418e-05}, {'diff': 4.2445000000002064e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:08.667" endtime="20201030 15:53:08.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.686" level="INFO">${ACCURACY} = {'diff': [4.2846999999998636e-05, 4.243000000000302e-05, 4.244399999999565e-05, 4.26660000000037e-05, 4.274999999999418e-05, 4.2445000000002064e-05, 4.245799999999522e-05, 4.2445000000002064e-05, 4.22...</msg>
<status status="PASS" starttime="20201030 15:53:08.678" endtime="20201030 15:53:08.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.697" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.694" endtime="20201030 15:53:08.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.702" level="INFO">VALUE: [4.2846999999998636e-05, 4.243000000000302e-05, 4.244399999999565e-05, 4.26660000000037e-05, 4.274999999999418e-05, 4.2445000000002064e-05, 4.245799999999522e-05, 4.2445000000002064e-05, 4.226400000000019e-05, 4.2610999999997956e-05, 4.2791000000000357e-05, 4.275000000000112e-05, 4.231999999999847e-05, 4.3181000000003245e-05, 4.2624999999997526e-05, 4.2610999999997956e-05, 4.265199999999719e-05, 4.294400000000309e-05, 4.2444999999995126e-05, 4.277800000000026e-05, 4.293000000000352e-05, 4.227799999999976e-05, 4.25980000000048e-05, 4.2652999999996666e-05, 4.294399999999615e-05, 4.247200000000173e-05, 4.2582999999998816e-05, 4.2388999999996846e-05, 4.2332999999998566e-05, 4.226400000000019e-05, 4.295800000000266e-05, 4.283400000000548e-05, 4.2431000000002494e-05, 4.2597000000005325e-05, 4.226400000000019e-05, 4.2290999999999856e-05, 4.2959000000002134e-05, 4.3096999999998886e-05, 4.2277000000000287e-05, 4.244399999999565e-05, 4.2290999999999856e-05, 4.2610999999997956e-05, 4.279199999999983e-05, 4.2791000000000357e-05, 4.226400000000019e-05, 4.276300000000122e-05, 4.277700000000079e-05, 4.227799999999976e-05, 4.2096999999997886e-05, 4.2416999999995986e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.699" endtime="20201030 15:53:08.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.687" endtime="20201030 15:53:08.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.716" endtime="20201030 15:53:08.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.710" endtime="20201030 15:53:08.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.708" endtime="20201030 15:53:08.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.204" endtime="20201030 15:53:08.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.203" endtime="20201030 15:53:08.742"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.764" endtime="20201030 15:53:08.782"></status>
</kw>
<msg timestamp="20201030 15:53:08.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.761" endtime="20201030 15:53:08.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.785" endtime="20201030 15:53:08.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.791" endtime="20201030 15:53:08.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.754" endtime="20201030 15:53:08.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.748" endtime="20201030 15:53:08.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.814" endtime="20201030 15:53:09.183"></status>
</kw>
<msg timestamp="20201030 15:53:09.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039965139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.811" endtime="20201030 15:53:09.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039965139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.192" endtime="20201030 15:53:09.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.211" endtime="20201030 15:53:09.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.804" endtime="20201030 15:53:09.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.799" endtime="20201030 15:53:09.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.228" level="INFO">${RESULT} = [{'diff': 4.2597000000005325e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.3110999999998456e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.2582999999998816e-05}, {'diff': 4.2568999999999246e-...</msg>
<status status="PASS" starttime="20201030 15:53:09.219" endtime="20201030 15:53:09.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.239" level="INFO">${ACCURACY} = {'diff': [4.2597000000005325e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.2582999999998816e-05, 4.2568999999999246e-05, 4.275000000000112e-05, 4.2958999999995195e-05,...</msg>
<status status="PASS" starttime="20201030 15:53:09.230" endtime="20201030 15:53:09.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.250" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.248" endtime="20201030 15:53:09.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.256" level="INFO">VALUE: [4.2597000000005325e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.2582999999998816e-05, 4.2568999999999246e-05, 4.275000000000112e-05, 4.2958999999995195e-05, 4.2430999999995556e-05, 4.226300000000072e-05, 4.2930999999996056e-05, 4.277800000000026e-05, 4.2625000000004465e-05, 4.270799999999547e-05, 4.2597000000005325e-05, 4.2889000000004285e-05, 4.3111000000005395e-05, 4.277800000000026e-05, 4.2068999999998746e-05, 4.25980000000048e-05, 4.2389000000003785e-05, 4.2375000000004215e-05, 4.2931000000002995e-05, 4.2430999999995556e-05, 4.2277000000000287e-05, 4.293000000000352e-05, 4.3110999999998456e-05, 4.293000000000352e-05, 4.2583000000005755e-05, 4.2791000000000357e-05, 4.2916999999996486e-05, 4.276400000000069e-05, 4.227799999999976e-05, 4.242999999999608e-05, 4.3125000000004965e-05, 4.3138999999997596e-05, 4.279200000000677e-05, 4.2096999999997886e-05, 4.2596999999998386e-05, 4.244400000000259e-05, 4.3096999999998886e-05, 4.277800000000026e-05, 4.2596999999998386e-05, 4.277800000000026e-05, 4.220799999999497e-05, 4.223600000000105e-05, 4.2818999999999496e-05, 4.2583000000005755e-05, 4.2944999999995626e-05, 4.227799999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.253" endtime="20201030 15:53:09.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.241" endtime="20201030 15:53:09.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.268" endtime="20201030 15:53:09.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.264" endtime="20201030 15:53:09.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.261" endtime="20201030 15:53:09.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.744" endtime="20201030 15:53:09.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.742" endtime="20201030 15:53:09.294"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.318" endtime="20201030 15:53:09.334"></status>
</kw>
<msg timestamp="20201030 15:53:09.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.314" endtime="20201030 15:53:09.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.338" endtime="20201030 15:53:09.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.344" endtime="20201030 15:53:09.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.307" endtime="20201030 15:53:09.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.301" endtime="20201030 15:53:09.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.368" endtime="20201030 15:53:09.706"></status>
</kw>
<msg timestamp="20201030 15:53:09.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041304125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041346389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.364" endtime="20201030 15:53:09.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041304125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041346389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.715" endtime="20201030 15:53:09.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.734" endtime="20201030 15:53:09.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.357" endtime="20201030 15:53:09.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.353" endtime="20201030 15:53:09.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.751" level="INFO">${RESULT} = [{'diff': 4.226400000000019e-05}, {'diff': 4.277700000000079e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.292999999999658e-05}, {'diff': 4.279199999999983e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:09.742" endtime="20201030 15:53:09.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.763" level="INFO">${ACCURACY} = {'diff': [4.226400000000019e-05, 4.277700000000079e-05, 4.277800000000026e-05, 4.277800000000026e-05, 4.292999999999658e-05, 4.279199999999983e-05, 4.292999999999658e-05, 4.227799999999976e-05, 4.2250...</msg>
<status status="PASS" starttime="20201030 15:53:09.753" endtime="20201030 15:53:09.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.774" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.771" endtime="20201030 15:53:09.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.779" level="INFO">VALUE: [4.226400000000019e-05, 4.277700000000079e-05, 4.277800000000026e-05, 4.277800000000026e-05, 4.292999999999658e-05, 4.279199999999983e-05, 4.292999999999658e-05, 4.227799999999976e-05, 4.225000000000062e-05, 4.243000000000302e-05, 4.226400000000019e-05, 4.2096999999997886e-05, 4.226400000000019e-05, 4.272199999999504e-05, 4.291599999999701e-05, 4.226400000000019e-05, 4.297199999999529e-05, 4.248599999999436e-05, 4.2431000000002494e-05, 4.2458999999994695e-05, 4.281999999999897e-05, 4.2596999999998386e-05, 4.2445000000002064e-05, 4.276400000000069e-05, 4.256999999999872e-05, 4.311199999999793e-05, 4.2110999999997456e-05, 4.294399999999615e-05, 4.227799999999976e-05, 4.2110999999997456e-05, 4.288799999999787e-05, 4.277800000000026e-05, 4.276400000000069e-05, 4.2445000000002064e-05, 4.243000000000302e-05, 4.308399999999879e-05, 4.2611000000004895e-05, 4.2611000000004895e-05, 4.227799999999976e-05, 4.2138999999996596e-05, 4.250000000000087e-05, 4.3082999999999316e-05, 4.277800000000026e-05, 4.259799999999786e-05, 4.223600000000105e-05, 4.2860999999998206e-05, 4.276400000000069e-05, 4.3096999999998886e-05, 4.208399999999779e-05, 4.2930999999996056e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.776" endtime="20201030 15:53:09.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.764" endtime="20201030 15:53:09.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.791" endtime="20201030 15:53:09.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.787" endtime="20201030 15:53:09.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.785" endtime="20201030 15:53:09.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.296" endtime="20201030 15:53:09.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.295" endtime="20201030 15:53:09.817"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.839" endtime="20201030 15:53:09.856"></status>
</kw>
<msg timestamp="20201030 15:53:09.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.836" endtime="20201030 15:53:09.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.860" endtime="20201030 15:53:09.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.866" endtime="20201030 15:53:09.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.829" endtime="20201030 15:53:09.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.823" endtime="20201030 15:53:09.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.889" endtime="20201030 15:53:10.227"></status>
</kw>
<msg timestamp="20201030 15:53:10.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:09.886" endtime="20201030 15:53:10.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:10.237" endtime="20201030 15:53:10.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.255" endtime="20201030 15:53:10.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.879" endtime="20201030 15:53:10.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.874" endtime="20201030 15:53:10.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.273" level="INFO">${RESULT} = [{'diff': 4.930599999999896e-05}, {'diff': 4.9459000000001696e-05}, {'diff': 4.927700000000035e-05}, {'diff': 4.9457999999995284e-05}, {'diff': 4.979199999999989e-05}, {'diff': 4.997200000000229e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:10.264" endtime="20201030 15:53:10.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.282" level="INFO">${ACCURACY} = {'diff': [4.930599999999896e-05, 4.9459000000001696e-05, 4.927700000000035e-05, 4.9457999999995284e-05, 4.979199999999989e-05, 4.997200000000229e-05, 4.975000000000118e-05, 4.929099999999992e-05, 4.99...</msg>
<status status="PASS" starttime="20201030 15:53:10.275" endtime="20201030 15:53:10.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.293" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.291" endtime="20201030 15:53:10.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.299" level="INFO">VALUE: [4.930599999999896e-05, 4.9459000000001696e-05, 4.927700000000035e-05, 4.9457999999995284e-05, 4.979199999999989e-05, 4.997200000000229e-05, 4.975000000000118e-05, 4.929099999999992e-05, 4.9957999999995784e-05, 4.929099999999992e-05, 4.925000000000068e-05, 4.929199999999939e-05, 4.929199999999939e-05, 4.994499999999569e-05, 4.976400000000075e-05, 4.979199999999989e-05, 5.006999999999928e-05, 4.913899999999666e-05, 4.9445000000002126e-05, 4.952800000000007e-05, 4.9625000000004527e-05, 5.012499999999809e-05, 5.008299999999938e-05, 4.912499999999709e-05, 4.9459000000001696e-05, 4.944400000000265e-05, 4.9429999999996144e-05, 4.927700000000035e-05, 4.993099999999612e-05, 4.904200000000608e-05, 4.9431000000002556e-05, 4.927799999999982e-05, 4.9903000000003916e-05, 4.994499999999569e-05, 4.945899999999476e-05, 4.961099999999802e-05, 4.973600000000161e-05, 4.9139000000003596e-05, 4.9403000000003416e-05, 4.929100000000686e-05, 4.9625000000004527e-05, 4.9959000000002196e-05, 4.998599999999492e-05, 4.976400000000075e-05, 4.9459000000001696e-05, 4.9681000000002806e-05, 5.005500000000024e-05, 4.998600000000186e-05, 4.959700000000539e-05, 4.9971999999995353e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.296" endtime="20201030 15:53:10.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.284" endtime="20201030 15:53:10.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.312" endtime="20201030 15:53:10.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.307" endtime="20201030 15:53:10.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.305" endtime="20201030 15:53:10.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.819" endtime="20201030 15:53:10.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.817" endtime="20201030 15:53:10.337"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.361" endtime="20201030 15:53:10.381"></status>
</kw>
<msg timestamp="20201030 15:53:10.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.357" endtime="20201030 15:53:10.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.384" endtime="20201030 15:53:10.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.391" endtime="20201030 15:53:10.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.350" endtime="20201030 15:53:10.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.344" endtime="20201030 15:53:10.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.414" endtime="20201030 15:53:10.748"></status>
</kw>
<msg timestamp="20201030 15:53:10.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041963181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042053458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.411" endtime="20201030 15:53:10.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041963181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042053458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.758" endtime="20201030 15:53:10.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.776" endtime="20201030 15:53:10.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.404" endtime="20201030 15:53:10.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.399" endtime="20201030 15:53:10.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.794" level="INFO">${RESULT} = [{'diff': 9.027699999999972e-05}, {'diff': 9.002699999999947e-05}, {'diff': 8.992999999999501e-05}, {'diff': 8.993000000000195e-05}, {'diff': 8.988900000000272e-05}, {'diff': 9.016699999999517e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:10.785" endtime="20201030 15:53:10.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.803" level="INFO">${ACCURACY} = {'diff': [9.027699999999972e-05, 9.002699999999947e-05, 8.992999999999501e-05, 8.993000000000195e-05, 8.988900000000272e-05, 9.016699999999517e-05, 9.03050000000058e-05, 8.963900000000247e-05, 8.99720...</msg>
<status status="PASS" starttime="20201030 15:53:10.796" endtime="20201030 15:53:10.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.814" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.812" endtime="20201030 15:53:10.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.820" level="INFO">VALUE: [9.027699999999972e-05, 9.002699999999947e-05, 8.992999999999501e-05, 8.993000000000195e-05, 8.988900000000272e-05, 9.016699999999517e-05, 9.03050000000058e-05, 8.963900000000247e-05, 8.997200000000066e-05, 9.027799999999919e-05, 8.983399999999697e-05, 9.002799999999894e-05, 8.940300000000179e-05, 8.961100000000333e-05, 8.994400000000152e-05, 9.004099999999904e-05, 9.018100000000168e-05, 9.031899999999843e-05, 9.02920000000057e-05, 8.969500000000075e-05, 9.016600000000263e-05, 8.940300000000179e-05, 9.030599999999833e-05, 9.048600000000073e-05, 9.034699999999757e-05, 8.945800000000059e-05, 8.933300000000394e-05, 8.94999999999993e-05, 9.020800000000134e-05, 8.972200000000041e-05, 8.94999999999993e-05, 9.015300000000254e-05, 8.991700000000186e-05, 8.94869999999992e-05, 8.965300000000204e-05, 8.926400000000556e-05, 8.94450000000005e-05, 9.029199999999876e-05, 8.974999999999955e-05, 8.968100000000118e-05, 8.997200000000066e-05, 9.013799999999655e-05, 9.0332999999998e-05, 8.947200000000016e-05, 9.001399999999937e-05, 8.947200000000016e-05, 9.005500000000555e-05, 9.013900000000297e-05, 8.945800000000059e-05, 8.974999999999955e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.816" endtime="20201030 15:53:10.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.805" endtime="20201030 15:53:10.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.834" endtime="20201030 15:53:10.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.828" endtime="20201030 15:53:10.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.825" endtime="20201030 15:53:10.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.340" endtime="20201030 15:53:10.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.339" endtime="20201030 15:53:10.863"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.894" endtime="20201030 15:53:10.916"></status>
</kw>
<msg timestamp="20201030 15:53:10.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.887" endtime="20201030 15:53:10.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.919" endtime="20201030 15:53:10.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.925" endtime="20201030 15:53:10.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.875" endtime="20201030 15:53:10.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.870" endtime="20201030 15:53:10.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.948" endtime="20201030 15:53:11.293"></status>
</kw>
<msg timestamp="20201030 15:53:11.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053242681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053333222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.945" endtime="20201030 15:53:11.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053242681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053333222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.303" endtime="20201030 15:53:11.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.321" endtime="20201030 15:53:11.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.938" endtime="20201030 15:53:11.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.933" endtime="20201030 15:53:11.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.338" level="INFO">${RESULT} = [{'diff': 9.054099999999954e-05}, {'diff': 9.133300000000594e-05}, {'diff': 9.122200000000191e-05}, {'diff': 9.137500000000465e-05}, {'diff': 9.084700000000501e-05}, {'diff': 9.11800000000032e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:11.329" endtime="20201030 15:53:11.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.349" level="INFO">${ACCURACY} = {'diff': [9.054099999999954e-05, 9.133300000000594e-05, 9.122200000000191e-05, 9.137500000000465e-05, 9.084700000000501e-05, 9.11800000000032e-05, 9.038900000000322e-05, 9.055599999999858e-05, 9.07230...</msg>
<status status="PASS" starttime="20201030 15:53:11.341" endtime="20201030 15:53:11.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.361" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.358" endtime="20201030 15:53:11.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.366" level="INFO">VALUE: [9.054099999999954e-05, 9.133300000000594e-05, 9.122200000000191e-05, 9.137500000000465e-05, 9.084700000000501e-05, 9.11800000000032e-05, 9.038900000000322e-05, 9.055599999999858e-05, 9.072300000000089e-05, 9.122200000000191e-05, 9.084699999999807e-05, 9.098600000000123e-05, 9.063899999999653e-05, 9.123699999999402e-05, 9.130499999999986e-05, 9.095800000000209e-05, 9.088899999999678e-05, 9.11800000000032e-05, 9.113899999999703e-05, 9.05000000000003e-05, 9.048600000000073e-05, 9.093100000000243e-05, 9.047200000000116e-05, 9.120900000000182e-05, 9.113900000000397e-05, 9.036099999999714e-05, 9.043099999999499e-05, 9.127800000000019e-05, 9.113899999999703e-05, 9.105599999999908e-05, 9.111100000000483e-05, 9.047199999999422e-05, 9.048600000000073e-05, 9.109700000000526e-05, 9.05000000000003e-05, 9.040299999999585e-05, 9.129100000000029e-05, 9.067999999999576e-05, 9.08199999999984e-05, 9.088899999999678e-05, 9.091700000000286e-05, 9.076400000000012e-05, 9.06800000000027e-05, 9.125000000000105e-05, 9.113900000000397e-05, 9.069400000000227e-05, 9.076400000000012e-05, 9.073600000000098e-05, 9.084799999999754e-05, 9.116699999999617e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.363" endtime="20201030 15:53:11.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.351" endtime="20201030 15:53:11.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.384" endtime="20201030 15:53:11.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.380" endtime="20201030 15:53:11.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.377" endtime="20201030 15:53:11.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.865" endtime="20201030 15:53:11.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.864" endtime="20201030 15:53:11.409"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.432" endtime="20201030 15:53:11.450"></status>
</kw>
<msg timestamp="20201030 15:53:11.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.429" endtime="20201030 15:53:11.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.454" endtime="20201030 15:53:11.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.460" endtime="20201030 15:53:11.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.421" endtime="20201030 15:53:11.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.416" endtime="20201030 15:53:11.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.483" endtime="20201030 15:53:11.813"></status>
</kw>
<msg timestamp="20201030 15:53:11.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039485375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039576972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.480" endtime="20201030 15:53:11.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039485375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039576972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.822" endtime="20201030 15:53:11.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.841" endtime="20201030 15:53:11.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.472" endtime="20201030 15:53:11.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.468" endtime="20201030 15:53:11.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.857" level="INFO">${RESULT} = [{'diff': 9.159699999999882e-05}, {'diff': 9.144399999999608e-05}, {'diff': 9.198600000000223e-05}, {'diff': 9.165300000000404e-05}, {'diff': 9.143100000000293e-05}, {'diff': 9.227800000000119e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:11.849" endtime="20201030 15:53:11.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.869" level="INFO">${ACCURACY} = {'diff': [9.159699999999882e-05, 9.144399999999608e-05, 9.198600000000223e-05, 9.165300000000404e-05, 9.143100000000293e-05, 9.227800000000119e-05, 9.162499999999796e-05, 9.230600000000033e-05, 9.1792...</msg>
<status status="PASS" starttime="20201030 15:53:11.860" endtime="20201030 15:53:11.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.880" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.878" endtime="20201030 15:53:11.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.886" level="INFO">VALUE: [9.159699999999882e-05, 9.144399999999608e-05, 9.198600000000223e-05, 9.165300000000404e-05, 9.143100000000293e-05, 9.227800000000119e-05, 9.162499999999796e-05, 9.230600000000033e-05, 9.179200000000026e-05, 9.215200000000506e-05, 9.181899999999993e-05, 9.2333e-05, 9.144399999999608e-05, 9.227800000000119e-05, 9.1945000000003e-05, 9.166699999999667e-05, 9.230499999999392e-05, 9.176399999999418e-05, 9.205500000000061e-05, 9.181899999999993e-05, 9.215199999999812e-05, 9.215300000000454e-05, 9.208299999999975e-05, 9.168100000000318e-05, 9.209799999999879e-05, 9.229100000000129e-05, 9.16800000000037e-05, 9.195799999999615e-05, 9.173600000000198e-05, 9.202800000000094e-05, 9.230500000000086e-05, 9.138900000000422e-05, 9.204200000000051e-05, 9.151400000000087e-05, 9.229200000000076e-05, 9.158400000000566e-05, 9.151400000000087e-05, 9.134699999999857e-05, 9.177800000000069e-05, 9.154200000000001e-05, 9.162499999999796e-05, 9.155599999999958e-05, 9.183399999999897e-05, 9.148600000000173e-05, 9.158299999999925e-05, 9.18199999999994e-05, 9.191599999999744e-05, 9.154100000000054e-05, 9.192999999999701e-05, 9.237499999999871e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.883" endtime="20201030 15:53:11.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.871" endtime="20201030 15:53:11.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.898" endtime="20201030 15:53:11.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.894" endtime="20201030 15:53:11.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.892" endtime="20201030 15:53:11.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.411" endtime="20201030 15:53:11.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.410" endtime="20201030 15:53:11.925"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.948" endtime="20201030 15:53:11.967"></status>
</kw>
<msg timestamp="20201030 15:53:11.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.945" endtime="20201030 15:53:11.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.970" endtime="20201030 15:53:11.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.976" endtime="20201030 15:53:11.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.937" endtime="20201030 15:53:11.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.932" endtime="20201030 15:53:11.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.999" endtime="20201030 15:53:12.333"></status>
</kw>
<msg timestamp="20201030 15:53:12.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041678, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041770528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:11.996" endtime="20201030 15:53:12.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041678, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041770528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:12.343" endtime="20201030 15:53:12.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.361" endtime="20201030 15:53:12.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.989" endtime="20201030 15:53:12.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.984" endtime="20201030 15:53:12.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.379" level="INFO">${RESULT} = [{'diff': 9.252800000000144e-05}, {'diff': 9.274999999999561e-05}, {'diff': 9.251399999999493e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.317999999999826e-05}, {'diff': 9.322199999999697e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:12.370" endtime="20201030 15:53:12.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.388" level="INFO">${ACCURACY} = {'diff': [9.252800000000144e-05, 9.274999999999561e-05, 9.251399999999493e-05, 9.311099999999989e-05, 9.317999999999826e-05, 9.322199999999697e-05, 9.341700000000536e-05, 9.307000000000065e-05, 9.2471...</msg>
<status status="PASS" starttime="20201030 15:53:12.381" endtime="20201030 15:53:12.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.400" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.397" endtime="20201030 15:53:12.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.405" level="INFO">VALUE: [9.252800000000144e-05, 9.274999999999561e-05, 9.251399999999493e-05, 9.311099999999989e-05, 9.317999999999826e-05, 9.322199999999697e-05, 9.341700000000536e-05, 9.307000000000065e-05, 9.247199999999622e-05, 9.255499999999417e-05, 9.291699999999792e-05, 9.263899999999853e-05, 9.257000000000015e-05, 9.341700000000536e-05, 9.31659999999987e-05, 9.326400000000262e-05, 9.251299999999546e-05, 9.262499999999896e-05, 9.255600000000058e-05, 9.256900000000068e-05, 9.298600000000323e-05, 9.316700000000511e-05, 9.312499999999946e-05, 9.276299999999571e-05, 9.30000000000028e-05, 9.273699999999552e-05, 9.343100000000493e-05, 9.327800000000219e-05, 9.329200000000176e-05, 9.255500000000111e-05, 9.279200000000126e-05, 9.270800000000384e-05, 9.331899999999449e-05, 9.25000000000023e-05, 9.338899999999928e-05, 9.326400000000262e-05, 9.312499999999946e-05, 9.288899999999878e-05, 9.316600000000563e-05, 9.345899999999713e-05, 9.30409999999951e-05, 9.322199999999697e-05, 9.345900000000407e-05, 9.281900000000093e-05, 9.330500000000186e-05, 9.319499999999731e-05, 9.345799999999765e-05, 9.341599999999894e-05, 9.331900000000143e-05, 9.266699999999767e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.402" endtime="20201030 15:53:12.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.390" endtime="20201030 15:53:12.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.418" endtime="20201030 15:53:12.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.413" endtime="20201030 15:53:12.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.411" endtime="20201030 15:53:12.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.927" endtime="20201030 15:53:12.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.926" endtime="20201030 15:53:12.443"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.465" endtime="20201030 15:53:12.486"></status>
</kw>
<msg timestamp="20201030 15:53:12.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.462" endtime="20201030 15:53:12.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.490" endtime="20201030 15:53:12.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.496" endtime="20201030 15:53:12.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.455" endtime="20201030 15:53:12.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.449" endtime="20201030 15:53:12.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.519" endtime="20201030 15:53:12.851"></status>
</kw>
<msg timestamp="20201030 15:53:12.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04095275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04104675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:12.515" endtime="20201030 15:53:12.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04095275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04104675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:12.861" endtime="20201030 15:53:12.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.879" endtime="20201030 15:53:12.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.508" endtime="20201030 15:53:12.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.504" endtime="20201030 15:53:12.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.896" level="INFO">${RESULT} = [{'diff': 9.399999999999686e-05}, {'diff': 9.41529999999996e-05}, {'diff': 9.373600000000398e-05}, {'diff': 9.376400000000312e-05}, {'diff': 9.351400000000287e-05}, {'diff': 9.394399999999858e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:12.887" endtime="20201030 15:53:12.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.905" level="INFO">${ACCURACY} = {'diff': [9.399999999999686e-05, 9.41529999999996e-05, 9.373600000000398e-05, 9.376400000000312e-05, 9.351400000000287e-05, 9.394399999999858e-05, 9.43059999999954e-05, 9.366699999999867e-05, 9.366599...</msg>
<status status="PASS" starttime="20201030 15:53:12.898" endtime="20201030 15:53:12.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.916" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.914" endtime="20201030 15:53:12.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.921" level="INFO">VALUE: [9.399999999999686e-05, 9.41529999999996e-05, 9.373600000000398e-05, 9.376400000000312e-05, 9.351400000000287e-05, 9.394399999999858e-05, 9.43059999999954e-05, 9.366699999999867e-05, 9.36659999999992e-05, 9.409700000000132e-05, 9.38330000000015e-05, 9.341699999999842e-05, 9.445899999999813e-05, 9.365199999999962e-05, 9.357000000000115e-05, 9.375000000000355e-05, 9.369400000000527e-05, 9.337499999999971e-05, 9.358399999999378e-05, 9.341599999999894e-05, 9.405599999999514e-05, 9.423699999999702e-05, 9.372200000000441e-05, 9.376400000000312e-05, 9.426399999999668e-05, 9.418099999999874e-05, 9.429199999999582e-05, 9.368099999999824e-05, 9.362499999999996e-05, 9.420800000000534e-05, 9.384700000000107e-05, 9.399999999999686e-05, 9.348600000000373e-05, 9.42079999999984e-05, 9.354199999999507e-05, 9.359699999999388e-05, 9.43880000000008e-05, 9.401400000000337e-05, 9.423700000000396e-05, 9.405600000000208e-05, 9.362499999999996e-05, 9.422199999999797e-05, 9.412500000000046e-05, 9.437500000000071e-05, 9.393099999999849e-05, 9.338900000000622e-05, 9.379199999999532e-05, 9.433299999999506e-05, 9.411100000000089e-05, 9.38059999999949e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.918" endtime="20201030 15:53:12.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.907" endtime="20201030 15:53:12.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.939" endtime="20201030 15:53:12.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.930" endtime="20201030 15:53:12.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.927" endtime="20201030 15:53:12.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.445" endtime="20201030 15:53:12.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.444" endtime="20201030 15:53:12.964"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.987" endtime="20201030 15:53:13.006"></status>
</kw>
<msg timestamp="20201030 15:53:13.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.984" endtime="20201030 15:53:13.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.009" endtime="20201030 15:53:13.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.015" endtime="20201030 15:53:13.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.976" endtime="20201030 15:53:13.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.971" endtime="20201030 15:53:13.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.038" endtime="20201030 15:53:13.393"></status>
</kw>
<msg timestamp="20201030 15:53:13.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03939575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039490264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:13.035" endtime="20201030 15:53:13.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03939575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039490264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:13.402" endtime="20201030 15:53:13.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.421" endtime="20201030 15:53:13.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.028" endtime="20201030 15:53:13.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.023" endtime="20201030 15:53:13.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.439" level="INFO">${RESULT} = [{'diff': 9.451399999999693e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.44870000000042e-05}, {'diff': 9.46530000000001e-05}, {'diff': 9.455599999999564e-05}, {'diff': 9.491600000000044e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:13.430" endtime="20201030 15:53:13.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.450" level="INFO">${ACCURACY} = {'diff': [9.451399999999693e-05, 9.486100000000164e-05, 9.44870000000042e-05, 9.46530000000001e-05, 9.455599999999564e-05, 9.491600000000044e-05, 9.508299999999581e-05, 9.498600000000523e-05, 9.448600...</msg>
<status status="PASS" starttime="20201030 15:53:13.441" endtime="20201030 15:53:13.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.461" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.459" endtime="20201030 15:53:13.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.466" level="INFO">VALUE: [9.451399999999693e-05, 9.486100000000164e-05, 9.44870000000042e-05, 9.46530000000001e-05, 9.455599999999564e-05, 9.491600000000044e-05, 9.508299999999581e-05, 9.498600000000523e-05, 9.448600000000473e-05, 9.491699999999992e-05, 9.458300000000225e-05, 9.469399999999933e-05, 9.483400000000197e-05, 9.505499999999667e-05, 9.494399999999958e-05, 9.508400000000222e-05, 9.451399999999693e-05, 9.522300000000539e-05, 9.497199999999872e-05, 9.484700000000207e-05, 9.481900000000293e-05, 9.454100000000354e-05, 9.480500000000336e-05, 9.49729999999982e-05, 9.462499999999402e-05, 9.449999999999736e-05, 9.518099999999974e-05, 9.511100000000189e-05, 9.479200000000326e-05, 9.469399999999933e-05, 9.442999999999951e-05, 9.468100000000618e-05, 9.527699999999778e-05, 9.46530000000001e-05, 9.444399999999908e-05, 9.488900000000078e-05, 9.474999999999761e-05, 9.530600000000333e-05, 9.505500000000361e-05, 9.533400000000247e-05, 9.515200000000112e-05, 9.518099999999974e-05, 9.447199999999822e-05, 9.516700000000017e-05, 9.447300000000464e-05, 9.497199999999872e-05, 9.505499999999667e-05, 9.48059999999959e-05, 9.445799999999865e-05, 9.469399999999933e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.463" endtime="20201030 15:53:13.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.452" endtime="20201030 15:53:13.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.478" endtime="20201030 15:53:13.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.474" endtime="20201030 15:53:13.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.472" endtime="20201030 15:53:13.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.966" endtime="20201030 15:53:13.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.965" endtime="20201030 15:53:13.504"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.526" endtime="20201030 15:53:13.546"></status>
</kw>
<msg timestamp="20201030 15:53:13.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.523" endtime="20201030 15:53:13.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.550" endtime="20201030 15:53:13.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.556" endtime="20201030 15:53:13.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.516" endtime="20201030 15:53:13.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.510" endtime="20201030 15:53:13.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.579" endtime="20201030 15:53:13.912"></status>
</kw>
<msg timestamp="20201030 15:53:13.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0394815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039577, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 15:53:13.575" endtime="20201030 15:53:13.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0394815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039577, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 15:53:13.921" endtime="20201030 15:53:13.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.940" endtime="20201030 15:53:13.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.568" endtime="20201030 15:53:13.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.564" endtime="20201030 15:53:13.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.956" level="INFO">${RESULT} = [{'diff': 9.549999999999836e-05}, {'diff': 9.587500000000221e-05}, {'diff': 9.619500000000031e-05}, {'diff': 9.565200000000162e-05}, {'diff': 9.59859999999993e-05}, {'diff': 9.554199999999707e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:13.948" endtime="20201030 15:53:13.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.967" level="INFO">${ACCURACY} = {'diff': [9.549999999999836e-05, 9.587500000000221e-05, 9.619500000000031e-05, 9.565200000000162e-05, 9.59859999999993e-05, 9.554199999999707e-05, 9.624999999999911e-05, 9.626299999999921e-05, 9.61250...</msg>
<status status="PASS" starttime="20201030 15:53:13.959" endtime="20201030 15:53:13.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.978" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.976" endtime="20201030 15:53:13.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.984" level="INFO">VALUE: [9.549999999999836e-05, 9.587500000000221e-05, 9.619500000000031e-05, 9.565200000000162e-05, 9.59859999999993e-05, 9.554199999999707e-05, 9.624999999999911e-05, 9.626299999999921e-05, 9.612500000000246e-05, 9.572199999999947e-05, 9.537500000000171e-05, 9.616700000000117e-05, 9.538900000000128e-05, 9.54859999999988e-05, 9.615199999999519e-05, 9.607000000000365e-05, 9.563900000000153e-05, 9.572199999999947e-05, 9.534700000000257e-05, 9.62080000000004e-05, 9.61660000000017e-05, 9.622199999999997e-05, 9.581999999999646e-05, 9.606900000000418e-05, 9.537500000000171e-05, 9.540300000000085e-05, 9.636100000000314e-05, 9.604200000000451e-05, 9.55409999999976e-05, 9.534700000000257e-05, 9.627799999999825e-05, 9.549999999999836e-05, 9.543099999999999e-05, 9.631899999999749e-05, 9.601299999999896e-05, 9.629200000000476e-05, 9.605600000000408e-05, 9.548600000000573e-05, 9.58479999999956e-05, 9.601399999999843e-05, 9.547199999999922e-05, 9.572199999999947e-05, 9.563900000000153e-05, 9.629199999999782e-05, 9.59859999999993e-05, 9.611099999999595e-05, 9.580499999999742e-05, 9.544499999999956e-05, 9.604200000000451e-05, 9.605599999999714e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.981" endtime="20201030 15:53:13.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.969" endtime="20201030 15:53:13.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.996" endtime="20201030 15:53:14.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.992" endtime="20201030 15:53:14.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.989" endtime="20201030 15:53:14.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.506" endtime="20201030 15:53:14.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.504" endtime="20201030 15:53:14.021"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.043" endtime="20201030 15:53:14.062"></status>
</kw>
<msg timestamp="20201030 15:53:14.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.040" endtime="20201030 15:53:14.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.065" endtime="20201030 15:53:14.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.072" endtime="20201030 15:53:14.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.033" endtime="20201030 15:53:14.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.027" endtime="20201030 15:53:14.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.095" endtime="20201030 15:53:14.428"></status>
</kw>
<msg timestamp="20201030 15:53:14.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039434153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.091" endtime="20201030 15:53:14.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039434153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.438" endtime="20201030 15:53:14.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.457" endtime="20201030 15:53:14.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.084" endtime="20201030 15:53:14.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.080" endtime="20201030 15:53:14.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.475" level="INFO">${RESULT} = [{'diff': 9.669500000000081e-05}, {'diff': 9.69730000000002e-05}, {'diff': 9.706900000000518e-05}, {'diff': 9.73059999999984e-05}, {'diff': 9.719500000000131e-05}, {'diff': 9.648699999999927e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:14.466" endtime="20201030 15:53:14.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.484" level="INFO">${ACCURACY} = {'diff': [9.669500000000081e-05, 9.69730000000002e-05, 9.706900000000518e-05, 9.73059999999984e-05, 9.719500000000131e-05, 9.648699999999927e-05, 9.709699999999738e-05, 9.659700000000382e-05, 9.659799...</msg>
<status status="PASS" starttime="20201030 15:53:14.477" endtime="20201030 15:53:14.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.495" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.493" endtime="20201030 15:53:14.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.500" level="INFO">VALUE: [9.669500000000081e-05, 9.69730000000002e-05, 9.706900000000518e-05, 9.73059999999984e-05, 9.719500000000131e-05, 9.648699999999927e-05, 9.709699999999738e-05, 9.659700000000382e-05, 9.659799999999635e-05, 9.69860000000003e-05, 9.69159999999955e-05, 9.730499999999892e-05, 9.693100000000149e-05, 9.7027999999999e-05, 9.659800000000329e-05, 9.695800000000115e-05, 9.691699999999498e-05, 9.724999999999318e-05, 9.701400000000637e-05, 9.713799999999662e-05, 9.647200000000022e-05, 9.644400000000108e-05, 9.686100000000364e-05, 9.640300000000185e-05, 9.67080000000009e-05, 9.668100000000124e-05, 9.722300000000045e-05, 9.673600000000004e-05, 9.709799999999685e-05, 9.731999999999796e-05, 9.693099999999455e-05, 9.687499999999627e-05, 9.643100000000099e-05, 9.692999999999508e-05, 9.64859999999998e-05, 9.669499999999387e-05, 9.641699999999448e-05, 9.670900000000038e-05, 9.722200000000097e-05, 9.661100000000339e-05, 9.715299999999566e-05, 9.701399999999943e-05, 9.726399999999968e-05, 9.716599999999576e-05, 9.65279999999985e-05, 9.683399999999703e-05, 9.725000000000011e-05, 9.65409999999986e-05, 9.699999999999986e-05, 9.702699999999953e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.497" endtime="20201030 15:53:14.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.486" endtime="20201030 15:53:14.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.513" endtime="20201030 15:53:14.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.509" endtime="20201030 15:53:14.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.506" endtime="20201030 15:53:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.023" endtime="20201030 15:53:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.022" endtime="20201030 15:53:14.538"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.560" endtime="20201030 15:53:14.581"></status>
</kw>
<msg timestamp="20201030 15:53:14.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.557" endtime="20201030 15:53:14.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.584" endtime="20201030 15:53:14.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.590" endtime="20201030 15:53:14.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.550" endtime="20201030 15:53:14.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.544" endtime="20201030 15:53:14.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.613" endtime="20201030 15:53:14.945"></status>
</kw>
<msg timestamp="20201030 15:53:14.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040903986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041001417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.610" endtime="20201030 15:53:14.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040903986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041001417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.954" endtime="20201030 15:53:14.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.973" endtime="20201030 15:53:14.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.603" endtime="20201030 15:53:14.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.598" endtime="20201030 15:53:14.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.990" level="INFO">${RESULT} = [{'diff': 9.743099999999505e-05}, {'diff': 9.769400000000233e-05}, {'diff': 9.816699999999623e-05}, {'diff': 9.801400000000043e-05}, {'diff': 9.775000000000061e-05}, {'diff': 9.826400000000068e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:14.981" endtime="20201030 15:53:14.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.999" level="INFO">${ACCURACY} = {'diff': [9.743099999999505e-05, 9.769400000000233e-05, 9.816699999999623e-05, 9.801400000000043e-05, 9.775000000000061e-05, 9.826400000000068e-05, 9.83609999999982e-05, 9.84730000000017e-05, 9.770900...</msg>
<status status="PASS" starttime="20201030 15:53:14.992" endtime="20201030 15:53:15.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.010" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.008" endtime="20201030 15:53:15.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.016" level="INFO">VALUE: [9.743099999999505e-05, 9.769400000000233e-05, 9.816699999999623e-05, 9.801400000000043e-05, 9.775000000000061e-05, 9.826400000000068e-05, 9.83609999999982e-05, 9.84730000000017e-05, 9.770900000000138e-05, 9.808299999999881e-05, 9.766699999999573e-05, 9.79159999999965e-05, 9.787499999999727e-05, 9.775000000000061e-05, 9.93609999999992e-05, 9.812500000000446e-05, 9.800000000000086e-05, 9.761100000000439e-05, 9.74860000000008e-05, 9.775000000000061e-05, 9.75279999999995e-05, 9.813899999999709e-05, 9.823700000000102e-05, 9.830499999999992e-05, 9.768100000000224e-05, 9.797200000000172e-05, 9.767999999999583e-05, 9.81809999999958e-05, 9.80410000000001e-05, 9.827700000000078e-05, 9.73609999999972e-05, 9.777799999999975e-05, 9.744400000000208e-05, 9.762499999999702e-05, 9.836100000000514e-05, 9.79860000000013e-05, 9.811100000000489e-05, 9.833299999999906e-05, 9.840199999999744e-05, 9.743000000000251e-05, 9.781899999999899e-05, 9.806999999999871e-05, 9.763899999999659e-05, 9.801400000000043e-05, 9.829199999999982e-05, 9.815299999999666e-05, 9.791699999999598e-05, 9.763799999999712e-05, 9.74860000000008e-05, 9.762499999999702e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.013" endtime="20201030 15:53:15.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.001" endtime="20201030 15:53:15.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.029" endtime="20201030 15:53:15.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.024" endtime="20201030 15:53:15.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.021" endtime="20201030 15:53:15.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.540" endtime="20201030 15:53:15.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.539" endtime="20201030 15:53:15.054"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.077" endtime="20201030 15:53:15.096"></status>
</kw>
<msg timestamp="20201030 15:53:15.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.074" endtime="20201030 15:53:15.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.099" endtime="20201030 15:53:15.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.105" endtime="20201030 15:53:15.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.067" endtime="20201030 15:53:15.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.061" endtime="20201030 15:53:15.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.128" endtime="20201030 15:53:15.459"></status>
</kw>
<msg timestamp="20201030 15:53:15.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039518681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.125" endtime="20201030 15:53:15.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039419764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039518681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.469" endtime="20201030 15:53:15.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.488" endtime="20201030 15:53:15.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.118" endtime="20201030 15:53:15.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.113" endtime="20201030 15:53:15.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.505" level="INFO">${RESULT} = [{'diff': 9.891699999999698e-05}, {'diff': 9.899999999999493e-05}, {'diff': 9.912499999999852e-05}, {'diff': 9.900000000000186e-05}, {'diff': 9.862499999999802e-05}, {'diff': 9.859799999999835e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:15.496" endtime="20201030 15:53:15.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.516" level="INFO">${ACCURACY} = {'diff': [9.891699999999698e-05, 9.899999999999493e-05, 9.912499999999852e-05, 9.900000000000186e-05, 9.862499999999802e-05, 9.859799999999835e-05, 9.908299999999981e-05, 9.866699999999673e-05, 9.8929...</msg>
<status status="PASS" starttime="20201030 15:53:15.507" endtime="20201030 15:53:15.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.527" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.525" endtime="20201030 15:53:15.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.532" level="INFO">VALUE: [9.891699999999698e-05, 9.899999999999493e-05, 9.912499999999852e-05, 9.900000000000186e-05, 9.862499999999802e-05, 9.859799999999835e-05, 9.908299999999981e-05, 9.866699999999673e-05, 9.892999999999708e-05, 9.93609999999992e-05, 9.936100000000614e-05, 0.00010004200000000157, 9.868100000000324e-05, 9.927800000000125e-05, 9.911199999999842e-05, 9.887499999999827e-05, 9.965299999999816e-05, 9.901400000000143e-05, 9.982000000000046e-05, 9.922199999999604e-05, 9.869499999999587e-05, 9.943099999999705e-05, 0.00010029200000000182, 9.897199999999579e-05, 0.0001001939999999979, 9.866700000000367e-05, 9.911199999999842e-05, 9.908299999999981e-05, 9.855599999999964e-05, 9.979199999999439e-05, 9.876400000000118e-05, 9.851400000000093e-05, 9.883299999999956e-05, 9.955600000000064e-05, 9.872200000000247e-05, 9.90410000000011e-05, 9.900000000000186e-05, 9.8513999999994e-05, 9.85280000000005e-05, 9.895799999999622e-05, 9.879200000000032e-05, 9.869400000000333e-05, 9.876400000000118e-05, 9.845900000000213e-05, 9.930500000000092e-05, 9.905600000000014e-05, 9.927800000000125e-05, 9.880500000000042e-05, 9.973600000000304e-05, 9.974999999999568e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.529" endtime="20201030 15:53:15.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.518" endtime="20201030 15:53:15.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.545" endtime="20201030 15:53:15.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.540" endtime="20201030 15:53:15.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.538" endtime="20201030 15:53:15.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.056" endtime="20201030 15:53:15.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.055" endtime="20201030 15:53:15.569"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.592" endtime="20201030 15:53:15.611"></status>
</kw>
<msg timestamp="20201030 15:53:15.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.589" endtime="20201030 15:53:15.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.614" endtime="20201030 15:53:15.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.620" endtime="20201030 15:53:15.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.582" endtime="20201030 15:53:15.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.576" endtime="20201030 15:53:15.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.643" endtime="20201030 15:53:15.976"></status>
</kw>
<msg timestamp="20201030 15:53:15.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039276472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039376111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.640" endtime="20201030 15:53:15.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039276472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039376111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.986" endtime="20201030 15:53:16.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.004" endtime="20201030 15:53:16.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.633" endtime="20201030 15:53:16.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.628" endtime="20201030 15:53:16.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.021" level="INFO">${RESULT} = [{'diff': 9.963899999999859e-05}, {'diff': 0.0001006530000000061}, {'diff': 9.974999999999568e-05}, {'diff': 0.00010137500000000077}, {'diff': 0.00010129200000000282}, {'diff': 0.00010030599999999446}...</msg>
<status status="PASS" starttime="20201030 15:53:16.012" endtime="20201030 15:53:16.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.032" level="INFO">${ACCURACY} = {'diff': [9.963899999999859e-05, 0.0001006530000000061, 9.974999999999568e-05, 0.00010137500000000077, 0.00010129200000000282, 0.00010030599999999446, 0.00010140299999999991, 0.0001008060000000019, 9....</msg>
<status status="PASS" starttime="20201030 15:53:16.023" endtime="20201030 15:53:16.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.042" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.040" endtime="20201030 15:53:16.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.048" level="INFO">VALUE: [9.963899999999859e-05, 0.0001006530000000061, 9.974999999999568e-05, 0.00010137500000000077, 0.00010129200000000282, 0.00010030599999999446, 0.00010140299999999991, 0.0001008060000000019, 9.987499999999927e-05, 0.00010055500000000217, 0.00010011099999999995, 0.00010112500000000052, 0.00010059700000000088, 0.00010009799999999985, 0.00010040199999999944, 0.00010109800000000085, 0.00010099999999999693, 0.00010041600000000594, 0.00010091699999999898, 0.00010084700000000113, 0.00010108300000000181, 9.97359999999961e-05, 9.951400000000193e-05, 0.0001013480000000011, 0.00010044399999999815, 0.0001000139999999955, 0.00010090199999999994, 0.00010055499999999523, 0.00010150000000000436, 0.00010029200000000182, 9.976400000000218e-05, 0.00010125000000000411, 0.00010054099999999566, 9.98060000000009e-05, 0.00010034700000000063, 0.00010079100000000285, 0.000100028000000002, 0.00010012499999999952, 0.00010044399999999815, 9.940299999999791e-05, 9.943099999999705e-05, 0.00010040299999999891, 0.00010097200000000472, 0.0001013610000000012, 0.00010119400000000583, 9.970900000000338e-05, 0.00010048599999999686, 0.00010048599999999686, 9.96939999999974e-05, 0.00010126399999999675]</msg>
<status status="PASS" starttime="20201030 15:53:16.045" endtime="20201030 15:53:16.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.033" endtime="20201030 15:53:16.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.060" endtime="20201030 15:53:16.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.056" endtime="20201030 15:53:16.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.053" endtime="20201030 15:53:16.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.572" endtime="20201030 15:53:16.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.570" endtime="20201030 15:53:16.085"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.108" endtime="20201030 15:53:16.127"></status>
</kw>
<msg timestamp="20201030 15:53:16.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.104" endtime="20201030 15:53:16.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.130" endtime="20201030 15:53:16.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.136" endtime="20201030 15:53:16.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.097" endtime="20201030 15:53:16.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.091" endtime="20201030 15:53:16.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.159" endtime="20201030 15:53:16.491"></status>
</kw>
<msg timestamp="20201030 15:53:16.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039594986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03969675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:16.156" endtime="20201030 15:53:16.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039594986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03969675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:16.500" endtime="20201030 15:53:16.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.519" endtime="20201030 15:53:16.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.149" endtime="20201030 15:53:16.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.144" endtime="20201030 15:53:16.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.537" level="INFO">${RESULT} = [{'diff': 0.00010176400000000418}, {'diff': 0.0001018060000000029}, {'diff': 0.00010057000000000121}, {'diff': 0.00010061100000000045}, {'diff': 0.00010218000000000033}, {'diff': 0.0001019859999999983...</msg>
<status status="PASS" starttime="20201030 15:53:16.528" endtime="20201030 15:53:16.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.546" level="INFO">${ACCURACY} = {'diff': [0.00010176400000000418, 0.0001018060000000029, 0.00010057000000000121, 0.00010061100000000045, 0.00010218000000000033, 0.00010198599999999836, 0.00010243100000000005, 0.00010194499999999912,...</msg>
<status status="PASS" starttime="20201030 15:53:16.539" endtime="20201030 15:53:16.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.556" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.554" endtime="20201030 15:53:16.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.562" level="INFO">VALUE: [0.00010176400000000418, 0.0001018060000000029, 0.00010057000000000121, 0.00010061100000000045, 0.00010218000000000033, 0.00010198599999999836, 0.00010243100000000005, 0.00010194499999999912, 0.00010167999999999983, 0.00010227800000000425, 0.00010215300000000066, 0.00010130500000000292, 0.00010197199999999879, 0.00010198599999999836, 0.00010224999999999818, 0.00010176399999999725, 0.0001014860000000048, 0.00010229099999999741, 0.00010188900000000084, 0.00010107000000000171, 0.0001020139999999975, 0.0001014860000000048, 0.00010243000000000058, 0.00010156900000000274, 0.00010083299999999462, 0.0001019860000000053, 0.0001023610000000022, 0.00010083300000000156, 0.000102416000000001, 0.00010162500000000102, 0.00010222199999999904, 0.00010079200000000232, 0.00010208300000000281, 0.00010044400000000508, 0.00010062500000000002, 0.00010243000000000058, 0.00010137500000000077, 0.00010208300000000281, 0.0001015410000000036, 0.00010137500000000077, 0.00010205500000000367, 0.00010118000000000626, 0.00010079199999999539, 0.00010159700000000188, 0.00010098599999999736, 0.00010162500000000102, 0.00010176400000000418, 0.00010181999999999553, 0.00010138900000000034, 0.00010211100000000195]</msg>
<status status="PASS" starttime="20201030 15:53:16.559" endtime="20201030 15:53:16.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.547" endtime="20201030 15:53:16.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.580" endtime="20201030 15:53:16.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.575" endtime="20201030 15:53:16.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.573" endtime="20201030 15:53:16.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.087" endtime="20201030 15:53:16.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.086" endtime="20201030 15:53:16.604"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.627" endtime="20201030 15:53:16.647"></status>
</kw>
<msg timestamp="20201030 15:53:16.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.624" endtime="20201030 15:53:16.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.651" endtime="20201030 15:53:16.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.657" endtime="20201030 15:53:16.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.617" endtime="20201030 15:53:16.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.611" endtime="20201030 15:53:16.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.680" endtime="20201030 15:53:17.024"></status>
</kw>
<msg timestamp="20201030 15:53:17.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0408675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040970653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:16.677" endtime="20201030 15:53:17.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0408675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040970653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:17.033" endtime="20201030 15:53:17.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.051" endtime="20201030 15:53:17.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.670" endtime="20201030 15:53:17.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.665" endtime="20201030 15:53:17.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.068" level="INFO">${RESULT} = [{'diff': 0.00010315300000000166}, {'diff': 0.00010209700000000238}, {'diff': 0.00010340300000000191}, {'diff': 0.00010279199999999739}, {'diff': 0.00010305500000000467}, {'diff': 0.000103347000000003...</msg>
<status status="PASS" starttime="20201030 15:53:17.059" endtime="20201030 15:53:17.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.077" level="INFO">${ACCURACY} = {'diff': [0.00010315300000000166, 0.00010209700000000238, 0.00010340300000000191, 0.00010279199999999739, 0.00010305500000000467, 0.00010334700000000363, 0.00010161099999999451, 0.00010308399999999635...</msg>
<status status="PASS" starttime="20201030 15:53:17.070" endtime="20201030 15:53:17.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.088" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.085" endtime="20201030 15:53:17.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.093" level="INFO">VALUE: [0.00010315300000000166, 0.00010209700000000238, 0.00010340300000000191, 0.00010279199999999739, 0.00010305500000000467, 0.00010334700000000363, 0.00010161099999999451, 0.00010308399999999635, 0.00010237500000000177, 0.0001026940000000004, 0.00010276399999999825, 0.00010251300000000546, 0.00010165200000000069, 0.00010262499999999508, 0.00010269499999999987, 0.0001031940000000009, 0.00010304200000000457, 0.00010329199999999789, 0.00010224999999999818, 0.0001027359999999991, 0.00010258299999999637, 0.00010254199999999714, 0.00010254099999999766, 0.00010343000000000158, 0.00010326399999999875, 0.00010275000000000561, 0.00010187500000000127, 0.00010333400000000353, 0.00010175000000000461, 0.00010254200000000407, 0.0001028610000000027, 0.0001033610000000032, 0.00010298599999999936, 0.00010345900000000019, 0.00010311100000000295, 0.00010308299999999687, 0.00010145899999999819, 0.0001033480000000031, 0.00010332000000000396, 0.00010269399999999346, 0.00010341699999999454, 0.00010268000000000083, 0.0001028339999999961, 0.00010272199999999954, 0.00010288900000000184, 0.00010263900000000159, 0.00010340300000000191, 0.0001023610000000022, 0.00010298599999999936, 0.00010293100000000055]</msg>
<status status="PASS" starttime="20201030 15:53:17.090" endtime="20201030 15:53:17.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.079" endtime="20201030 15:53:17.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.107" endtime="20201030 15:53:17.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.101" endtime="20201030 15:53:17.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.099" endtime="20201030 15:53:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.606" endtime="20201030 15:53:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.605" endtime="20201030 15:53:17.132"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.154" endtime="20201030 15:53:17.175"></status>
</kw>
<msg timestamp="20201030 15:53:17.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.151" endtime="20201030 15:53:17.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.178" endtime="20201030 15:53:17.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.184" endtime="20201030 15:53:17.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.144" endtime="20201030 15:53:17.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.138" endtime="20201030 15:53:17.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.207" endtime="20201030 15:53:17.549"></status>
</kw>
<msg timestamp="20201030 15:53:17.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594028, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:17.204" endtime="20201030 15:53:17.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594028, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:17.558" endtime="20201030 15:53:17.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.577" endtime="20201030 15:53:17.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.197" endtime="20201030 15:53:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.192" endtime="20201030 15:53:17.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.594" level="INFO">${RESULT} = [{'diff': 0.000104028000000006}, {'diff': 0.00010366700000000173}, {'diff': 0.0001037360000000001}, {'diff': 0.00010433299999999812}, {'diff': 0.00010362499999999608}, {'diff': 0.00010405600000000514}...</msg>
<status status="PASS" starttime="20201030 15:53:17.585" endtime="20201030 15:53:17.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.604" level="INFO">${ACCURACY} = {'diff': [0.000104028000000006, 0.00010366700000000173, 0.0001037360000000001, 0.00010433299999999812, 0.00010362499999999608, 0.00010405600000000514, 0.00010425000000000018, 0.00010344500000000062, 0...</msg>
<status status="PASS" starttime="20201030 15:53:17.596" endtime="20201030 15:53:17.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.615" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.613" endtime="20201030 15:53:17.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.620" level="INFO">VALUE: [0.000104028000000006, 0.00010366700000000173, 0.0001037360000000001, 0.00010433299999999812, 0.00010362499999999608, 0.00010405600000000514, 0.00010425000000000018, 0.00010344500000000062, 0.00010387499999999633, 0.00010406999999999778, 0.0001042219999999941, 0.00010365300000000216, 0.0001042360000000006, 0.00010381999999999753, 0.00010356900000000474, 0.00010379199999999839, 0.00010420799999999453, 0.00010425000000000018, 0.00010388900000000284, 0.00010365200000000269, 0.00010382000000000446, 0.00010349999999999943, 0.00010402799999999907, 0.00010366700000000173, 0.00010430599999999846, 0.0001039160000000025, 0.00010408300000000481, 0.00010369500000000087, 0.00010395799999999428, 0.00010426399999999975, 0.0001038610000000037, 0.00010402699999999959, 0.00010394499999999418, 0.0001043610000000042, 0.00010407000000000471, 0.00010358299999999737, 0.00010355499999999823, 0.0001041810000000018, 0.00010413899999999615, 0.00010382000000000446, 0.00010415200000000319, 0.000103416000000002, 0.00010369500000000087, 0.00010374999999999968, 0.00010391700000000198, 0.00010359699999999694, 0.00010433299999999812, 0.00010381899999999805, 0.000103513999999999, 0.00010402799999999907]</msg>
<status status="PASS" starttime="20201030 15:53:17.617" endtime="20201030 15:53:17.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.606" endtime="20201030 15:53:17.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.633" endtime="20201030 15:53:17.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.628" endtime="20201030 15:53:17.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.626" endtime="20201030 15:53:17.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.134" endtime="20201030 15:53:17.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.133" endtime="20201030 15:53:17.657"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.680" endtime="20201030 15:53:17.699"></status>
</kw>
<msg timestamp="20201030 15:53:17.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.676" endtime="20201030 15:53:17.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.702" endtime="20201030 15:53:17.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.709" endtime="20201030 15:53:17.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.669" endtime="20201030 15:53:17.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.664" endtime="20201030 15:53:17.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.732" endtime="20201030 15:53:18.065"></status>
</kw>
<msg timestamp="20201030 15:53:18.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039116556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03922175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:17.728" endtime="20201030 15:53:18.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039116556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03922175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:18.074" endtime="20201030 15:53:18.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.092" endtime="20201030 15:53:18.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.721" endtime="20201030 15:53:18.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.717" endtime="20201030 15:53:18.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.109" level="INFO">${RESULT} = [{'diff': 0.0001051940000000029}, {'diff': 0.00010470799999999503}, {'diff': 0.00010445900000000119}, {'diff': 0.00010465300000000316}, {'diff': 0.00010480499999999948}, {'diff': 0.0001049169999999960...</msg>
<status status="PASS" starttime="20201030 15:53:18.101" endtime="20201030 15:53:18.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.124" level="INFO">${ACCURACY} = {'diff': [0.0001051940000000029, 0.00010470799999999503, 0.00010445900000000119, 0.00010465300000000316, 0.00010480499999999948, 0.00010491699999999604, 0.00010484699999999819, 0.00010490299999999647,...</msg>
<status status="PASS" starttime="20201030 15:53:18.111" endtime="20201030 15:53:18.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.135" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.133" endtime="20201030 15:53:18.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.140" level="INFO">VALUE: [0.0001051940000000029, 0.00010470799999999503, 0.00010445900000000119, 0.00010465300000000316, 0.00010480499999999948, 0.00010491699999999604, 0.00010484699999999819, 0.00010490299999999647, 0.00010458299999999837, 0.00010502700000000059, 0.00010448600000000086, 0.00010481999999999853, 0.00010548600000000186, 0.00010477700000000034, 0.00010527800000000032, 0.00010531899999999955, 0.00010525000000000118, 0.00010497200000000179, 0.00010472300000000101, 0.00010547200000000229, 0.00010534699999999869, 0.00010452799999999957, 0.00010513900000000409, 0.00010508299999999887, 0.00010493000000000308, 0.00010492999999999614, 0.000105514000000001, 0.00010520800000000247, 0.00010497200000000179, 0.0001051810000000028, 0.00010511099999999801, 0.00010529199999999989, 0.00010463799999999718, 0.0001045559999999987, 0.00010466700000000273, 0.00010463899999999665, 0.00010516599999999682, 0.00010533299999999912, 0.00010525000000000118, 0.00010542999999999664, 0.0001052219999999951, 0.0001048339999999981, 0.00010540299999999697, 0.0001050689999999993, 0.00010456999999999828, 0.0001050689999999993, 0.00010461100000000445, 0.00010541700000000348, 0.00010495799999999528, 0.00010454200000000607]</msg>
<status status="PASS" starttime="20201030 15:53:18.137" endtime="20201030 15:53:18.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.126" endtime="20201030 15:53:18.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.152" endtime="20201030 15:53:18.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.148" endtime="20201030 15:53:18.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.146" endtime="20201030 15:53:18.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.660" endtime="20201030 15:53:18.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.658" endtime="20201030 15:53:18.177"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.200" endtime="20201030 15:53:18.219"></status>
</kw>
<msg timestamp="20201030 15:53:18.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.196" endtime="20201030 15:53:18.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.222" endtime="20201030 15:53:18.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.228" endtime="20201030 15:53:18.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.189" endtime="20201030 15:53:18.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.184" endtime="20201030 15:53:18.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.251" endtime="20201030 15:53:18.585"></status>
</kw>
<msg timestamp="20201030 15:53:18.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039340917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039446486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.248" endtime="20201030 15:53:18.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039340917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039446486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.594" endtime="20201030 15:53:18.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.612" endtime="20201030 15:53:18.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.241" endtime="20201030 15:53:18.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.236" endtime="20201030 15:53:18.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.629" level="INFO">${RESULT} = [{'diff': 0.0001055689999999998}, {'diff': 0.00010547199999999535}, {'diff': 0.0001056810000000033}, {'diff': 0.00010617999999999739}, {'diff': 0.00010606999999999978}, {'diff': 0.00010591599999999757...</msg>
<status status="PASS" starttime="20201030 15:53:18.621" endtime="20201030 15:53:18.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.638" level="INFO">${ACCURACY} = {'diff': [0.0001055689999999998, 0.00010547199999999535, 0.0001056810000000033, 0.00010617999999999739, 0.00010606999999999978, 0.00010591599999999757, 0.00010626300000000227, 0.0001055559999999997, 0...</msg>
<status status="PASS" starttime="20201030 15:53:18.631" endtime="20201030 15:53:18.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.649" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.647" endtime="20201030 15:53:18.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.654" level="INFO">VALUE: [0.0001055689999999998, 0.00010547199999999535, 0.0001056810000000033, 0.00010617999999999739, 0.00010606999999999978, 0.00010591599999999757, 0.00010626300000000227, 0.0001055559999999997, 0.00010643000000000458, 0.00010562500000000502, 0.00010570800000000297, 0.0001057219999999956, 0.0001060560000000002, 0.00010620799999999653, 0.00010540299999999697, 0.00010580500000000048, 0.0001058889999999979, 0.0001060140000000015, 0.00010548600000000186, 0.0001056810000000033, 0.00010645800000000372, 0.00010565299999999722, 0.00010558299999999937, 0.0001063339999999996, 0.0001055689999999998, 0.00010594500000000312, 0.00010579200000000039, 0.00010558299999999937, 0.00010562500000000502, 0.00010606999999999978, 0.00010605500000000073, 0.00010583299999999962, 0.00010647200000000329, 0.00010600000000000193, 0.00010542999999999664, 0.00010570800000000297, 0.00010556999999999928, 0.00010643099999999711, 0.00010641700000000448, 0.00010615300000000466, 0.00010551399999999406, 0.00010602799999999413, 0.00010534799999999817, 0.00010583299999999962, 0.0001055559999999997, 0.00010577800000000082, 0.0001053610000000052, 0.00010579100000000091, 0.00010540300000000391, 0.00010548600000000186]</msg>
<status status="PASS" starttime="20201030 15:53:18.651" endtime="20201030 15:53:18.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.640" endtime="20201030 15:53:18.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.666" endtime="20201030 15:53:18.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.662" endtime="20201030 15:53:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.660" endtime="20201030 15:53:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.179" endtime="20201030 15:53:18.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.178" endtime="20201030 15:53:18.691"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.714" endtime="20201030 15:53:18.735"></status>
</kw>
<msg timestamp="20201030 15:53:18.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.710" endtime="20201030 15:53:18.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.738" endtime="20201030 15:53:18.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.744" endtime="20201030 15:53:18.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.703" endtime="20201030 15:53:18.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.698" endtime="20201030 15:53:18.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.767" endtime="20201030 15:53:19.101"></status>
</kw>
<msg timestamp="20201030 15:53:19.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040703694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.764" endtime="20201030 15:53:19.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040703694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.113" endtime="20201030 15:53:19.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.136" endtime="20201030 15:53:19.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.757" endtime="20201030 15:53:19.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.752" endtime="20201030 15:53:19.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.153" level="INFO">${RESULT} = [{'diff': 0.00010679200000000139}, {'diff': 0.0001065690000000008}, {'diff': 0.00010650000000000243}, {'diff': 0.00010652800000000157}, {'diff': 0.00010690299999999847}, {'diff': 0.0001067089999999965...</msg>
<status status="PASS" starttime="20201030 15:53:19.144" endtime="20201030 15:53:19.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.162" level="INFO">${ACCURACY} = {'diff': [0.00010679200000000139, 0.0001065690000000008, 0.00010650000000000243, 0.00010652800000000157, 0.00010690299999999847, 0.0001067089999999965, 0.00010731900000000155, 0.00010663899999999865, ...</msg>
<status status="PASS" starttime="20201030 15:53:19.155" endtime="20201030 15:53:19.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.173" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.170" endtime="20201030 15:53:19.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.178" level="INFO">VALUE: [0.00010679200000000139, 0.0001065690000000008, 0.00010650000000000243, 0.00010652800000000157, 0.00010690299999999847, 0.0001067089999999965, 0.00010731900000000155, 0.00010663899999999865, 0.00010661099999999951, 0.00010648600000000286, 0.00010715299999999872, 0.00010692999999999814, 0.00010675000000000268, 0.00010659699999999994, 0.00010754200000000214, 0.00010652700000000209, 0.00010688900000000584, 0.00010719499999999743, 0.00010677700000000234, 0.00010665299999999822, 0.00010670799999999703, 0.00010702800000000207, 0.00010683300000000062, 0.00010691700000000498, 0.000106416000000005, 0.00010659699999999994, 0.00010647199999999635, 0.00010669499999999693, 0.00010684700000000019, 0.0001065690000000008, 0.00010651399999999506, 0.0001067360000000031, 0.00010697299999999632, 0.00010676400000000225, 0.00010658399999999985, 0.00010658399999999985, 0.00010681900000000105, 0.00010640300000000491, 0.00010727800000000232, 0.0001073340000000006, 0.0001068889999999989, 0.0001065560000000007, 0.00010727800000000232, 0.00010693099999999761, 0.00010661099999999951, 0.00010698700000000283, 0.00010659699999999994, 0.00010690200000000594, 0.00010676399999999531, 0.0001070140000000025]</msg>
<status status="PASS" starttime="20201030 15:53:19.175" endtime="20201030 15:53:19.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.164" endtime="20201030 15:53:19.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.192" endtime="20201030 15:53:19.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.186" endtime="20201030 15:53:19.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.184" endtime="20201030 15:53:19.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.693" endtime="20201030 15:53:19.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.692" endtime="20201030 15:53:19.217"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.239" endtime="20201030 15:53:19.260"></status>
</kw>
<msg timestamp="20201030 15:53:19.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.236" endtime="20201030 15:53:19.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.263" endtime="20201030 15:53:19.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.270" endtime="20201030 15:53:19.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.229" endtime="20201030 15:53:19.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.223" endtime="20201030 15:53:19.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.293" endtime="20201030 15:53:19.635"></status>
</kw>
<msg timestamp="20201030 15:53:19.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039577028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039684833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.289" endtime="20201030 15:53:19.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039577028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039684833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.644" endtime="20201030 15:53:19.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.662" endtime="20201030 15:53:19.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.282" endtime="20201030 15:53:19.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.278" endtime="20201030 15:53:19.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.679" level="INFO">${RESULT} = [{'diff': 0.00010780500000000248}, {'diff': 0.00010829200000000289}, {'diff': 0.00010798599999999742}, {'diff': 0.00010762500000000008}, {'diff': 0.00010795799999999828}, {'diff': 0.000107512999999996...</msg>
<status status="PASS" starttime="20201030 15:53:19.671" endtime="20201030 15:53:19.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.690" level="INFO">${ACCURACY} = {'diff': [0.00010780500000000248, 0.00010829200000000289, 0.00010798599999999742, 0.00010762500000000008, 0.00010795799999999828, 0.00010751299999999658, 0.00010790300000000641, 0.0001082219999999981,...</msg>
<status status="PASS" starttime="20201030 15:53:19.681" endtime="20201030 15:53:19.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.700" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.698" endtime="20201030 15:53:19.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.706" level="INFO">VALUE: [0.00010780500000000248, 0.00010829200000000289, 0.00010798599999999742, 0.00010762500000000008, 0.00010795799999999828, 0.00010751299999999658, 0.00010790300000000641, 0.0001082219999999981, 0.00010817999999999939, 0.00010768099999999836, 0.00010737499999999983, 0.00010783299999999468, 0.0001080140000000035, 0.00010745900000000419, 0.00010775000000000368, 0.00010824999999999724, 0.00010786100000000076, 0.00010831900000000255, 0.00010757000000000128, 0.00010752799999999563, 0.00010797200000000479, 0.00010811100000000101, 0.00010824999999999724, 0.00010831900000000255, 0.00010748599999999692, 0.00010805599999999527, 0.00010788800000000043, 0.00010745800000000472, 0.00010813900000000015, 0.00010774999999999674, 0.00010795799999999828, 0.00010768099999999836, 0.00010812500000000058, 0.0001075549999999953, 0.00010822299999999757, 0.00010805500000000273, 0.00010775000000000368, 0.00010743099999999811, 0.00010800000000000393, 0.00010812500000000058, 0.00010781900000000205, 0.00010817999999999939, 0.00010816699999999929, 0.00010829200000000289, 0.0001080560000000022, 0.00010755500000000223, 0.00010817999999999939, 0.00010826400000000375, 0.00010806899999999536, 0.00010823599999999767]</msg>
<status status="PASS" starttime="20201030 15:53:19.703" endtime="20201030 15:53:19.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.691" endtime="20201030 15:53:19.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.718" endtime="20201030 15:53:19.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.714" endtime="20201030 15:53:19.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.711" endtime="20201030 15:53:19.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.219" endtime="20201030 15:53:19.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.218" endtime="20201030 15:53:19.743"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.765" endtime="20201030 15:53:19.786"></status>
</kw>
<msg timestamp="20201030 15:53:19.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.762" endtime="20201030 15:53:19.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.790" endtime="20201030 15:53:19.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.796" endtime="20201030 15:53:19.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.755" endtime="20201030 15:53:19.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.749" endtime="20201030 15:53:19.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.819" endtime="20201030 15:53:20.162"></status>
</kw>
<msg timestamp="20201030 15:53:20.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039371736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039480139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.815" endtime="20201030 15:53:20.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039371736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039480139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.171" endtime="20201030 15:53:20.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.189" endtime="20201030 15:53:20.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.808" endtime="20201030 15:53:20.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.804" endtime="20201030 15:53:20.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.206" level="INFO">${RESULT} = [{'diff': 0.00010840299999999997}, {'diff': 0.00010840299999999997}, {'diff': 0.00010941700000000054}, {'diff': 0.00010893099999999961}, {'diff': 0.00010854099999999672}, {'diff': 0.000109263999999997...</msg>
<status status="PASS" starttime="20201030 15:53:20.197" endtime="20201030 15:53:20.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.217" level="INFO">${ACCURACY} = {'diff': [0.00010840299999999997, 0.00010840299999999997, 0.00010941700000000054, 0.00010893099999999961, 0.00010854099999999672, 0.00010926399999999781, 0.0001092219999999991, 0.00010897299999999832,...</msg>
<status status="PASS" starttime="20201030 15:53:20.208" endtime="20201030 15:53:20.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.228" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.225" endtime="20201030 15:53:20.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.233" level="INFO">VALUE: [0.00010840299999999997, 0.00010840299999999997, 0.00010941700000000054, 0.00010893099999999961, 0.00010854099999999672, 0.00010926399999999781, 0.0001092219999999991, 0.00010897299999999832, 0.00010863900000000065, 0.00010865300000000022, 0.00010931899999999661, 0.00010919399999999996, 0.00010873599999999817, 0.00010847199999999835, 0.00010913900000000115, 0.00010850000000000443, 0.00010898599999999842, 0.00010877799999999688, 0.00010840299999999997, 0.00010862500000000108, 0.00010894499999999918, 0.00010911100000000201, 0.00010863900000000065, 0.00010931999999999609, 0.00010908300000000287, 0.00010909800000000192, 0.00010856999999999534, 0.00010936200000000174, 0.00010883300000000262, 0.00010913900000000115, 0.00010931900000000355, 0.00010861100000000151, 0.00010911100000000201, 0.00010879200000000339, 0.00010849999999999749, 0.00010875000000000468, 0.00010925000000000518, 0.000108514000000004, 0.00010898599999999842, 0.00010837500000000083, 0.00010876399999999731, 0.00010913900000000115, 0.00010868099999999936, 0.00010913900000000115, 0.0001084020000000005, 0.00010891600000000057, 0.00010875000000000468, 0.00010926399999999781, 0.00010945799999999978, 0.00010933300000000312]</msg>
<status status="PASS" starttime="20201030 15:53:20.230" endtime="20201030 15:53:20.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.219" endtime="20201030 15:53:20.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.245" endtime="20201030 15:53:20.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.241" endtime="20201030 15:53:20.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.239" endtime="20201030 15:53:20.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.745" endtime="20201030 15:53:20.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.744" endtime="20201030 15:53:20.270"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.293" endtime="20201030 15:53:20.312"></status>
</kw>
<msg timestamp="20201030 15:53:20.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.289" endtime="20201030 15:53:20.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.316" endtime="20201030 15:53:20.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.322" endtime="20201030 15:53:20.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.282" endtime="20201030 15:53:20.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.277" endtime="20201030 15:53:20.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.345" endtime="20201030 15:53:20.683"></status>
</kw>
<msg timestamp="20201030 15:53:20.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039479167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.342" endtime="20201030 15:53:20.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039479167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.692" endtime="20201030 15:53:20.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.711" endtime="20201030 15:53:20.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.335" endtime="20201030 15:53:20.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.330" endtime="20201030 15:53:20.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.728" level="INFO">${RESULT} = [{'diff': 0.0001097769999999984}, {'diff': 0.00011031999999999709}, {'diff': 0.00011029200000000489}, {'diff': 0.00011034700000000369}, {'diff': 0.0001098340000000031}, {'diff': 0.00010998599999999942...</msg>
<status status="PASS" starttime="20201030 15:53:20.719" endtime="20201030 15:53:20.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.737" level="INFO">${ACCURACY} = {'diff': [0.0001097769999999984, 0.00011031999999999709, 0.00011029200000000489, 0.00011034700000000369, 0.0001098340000000031, 0.00010998599999999942, 0.0001100969999999965, 0.00010948599999999892, 0...</msg>
<status status="PASS" starttime="20201030 15:53:20.730" endtime="20201030 15:53:20.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.748" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.746" endtime="20201030 15:53:20.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.753" level="INFO">VALUE: [0.0001097769999999984, 0.00011031999999999709, 0.00011029200000000489, 0.00011034700000000369, 0.0001098340000000031, 0.00010998599999999942, 0.0001100969999999965, 0.00010948599999999892, 0.00010974999999999874, 0.00011013899999999521, 0.00011016700000000129, 0.0001093890000000014, 0.00010990300000000147, 0.00010948699999999839, 0.00011026399999999881, 0.00010974999999999874, 0.00010979199999999745, 0.00010957000000000328, 0.00010988899999999496, 0.00010984699999999625, 0.0001102220000000001, 0.00010986099999999582, 0.0001098890000000019, 0.00010951399999999806, 0.0001093890000000014, 0.0001100549999999978, 0.00010969499999999993, 0.00010987500000000233, 0.00010974999999999874, 0.00010959700000000294, 0.00011018100000000086, 0.000110209, 0.00010961100000000251, 0.00010966700000000079, 0.0001098890000000019, 0.00011001399999999856, 0.00010958399999999591, 0.00011008299999999693, 0.000110209, 0.0001098890000000019, 0.00011026399999999881, 0.00010990300000000147, 0.00010974999999999874, 0.00011033299999999718, 0.00011029099999999847, 0.0001102220000000001, 0.00010956899999999686, 0.00010961100000000251, 0.00010954099999999772, 0.00010973599999999917]</msg>
<status status="PASS" starttime="20201030 15:53:20.750" endtime="20201030 15:53:20.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.739" endtime="20201030 15:53:20.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.766" endtime="20201030 15:53:20.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.761" endtime="20201030 15:53:20.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.759" endtime="20201030 15:53:20.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.272" endtime="20201030 15:53:20.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.271" endtime="20201030 15:53:20.791"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.813" endtime="20201030 15:53:20.835"></status>
</kw>
<msg timestamp="20201030 15:53:20.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.810" endtime="20201030 15:53:20.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.838" endtime="20201030 15:53:20.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.844" endtime="20201030 15:53:20.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.803" endtime="20201030 15:53:20.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.797" endtime="20201030 15:53:20.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.868" endtime="20201030 15:53:21.204"></status>
</kw>
<msg timestamp="20201030 15:53:21.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041225861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041336847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.864" endtime="20201030 15:53:21.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041225861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041336847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.213" endtime="20201030 15:53:21.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.232" endtime="20201030 15:53:21.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.857" endtime="20201030 15:53:21.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.852" endtime="20201030 15:53:21.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.249" level="INFO">${RESULT} = [{'diff': 0.00011098600000000042}, {'diff': 0.00011076399999999931}, {'diff': 0.00011118000000000239}, {'diff': 0.00011129200000000589}, {'diff': 0.00011040299999999503}, {'diff': 0.000111236000000000...</msg>
<status status="PASS" starttime="20201030 15:53:21.240" endtime="20201030 15:53:21.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.258" level="INFO">${ACCURACY} = {'diff': [0.00011098600000000042, 0.00011076399999999931, 0.00011118000000000239, 0.00011129200000000589, 0.00011040299999999503, 0.00011123600000000067, 0.00011077800000000582, 0.00011113900000000315...</msg>
<status status="PASS" starttime="20201030 15:53:21.251" endtime="20201030 15:53:21.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.269" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.266" endtime="20201030 15:53:21.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.274" level="INFO">VALUE: [0.00011098600000000042, 0.00011076399999999931, 0.00011118000000000239, 0.00011129200000000589, 0.00011040299999999503, 0.00011123600000000067, 0.00011077800000000582, 0.00011113900000000315, 0.00011047299999999982, 0.00011108299999999793, 0.00011058399999999691, 0.0001110419999999987, 0.00011066700000000179, 0.00011126399999999981, 0.00011087500000000333, 0.00011049999999999949, 0.00011118099999999492, 0.00011102799999999913, 0.00011119400000000196, 0.00011094399999999477, 0.0001110419999999987, 0.00011125000000000024, 0.00011108300000000487, 0.0001110419999999987, 0.00011094400000000171, 0.00011118099999999492, 0.00011088899999999596, 0.00011061100000000351, 0.00011083300000000462, 0.00011079099999999897, 0.00011143000000000264, 0.0001110419999999987, 0.00011137499999999689, 0.00011127799999999938, 0.0001110419999999987, 0.00011055599999999777, 0.00011080600000000496, 0.00011097300000000032, 0.0001105549999999983, 0.00011074999999999974, 0.0001112220000000011, 0.00011070800000000103, 0.00011093000000000214, 0.00011098700000000683, 0.00011043100000000111, 0.00011041700000000154, 0.00011036099999999632, 0.00011079099999999897, 0.0001107220000000006, 0.00011115300000000272]</msg>
<status status="PASS" starttime="20201030 15:53:21.271" endtime="20201030 15:53:21.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.260" endtime="20201030 15:53:21.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.288" endtime="20201030 15:53:21.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.283" endtime="20201030 15:53:21.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.280" endtime="20201030 15:53:21.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.793" endtime="20201030 15:53:21.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.792" endtime="20201030 15:53:21.313"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.336" endtime="20201030 15:53:21.356"></status>
</kw>
<msg timestamp="20201030 15:53:21.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.333" endtime="20201030 15:53:21.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.360" endtime="20201030 15:53:21.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.366" endtime="20201030 15:53:21.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.326" endtime="20201030 15:53:21.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.320" endtime="20201030 15:53:21.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.389" endtime="20201030 15:53:21.724"></status>
</kw>
<msg timestamp="20201030 15:53:21.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040068458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.386" endtime="20201030 15:53:21.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039956861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040068458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.733" endtime="20201030 15:53:21.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.752" endtime="20201030 15:53:21.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.379" endtime="20201030 15:53:21.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.374" endtime="20201030 15:53:21.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.769" level="INFO">${RESULT} = [{'diff': 0.000111596999999998}, {'diff': 0.00011186099999999782}, {'diff': 0.00011191600000000357}, {'diff': 0.00011141700000000254}, {'diff': 0.00011223600000000167}, {'diff': 0.00011219399999999602...</msg>
<status status="PASS" starttime="20201030 15:53:21.760" endtime="20201030 15:53:21.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.779" level="INFO">${ACCURACY} = {'diff': [0.000111596999999998, 0.00011186099999999782, 0.00011191600000000357, 0.00011141700000000254, 0.00011223600000000167, 0.00011219399999999602, 0.00011152700000000015, 0.00011197200000000185, ...</msg>
<status status="PASS" starttime="20201030 15:53:21.771" endtime="20201030 15:53:21.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.790" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.788" endtime="20201030 15:53:21.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.795" level="INFO">VALUE: [0.000111596999999998, 0.00011186099999999782, 0.00011191600000000357, 0.00011141700000000254, 0.00011223600000000167, 0.00011219399999999602, 0.00011152700000000015, 0.00011197200000000185, 0.00011201400000000056, 0.00011143100000000211, 0.00011170799999999509, 0.00011165299999999628, 0.00011186099999999782, 0.00011148600000000092, 0.00011193100000000261, 0.00011145800000000178, 0.00011166700000000279, 0.00011223600000000167, 0.00011161199999999705, 0.00011181999999999859, 0.00011237500000000483, 0.00011237500000000483, 0.00011220800000000253, 0.00011156899999999886, 0.00011211099999999807, 0.00011213899999999721, 0.00011218100000000286, 0.00011200000000000099, 0.00011168100000000236, 0.0001118890000000039, 0.00011213899999999721, 0.00011212499999999764, 0.00011186099999999782, 0.00011163899999999671, 0.00011190300000000347, 0.00011177799999999988, 0.00011183299999999868, 0.00011226400000000081, 0.00011191599999999663, 0.0001120969999999985, 0.00011211099999999807, 0.00011186099999999782, 0.00011212499999999764, 0.00011165300000000322, 0.0001123749999999979, 0.00011190300000000347, 0.00011162499999999714, 0.00011151400000000006, 0.00011240300000000397, 0.00011202800000000013]</msg>
<status status="PASS" starttime="20201030 15:53:21.792" endtime="20201030 15:53:21.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.781" endtime="20201030 15:53:21.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.814" endtime="20201030 15:53:21.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.810" endtime="20201030 15:53:21.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.807" endtime="20201030 15:53:21.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.316" endtime="20201030 15:53:21.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.314" endtime="20201030 15:53:21.839"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.862" endtime="20201030 15:53:21.882"></status>
</kw>
<msg timestamp="20201030 15:53:21.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.859" endtime="20201030 15:53:21.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.886" endtime="20201030 15:53:21.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.892" endtime="20201030 15:53:21.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.852" endtime="20201030 15:53:21.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.846" endtime="20201030 15:53:21.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.915" endtime="20201030 15:53:22.250"></status>
</kw>
<msg timestamp="20201030 15:53:22.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040034972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.912" endtime="20201030 15:53:22.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040034972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.260" endtime="20201030 15:53:22.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.278" endtime="20201030 15:53:22.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.905" endtime="20201030 15:53:22.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.900" endtime="20201030 15:53:22.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.295" level="INFO">${RESULT} = [{'diff': 0.00011308399999999941}, {'diff': 0.00011275000000000174}, {'diff': 0.00011287500000000533}, {'diff': 0.00011298599999999548}, {'diff': 0.00011334699999999975}, {'diff': 0.000112957999999996...</msg>
<status status="PASS" starttime="20201030 15:53:22.286" endtime="20201030 15:53:22.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.306" level="INFO">${ACCURACY} = {'diff': [0.00011308399999999941, 0.00011275000000000174, 0.00011287500000000533, 0.00011298599999999548, 0.00011334699999999975, 0.00011295799999999634, 0.00011329200000000095, 0.0001130550000000008,...</msg>
<status status="PASS" starttime="20201030 15:53:22.297" endtime="20201030 15:53:22.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.317" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.315" endtime="20201030 15:53:22.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.322" level="INFO">VALUE: [0.00011308399999999941, 0.00011275000000000174, 0.00011287500000000533, 0.00011298599999999548, 0.00011334699999999975, 0.00011295799999999634, 0.00011329200000000095, 0.0001130550000000008, 0.0001129169999999971, 0.00011312499999999864, 0.00011288899999999796, 0.00011250000000000149, 0.00011332000000000009, 0.00011262499999999814, 0.00011256899999999986, 0.000112902000000005, 0.00011284699999999925, 0.00011333300000000018, 0.00011280600000000002, 0.00011251400000000106, 0.00011249999999999455, 0.00011291599999999763, 0.0001125550000000003, 0.00011269500000000293, 0.00011261099999999857, 0.00011267999999999695, 0.0001125550000000003, 0.00011322199999999616, 0.00011329200000000095, 0.00011265300000000422, 0.00011250000000000149, 0.00011245900000000225, 0.00011263899999999771, 0.000112596999999999, 0.00011249999999999455, 0.00011331899999999367, 0.00011279200000000045, 0.00011295799999999634, 0.00011248700000000139, 0.00011270800000000303, 0.000112596999999999, 0.00011256899999999986, 0.00011341599999999813, 0.0001128340000000061, 0.0001127220000000026, 0.00011305600000000027, 0.00011325000000000224, 0.0001132499999999953, 0.00011317999999999745, 0.00011301300000000208]</msg>
<status status="PASS" starttime="20201030 15:53:22.319" endtime="20201030 15:53:22.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.308" endtime="20201030 15:53:22.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.335" endtime="20201030 15:53:22.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.331" endtime="20201030 15:53:22.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.328" endtime="20201030 15:53:22.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.842" endtime="20201030 15:53:22.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.840" endtime="20201030 15:53:22.360"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.383" endtime="20201030 15:53:22.403"></status>
</kw>
<msg timestamp="20201030 15:53:22.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.380" endtime="20201030 15:53:22.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.406" endtime="20201030 15:53:22.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.412" endtime="20201030 15:53:22.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.372" endtime="20201030 15:53:22.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.366" endtime="20201030 15:53:22.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.436" endtime="20201030 15:53:22.774"></status>
</kw>
<msg timestamp="20201030 15:53:22.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039952653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040066625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.433" endtime="20201030 15:53:22.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039952653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040066625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.783" endtime="20201030 15:53:22.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.802" endtime="20201030 15:53:22.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.425" endtime="20201030 15:53:22.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.420" endtime="20201030 15:53:22.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.819" level="INFO">${RESULT} = [{'diff': 0.00011397200000000385}, {'diff': 0.00011373600000000317}, {'diff': 0.00011425000000000324}, {'diff': 0.00011368099999999742}, {'diff': 0.00011347199999999641}, {'diff': 0.000114111000000000...</msg>
<status status="PASS" starttime="20201030 15:53:22.810" endtime="20201030 15:53:22.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.828" level="INFO">${ACCURACY} = {'diff': [0.00011397200000000385, 0.00011373600000000317, 0.00011425000000000324, 0.00011368099999999742, 0.00011347199999999641, 0.00011411100000000007, 0.00011365300000000522, 0.0001138049999999946,...</msg>
<status status="PASS" starttime="20201030 15:53:22.821" endtime="20201030 15:53:22.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.839" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.837" endtime="20201030 15:53:22.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.844" level="INFO">VALUE: [0.00011397200000000385, 0.00011373600000000317, 0.00011425000000000324, 0.00011368099999999742, 0.00011347199999999641, 0.00011411100000000007, 0.00011365300000000522, 0.0001138049999999946, 0.00011351400000000206, 0.00011362499999999914, 0.00011369500000000393, 0.0001138619999999993, 0.00011383300000000068, 0.00011341700000000454, 0.0001143890000000064, 0.0001142220000000041, 0.00011345800000000378, 0.00011357000000000034, 0.00011344499999999674, 0.00011430599999999458, 0.0001143749999999999, 0.0001138890000000059, 0.00011426400000000281, 0.0001134299999999977, 0.0001134169999999976, 0.00011390299999999853, 0.0001135550000000013, 0.00011395799999999734, 0.00011427699999999597, 0.00011400000000000299, 0.00011375000000000274, 0.0001143749999999999, 0.00011369400000000446, 0.00011376400000000231, 0.00011365299999999828, 0.00011377799999999494, 0.00011436100000000032, 0.00011343099999999717, 0.00011422199999999716, 0.00011347299999999588, 0.00011373600000000317, 0.0001143749999999999, 0.0001143749999999999, 0.00011358300000000043, 0.00011361099999999957, 0.00011427699999999597, 0.00011436100000000032, 0.0001139299999999982, 0.00011433299999999424, 0.00011388799999999949]</msg>
<status status="PASS" starttime="20201030 15:53:22.841" endtime="20201030 15:53:22.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.830" endtime="20201030 15:53:22.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.857" endtime="20201030 15:53:22.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.853" endtime="20201030 15:53:22.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.850" endtime="20201030 15:53:22.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.362" endtime="20201030 15:53:22.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.361" endtime="20201030 15:53:22.882"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.905" endtime="20201030 15:53:22.931"></status>
</kw>
<msg timestamp="20201030 15:53:22.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.902" endtime="20201030 15:53:22.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.934" endtime="20201030 15:53:22.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.941" endtime="20201030 15:53:22.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.894" endtime="20201030 15:53:22.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.889" endtime="20201030 15:53:22.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.964" endtime="20201030 15:53:23.318"></status>
</kw>
<msg timestamp="20201030 15:53:23.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046007431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046122806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.961" endtime="20201030 15:53:23.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046007431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046122806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.327" endtime="20201030 15:53:23.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.346" endtime="20201030 15:53:23.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.954" endtime="20201030 15:53:23.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.949" endtime="20201030 15:53:23.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.363" level="INFO">${RESULT} = [{'diff': 0.0001153750000000009}, {'diff': 0.00011517999999999945}, {'diff': 0.00011461200000000005}, {'diff': 0.00011540300000000003}, {'diff': 0.000114597000000001}, {'diff': 0.00011463800000000024}...</msg>
<status status="PASS" starttime="20201030 15:53:23.354" endtime="20201030 15:53:23.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.372" level="INFO">${ACCURACY} = {'diff': [0.0001153750000000009, 0.00011517999999999945, 0.00011461200000000005, 0.00011540300000000003, 0.000114597000000001, 0.00011463800000000024, 0.0001154169999999996, 0.00011540200000000056, 0....</msg>
<status status="PASS" starttime="20201030 15:53:23.365" endtime="20201030 15:53:23.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.383" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.381" endtime="20201030 15:53:23.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.388" level="INFO">VALUE: [0.0001153750000000009, 0.00011517999999999945, 0.00011461200000000005, 0.00011540300000000003, 0.000114597000000001, 0.00011463800000000024, 0.0001154169999999996, 0.00011540200000000056, 0.00011465300000000622, 0.00011473600000000417, 0.00011509699999999456, 0.00011473599999999723, 0.0001149169999999991, 0.0001145420000000022, 0.00011527699999999697, 0.00011519499999999849, 0.00011472199999999766, 0.00011536100000000132, 0.00011443099999999817, 0.00011522299999999763, 0.00011491599999999963, 0.00011520799999999859, 0.00011470800000000503, 0.00011466599999999938, 0.00011534800000000123, 0.00011470800000000503, 0.00011447200000000435, 0.00011451400000000306, 0.00011463899999999971, 0.00011506900000000236, 0.0001148750000000004, 0.00011455599999999483, 0.00011472199999999766, 0.00011479100000000297, 0.00011458300000000143, 0.00011463899999999971, 0.00011517999999999945, 0.00011515200000000031, 0.00011457000000000134, 0.00011457000000000134, 0.00011538900000000046, 0.00011516699999999935, 0.00011450000000000349, 0.00011493100000000561, 0.00011533299999999524, 0.00011518000000000639, 0.00011458300000000143, 0.00011448599999999698, 0.00011513900000000021, 0.00011480500000000254]</msg>
<status status="PASS" starttime="20201030 15:53:23.385" endtime="20201030 15:53:23.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.374" endtime="20201030 15:53:23.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.402" endtime="20201030 15:53:23.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.396" endtime="20201030 15:53:23.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.394" endtime="20201030 15:53:23.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.884" endtime="20201030 15:53:23.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.883" endtime="20201030 15:53:23.427"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.451" endtime="20201030 15:53:23.471"></status>
</kw>
<msg timestamp="20201030 15:53:23.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.447" endtime="20201030 15:53:23.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.474" endtime="20201030 15:53:23.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.481" endtime="20201030 15:53:23.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.440" endtime="20201030 15:53:23.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.434" endtime="20201030 15:53:23.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.504" endtime="20201030 15:53:23.839"></status>
</kw>
<msg timestamp="20201030 15:53:23.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040275764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040391778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.501" endtime="20201030 15:53:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040275764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040391778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.848" endtime="20201030 15:53:23.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.866" endtime="20201030 15:53:23.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.493" endtime="20201030 15:53:23.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.489" endtime="20201030 15:53:23.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.883" level="INFO">${RESULT} = [{'diff': 0.00011601400000000456}, {'diff': 0.0001155829999999955}, {'diff': 0.0001155420000000032}, {'diff': 0.00011636100000000232}, {'diff': 0.00011586100000000182}, {'diff': 0.0001158750000000014}...</msg>
<status status="PASS" starttime="20201030 15:53:23.875" endtime="20201030 15:53:23.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.894" level="INFO">${ACCURACY} = {'diff': [0.00011601400000000456, 0.0001155829999999955, 0.0001155420000000032, 0.00011636100000000232, 0.00011586100000000182, 0.0001158750000000014, 0.00011591599999999369, 0.00011582000000000259, 0...</msg>
<status status="PASS" starttime="20201030 15:53:23.886" endtime="20201030 15:53:23.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.905" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.903" endtime="20201030 15:53:23.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.910" level="INFO">VALUE: [0.00011601400000000456, 0.0001155829999999955, 0.0001155420000000032, 0.00011636100000000232, 0.00011586100000000182, 0.0001158750000000014, 0.00011591599999999369, 0.00011582000000000259, 0.00011583300000000268, 0.00011562500000000114, 0.00011572299999999813, 0.00011612500000000164, 0.00011613899999999427, 0.00011594399999999977, 0.00011604199999999676, 0.00011597199999999891, 0.00011598599999999848, 0.00011573599999999823, 0.0001157499999999978, 0.0001158750000000014, 0.00011620799999999959, 0.00011622199999999916, 0.00011611099999999513, 0.00011543099999999917, 0.00011627800000000438, 0.00011633299999999624, 0.00011590200000000106, 0.00011633399999999572, 0.00011543099999999917, 0.00011555499999999636, 0.00011640200000000156, 0.00011629099999999754, 0.00011629200000000395, 0.00011594499999999924, 0.0001158750000000014, 0.00011604199999999676, 0.00011611100000000207, 0.00011623599999999873, 0.00011548600000000492, 0.0001158750000000014, 0.0001162220000000061, 0.00011590300000000053, 0.00011594399999999977, 0.00011597299999999838, 0.00011594399999999977, 0.0001155829999999955, 0.0001158750000000014, 0.0001160970000000025, 0.00011608300000000293, 0.00011573700000000464]</msg>
<status status="PASS" starttime="20201030 15:53:23.907" endtime="20201030 15:53:23.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.896" endtime="20201030 15:53:23.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.923" endtime="20201030 15:53:23.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.918" endtime="20201030 15:53:23.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.916" endtime="20201030 15:53:23.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.430" endtime="20201030 15:53:23.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.428" endtime="20201030 15:53:23.948"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.973" endtime="20201030 15:53:23.993"></status>
</kw>
<msg timestamp="20201030 15:53:23.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.969" endtime="20201030 15:53:23.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.996" endtime="20201030 15:53:24.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.003" endtime="20201030 15:53:24.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.960" endtime="20201030 15:53:24.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.954" endtime="20201030 15:53:24.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.026" endtime="20201030 15:53:24.362"></status>
</kw>
<msg timestamp="20201030 15:53:24.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042007056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:24.023" endtime="20201030 15:53:24.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042007056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:24.371" endtime="20201030 15:53:24.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.390" endtime="20201030 15:53:24.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.015" endtime="20201030 15:53:24.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.011" endtime="20201030 15:53:24.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.407" level="INFO">${RESULT} = [{'diff': 0.00011655600000000377}, {'diff': 0.0001172499999999993}, {'diff': 0.00011677799999999794}, {'diff': 0.00011690200000000206}, {'diff': 0.00011672199999999966}, {'diff': 0.0001170420000000047...</msg>
<status status="PASS" starttime="20201030 15:53:24.398" endtime="20201030 15:53:24.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.418" level="INFO">${ACCURACY} = {'diff': [0.00011655600000000377, 0.0001172499999999993, 0.00011677799999999794, 0.00011690200000000206, 0.00011672199999999966, 0.0001170420000000047, 0.00011716700000000135, 0.00011677799999999794, ...</msg>
<status status="PASS" starttime="20201030 15:53:24.409" endtime="20201030 15:53:24.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.429" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.426" endtime="20201030 15:53:24.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.434" level="INFO">VALUE: [0.00011655600000000377, 0.0001172499999999993, 0.00011677799999999794, 0.00011690200000000206, 0.00011672199999999966, 0.0001170420000000047, 0.00011716700000000135, 0.00011677799999999794, 0.00011718000000000145, 0.00011667999999999401, 0.0001166249999999952, 0.00011702799999999819, 0.00011734700000000375, 0.00011648599999999898, 0.00011673599999999923, 0.00011686099999999588, 0.00011734700000000375, 0.00011733300000000418, 0.00011663899999999477, 0.00011716700000000135, 0.00011686099999999588, 0.00011729099999999854, 0.00011649999999999855, 0.00011733299999999725, 0.0001170970000000035, 0.00011679199999999751, 0.00011645899999999931, 0.00011677799999999794, 0.00011693100000000067, 0.00011734699999999681, 0.00011679199999999751, 0.00011706899999999743, 0.00011669400000000052, 0.00011708399999999647, 0.00011663899999999477, 0.00011713900000000221, 0.00011684699999999631, 0.00011698599999999948, 0.00011656899999999693, 0.00011693100000000067, 0.00011690300000000153, 0.00011718099999999398, 0.00011652799999999769, 0.00011666600000000138, 0.00011647299999999888, 0.00011647199999999941, 0.00011670800000000009, 0.00011731999999999715, 0.00011730600000000452, 0.00011680600000000402]</msg>
<status status="PASS" starttime="20201030 15:53:24.431" endtime="20201030 15:53:24.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.420" endtime="20201030 15:53:24.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.447" endtime="20201030 15:53:24.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.442" endtime="20201030 15:53:24.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.440" endtime="20201030 15:53:24.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.950" endtime="20201030 15:53:24.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.949" endtime="20201030 15:53:24.472"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.495" endtime="20201030 15:53:24.516"></status>
</kw>
<msg timestamp="20201030 15:53:24.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.491" endtime="20201030 15:53:24.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.519" endtime="20201030 15:53:24.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.526" endtime="20201030 15:53:24.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.484" endtime="20201030 15:53:24.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.478" endtime="20201030 15:53:24.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.549" endtime="20201030 15:53:24.900"></status>
</kw>
<msg timestamp="20201030 15:53:24.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039789083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039906639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.546" endtime="20201030 15:53:24.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039789083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039906639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.909" endtime="20201030 15:53:24.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.927" endtime="20201030 15:53:24.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.539" endtime="20201030 15:53:24.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.534" endtime="20201030 15:53:24.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.945" level="INFO">${RESULT} = [{'diff': 0.00011755599999999783}, {'diff': 0.00011805600000000527}, {'diff': 0.00011788899999999602}, {'diff': 0.00011804199999999876}, {'diff': 0.00011755600000000477}, {'diff': 0.000117639000000002...</msg>
<status status="PASS" starttime="20201030 15:53:24.936" endtime="20201030 15:53:24.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.954" level="INFO">${ACCURACY} = {'diff': [0.00011755599999999783, 0.00011805600000000527, 0.00011788899999999602, 0.00011804199999999876, 0.00011755600000000477, 0.00011763900000000271, 0.0001182500000000003, 0.000118082999999998, 0...</msg>
<status status="PASS" starttime="20201030 15:53:24.947" endtime="20201030 15:53:24.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.965" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.962" endtime="20201030 15:53:24.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.970" level="INFO">VALUE: [0.00011755599999999783, 0.00011805600000000527, 0.00011788899999999602, 0.00011804199999999876, 0.00011755600000000477, 0.00011763900000000271, 0.0001182500000000003, 0.000118082999999998, 0.00011765299999999534, 0.00011811099999999713, 0.0001174170000000016, 0.00011793100000000167, 0.0001175829999999975, 0.00011840300000000303, 0.00011783399999999722, 0.00011773600000000023, 0.00011811099999999713, 0.00011800000000000005, 0.00011765200000000281, 0.00011759799999999654, 0.00011763899999999577, 0.00011798600000000048, 0.00011833300000000518, 0.0001184449999999948, 0.00011759699999999706, 0.0001175550000000053, 0.00011834699999999782, 0.00011834699999999782, 0.00011815299999999584, 0.00011747200000000041, 0.0001175829999999975, 0.00011823599999999379, 0.00011809799999999704, 0.00011841699999999566, 0.00011811099999999713, 0.00011766700000000185, 0.00011819400000000202, 0.00011826399999999987, 0.00011820800000000159, 0.00011763899999999577, 0.00011766700000000185, 0.0001178750000000034, 0.00011793100000000167, 0.00011794400000000177, 0.00011783299999999775, 0.00011783400000000416, 0.00011782000000000459, 0.0001177499999999998, 0.00011804199999999876, 0.00011836099999999738]</msg>
<status status="PASS" starttime="20201030 15:53:24.967" endtime="20201030 15:53:24.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.955" endtime="20201030 15:53:24.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.983" endtime="20201030 15:53:25.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.978" endtime="20201030 15:53:25.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.975" endtime="20201030 15:53:25.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.474" endtime="20201030 15:53:25.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.472" endtime="20201030 15:53:25.008"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.031" endtime="20201030 15:53:25.054"></status>
</kw>
<msg timestamp="20201030 15:53:25.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.027" endtime="20201030 15:53:25.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.057" endtime="20201030 15:53:25.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.064" endtime="20201030 15:53:25.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.020" endtime="20201030 15:53:25.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.014" endtime="20201030 15:53:25.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.087" endtime="20201030 15:53:25.422"></status>
</kw>
<msg timestamp="20201030 15:53:25.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041789278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041908153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.084" endtime="20201030 15:53:25.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041789278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041908153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.431" endtime="20201030 15:53:25.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.449" endtime="20201030 15:53:25.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.076" endtime="20201030 15:53:25.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.072" endtime="20201030 15:53:25.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.466" level="INFO">${RESULT} = [{'diff': 0.00011887499999999745}, {'diff': 0.00011931999999999915}, {'diff': 0.00011913900000000421}, {'diff': 0.00011848600000000098}, {'diff': 0.00011876400000000037}, {'diff': 0.000118916999999996...</msg>
<status status="PASS" starttime="20201030 15:53:25.458" endtime="20201030 15:53:25.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.475" level="INFO">${ACCURACY} = {'diff': [0.00011887499999999745, 0.00011931999999999915, 0.00011913900000000421, 0.00011848600000000098, 0.00011876400000000037, 0.00011891699999999616, 0.00011938799999999805, 0.0001192370000000012,...</msg>
<status status="PASS" starttime="20201030 15:53:25.468" endtime="20201030 15:53:25.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.486" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.484" endtime="20201030 15:53:25.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.492" level="INFO">VALUE: [0.00011887499999999745, 0.00011931999999999915, 0.00011913900000000421, 0.00011848600000000098, 0.00011876400000000037, 0.00011891699999999616, 0.00011938799999999805, 0.0001192370000000012, 0.00011855599999999883, 0.00011847300000000088, 0.00011900000000000105, 0.00011936099999999839, 0.00011937499999999795, 0.00011930599999999958, 0.00011922200000000216, 0.0001193050000000001, 0.00011858300000000543, 0.00011888900000000396, 0.00011890199999999712, 0.0001189170000000031, 0.00011890199999999712, 0.00011883299999999875, 0.00011929200000000001, 0.0001193750000000049, 0.0001190420000000067, 0.00011869400000000252, 0.00011901400000000062, 0.00011920800000000259, 0.00011862500000000414, 0.00011894500000000224, 0.00011861099999999763, 0.00011863899999999677, 0.00011916700000000335, 0.00011886099999999789, 0.0001185420000000062, 0.00011850000000000055, 0.00011887499999999745, 0.00011941699999999666, 0.00011901400000000062, 0.00011898600000000148, 0.00011891600000000363, 0.00011901400000000062, 0.00011898600000000148, 0.00011898599999999454, 0.00011923599999999479, 0.00011851400000000012, 0.00011897300000000138, 0.00011905599999999933, 0.00011941699999999666, 0.00011901400000000062]</msg>
<status status="PASS" starttime="20201030 15:53:25.488" endtime="20201030 15:53:25.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.477" endtime="20201030 15:53:25.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.505" endtime="20201030 15:53:25.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.500" endtime="20201030 15:53:25.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.497" endtime="20201030 15:53:25.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.010" endtime="20201030 15:53:25.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.009" endtime="20201030 15:53:25.530"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.553" endtime="20201030 15:53:25.574"></status>
</kw>
<msg timestamp="20201030 15:53:25.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.549" endtime="20201030 15:53:25.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.577" endtime="20201030 15:53:25.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.583" endtime="20201030 15:53:25.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.542" endtime="20201030 15:53:25.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.537" endtime="20201030 15:53:25.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.606" endtime="20201030 15:53:25.955"></status>
</kw>
<msg timestamp="20201030 15:53:25.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039226069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039346389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.603" endtime="20201030 15:53:25.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039226069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039346389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.964" endtime="20201030 15:53:25.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.982" endtime="20201030 15:53:25.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.596" endtime="20201030 15:53:25.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.592" endtime="20201030 15:53:25.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.999" level="INFO">${RESULT} = [{'diff': 0.00012032000000000015}, {'diff': 0.0001198750000000054}, {'diff': 0.00011948700000000145}, {'diff': 0.00012002799999999425}, {'diff': 0.00012018100000000392}, {'diff': 0.0001202219999999962...</msg>
<status status="PASS" starttime="20201030 15:53:25.991" endtime="20201030 15:53:26.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.010" level="INFO">${ACCURACY} = {'diff': [0.00012032000000000015, 0.0001198750000000054, 0.00011948700000000145, 0.00012002799999999425, 0.00012018100000000392, 0.00012022199999999622, 0.00011973599999999529, 0.00011959699999999907,...</msg>
<status status="PASS" starttime="20201030 15:53:26.002" endtime="20201030 15:53:26.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.021" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.019" endtime="20201030 15:53:26.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.026" level="INFO">VALUE: [0.00012032000000000015, 0.0001198750000000054, 0.00011948700000000145, 0.00012002799999999425, 0.00012018100000000392, 0.00012022199999999622, 0.00011973599999999529, 0.00011959699999999907, 0.00011969400000000352, 0.00012036099999999939, 0.0001204029999999981, 0.00012020800000000359, 0.00012047300000000288, 0.00012005499999999392, 0.00011950000000000155, 0.00011951399999999418, 0.00012027800000000144, 0.00012038899999999852, 0.0001199029999999976, 0.00012009699999999957, 0.00011955599999999983, 0.00012044500000000374, 0.00011969399999999658, 0.00011981900000000018, 0.00011983399999999922, 0.00011976400000000137, 0.00012037499999999896, 0.00012005600000000033, 0.00011995900000000281, 0.00012038900000000546, 0.0001201249999999987, 0.00011981999999999965, 0.00011948700000000145, 0.00011991599999999769, 0.00012020800000000359, 0.00012022199999999622, 0.00012020800000000359, 0.00011951400000000112, 0.00012038900000000546, 0.0001197229999999952, 0.0001204579999999969, 0.00012031900000000068, 0.00012033399999999972, 0.00012044500000000374, 0.00012037499999999896, 0.00011986100000000582, 0.00011992999999999726, 0.00011947300000000188, 0.00011952800000000069, 0.00011997200000000291]</msg>
<status status="PASS" starttime="20201030 15:53:26.023" endtime="20201030 15:53:26.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.012" endtime="20201030 15:53:26.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.038" endtime="20201030 15:53:26.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.034" endtime="20201030 15:53:26.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.032" endtime="20201030 15:53:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.532" endtime="20201030 15:53:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.531" endtime="20201030 15:53:26.064"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.086" endtime="20201030 15:53:26.108"></status>
</kw>
<msg timestamp="20201030 15:53:26.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.083" endtime="20201030 15:53:26.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.111" endtime="20201030 15:53:26.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.117" endtime="20201030 15:53:26.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.076" endtime="20201030 15:53:26.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.070" endtime="20201030 15:53:26.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.140" endtime="20201030 15:53:26.485"></status>
</kw>
<msg timestamp="20201030 15:53:26.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039844181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039965556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.137" endtime="20201030 15:53:26.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039844181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039965556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.495" endtime="20201030 15:53:26.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.513" endtime="20201030 15:53:26.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.130" endtime="20201030 15:53:26.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.125" endtime="20201030 15:53:26.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.530" level="INFO">${RESULT} = [{'diff': 0.00012137499999999996}, {'diff': 0.0001211249999999997}, {'diff': 0.00012098600000000348}, {'diff': 0.0001204579999999969}, {'diff': 0.00012133400000000072}, {'diff': 0.00012124999999999636...</msg>
<status status="PASS" starttime="20201030 15:53:26.521" endtime="20201030 15:53:26.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.541" level="INFO">${ACCURACY} = {'diff': [0.00012137499999999996, 0.0001211249999999997, 0.00012098600000000348, 0.0001204579999999969, 0.00012133400000000072, 0.00012124999999999636, 0.00012066699999999791, 0.00012141600000000613, ...</msg>
<status status="PASS" starttime="20201030 15:53:26.532" endtime="20201030 15:53:26.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.552" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.550" endtime="20201030 15:53:26.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.557" level="INFO">VALUE: [0.00012137499999999996, 0.0001211249999999997, 0.00012098600000000348, 0.0001204579999999969, 0.00012133400000000072, 0.00012124999999999636, 0.00012066699999999791, 0.00012141600000000613, 0.0001205830000000005, 0.00012073599999999629, 0.0001206379999999993, 0.00012072199999999672, 0.00012052799999999475, 0.00012050000000000255, 0.00012059700000000007, 0.000120777999999995, 0.00012131900000000168, 0.00012140300000000603, 0.00012045899999999637, 0.00012059700000000007, 0.00012070800000000409, 0.00012067999999999801, 0.0001209449999999973, 0.00012115299999999884, 0.00012041600000000513, 0.00012059700000000007, 0.00012073599999999629, 0.00012067999999999801, 0.00012120800000000459, 0.00012054099999999485, 0.00012117999999999851, 0.00012122199999999722, 0.00012115299999999884, 0.00012142999999999876, 0.00012084700000000032, 0.00012097199999999697, 0.00012051400000000212, 0.0001204449999999968, 0.00012063899999999877, 0.00012097200000000391, 0.00012079200000000151, 0.00012088900000000596, 0.00012115299999999884, 0.0001213050000000021, 0.00012140300000000603, 0.00012140199999999962, 0.00012119499999999755, 0.00012087499999999946, 0.00012080600000000108, 0.00012137499999999996]</msg>
<status status="PASS" starttime="20201030 15:53:26.554" endtime="20201030 15:53:26.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.543" endtime="20201030 15:53:26.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.569" endtime="20201030 15:53:26.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.565" endtime="20201030 15:53:26.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.563" endtime="20201030 15:53:26.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.066" endtime="20201030 15:53:26.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.064" endtime="20201030 15:53:26.595"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.619" endtime="20201030 15:53:26.639"></status>
</kw>
<msg timestamp="20201030 15:53:26.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.615" endtime="20201030 15:53:26.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.642" endtime="20201030 15:53:26.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.648" endtime="20201030 15:53:26.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.608" endtime="20201030 15:53:26.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.602" endtime="20201030 15:53:26.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.671" endtime="20201030 15:53:27.006"></status>
</kw>
<msg timestamp="20201030 15:53:27.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041266014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041387625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.668" endtime="20201030 15:53:27.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041266014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041387625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.016" endtime="20201030 15:53:27.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.034" endtime="20201030 15:53:27.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.661" endtime="20201030 15:53:27.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.656" endtime="20201030 15:53:27.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.051" level="INFO">${RESULT} = [{'diff': 0.00012161100000000064}, {'diff': 0.00012238900000000053}, {'diff': 0.0001222500000000043}, {'diff': 0.0001222500000000043}, {'diff': 0.00012202800000000319}, {'diff': 0.0001222779999999965}...</msg>
<status status="PASS" starttime="20201030 15:53:27.042" endtime="20201030 15:53:27.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.060" level="INFO">${ACCURACY} = {'diff': [0.00012161100000000064, 0.00012238900000000053, 0.0001222500000000043, 0.0001222500000000043, 0.00012202800000000319, 0.0001222779999999965, 0.0001222779999999965, 0.00012148600000000398, 0....</msg>
<status status="PASS" starttime="20201030 15:53:27.053" endtime="20201030 15:53:27.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.071" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.068" endtime="20201030 15:53:27.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.076" level="INFO">VALUE: [0.00012161100000000064, 0.00012238900000000053, 0.0001222500000000043, 0.0001222500000000043, 0.00012202800000000319, 0.0001222779999999965, 0.0001222779999999965, 0.00012148600000000398, 0.00012179200000000251, 0.00012152700000000322, 0.0001216250000000002, 0.0001215700000000014, 0.00012151399999999618, 0.00012244500000000574, 0.00012241699999999966, 0.0001222779999999965, 0.00012177800000000294, 0.00012151400000000312, 0.00012155500000000236, 0.00012154100000000279, 0.00012216599999999994, 0.00012151300000000365, 0.00012174999999999686, 0.00012151400000000312, 0.00012236100000000139, 0.00012147199999999747, 0.00012222199999999822, 0.00012227699999999703, 0.00012152700000000322, 0.00012194399999999883, 0.00012183400000000122, 0.00012159700000000107, 0.0001224030000000001, 0.0001224579999999989, 0.0001221799999999995, 0.00012205500000000286, 0.00012202799999999625, 0.00012148600000000398, 0.0001224999999999976, 0.00012193099999999873, 0.00012165300000000628, 0.00012195899999999787, 0.00012216699999999941, 0.00012186100000000089, 0.0001223329999999953, 0.00012197199999999797, 0.00012219399999999908, 0.00012218100000000592, 0.0001224449999999988, 0.00012233399999999478]</msg>
<status status="PASS" starttime="20201030 15:53:27.073" endtime="20201030 15:53:27.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.062" endtime="20201030 15:53:27.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.088" endtime="20201030 15:53:27.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.084" endtime="20201030 15:53:27.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.081" endtime="20201030 15:53:27.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.597" endtime="20201030 15:53:27.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.596" endtime="20201030 15:53:27.113"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.136" endtime="20201030 15:53:27.157"></status>
</kw>
<msg timestamp="20201030 15:53:27.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.132" endtime="20201030 15:53:27.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.161" endtime="20201030 15:53:27.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.167" endtime="20201030 15:53:27.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.125" endtime="20201030 15:53:27.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.120" endtime="20201030 15:53:27.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.190" endtime="20201030 15:53:27.522"></status>
</kw>
<msg timestamp="20201030 15:53:27.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040932972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.187" endtime="20201030 15:53:27.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040932972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.531" endtime="20201030 15:53:27.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.550" endtime="20201030 15:53:27.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.180" endtime="20201030 15:53:27.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.175" endtime="20201030 15:53:27.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.566" level="INFO">${RESULT} = [{'diff': 0.00012298599999999854}, {'diff': 0.00012252700000000422}, {'diff': 0.00012284699999999538}, {'diff': 0.0001229030000000006}, {'diff': 0.00012344400000000033}, {'diff': 0.0001230829999999960...</msg>
<status status="PASS" starttime="20201030 15:53:27.558" endtime="20201030 15:53:27.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.575" level="INFO">${ACCURACY} = {'diff': [0.00012298599999999854, 0.00012252700000000422, 0.00012284699999999538, 0.0001229030000000006, 0.00012344400000000033, 0.00012308299999999606, 0.00012306900000000343, 0.00012347199999999947,...</msg>
<status status="PASS" starttime="20201030 15:53:27.569" endtime="20201030 15:53:27.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.586" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.584" endtime="20201030 15:53:27.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.592" level="INFO">VALUE: [0.00012298599999999854, 0.00012252700000000422, 0.00012284699999999538, 0.0001229030000000006, 0.00012344400000000033, 0.00012308299999999606, 0.00012306900000000343, 0.00012347199999999947, 0.0001234579999999999, 0.00012251400000000412, 0.00012287499999999452, 0.00012319400000000008, 0.00012319499999999955, 0.0001230689999999965, 0.0001225830000000025, 0.0001227500000000048, 0.00012273600000000523, 0.00012305499999999692, 0.00012344400000000033, 0.00012330599999999664, 0.00012272199999999872, 0.0001234030000000011, 0.00012316700000000042, 0.0001231109999999952, 0.00012320899999999912, 0.00012313900000000128, 0.0001231950000000065, 0.00012276399999999743, 0.000123083000000003, 0.00012337500000000196, 0.0001233050000000041, 0.00012340299999999416, 0.00012334700000000282, 0.00012265300000000035, 0.00012334699999999588, 0.00012298599999999854, 0.00012283300000000275, 0.00012290299999999366, 0.00012286100000000189, 0.00012262499999999427, 0.0001230979999999951, 0.00012259700000000207, 0.00012304100000000429, 0.0001232359999999988, 0.0001232359999999988, 0.00012293000000000026, 0.00012269399999999958, 0.00012330600000000358, 0.00012329199999999707, 0.00012338900000000153]</msg>
<status status="PASS" starttime="20201030 15:53:27.588" endtime="20201030 15:53:27.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.577" endtime="20201030 15:53:27.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.605" endtime="20201030 15:53:27.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.600" endtime="20201030 15:53:27.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.597" endtime="20201030 15:53:27.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.115" endtime="20201030 15:53:27.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.114" endtime="20201030 15:53:27.632"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.661" endtime="20201030 15:53:27.682"></status>
</kw>
<msg timestamp="20201030 15:53:27.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.657" endtime="20201030 15:53:27.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.685" endtime="20201030 15:53:27.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.692" endtime="20201030 15:53:27.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.647" endtime="20201030 15:53:27.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.639" endtime="20201030 15:53:27.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.715" endtime="20201030 15:53:28.046"></status>
</kw>
<msg timestamp="20201030 15:53:28.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048596014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048720014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.712" endtime="20201030 15:53:28.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048596014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048720014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.055" endtime="20201030 15:53:28.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.073" endtime="20201030 15:53:28.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.705" endtime="20201030 15:53:28.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.700" endtime="20201030 15:53:28.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.090" level="INFO">${RESULT} = [{'diff': 0.0001239999999999991}, {'diff': 0.00012376399999999843}, {'diff': 0.00012384700000000332}, {'diff': 0.00012416700000000142}, {'diff': 0.00012431899999999774}, {'diff': 0.0001243060000000045...</msg>
<status status="PASS" starttime="20201030 15:53:28.081" endtime="20201030 15:53:28.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:28.104" level="INFO">${ACCURACY} = {'diff': [0.0001239999999999991, 0.00012376399999999843, 0.00012384700000000332, 0.00012416700000000142, 0.00012431899999999774, 0.00012430600000000458, 0.0001239160000000017, 0.00012419400000000108, ...</msg>
<status status="PASS" starttime="20201030 15:53:28.092" endtime="20201030 15:53:28.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.115" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:53:28.113" endtime="20201030 15:53:28.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.120" level="INFO">VALUE: [0.0001239999999999991, 0.00012376399999999843, 0.00012384700000000332, 0.00012416700000000142, 0.00012431899999999774, 0.00012430600000000458, 0.0001239160000000017, 0.00012419400000000108, 0.0001240559999999974, 0.0001241250000000027, 0.00012416700000000142, 0.00012387499999999552, 0.00012380599999999714, 0.00012438900000000253, 0.00012391700000000117, 0.0001242779999999985, 0.0001239160000000017, 0.0001242079999999937, 0.00012445799999999396, 0.00012393000000000126, 0.00012391700000000117, 0.0001236250000000022, 0.00012359700000000307, 0.00012437500000000296, 0.00012441700000000167, 0.00012351399999999818, 0.0001239160000000017, 0.0001237909999999981, 0.00012387500000000246, 0.0001241109999999962, 0.00012433399999999678, 0.000123680000000001, 0.00012419500000000055, 0.0001242359999999998, 0.00012402799999999825, 0.00012358400000000297, 0.00012345899999999937, 0.0001244309999999943, 0.00012430599999999764, 0.0001237229999999992, 0.0001237229999999992, 0.00012424999999999936, 0.00012387499999999552, 0.00012430499999999817, 0.00012402799999999825, 0.00012387500000000246, 0.00012404099999999835, 0.000124083000000004, 0.00012443100000000124, 0.0001242779999999985]</msg>
<status status="PASS" starttime="20201030 15:53:28.117" endtime="20201030 15:53:28.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.106" endtime="20201030 15:53:28.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.133" endtime="20201030 15:53:28.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.129" endtime="20201030 15:53:28.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.126" endtime="20201030 15:53:28.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.634" endtime="20201030 15:53:28.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.633" endtime="20201030 15:53:28.158"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.180" endtime="20201030 15:53:28.200"></status>
</kw>
<msg timestamp="20201030 15:53:28.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.177" endtime="20201030 15:53:28.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.204" endtime="20201030 15:53:28.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.210" endtime="20201030 15:53:28.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.170" endtime="20201030 15:53:28.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.164" endtime="20201030 15:53:28.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.232" endtime="20201030 15:53:28.564"></status>
</kw>
<msg timestamp="20201030 15:53:28.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039115847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039241, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:28.229" endtime="20201030 15:53:28.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039115847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039241, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:28.574" endtime="20201030 15:53:28.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.592" endtime="20201030 15:53:28.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.222" endtime="20201030 15:53:28.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.218" endtime="20201030 15:53:28.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.609" level="INFO">${RESULT} = [{'diff': 0.0001251529999999959}, {'diff': 0.00012531900000000568}, {'diff': 0.00012479199999999857}, {'diff': 0.0001250559999999984}, {'diff': 0.00012461100000000364}, {'diff': 0.0001252909999999996}...</msg>
<status status="PASS" starttime="20201030 15:53:28.600" endtime="20201030 15:53:28.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:28.620" level="INFO">${ACCURACY} = {'diff': [0.0001251529999999959, 0.00012531900000000568, 0.00012479199999999857, 0.0001250559999999984, 0.00012461100000000364, 0.0001252909999999996, 0.0001246250000000032, 0.00012497200000000097, 0....</msg>
<status status="PASS" starttime="20201030 15:53:28.611" endtime="20201030 15:53:28.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.630" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:53:28.628" endtime="20201030 15:53:28.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.635" level="INFO">VALUE: [0.0001251529999999959, 0.00012531900000000568, 0.00012479199999999857, 0.0001250559999999984, 0.00012461100000000364, 0.0001252909999999996, 0.0001246250000000032, 0.00012497200000000097, 0.00012469500000000105, 0.00012456900000000493, 0.00012465300000000235, 0.00012504199999999882, 0.0001245559999999979, 0.0001253480000000043, 0.0001248889999999961, 0.00012519400000000208, 0.0001245830000000045, 0.0001251250000000037, 0.00012530599999999864, 0.00012541699999999573, 0.00012468100000000149, 0.00012501399999999968, 0.00012474999999999986, 0.00012547200000000147, 0.00012504199999999882, 0.00012483399999999728, 0.00012508399999999753, 0.0001248199999999977, 0.00012537499999999702, 0.00012455499999999842, 0.0001254450000000018, 0.00012497300000000044, 0.0001252230000000007, 0.00012533400000000472, 0.00012526399999999993, 0.00012540299999999616, 0.0001252079999999947, 0.00012511100000000414, 0.00012536100000000439, 0.0001248889999999961, 0.0001255000000000006, 0.00012487499999999652, 0.00012448600000000004, 0.00012519400000000208, 0.00012526399999999993, 0.0001250000000000001, 0.0001248199999999977, 0.0001255000000000006, 0.0001244450000000008, 0.00012534799999999735]</msg>
<status status="PASS" starttime="20201030 15:53:28.633" endtime="20201030 15:53:28.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.621" endtime="20201030 15:53:28.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.648" endtime="20201030 15:53:28.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.644" endtime="20201030 15:53:28.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.641" endtime="20201030 15:53:28.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.160" endtime="20201030 15:53:28.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.159" endtime="20201030 15:53:28.673"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.695" endtime="20201030 15:53:28.715"></status>
</kw>
<msg timestamp="20201030 15:53:28.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.692" endtime="20201030 15:53:28.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.719" endtime="20201030 15:53:28.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.725" endtime="20201030 15:53:28.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.685" endtime="20201030 15:53:28.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.679" endtime="20201030 15:53:28.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.748" endtime="20201030 15:53:29.080"></status>
</kw>
<msg timestamp="20201030 15:53:29.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039276681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039402375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.745" endtime="20201030 15:53:29.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039276681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039402375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.090" endtime="20201030 15:53:29.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.107" endtime="20201030 15:53:29.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.737" endtime="20201030 15:53:29.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.733" endtime="20201030 15:53:29.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:29.124" level="INFO">${RESULT} = [{'diff': 0.00012569400000000258}, {'diff': 0.00012590200000000412}, {'diff': 0.00012574999999999392}, {'diff': 0.0001257360000000013}, {'diff': 0.0001259450000000023}, {'diff': 0.00012651400000000118...</msg>
<status status="PASS" starttime="20201030 15:53:29.116" endtime="20201030 15:53:29.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:29.133" level="INFO">${ACCURACY} = {'diff': [0.00012569400000000258, 0.00012590200000000412, 0.00012574999999999392, 0.0001257360000000013, 0.0001259450000000023, 0.00012651400000000118, 0.00012642999999999682, 0.000125568999999999, 0....</msg>
<status status="PASS" starttime="20201030 15:53:29.126" endtime="20201030 15:53:29.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.144" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:53:29.142" endtime="20201030 15:53:29.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.149" level="INFO">VALUE: [0.00012569400000000258, 0.00012590200000000412, 0.00012574999999999392, 0.0001257360000000013, 0.0001259450000000023, 0.00012651400000000118, 0.00012642999999999682, 0.000125568999999999, 0.00012594400000000283, 0.0001265000000000016, 0.00012602800000000025, 0.00012586199999999742, 0.00012636099999999845, 0.0001257079999999952, 0.00012637500000000496, 0.0001259580000000024, 0.00012597199999999503, 0.000125778, 0.0001256109999999977, 0.0001260000000000011, 0.00012554199999999932, 0.00012569499999999512, 0.0001259309999999958, 0.00012574999999999392, 0.00012591699999999623, 0.00012559699999999813, 0.00012551400000000018, 0.00012586200000000436, 0.00012602700000000078, 0.00012548600000000104, 0.0001260689999999995, 0.00012597200000000197, 0.000125778, 0.0001261250000000047, 0.00012570800000000215, 0.00012580599999999914, 0.0001258889999999971, 0.0001257360000000013, 0.0001256250000000042, 0.0001263889999999976, 0.00012584699999999838, 0.00012575000000000086, 0.00012645900000000238, 0.00012586100000000489, 0.00012638900000000453, 0.00012565300000000335, 0.00012598600000000154, 0.00012640199999999768, 0.00012569399999999564, 0.00012602800000000025]</msg>
<status status="PASS" starttime="20201030 15:53:29.146" endtime="20201030 15:53:29.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.135" endtime="20201030 15:53:29.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.161" endtime="20201030 15:53:29.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.157" endtime="20201030 15:53:29.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.155" endtime="20201030 15:53:29.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.675" endtime="20201030 15:53:29.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.674" endtime="20201030 15:53:29.186"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.209" endtime="20201030 15:53:29.231"></status>
</kw>
<msg timestamp="20201030 15:53:29.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.205" endtime="20201030 15:53:29.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.234" endtime="20201030 15:53:29.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.240" endtime="20201030 15:53:29.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.198" endtime="20201030 15:53:29.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.193" endtime="20201030 15:53:29.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.263" endtime="20201030 15:53:29.592"></status>
</kw>
<msg timestamp="20201030 15:53:29.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040760556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.260" endtime="20201030 15:53:29.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040760556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.602" endtime="20201030 15:53:29.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.620" endtime="20201030 15:53:29.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.253" endtime="20201030 15:53:29.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.248" endtime="20201030 15:53:29.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:29.637" level="INFO">${RESULT} = [{'diff': 0.00012701299999999527}, {'diff': 0.0001266529999999974}, {'diff': 0.00012679200000000057}, {'diff': 0.0001273200000000002}, {'diff': 0.00012675000000000186}, {'diff': 0.00012715199999999843...</msg>
<status status="PASS" starttime="20201030 15:53:29.628" endtime="20201030 15:53:29.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:29.646" level="INFO">${ACCURACY} = {'diff': [0.00012701299999999527, 0.0001266529999999974, 0.00012679200000000057, 0.0001273200000000002, 0.00012675000000000186, 0.00012715199999999843, 0.00012659800000000554, 0.00012712499999999877, ...</msg>
<status status="PASS" starttime="20201030 15:53:29.639" endtime="20201030 15:53:29.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.657" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:53:29.654" endtime="20201030 15:53:29.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.662" level="INFO">VALUE: [0.00012701299999999527, 0.0001266529999999974, 0.00012679200000000057, 0.0001273200000000002, 0.00012675000000000186, 0.00012715199999999843, 0.00012659800000000554, 0.00012712499999999877, 0.0001264309999999963, 0.00012676400000000143, 0.00012712499999999877, 0.00012733399999999978, 0.00012726400000000193, 0.00012684699999999938, 0.0001273330000000003, 0.00012722299999999576, 0.00012666700000000392, 0.00012688900000000503, 0.00012702800000000125, 0.000126680000000004, 0.00012695900000000288, 0.0001271250000000057, 0.00012681900000000024, 0.00012704200000000082, 0.0001274580000000039, 0.00012737500000000596, 0.00012662499999999827, 0.00012701399999999474, 0.0001271109999999992, 0.00012741700000000467, 0.00012663899999999784, 0.00012688900000000503, 0.00012715199999999843, 0.00012712499999999877, 0.00012659699999999913, 0.00012677700000000153, 0.00012686099999999895, 0.00012751400000000218, 0.00012648700000000151, 0.00012684699999999938, 0.0001265979999999986, 0.00012740199999999868, 0.00012651399999999424, 0.00012692999999999732, 0.0001272230000000027, 0.00012672200000000272, 0.00012690299999999766, 0.00012679200000000057, 0.00012647200000000247, 0.00012680500000000067]</msg>
<status status="PASS" starttime="20201030 15:53:29.659" endtime="20201030 15:53:29.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.648" endtime="20201030 15:53:29.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.676" endtime="20201030 15:53:29.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.670" endtime="20201030 15:53:29.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.667" endtime="20201030 15:53:29.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.188" endtime="20201030 15:53:29.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.187" endtime="20201030 15:53:29.701"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.723" endtime="20201030 15:53:29.743"></status>
</kw>
<msg timestamp="20201030 15:53:29.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.720" endtime="20201030 15:53:29.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.746" endtime="20201030 15:53:29.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.753" endtime="20201030 15:53:29.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.713" endtime="20201030 15:53:29.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.707" endtime="20201030 15:53:29.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.776" endtime="20201030 15:53:30.108"></status>
</kw>
<msg timestamp="20201030 15:53:30.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039045514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039173528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.772" endtime="20201030 15:53:30.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039045514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039173528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:30.117" endtime="20201030 15:53:30.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.135" endtime="20201030 15:53:30.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.765" endtime="20201030 15:53:30.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.761" endtime="20201030 15:53:30.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:30.152" level="INFO">${RESULT} = [{'diff': 0.00012801399999999574}, {'diff': 0.00012851400000000318}, {'diff': 0.00012837500000000002}, {'diff': 0.00012779200000000157}, {'diff': 0.0001278330000000008}, {'diff': 0.0001278330000000008...</msg>
<status status="PASS" starttime="20201030 15:53:30.143" endtime="20201030 15:53:30.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:30.162" level="INFO">${ACCURACY} = {'diff': [0.00012801399999999574, 0.00012851400000000318, 0.00012837500000000002, 0.00012779200000000157, 0.0001278330000000008, 0.0001278330000000008, 0.00012841699999999873, 0.0001276529999999984, 0...</msg>
<status status="PASS" starttime="20201030 15:53:30.154" endtime="20201030 15:53:30.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.173" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:53:30.171" endtime="20201030 15:53:30.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.178" level="INFO">VALUE: [0.00012801399999999574, 0.00012851400000000318, 0.00012837500000000002, 0.00012779200000000157, 0.0001278330000000008, 0.0001278330000000008, 0.00012841699999999873, 0.0001276529999999984, 0.00012779200000000157, 0.00012751399999999524, 0.00012759700000000013, 0.00012841599999999925, 0.00012824999999999642, 0.00012769399999999764, 0.00012805500000000192, 0.00012808400000000053, 0.00012747199999999653, 0.00012747200000000347, 0.00012772299999999626, 0.00012769400000000458, 0.00012831900000000174, 0.00012807000000000096, 0.0001283189999999948, 0.000128165999999999, 0.00012790299999999866, 0.00012763799999999936, 0.00012759700000000013, 0.00012841700000000567, 0.00012765199999999893, 0.00012826400000000293, 0.00012823599999999685, 0.00012831900000000174, 0.00012802699999999584, 0.0001276529999999984, 0.00012847199999999753, 0.0001283330000000013, 0.0001280560000000014, 0.00012776300000000296, 0.00012842999999999882, 0.00012824999999999642, 0.00012740299999999816, 0.00012812499999999977, 0.00012779199999999463, 0.00012770900000000363, 0.00012751399999999524, 0.00012794499999999737, 0.000127569000000001, 0.00012822199999999728, 0.0001278480000000068, 0.0001280980000000001]</msg>
<status status="PASS" starttime="20201030 15:53:30.175" endtime="20201030 15:53:30.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.164" endtime="20201030 15:53:30.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:30.190" endtime="20201030 15:53:30.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.186" endtime="20201030 15:53:30.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.184" endtime="20201030 15:53:30.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.703" endtime="20201030 15:53:30.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.701" endtime="20201030 15:53:30.215"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.238" endtime="20201030 15:53:30.258"></status>
</kw>
<msg timestamp="20201030 15:53:30.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.234" endtime="20201030 15:53:30.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.261" endtime="20201030 15:53:30.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.268" endtime="20201030 15:53:30.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.227" endtime="20201030 15:53:30.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.222" endtime="20201030 15:53:30.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.291" endtime="20201030 15:53:30.620"></status>
</kw>
<msg timestamp="20201030 15:53:30.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039138611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03926775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:30.287" endtime="20201030 15:53:30.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039138611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03926775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:30.629" endtime="20201030 15:53:30.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.647" endtime="20201030 15:53:30.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.280" endtime="20201030 15:53:30.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.276" endtime="20201030 15:53:30.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:30.664" level="INFO">${RESULT} = [{'diff': 0.00012913900000000034}, {'diff': 0.00012895799999999846}, {'diff': 0.00012948600000000504}, {'diff': 0.000129166}, {'diff': 0.0001293059999999957}, {'diff': 0.0001293200000000022}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:53:30.655" endtime="20201030 15:53:30.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:30.675" level="INFO">${ACCURACY} = {'diff': [0.00012913900000000034, 0.00012895799999999846, 0.00012948600000000504, 0.000129166, 0.0001293059999999957, 0.0001293200000000022, 0.00012936100000000145, 0.00012897199999999803, 0.000129207...</msg>
<status status="PASS" starttime="20201030 15:53:30.666" endtime="20201030 15:53:30.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.685" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:53:30.683" endtime="20201030 15:53:30.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.691" level="INFO">VALUE: [0.00012913900000000034, 0.00012895799999999846, 0.00012948600000000504, 0.000129166, 0.0001293059999999957, 0.0001293200000000022, 0.00012936100000000145, 0.00012897199999999803, 0.0001292079999999987, 0.00012934800000000135, 0.000128778000000003, 0.00012937500000000102, 0.00012940300000000016, 0.0001292769999999971, 0.0001288890000000001, 0.0001286659999999995, 0.00012936100000000145, 0.00012922199999999828, 0.00012908400000000153, 0.0001288479999999939, 0.0001292780000000035, 0.0001289309999999988, 0.00012924999999999742, 0.0001291110000000012, 0.00012856999999999452, 0.00012927799999999656, 0.00012876400000000343, 0.0001293330000000023, 0.00012937499999999408, 0.00012937500000000102, 0.0001287360000000043, 0.00012940300000000016, 0.0001292079999999987, 0.00012849999999999667, 0.00012926400000000393, 0.00012922200000000522, 0.0001288890000000001, 0.00012936100000000145, 0.000128778000000003, 0.00012920800000000565, 0.00012877799999999606, 0.00012945899999999844, 0.00012897200000000497, 0.00012857000000000146, 0.00012954100000000385, 0.00012887499999999358, 0.00012936100000000145, 0.0001292079999999987, 0.00012948600000000504, 0.0001291529999999999]</msg>
<status status="PASS" starttime="20201030 15:53:30.688" endtime="20201030 15:53:30.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.676" endtime="20201030 15:53:30.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:30.703" endtime="20201030 15:53:30.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.699" endtime="20201030 15:53:30.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.697" endtime="20201030 15:53:30.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.217" endtime="20201030 15:53:30.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.216" endtime="20201030 15:53:30.728"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.751" endtime="20201030 15:53:30.771"></status>
</kw>
<msg timestamp="20201030 15:53:30.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.747" endtime="20201030 15:53:30.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.774" endtime="20201030 15:53:30.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.781" endtime="20201030 15:53:30.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.740" endtime="20201030 15:53:30.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.734" endtime="20201030 15:53:30.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.804" endtime="20201030 15:53:31.139"></status>
</kw>
<msg timestamp="20201030 15:53:31.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039143528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039273569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:30.800" endtime="20201030 15:53:31.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039143528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039273569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.148" endtime="20201030 15:53:31.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.166" endtime="20201030 15:53:31.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.793" endtime="20201030 15:53:31.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.789" endtime="20201030 15:53:31.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:31.183" level="INFO">${RESULT} = [{'diff': 0.00013004100000000435}, {'diff': 0.0001298880000000016}, {'diff': 0.000130472999999999}, {'diff': 0.00013022199999999928}, {'diff': 0.0001298890000000011}, {'diff': 0.00013031900000000374},...</msg>
<status status="PASS" starttime="20201030 15:53:31.174" endtime="20201030 15:53:31.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:31.192" level="INFO">${ACCURACY} = {'diff': [0.00013004100000000435, 0.0001298880000000016, 0.000130472999999999, 0.00013022199999999928, 0.0001298890000000011, 0.00013031900000000374, 0.00013013900000000134, 0.00013001400000000468, 0....</msg>
<status status="PASS" starttime="20201030 15:53:31.185" endtime="20201030 15:53:31.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.203" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:53:31.201" endtime="20201030 15:53:31.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.208" level="INFO">VALUE: [0.00013004100000000435, 0.0001298880000000016, 0.000130472999999999, 0.00013022199999999928, 0.0001298890000000011, 0.00013031900000000374, 0.00013013900000000134, 0.00013001400000000468, 0.00013002699999999784, 0.0001295560000000029, 0.00013015200000000143, 0.0001295969999999952, 0.00013043000000000082, 0.00013005599999999645, 0.00013037500000000202, 0.00013009700000000263, 0.00013008300000000306, 0.00012997199999999903, 0.00012972199999999878, 0.00013040300000000116, 0.0001299439999999999, 0.0001297639999999975, 0.00013029199999999713, 0.00013036100000000245, 0.0001301110000000022, 0.00012972200000000572, 0.00013044499999999987, 0.00013022299999999876, 0.00012955499999999648, 0.00013036100000000245, 0.00013033299999999637, 0.00012956899999999605, 0.00013022199999999928, 0.0001300000000000051, 0.00012976400000000443, 0.00013016700000000048, 0.00013029199999999713, 0.00012998699999999808, 0.0001295560000000029, 0.00013045899999999944, 0.00013016700000000048, 0.00012972200000000572, 0.00013040300000000116, 0.00012980500000000367, 0.0001298059999999962, 0.00012994499999999937, 0.00012970800000000615, 0.00013012500000000177, 0.00012987499999999458, 0.00013038899999999465]</msg>
<status status="PASS" starttime="20201030 15:53:31.205" endtime="20201030 15:53:31.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.194" endtime="20201030 15:53:31.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.220" endtime="20201030 15:53:31.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.216" endtime="20201030 15:53:31.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.213" endtime="20201030 15:53:31.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.730" endtime="20201030 15:53:31.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.729" endtime="20201030 15:53:31.245"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.267" endtime="20201030 15:53:31.290"></status>
</kw>
<msg timestamp="20201030 15:53:31.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.264" endtime="20201030 15:53:31.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.293" endtime="20201030 15:53:31.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.299" endtime="20201030 15:53:31.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.257" endtime="20201030 15:53:31.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.251" endtime="20201030 15:53:31.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.322" endtime="20201030 15:53:31.652"></status>
</kw>
<msg timestamp="20201030 15:53:31.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04072275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040854153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:31.319" endtime="20201030 15:53:31.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04072275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040854153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:31.661" endtime="20201030 15:53:31.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.679" endtime="20201030 15:53:31.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.312" endtime="20201030 15:53:31.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.307" endtime="20201030 15:53:31.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:31.696" level="INFO">${RESULT} = [{'diff': 0.00013140299999999522}, {'diff': 0.00013134700000000388}, {'diff': 0.0001307080000000002}, {'diff': 0.00013069500000000012}, {'diff': 0.00013056899999999705}, {'diff': 0.0001313340000000037...</msg>
<status status="PASS" starttime="20201030 15:53:31.688" endtime="20201030 15:53:31.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:31.705" level="INFO">${ACCURACY} = {'diff': [0.00013140299999999522, 0.00013134700000000388, 0.0001307080000000002, 0.00013069500000000012, 0.00013056899999999705, 0.00013133400000000378, 0.00013087499999999558, 0.00013083400000000328,...</msg>
<status status="PASS" starttime="20201030 15:53:31.698" endtime="20201030 15:53:31.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.716" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:53:31.714" endtime="20201030 15:53:31.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.721" level="INFO">VALUE: [0.00013140299999999522, 0.00013134700000000388, 0.0001307080000000002, 0.00013069500000000012, 0.00013056899999999705, 0.00013133400000000378, 0.00013087499999999558, 0.00013083400000000328, 0.00013055499999999748, 0.00013136100000000345, 0.0001314860000000001, 0.00013112499999999583, 0.00013147200000000053, 0.00013119500000000062, 0.00013090300000000166, 0.00013066700000000098, 0.00013143000000000182, 0.00013077799999999806, 0.00013116700000000148, 0.00013122200000000028, 0.00013136100000000345, 0.00013061099999999576, 0.00013072199999999978, 0.00013119500000000062, 0.0001309859999999996, 0.00013101399999999874, 0.00013116699999999454, 0.00013118100000000105, 0.0001311530000000019, 0.0001313200000000042, 0.0001305409999999979, 0.0001311110000000032, 0.00013097200000000003, 0.00013099999999999917, 0.00013073599999999935, 0.00013145800000000096, 0.00013108400000000353, 0.00013145799999999402, 0.00013083399999999634, 0.00013095800000000046, 0.0001313059999999977, 0.00013136100000000345, 0.0001310560000000044, 0.0001311809999999941, 0.0001315279999999988, 0.0001310409999999984, 0.0001308189999999973, 0.00013056899999999705, 0.00013090300000000166, 0.00013083399999999634]</msg>
<status status="PASS" starttime="20201030 15:53:31.719" endtime="20201030 15:53:31.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.707" endtime="20201030 15:53:31.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.735" endtime="20201030 15:53:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.730" endtime="20201030 15:53:31.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.727" endtime="20201030 15:53:31.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.247" endtime="20201030 15:53:31.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.246" endtime="20201030 15:53:31.760"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.782" endtime="20201030 15:53:31.803"></status>
</kw>
<msg timestamp="20201030 15:53:31.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.779" endtime="20201030 15:53:31.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.806" endtime="20201030 15:53:31.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.813" endtime="20201030 15:53:31.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.772" endtime="20201030 15:53:31.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.766" endtime="20201030 15:53:31.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.835" endtime="20201030 15:53:32.167"></status>
</kw>
<msg timestamp="20201030 15:53:32.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039069361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039201583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.832" endtime="20201030 15:53:32.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039069361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039201583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:32.176" endtime="20201030 15:53:32.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.193" endtime="20201030 15:53:32.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.825" endtime="20201030 15:53:32.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.821" endtime="20201030 15:53:32.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:32.210" level="INFO">${RESULT} = [{'diff': 0.00013222200000000128}, {'diff': 0.0001323330000000053}, {'diff': 0.000132264}, {'diff': 0.00013201300000000027}, {'diff': 0.00013169500000000112}, {'diff': 0.00013238899999999665}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:53:32.202" endtime="20201030 15:53:32.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:32.221" level="INFO">${ACCURACY} = {'diff': [0.00013222200000000128, 0.0001323330000000053, 0.000132264, 0.00013201300000000027, 0.00013169500000000112, 0.00013238899999999665, 0.00013231999999999827, 0.00013200000000000017, 0.00013257...</msg>
<status status="PASS" starttime="20201030 15:53:32.212" endtime="20201030 15:53:32.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.232" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:53:32.229" endtime="20201030 15:53:32.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.237" level="INFO">VALUE: [0.00013222200000000128, 0.0001323330000000053, 0.000132264, 0.00013201300000000027, 0.00013169500000000112, 0.00013238899999999665, 0.00013231999999999827, 0.00013200000000000017, 0.00013257000000000546, 0.00013151399999999924, 0.0001321809999999951, 0.00013225000000000042, 0.0001323890000000036, 0.00013241700000000273, 0.00013238899999999665, 0.0001320980000000041, 0.00013172199999999384, 0.00013195900000000094, 0.0001318890000000031, 0.00013245800000000196, 0.00013227799999999956, 0.00013204200000000582, 0.00013245799999999502, 0.00013190199999999624, 0.0001323059999999987, 0.00013205499999999898, 0.000132473000000001, 0.00013212499999999683, 0.00013161099999999676, 0.0001322080000000017, 0.00013168000000000207, 0.00013205599999999845, 0.00013222200000000128, 0.00013181999999999777, 0.00013156899999999805, 0.0001319860000000006, 0.00013229199999999913, 0.0001316660000000025, 0.00013241700000000273, 0.00013168000000000207, 0.00013227799999999956, 0.00013238899999999665, 0.00013200000000000017, 0.0001323059999999987, 0.00013166699999999504, 0.00013154199999999838, 0.00013208299999999812, 0.00013208400000000453, 0.00013230499999999923, 0.00013248599999999416]</msg>
<status status="PASS" starttime="20201030 15:53:32.234" endtime="20201030 15:53:32.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.223" endtime="20201030 15:53:32.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:32.249" endtime="20201030 15:53:32.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.245" endtime="20201030 15:53:32.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.242" endtime="20201030 15:53:32.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.762" endtime="20201030 15:53:32.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.761" endtime="20201030 15:53:32.274"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.296" endtime="20201030 15:53:32.317"></status>
</kw>
<msg timestamp="20201030 15:53:32.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.293" endtime="20201030 15:53:32.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.321" endtime="20201030 15:53:32.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.327" endtime="20201030 15:53:32.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.286" endtime="20201030 15:53:32.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.280" endtime="20201030 15:53:32.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.350" endtime="20201030 15:53:32.680"></status>
</kw>
<msg timestamp="20201030 15:53:32.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039321625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039454319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:32.346" endtime="20201030 15:53:32.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039321625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039454319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:32.689" endtime="20201030 15:53:32.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.707" endtime="20201030 15:53:32.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.339" endtime="20201030 15:53:32.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.335" endtime="20201030 15:53:32.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:32.724" level="INFO">${RESULT} = [{'diff': 0.00013269400000000264}, {'diff': 0.00013329100000000066}, {'diff': 0.00013324999999999448}, {'diff': 0.0001334860000000021}, {'diff': 0.00013284700000000538}, {'diff': 0.0001333329999999993...</msg>
<status status="PASS" starttime="20201030 15:53:32.715" endtime="20201030 15:53:32.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:32.734" level="INFO">${ACCURACY} = {'diff': [0.00013269400000000264, 0.00013329100000000066, 0.00013324999999999448, 0.0001334860000000021, 0.00013284700000000538, 0.00013333299999999937, 0.000132860999999998, 0.00013262500000000427, 0...</msg>
<status status="PASS" starttime="20201030 15:53:32.726" endtime="20201030 15:53:32.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.746" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:53:32.743" endtime="20201030 15:53:32.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.751" level="INFO">VALUE: [0.00013269400000000264, 0.00013329100000000066, 0.00013324999999999448, 0.0001334860000000021, 0.00013284700000000538, 0.00013333299999999937, 0.000132860999999998, 0.00013262500000000427, 0.00013293000000000332, 0.00013275000000000092, 0.00013350000000000167, 0.00013298599999999466, 0.00013306899999999955, 0.00013280499999999973, 0.0001331530000000039, 0.0001330410000000004, 0.00013300000000000117, 0.00013277800000000006, 0.0001326110000000047, 0.0001331110000000052, 0.0001328189999999993, 0.0001326389999999969, 0.00013274999999999398, 0.0001328059999999992, 0.000132651999999997, 0.00013259700000000513, 0.0001331110000000052, 0.00013333299999999937, 0.00013261199999999723, 0.00013268100000000255, 0.00013305599999999945, 0.00013317999999999663, 0.00013333299999999937, 0.0001326389999999969, 0.0001326660000000035, 0.00013277800000000006, 0.00013355599999999995, 0.00013306899999999955, 0.00013337499999999808, 0.00013250000000000067, 0.00013269499999999518, 0.00013245799999999502, 0.00013340300000000416, 0.00013273600000000135, 0.00013297200000000203, 0.00013281999999999877, 0.00013267999999999613, 0.00013259799999999766, 0.0001328189999999993, 0.0001327640000000005]</msg>
<status status="PASS" starttime="20201030 15:53:32.748" endtime="20201030 15:53:32.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.736" endtime="20201030 15:53:32.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:32.763" endtime="20201030 15:53:32.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.759" endtime="20201030 15:53:32.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.756" endtime="20201030 15:53:32.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.276" endtime="20201030 15:53:32.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.275" endtime="20201030 15:53:32.788"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.810" endtime="20201030 15:53:32.831"></status>
</kw>
<msg timestamp="20201030 15:53:32.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.807" endtime="20201030 15:53:32.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.834" endtime="20201030 15:53:32.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.841" endtime="20201030 15:53:32.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.800" endtime="20201030 15:53:32.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.794" endtime="20201030 15:53:32.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.864" endtime="20201030 15:53:33.204"></status>
</kw>
<msg timestamp="20201030 15:53:33.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039223958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039358097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:32.860" endtime="20201030 15:53:33.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039223958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039358097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.215" endtime="20201030 15:53:33.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.236" endtime="20201030 15:53:33.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.853" endtime="20201030 15:53:33.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.849" endtime="20201030 15:53:33.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:33.256" level="INFO">${RESULT} = [{'diff': 0.0001341389999999984}, {'diff': 0.00013450000000000267}, {'diff': 0.000134473000000003}, {'diff': 0.00013368000000000407}, {'diff': 0.00013377800000000106}, {'diff': 0.00013440300000000516}...</msg>
<status status="PASS" starttime="20201030 15:53:33.247" endtime="20201030 15:53:33.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:33.267" level="INFO">${ACCURACY} = {'diff': [0.0001341389999999984, 0.00013450000000000267, 0.000134473000000003, 0.00013368000000000407, 0.00013377800000000106, 0.00013440300000000516, 0.00013374999999999498, 0.00013395799999999652, 0...</msg>
<status status="PASS" starttime="20201030 15:53:33.259" endtime="20201030 15:53:33.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.277" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:53:33.275" endtime="20201030 15:53:33.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.283" level="INFO">VALUE: [0.0001341389999999984, 0.00013450000000000267, 0.000134473000000003, 0.00013368000000000407, 0.00013377800000000106, 0.00013440300000000516, 0.00013374999999999498, 0.00013395799999999652, 0.00013440299999999822, 0.00013418100000000405, 0.00013429200000000113, 0.00013365299999999747, 0.00013440299999999822, 0.00013434699999999994, 0.0001341389999999984, 0.0001344440000000044, 0.00013451400000000224, 0.00013391600000000475, 0.0001343060000000007, 0.00013359799999999866, 0.0001344169999999978, 0.00013440299999999822, 0.00013404200000000088, 0.00013452700000000234, 0.00013386199999999848, 0.00013412499999999883, 0.00013449999999999573, 0.00013422200000000328, 0.00013370899999999575, 0.00013373599999999541, 0.00013418100000000405, 0.00013383299999999987, 0.00013390300000000466, 0.00013375000000000192, 0.00013366700000000398, 0.00013429200000000113, 0.00013365200000000493, 0.00013443099999999736, 0.00013412499999999883, 0.0001341939999999972, 0.00013379099999999422, 0.00013370899999999575, 0.00013394499999999643, 0.0001335410000000009, 0.0001335969999999992, 0.00013377800000000106, 0.00013369400000000364, 0.00013391700000000423, 0.00013451400000000224, 0.00013449999999999573]</msg>
<status status="PASS" starttime="20201030 15:53:33.280" endtime="20201030 15:53:33.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.268" endtime="20201030 15:53:33.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:33.300" endtime="20201030 15:53:33.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.293" endtime="20201030 15:53:33.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.289" endtime="20201030 15:53:33.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.790" endtime="20201030 15:53:33.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.789" endtime="20201030 15:53:33.354"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.411" endtime="20201030 15:53:33.506"></status>
</kw>
<msg timestamp="20201030 15:53:33.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.408" endtime="20201030 15:53:33.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.509" endtime="20201030 15:53:33.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.516" endtime="20201030 15:53:33.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.401" endtime="20201030 15:53:33.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.384" endtime="20201030 15:53:33.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.538" endtime="20201030 15:53:33.879"></status>
</kw>
<msg timestamp="20201030 15:53:33.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.176512639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.176647694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.535" endtime="20201030 15:53:33.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.176512639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.176647694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.888" endtime="20201030 15:53:33.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.906" endtime="20201030 15:53:33.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.528" endtime="20201030 15:53:33.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.524" endtime="20201030 15:53:33.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:33.923" level="INFO">${RESULT} = [{'diff': 0.00013505499999999504}, {'diff': 0.00013555500000000942}, {'diff': 0.00013481999999997996}, {'diff': 0.00013555499999998166}, {'diff': 0.00013499999999999623}, {'diff': 0.000135499999999982...</msg>
<status status="PASS" starttime="20201030 15:53:33.915" endtime="20201030 15:53:33.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:33.932" level="INFO">${ACCURACY} = {'diff': [0.00013505499999999504, 0.00013555500000000942, 0.00013481999999997996, 0.00013555499999998166, 0.00013499999999999623, 0.00013549999999998286, 0.00013505499999999504, 0.00013511099999999332...</msg>
<status status="PASS" starttime="20201030 15:53:33.925" endtime="20201030 15:53:33.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.944" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:53:33.942" endtime="20201030 15:53:33.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.949" level="INFO">VALUE: [0.00013505499999999504, 0.00013555500000000942, 0.00013481999999997996, 0.00013555499999998166, 0.00013499999999999623, 0.00013549999999998286, 0.00013505499999999504, 0.00013511099999999332, 0.00013476399999998168, 0.00013527799999998869, 0.00013458299999999368, 0.00013452800000002263, 0.00013542999999999195, 0.0001345000000000096, 0.0001351119999999928, 0.00013513900000000634, 0.0001349860000000036, 0.00013537499999999314, 0.00013480599999998732, 0.00013459800000001354, 0.00013531899999999486, 0.00013549999999998286, 0.00013540300000000616, 0.00013474999999998905, 0.00013543100000001917, 0.00013465199999998512, 0.00013494399999999795, 0.00013498700000000308, 0.0001353610000000005, 0.00013529199999998132, 0.0001350970000000007, 0.0001354869999999897, 0.0001345560000000079, 0.0001353610000000005, 0.0001355000000000106, 0.00013505499999999504, 0.00013534800000000735, 0.00013499999999999623, 0.00013497200000001097, 0.00013488899999999915, 0.00013533300000001525, 0.00013497200000001097, 0.0001355419999999885, 0.00013468100000002536, 0.0001354719999999976, 0.00013491700000001217, 0.00013504200000000188, 0.00013494499999999743, 0.0001352910000000096, 0.00013470800000001115]</msg>
<status status="PASS" starttime="20201030 15:53:33.946" endtime="20201030 15:53:33.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.934" endtime="20201030 15:53:33.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:33.962" endtime="20201030 15:53:33.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.957" endtime="20201030 15:53:33.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.955" endtime="20201030 15:53:33.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.363" endtime="20201030 15:53:33.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.357" endtime="20201030 15:53:33.986"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.009" endtime="20201030 15:53:34.030"></status>
</kw>
<msg timestamp="20201030 15:53:34.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.006" endtime="20201030 15:53:34.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.033" endtime="20201030 15:53:34.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.039" endtime="20201030 15:53:34.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.998" endtime="20201030 15:53:34.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.993" endtime="20201030 15:53:34.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.062" endtime="20201030 15:53:34.393"></status>
</kw>
<msg timestamp="20201030 15:53:34.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039313014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039449278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.059" endtime="20201030 15:53:34.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039313014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039449278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.402" endtime="20201030 15:53:34.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.420" endtime="20201030 15:53:34.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.052" endtime="20201030 15:53:34.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.047" endtime="20201030 15:53:34.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:34.436" level="INFO">${RESULT} = [{'diff': 0.00013626399999999705}, {'diff': 0.0001359310000000058}, {'diff': 0.00013555500000000248}, {'diff': 0.00013600000000000417}, {'diff': 0.00013555600000000195}, {'diff': 0.0001355269999999964...</msg>
<status status="PASS" starttime="20201030 15:53:34.428" endtime="20201030 15:53:34.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:34.447" level="INFO">${ACCURACY} = {'diff': [0.00013626399999999705, 0.0001359310000000058, 0.00013555500000000248, 0.00013600000000000417, 0.00013555600000000195, 0.0001355269999999964, 0.0001358469999999945, 0.00013551400000000324, 0...</msg>
<status status="PASS" starttime="20201030 15:53:34.439" endtime="20201030 15:53:34.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.458" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:53:34.456" endtime="20201030 15:53:34.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.463" level="INFO">VALUE: [0.00013626399999999705, 0.0001359310000000058, 0.00013555500000000248, 0.00013600000000000417, 0.00013555600000000195, 0.0001355269999999964, 0.0001358469999999945, 0.00013551400000000324, 0.0001364719999999986, 0.0001359719999999981, 0.000135861000000001, 0.00013590200000000024, 0.0001363610000000015, 0.00013584700000000144, 0.0001355970000000012, 0.00013551299999999683, 0.00013629200000000313, 0.00013561100000000076, 0.0001363049999999963, 0.00013562500000000033, 0.00013575000000000392, 0.00013574999999999698, 0.00013638900000000065, 0.00013570799999999827, 0.00013637500000000108, 0.0001357770000000036, 0.00013559800000000066, 0.0001356809999999986, 0.00013584700000000144, 0.00013605600000000245, 0.00013637500000000108, 0.00013643099999999936, 0.00013615299999999997, 0.00013579100000000316, 0.00013608300000000212, 0.00013556900000000205, 0.00013577799999999612, 0.0001358049999999958, 0.00013594399999999895, 0.00013576399999999655, 0.00013644399999999945, 0.00013549999999999673, 0.00013588900000000015, 0.000135861000000001, 0.00013602799999999637, 0.00013558299999999468, 0.00013583300000000187, 0.00013605500000000298, 0.00013654099999999697, 0.00013555599999999501]</msg>
<status status="PASS" starttime="20201030 15:53:34.460" endtime="20201030 15:53:34.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.449" endtime="20201030 15:53:34.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:34.476" endtime="20201030 15:53:34.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.471" endtime="20201030 15:53:34.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.469" endtime="20201030 15:53:34.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.988" endtime="20201030 15:53:34.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.987" endtime="20201030 15:53:34.500"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.523" endtime="20201030 15:53:34.543"></status>
</kw>
<msg timestamp="20201030 15:53:34.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.519" endtime="20201030 15:53:34.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.547" endtime="20201030 15:53:34.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.553" endtime="20201030 15:53:34.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.512" endtime="20201030 15:53:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.507" endtime="20201030 15:53:34.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.576" endtime="20201030 15:53:34.908"></status>
</kw>
<msg timestamp="20201030 15:53:34.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038989917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039126597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.573" endtime="20201030 15:53:34.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038989917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039126597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.917" endtime="20201030 15:53:34.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.935" endtime="20201030 15:53:34.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.565" endtime="20201030 15:53:34.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.561" endtime="20201030 15:53:34.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:34.952" level="INFO">${RESULT} = [{'diff': 0.00013668000000000013}, {'diff': 0.00013724999999999848}, {'diff': 0.00013732000000000327}, {'diff': 0.00013699999999999823}, {'diff': 0.00013661100000000176}, {'diff': 0.000136764000000004...</msg>
<status status="PASS" starttime="20201030 15:53:34.943" endtime="20201030 15:53:34.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:34.961" level="INFO">${ACCURACY} = {'diff': [0.00013668000000000013, 0.00013724999999999848, 0.00013732000000000327, 0.00013699999999999823, 0.00013661100000000176, 0.0001367640000000045, 0.00013722199999999934, 0.00013722199999999934,...</msg>
<status status="PASS" starttime="20201030 15:53:34.954" endtime="20201030 15:53:34.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.972" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:53:34.970" endtime="20201030 15:53:34.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.977" level="INFO">VALUE: [0.00013668000000000013, 0.00013724999999999848, 0.00013732000000000327, 0.00013699999999999823, 0.00013661100000000176, 0.0001367640000000045, 0.00013722199999999934, 0.00013722199999999934, 0.00013676399999999755, 0.0001371520000000015, 0.0001368190000000033, 0.00013659699999999525, 0.00013723599999999891, 0.00013707000000000302, 0.0001370139999999978, 0.0001374719999999996, 0.0001366249999999944, 0.0001366939999999997, 0.00013743099999999342, 0.00013737500000000208, 0.00013676399999999755, 0.00013758299999999668, 0.00013697299999999857, 0.00013695799999999952, 0.0001366390000000009, 0.0001375139999999983, 0.00013724999999999848, 0.00013680500000000373, 0.00013743000000000088, 0.00013680500000000373, 0.00013727800000000456, 0.00013724999999999848, 0.0001368190000000033, 0.00013731999999999633, 0.00013698599999999866, 0.00013720899999999925, 0.0001374719999999996, 0.00013743000000000088, 0.00013702799999999737, 0.0001370280000000043, 0.00013744499999999993, 0.000137346999999996, 0.0001370689999999966, 0.00013712500000000183, 0.00013730500000000423, 0.00013675000000000492, 0.0001366939999999997, 0.00013716700000000054, 0.00013654200000000338, 0.00013745800000000002]</msg>
<status status="PASS" starttime="20201030 15:53:34.974" endtime="20201030 15:53:34.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.963" endtime="20201030 15:53:34.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:34.989" endtime="20201030 15:53:35.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.985" endtime="20201030 15:53:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.983" endtime="20201030 15:53:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.502" endtime="20201030 15:53:35.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.501" endtime="20201030 15:53:35.014"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.036" endtime="20201030 15:53:35.057"></status>
</kw>
<msg timestamp="20201030 15:53:35.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.033" endtime="20201030 15:53:35.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.061" endtime="20201030 15:53:35.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.067" endtime="20201030 15:53:35.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.026" endtime="20201030 15:53:35.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.021" endtime="20201030 15:53:35.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.090" endtime="20201030 15:53:35.422"></status>
</kw>
<msg timestamp="20201030 15:53:35.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039211458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039348986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.086" endtime="20201030 15:53:35.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039211458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039348986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.431" endtime="20201030 15:53:35.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.449" endtime="20201030 15:53:35.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.079" endtime="20201030 15:53:35.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.075" endtime="20201030 15:53:35.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:35.466" level="INFO">${RESULT} = [{'diff': 0.0001375280000000048}, {'diff': 0.000138346999999997}, {'diff': 0.00013824999999999948}, {'diff': 0.0001377919999999977}, {'diff': 0.00013797299999999957}, {'diff': 0.00013776399999999855},...</msg>
<status status="PASS" starttime="20201030 15:53:35.457" endtime="20201030 15:53:35.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:35.475" level="INFO">${ACCURACY} = {'diff': [0.0001375280000000048, 0.000138346999999997, 0.00013824999999999948, 0.0001377919999999977, 0.00013797299999999957, 0.00013776399999999855, 0.00013830599999999776, 0.00013819399999999427, 0....</msg>
<status status="PASS" starttime="20201030 15:53:35.468" endtime="20201030 15:53:35.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.485" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:53:35.483" endtime="20201030 15:53:35.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.490" level="INFO">VALUE: [0.0001375280000000048, 0.000138346999999997, 0.00013824999999999948, 0.0001377919999999977, 0.00013797299999999957, 0.00013776399999999855, 0.00013830599999999776, 0.00013819399999999427, 0.00013780599999999726, 0.00013837499999999614, 0.00013823599999999991, 0.00013766600000000156, 0.00013793099999999392, 0.00013838900000000265, 0.00013791599999999488, 0.0001383049999999983, 0.00013766600000000156, 0.00013782000000000377, 0.00013845800000000102, 0.00013827699999999915, 0.00013793100000000086, 0.0001375970000000032, 0.00013802799999999837, 0.00013756900000000405, 0.00013758300000000362, 0.0001376390000000019, 0.00013843100000000136, 0.000138346999999997, 0.0001375970000000032, 0.00013790300000000172, 0.00013782000000000377, 0.00013836099999999657, 0.0001383339999999969, 0.00013794400000000095, 0.0001380840000000036, 0.0001378889999999952, 0.0001385139999999993, 0.00013795800000000052, 0.00013797299999999957, 0.00013852799999999887, 0.00013809699999999675, 0.0001381390000000024, 0.00013804200000000488, 0.00013783300000000387, 0.00013826399999999905, 0.0001377369999999989, 0.00013787499999999564, 0.00013827800000000556, 0.00013777699999999865, 0.00013780599999999726]</msg>
<status status="PASS" starttime="20201030 15:53:35.487" endtime="20201030 15:53:35.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.476" endtime="20201030 15:53:35.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:35.504" endtime="20201030 15:53:35.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.499" endtime="20201030 15:53:35.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.496" endtime="20201030 15:53:35.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.016" endtime="20201030 15:53:35.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.015" endtime="20201030 15:53:35.529"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.551" endtime="20201030 15:53:35.572"></status>
</kw>
<msg timestamp="20201030 15:53:35.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.548" endtime="20201030 15:53:35.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.575" endtime="20201030 15:53:35.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.582" endtime="20201030 15:53:35.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.541" endtime="20201030 15:53:35.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.535" endtime="20201030 15:53:35.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.604" endtime="20201030 15:53:35.934"></status>
</kw>
<msg timestamp="20201030 15:53:35.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039095889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.601" endtime="20201030 15:53:35.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039095889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.943" endtime="20201030 15:53:35.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.961" endtime="20201030 15:53:35.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.594" endtime="20201030 15:53:35.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.590" endtime="20201030 15:53:35.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:35.978" level="INFO">${RESULT} = [{'diff': 0.00013887499999999664}, {'diff': 0.00013952799999999987}, {'diff': 0.00013916599999999613}, {'diff': 0.00013887500000000358}, {'diff': 0.00013883400000000434}, {'diff': 0.000138666999999995...</msg>
<status status="PASS" starttime="20201030 15:53:35.970" endtime="20201030 15:53:35.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:35.988" level="INFO">${ACCURACY} = {'diff': [0.00013887499999999664, 0.00013952799999999987, 0.00013916599999999613, 0.00013887500000000358, 0.00013883400000000434, 0.0001386669999999951, 0.00013861100000000376, 0.00013886099999999707,...</msg>
<status status="PASS" starttime="20201030 15:53:35.980" endtime="20201030 15:53:35.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.999" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:53:35.997" endtime="20201030 15:53:36.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.006" level="INFO">VALUE: [0.00013887499999999664, 0.00013952799999999987, 0.00013916599999999613, 0.00013887500000000358, 0.00013883400000000434, 0.0001386669999999951, 0.00013861100000000376, 0.00013886099999999707, 0.00013909699999999775, 0.00013955599999999901, 0.0001393060000000057, 0.00013950000000000073, 0.00013929099999999972, 0.0001391249999999969, 0.00013923600000000091, 0.00013858299999999768, 0.00013859800000000366, 0.00013887500000000358, 0.0001387919999999987, 0.00013868000000000213, 0.00013881999999999783, 0.0001392370000000004, 0.0001386249999999964, 0.00013890300000000272, 0.0001386810000000016, 0.0001392919999999992, 0.00013876399999999955, 0.00013913800000000393, 0.0001386810000000016, 0.00013877799999999912, 0.00013863799999999649, 0.00013886099999999707, 0.00013913899999999646, 0.00013892999999999545, 0.0001391390000000034, 0.00013916700000000254, 0.0001394869999999937, 0.00013887500000000358, 0.00013915300000000297, 0.00013870800000000127, 0.00013920799999999484, 0.00013898600000000066, 0.0001391940000000022, 0.00013954099999999997, 0.0001394170000000028, 0.0001385139999999993, 0.00013945800000000202, 0.00013922200000000134, 0.00013907000000000502, 0.00013943099999999542]</msg>
<status status="PASS" starttime="20201030 15:53:36.002" endtime="20201030 15:53:36.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.990" endtime="20201030 15:53:36.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:36.019" endtime="20201030 15:53:36.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.015" endtime="20201030 15:53:36.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.013" endtime="20201030 15:53:36.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.531" endtime="20201030 15:53:36.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.530" endtime="20201030 15:53:36.044"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.067" endtime="20201030 15:53:36.088"></status>
</kw>
<msg timestamp="20201030 15:53:36.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.063" endtime="20201030 15:53:36.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.091" endtime="20201030 15:53:36.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.097" endtime="20201030 15:53:36.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.056" endtime="20201030 15:53:36.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.051" endtime="20201030 15:53:36.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.120" endtime="20201030 15:53:36.450"></status>
</kw>
<msg timestamp="20201030 15:53:36.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039313028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039452917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.117" endtime="20201030 15:53:36.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039313028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039452917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.459" endtime="20201030 15:53:36.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.477" endtime="20201030 15:53:36.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.110" endtime="20201030 15:53:36.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.105" endtime="20201030 15:53:36.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:36.494" level="INFO">${RESULT} = [{'diff': 0.0001398889999999972}, {'diff': 0.00014054100000000097}, {'diff': 0.00014027800000000062}, {'diff': 0.0001396390000000039}, {'diff': 0.00013983299999999893}, {'diff': 0.00014055600000000001...</msg>
<status status="PASS" starttime="20201030 15:53:36.486" endtime="20201030 15:53:36.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:36.505" level="INFO">${ACCURACY} = {'diff': [0.0001398889999999972, 0.00014054100000000097, 0.00014027800000000062, 0.0001396390000000039, 0.00013983299999999893, 0.00014055600000000001, 0.00014036199999999804, 0.00013965299999999653, ...</msg>
<status status="PASS" starttime="20201030 15:53:36.496" endtime="20201030 15:53:36.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.516" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:53:36.514" endtime="20201030 15:53:36.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.521" level="INFO">VALUE: [0.0001398889999999972, 0.00014054100000000097, 0.00014027800000000062, 0.0001396390000000039, 0.00013983299999999893, 0.00014055600000000001, 0.00014036199999999804, 0.00013965299999999653, 0.00013969500000000218, 0.00013986099999999807, 0.00013975000000000098, 0.00013963899999999696, 0.00013983299999999893, 0.00013983299999999893, 0.00014031999999999933, 0.00014011099999999832, 0.00014037499999999814, 0.000140346999999999, 0.00014026399999999412, 0.0001397219999999949, 0.00014008299999999918, 0.00013993100000000286, 0.00014031899999999986, 0.00013955499999999954, 0.00013959699999999825, 0.0001403050000000003, 0.00013997299999999463, 0.00014047199999999566, 0.0001400140000000008, 0.00013963799999999749, 0.00013997300000000157, 0.0001400140000000008, 0.00014058299999999968, 0.00014018000000000364, 0.00013994399999999602, 0.0001398339999999984, 0.00014045799999999609, 0.0001400689999999996, 0.00013970799999999534, 0.00013958299999999868, 0.00013973600000000141, 0.00014004100000000047, 0.00014043100000000336, 0.00014034799999999847, 0.00013991699999999635, 0.0001398889999999972, 0.0001399999999999943, 0.0001396390000000039, 0.00014040299999999728, 0.00014047300000000207]</msg>
<status status="PASS" starttime="20201030 15:53:36.518" endtime="20201030 15:53:36.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.507" endtime="20201030 15:53:36.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:36.533" endtime="20201030 15:53:36.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.529" endtime="20201030 15:53:36.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.527" endtime="20201030 15:53:36.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.046" endtime="20201030 15:53:36.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.045" endtime="20201030 15:53:36.558"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.580" endtime="20201030 15:53:36.601"></status>
</kw>
<msg timestamp="20201030 15:53:36.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.577" endtime="20201030 15:53:36.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.605" endtime="20201030 15:53:36.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.611" endtime="20201030 15:53:36.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.570" endtime="20201030 15:53:36.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.564" endtime="20201030 15:53:36.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.634" endtime="20201030 15:53:36.967"></status>
</kw>
<msg timestamp="20201030 15:53:36.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039049639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039190806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.631" endtime="20201030 15:53:36.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039049639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039190806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.976" endtime="20201030 15:53:36.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.994" endtime="20201030 15:53:36.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.623" endtime="20201030 15:53:36.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.619" endtime="20201030 15:53:37.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:37.011" level="INFO">${RESULT} = [{'diff': 0.00014116700000000454}, {'diff': 0.00014138799999999924}, {'diff': 0.00014115299999999803}, {'diff': 0.00014116700000000454}, {'diff': 0.0001406249999999984}, {'diff': 0.0001412500000000024...</msg>
<status status="PASS" starttime="20201030 15:53:37.003" endtime="20201030 15:53:37.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:37.020" level="INFO">${ACCURACY} = {'diff': [0.00014116700000000454, 0.00014138799999999924, 0.00014115299999999803, 0.00014116700000000454, 0.0001406249999999984, 0.00014125000000000248, 0.00014100000000000223, 0.00014083299999999993,...</msg>
<status status="PASS" starttime="20201030 15:53:37.013" endtime="20201030 15:53:37.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.031" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:53:37.029" endtime="20201030 15:53:37.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.036" level="INFO">VALUE: [0.00014116700000000454, 0.00014138799999999924, 0.00014115299999999803, 0.00014116700000000454, 0.0001406249999999984, 0.00014125000000000248, 0.00014100000000000223, 0.00014083299999999993, 0.00014148600000000316, 0.00014070799999999634, 0.00014077800000000112, 0.00014144400000000446, 0.00014137499999999914, 0.000141347, 0.00014059699999999925, 0.00014129199999999426, 0.00014051300000000183, 0.00014115199999999856, 0.00014072200000000284, 0.00014102800000000137, 0.00014094500000000343, 0.0001412219999999964, 0.0001413889999999987, 0.00014073599999999548, 0.00014141599999999838, 0.0001406669999999971, 0.0001407089999999958, 0.00014086099999999907, 0.00014063899999999796, 0.0001414999999999958, 0.00014120799999999684, 0.00014125000000000248, 0.00014098600000000266, 0.00014070799999999634, 0.00014065300000000447, 0.00014068000000000414, 0.00014115299999999803, 0.00014154200000000144, 0.00014127799999999469, 0.00014055600000000001, 0.00014134799999999947, 0.0001411810000000041, 0.00014075000000000198, 0.00014123600000000291, 0.00014129100000000172, 0.00014061099999999882, 0.00014050000000000173, 0.0001406249999999984, 0.00014140299999999828, 0.0001411669999999976]</msg>
<status status="PASS" starttime="20201030 15:53:37.033" endtime="20201030 15:53:37.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.022" endtime="20201030 15:53:37.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:37.048" endtime="20201030 15:53:37.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.044" endtime="20201030 15:53:37.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.042" endtime="20201030 15:53:37.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.560" endtime="20201030 15:53:37.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.559" endtime="20201030 15:53:37.073"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.095" endtime="20201030 15:53:37.118"></status>
</kw>
<msg timestamp="20201030 15:53:37.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.092" endtime="20201030 15:53:37.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.121" endtime="20201030 15:53:37.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.127" endtime="20201030 15:53:37.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.085" endtime="20201030 15:53:37.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.079" endtime="20201030 15:53:37.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.150" endtime="20201030 15:53:37.481"></status>
</kw>
<msg timestamp="20201030 15:53:37.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040523389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040665583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:37.147" endtime="20201030 15:53:37.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040523389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040665583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:37.490" endtime="20201030 15:53:37.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.508" endtime="20201030 15:53:37.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.140" endtime="20201030 15:53:37.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.135" endtime="20201030 15:53:37.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:37.525" level="INFO">${RESULT} = [{'diff': 0.00014219399999999827}, {'diff': 0.00014218099999999817}, {'diff': 0.00014241599999999938}, {'diff': 0.0001419720000000041}, {'diff': 0.00014200000000000323}, {'diff': 0.0001421249999999999...</msg>
<status status="PASS" starttime="20201030 15:53:37.516" endtime="20201030 15:53:37.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:37.534" level="INFO">${ACCURACY} = {'diff': [0.00014219399999999827, 0.00014218099999999817, 0.00014241599999999938, 0.0001419720000000041, 0.00014200000000000323, 0.0001421249999999999, 0.00014161099999999982, 0.00014227799999999569, ...</msg>
<status status="PASS" starttime="20201030 15:53:37.527" endtime="20201030 15:53:37.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.545" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:53:37.542" endtime="20201030 15:53:37.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.550" level="INFO">VALUE: [0.00014219399999999827, 0.00014218099999999817, 0.00014241599999999938, 0.0001419720000000041, 0.00014200000000000323, 0.0001421249999999999, 0.00014161099999999982, 0.00014227799999999569, 0.00014194399999999802, 0.00014225000000000348, 0.00014187499999999964, 0.00014230599999999483, 0.00014237500000000014, 0.00014242999999999895, 0.00014252799999999594, 0.00014169399999999777, 0.00014197299999999663, 0.00014231899999999492, 0.00014248599999999723, 0.0001418889999999992, 0.00014241699999999885, 0.00014234800000000047, 0.00014192999999999845, 0.0001421249999999999, 0.00014180599999999433, 0.00014255600000000201, 0.00014236100000000057, 0.00014224999999999655, 0.00014204200000000194, 0.0001416669999999981, 0.00014192999999999845, 0.00014190299999999878, 0.00014248600000000416, 0.00014204099999999553, 0.00014187499999999964, 0.00014172200000000384, 0.00014254200000000244, 0.00014173600000000341, 0.00014187499999999964, 0.00014223600000000391, 0.00014165300000000547, 0.0001425140000000033, 0.0001416249999999994, 0.00014233300000000143, 0.00014236100000000057, 0.0001417920000000017, 0.00014240299999999928, 0.00014245899999999756, 0.00014215299999999903, 0.0001420690000000016]</msg>
<status status="PASS" starttime="20201030 15:53:37.547" endtime="20201030 15:53:37.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.536" endtime="20201030 15:53:37.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:37.568" endtime="20201030 15:53:37.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.562" endtime="20201030 15:53:37.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.560" endtime="20201030 15:53:37.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.075" endtime="20201030 15:53:37.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.074" endtime="20201030 15:53:37.593"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.616" endtime="20201030 15:53:37.637"></status>
</kw>
<msg timestamp="20201030 15:53:37.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.612" endtime="20201030 15:53:37.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.640" endtime="20201030 15:53:37.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.646" endtime="20201030 15:53:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.605" endtime="20201030 15:53:37.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.599" endtime="20201030 15:53:37.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.669" endtime="20201030 15:53:37.999"></status>
</kw>
<msg timestamp="20201030 15:53:38.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039303, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039445903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:37.666" endtime="20201030 15:53:38.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039303, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039445903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:38.008" endtime="20201030 15:53:38.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.026" endtime="20201030 15:53:38.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.659" endtime="20201030 15:53:38.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.654" endtime="20201030 15:53:38.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:38.043" level="INFO">${RESULT} = [{'diff': 0.00014290299999999978}, {'diff': 0.00014286099999999413}, {'diff': 0.00014300000000000423}, {'diff': 0.000143444999999999}, {'diff': 0.00014308299999999524}, {'diff': 0.00014302699999999696...</msg>
<status status="PASS" starttime="20201030 15:53:38.034" endtime="20201030 15:53:38.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:38.053" level="INFO">${ACCURACY} = {'diff': [0.00014290299999999978, 0.00014286099999999413, 0.00014300000000000423, 0.000143444999999999, 0.00014308299999999524, 0.00014302699999999696, 0.00014343099999999942, 0.00014333300000000243, ...</msg>
<status status="PASS" starttime="20201030 15:53:38.045" endtime="20201030 15:53:38.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.064" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:53:38.062" endtime="20201030 15:53:38.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.069" level="INFO">VALUE: [0.00014290299999999978, 0.00014286099999999413, 0.00014300000000000423, 0.000143444999999999, 0.00014308299999999524, 0.00014302699999999696, 0.00014343099999999942, 0.00014333300000000243, 0.00014301399999999687, 0.0001428470000000015, 0.0001431799999999997, 0.00014337500000000114, 0.00014344399999999952, 0.00014275000000000398, 0.0001426250000000004, 0.000143444999999999, 0.00014311100000000132, 0.00014308400000000165, 0.00014340300000000028, 0.00014345899999999856, 0.00014347199999999866, 0.00014269399999999877, 0.00014294399999999902, 0.00014350000000000473, 0.00014304200000000294, 0.0001427219999999979, 0.00014281899999999542, 0.00014269499999999824, 0.00014327800000000362, 0.00014266599999999963, 0.00014270799999999834, 0.00014319399999999927, 0.00014309700000000175, 0.00014329099999999678, 0.00014283399999999447, 0.00014305599999999558, 0.00014338800000000124, 0.00014347199999999866, 0.00014269399999999877, 0.00014350000000000473, 0.00014348600000000516, 0.0001433199999999954, 0.00014302800000000337, 0.0001429020000000003, 0.00014355599999999608, 0.00014265299999999953, 0.00014347199999999866, 0.00014356999999999565, 0.00014286099999999413, 0.00014291699999999935]</msg>
<status status="PASS" starttime="20201030 15:53:38.066" endtime="20201030 15:53:38.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.055" endtime="20201030 15:53:38.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:38.081" endtime="20201030 15:53:38.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.077" endtime="20201030 15:53:38.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.075" endtime="20201030 15:53:38.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.595" endtime="20201030 15:53:38.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.594" endtime="20201030 15:53:38.106"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.129" endtime="20201030 15:53:38.150"></status>
</kw>
<msg timestamp="20201030 15:53:38.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.125" endtime="20201030 15:53:38.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.153" endtime="20201030 15:53:38.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.159" endtime="20201030 15:53:38.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.118" endtime="20201030 15:53:38.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.113" endtime="20201030 15:53:38.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.182" endtime="20201030 15:53:38.514"></status>
</kw>
<msg timestamp="20201030 15:53:38.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0394925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:38.179" endtime="20201030 15:53:38.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039348625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0394925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:38.523" endtime="20201030 15:53:38.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.541" endtime="20201030 15:53:38.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.172" endtime="20201030 15:53:38.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.167" endtime="20201030 15:53:38.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:38.558" level="INFO">${RESULT} = [{'diff': 0.00014387500000000164}, {'diff': 0.0001444020000000018}, {'diff': 0.0001438890000000012}, {'diff': 0.00014406999999999615}, {'diff': 0.00014419499999999974}, {'diff': 0.00014452800000000487...</msg>
<status status="PASS" starttime="20201030 15:53:38.549" endtime="20201030 15:53:38.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:38.572" level="INFO">${ACCURACY} = {'diff': [0.00014387500000000164, 0.0001444020000000018, 0.0001438890000000012, 0.00014406999999999615, 0.00014419499999999974, 0.00014452800000000487, 0.00014365300000000053, 0.00014377800000000412, ...</msg>
<status status="PASS" starttime="20201030 15:53:38.560" endtime="20201030 15:53:38.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.583" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:53:38.581" endtime="20201030 15:53:38.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.588" level="INFO">VALUE: [0.00014387500000000164, 0.0001444020000000018, 0.0001438890000000012, 0.00014406999999999615, 0.00014419499999999974, 0.00014452800000000487, 0.00014365300000000053, 0.00014377800000000412, 0.00014369399999999977, 0.00014362499999999445, 0.00014372200000000585, 0.00014401399999999787, 0.0001436250000000014, 0.00014386100000000207, 0.00014393099999999992, 0.00014408300000000318, 0.00014419499999999974, 0.00014433300000000343, 0.00014436100000000257, 0.00014401399999999787, 0.00014370799999999934, 0.00014440300000000128, 0.00014359800000000172, 0.0001444999999999988, 0.00014373599999999848, 0.0001443199999999964, 0.00014397299999999863, 0.00014383300000000293, 0.00014434699999999606, 0.0001442089999999993, 0.00014380499999999685, 0.00014444400000000052, 0.0001440140000000048, 0.00014362499999999445, 0.00014440300000000128, 0.00014441600000000138, 0.00014440199999999487, 0.00014369399999999977, 0.000144347000000003, 0.00014447199999999966, 0.00014366600000000063, 0.00014381900000000336, 0.00014387500000000164, 0.0001436670000000001, 0.00014413899999999452, 0.00014444400000000052, 0.00014373599999999848, 0.00014395899999999906, 0.00014427799999999769, 0.0001436250000000014]</msg>
<status status="PASS" starttime="20201030 15:53:38.585" endtime="20201030 15:53:38.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.574" endtime="20201030 15:53:38.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:38.601" endtime="20201030 15:53:38.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.596" endtime="20201030 15:53:38.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.594" endtime="20201030 15:53:38.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.108" endtime="20201030 15:53:38.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.107" endtime="20201030 15:53:38.626"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.648" endtime="20201030 15:53:38.669"></status>
</kw>
<msg timestamp="20201030 15:53:38.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.645" endtime="20201030 15:53:38.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.672" endtime="20201030 15:53:38.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.679" endtime="20201030 15:53:38.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.638" endtime="20201030 15:53:38.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.632" endtime="20201030 15:53:38.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.701" endtime="20201030 15:53:39.035"></status>
</kw>
<msg timestamp="20201030 15:53:39.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039082278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039227097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:38.698" endtime="20201030 15:53:39.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039082278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039227097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:39.045" endtime="20201030 15:53:39.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.063" endtime="20201030 15:53:39.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.691" endtime="20201030 15:53:39.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.687" endtime="20201030 15:53:39.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:39.080" level="INFO">${RESULT} = [{'diff': 0.00014481900000000436}, {'diff': 0.00014476399999999862}, {'diff': 0.0001445419999999975}, {'diff': 0.0001454999999999998}, {'diff': 0.00014466600000000163}, {'diff': 0.00014540299999999534...</msg>
<status status="PASS" starttime="20201030 15:53:39.071" endtime="20201030 15:53:39.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:39.089" level="INFO">${ACCURACY} = {'diff': [0.00014481900000000436, 0.00014476399999999862, 0.0001445419999999975, 0.0001454999999999998, 0.00014466600000000163, 0.00014540299999999534, 0.00014548600000000023, 0.00014532000000000433, ...</msg>
<status status="PASS" starttime="20201030 15:53:39.082" endtime="20201030 15:53:39.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.100" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:53:39.097" endtime="20201030 15:53:39.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.105" level="INFO">VALUE: [0.00014481900000000436, 0.00014476399999999862, 0.0001445419999999975, 0.0001454999999999998, 0.00014466600000000163, 0.00014540299999999534, 0.00014548600000000023, 0.00014532000000000433, 0.00014497200000000016, 0.00014545800000000109, 0.00014497200000000016, 0.00014531899999999792, 0.00014513900000000246, 0.0001450549999999981, 0.00014545800000000109, 0.00014518100000000117, 0.0001453749999999962, 0.00014548600000000023, 0.00014498599999999973, 0.00014458299999999674, 0.0001445140000000053, 0.00014547200000000066, 0.0001446670000000011, 0.00014477800000000512, 0.00014498599999999973, 0.0001448890000000022, 0.0001448890000000022, 0.00014523599999999998, 0.00014516699999999466, 0.0001453890000000027, 0.00014523599999999998, 0.00014461099999999588, 0.00014536099999999663, 0.00014490299999999484, 0.000144832999999997, 0.00014531899999999792, 0.00014491700000000135, 0.00014491600000000188, 0.00014518100000000117, 0.00014455500000000454, 0.0001451250000000029, 0.00014513899999999552, 0.00014513799999999605, 0.0001446670000000011, 0.00014530499999999835, 0.0001452079999999939, 0.0001450140000000058, 0.0001449020000000023, 0.00014541599999999544, 0.00014474999999999905]</msg>
<status status="PASS" starttime="20201030 15:53:39.102" endtime="20201030 15:53:39.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.091" endtime="20201030 15:53:39.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:39.117" endtime="20201030 15:53:39.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.113" endtime="20201030 15:53:39.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.110" endtime="20201030 15:53:39.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.628" endtime="20201030 15:53:39.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.626" endtime="20201030 15:53:39.142"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.164" endtime="20201030 15:53:39.187"></status>
</kw>
<msg timestamp="20201030 15:53:39.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.161" endtime="20201030 15:53:39.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.190" endtime="20201030 15:53:39.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.196" endtime="20201030 15:53:39.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.154" endtime="20201030 15:53:39.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.148" endtime="20201030 15:53:39.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.219" endtime="20201030 15:53:39.550"></status>
</kw>
<msg timestamp="20201030 15:53:39.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040681736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:39.216" endtime="20201030 15:53:39.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040681736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:39.559" endtime="20201030 15:53:39.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.577" endtime="20201030 15:53:39.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.209" endtime="20201030 15:53:39.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.204" endtime="20201030 15:53:39.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:39.594" level="INFO">${RESULT} = [{'diff': 0.00014647200000000166}, {'diff': 0.00014626400000000012}, {'diff': 0.0001457769999999997}, {'diff': 0.00014606899999999867}, {'diff': 0.00014629099999999978}, {'diff': 0.0001463750000000041...</msg>
<status status="PASS" starttime="20201030 15:53:39.586" endtime="20201030 15:53:39.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:39.603" level="INFO">${ACCURACY} = {'diff': [0.00014647200000000166, 0.00014626400000000012, 0.0001457769999999997, 0.00014606899999999867, 0.00014629099999999978, 0.00014637500000000414, 0.00014627799999999969, 0.00014638800000000424,...</msg>
<status status="PASS" starttime="20201030 15:53:39.596" endtime="20201030 15:53:39.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.614" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:53:39.612" endtime="20201030 15:53:39.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.619" level="INFO">VALUE: [0.00014647200000000166, 0.00014626400000000012, 0.0001457769999999997, 0.00014606899999999867, 0.00014629099999999978, 0.00014637500000000414, 0.00014627799999999969, 0.00014638800000000424, 0.00014644399999999558, 0.00014588899999999627, 0.0001463890000000037, 0.00014645799999999515, 0.00014602799999999944, 0.0001462220000000014, 0.00014576399999999962, 0.00014618100000000217, 0.00014645900000000156, 0.00014652799999999994, 0.000146445000000002, 0.00014556899999999817, 0.00014559700000000425, 0.0001463329999999985, 0.000146445000000002, 0.00014552799999999894, 0.00014594399999999508, 0.00014569400000000177, 0.0001460549999999991, 0.0001461250000000039, 0.00014601399999999987, 0.0001458470000000045, 0.00014554200000000544, 0.0001460130000000004, 0.000146041999999999, 0.0001465690000000061, 0.00014584699999999756, 0.0001455969999999973, 0.0001463329999999985, 0.0001460690000000056, 0.00014619400000000227, 0.00014573600000000048, 0.0001458749999999967, 0.00014563900000000296, 0.0001459580000000016, 0.00014577799999999919, 0.0001464859999999943, 0.00014620800000000184, 0.0001459580000000016, 0.0001456659999999957, 0.00014617999999999576, 0.00014591700000000235]</msg>
<status status="PASS" starttime="20201030 15:53:39.616" endtime="20201030 15:53:39.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.605" endtime="20201030 15:53:39.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:39.633" endtime="20201030 15:53:39.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.627" endtime="20201030 15:53:39.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.625" endtime="20201030 15:53:39.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.144" endtime="20201030 15:53:39.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.143" endtime="20201030 15:53:39.658"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.680" endtime="20201030 15:53:39.701"></status>
</kw>
<msg timestamp="20201030 15:53:39.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.677" endtime="20201030 15:53:39.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.705" endtime="20201030 15:53:39.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.711" endtime="20201030 15:53:39.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.670" endtime="20201030 15:53:39.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.664" endtime="20201030 15:53:39.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.734" endtime="20201030 15:53:40.079"></status>
</kw>
<msg timestamp="20201030 15:53:40.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039255194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:39.731" endtime="20201030 15:53:40.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039108556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039255194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.088" endtime="20201030 15:53:40.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.106" endtime="20201030 15:53:40.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.724" endtime="20201030 15:53:40.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.719" endtime="20201030 15:53:40.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:40.123" level="INFO">${RESULT} = [{'diff': 0.00014663799999999755}, {'diff': 0.00014658299999999874}, {'diff': 0.00014651400000000037}, {'diff': 0.00014663799999999755}, {'diff': 0.00014679199999999976}, {'diff': 0.000147179999999996...</msg>
<status status="PASS" starttime="20201030 15:53:40.114" endtime="20201030 15:53:40.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:40.133" level="INFO">${ACCURACY} = {'diff': [0.00014663799999999755, 0.00014658299999999874, 0.00014651400000000037, 0.00014663799999999755, 0.00014679199999999976, 0.00014717999999999676, 0.00014686099999999813, 0.00014743000000000395...</msg>
<status status="PASS" starttime="20201030 15:53:40.125" endtime="20201030 15:53:40.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.144" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:53:40.142" endtime="20201030 15:53:40.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.149" level="INFO">VALUE: [0.00014663799999999755, 0.00014658299999999874, 0.00014651400000000037, 0.00014663799999999755, 0.00014679199999999976, 0.00014717999999999676, 0.00014686099999999813, 0.00014743000000000395, 0.00014738899999999777, 0.00014754199999999357, 0.0001474580000000031, 0.00014659799999999779, 0.00014693100000000292, 0.00014663899999999702, 0.00014719400000000327, 0.00014708300000000618, 0.00014749999999999486, 0.00014740299999999734, 0.00014747200000000266, 0.00014744499999999605, 0.0001465969999999983, 0.0001470000000000013, 0.0001472499999999946, 0.00014733300000000643, 0.00014726400000000112, 0.00014676400000000062, 0.00014675000000000105, 0.00014745899999999562, 0.0001468890000000042, 0.0001469450000000025, 0.00014690299999999684, 0.0001475550000000006, 0.00014741600000000438, 0.00014743100000000342, 0.00014673600000000148, 0.00014659700000000525, 0.00014662499999999745, 0.00014706899999999967, 0.00014713899999999752, 0.00014669399999999583, 0.00014752800000000094, 0.00014667999999999626, 0.0001467090000000018, 0.00014687500000000464, 0.00014673599999999454, 0.00014681899999999942, 0.00014738899999999777, 0.000147042, 0.00014673600000000148, 0.0001467220000000019]</msg>
<status status="PASS" starttime="20201030 15:53:40.146" endtime="20201030 15:53:40.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.135" endtime="20201030 15:53:40.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:40.161" endtime="20201030 15:53:40.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.157" endtime="20201030 15:53:40.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.155" endtime="20201030 15:53:40.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.660" endtime="20201030 15:53:40.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.659" endtime="20201030 15:53:40.186"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.209" endtime="20201030 15:53:40.230"></status>
</kw>
<msg timestamp="20201030 15:53:40.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.205" endtime="20201030 15:53:40.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.234" endtime="20201030 15:53:40.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.240" endtime="20201030 15:53:40.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.198" endtime="20201030 15:53:40.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.193" endtime="20201030 15:53:40.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.263" endtime="20201030 15:53:40.594"></status>
</kw>
<msg timestamp="20201030 15:53:40.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039368403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039516792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.259" endtime="20201030 15:53:40.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039368403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039516792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.603" endtime="20201030 15:53:40.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.621" endtime="20201030 15:53:40.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.252" endtime="20201030 15:53:40.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.248" endtime="20201030 15:53:40.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:40.638" level="INFO">${RESULT} = [{'diff': 0.00014838899999999877}, {'diff': 0.00014801400000000187}, {'diff': 0.00014784699999999956}, {'diff': 0.0001483330000000005}, {'diff': 0.00014840299999999834}, {'diff': 0.0001482080000000038...</msg>
<status status="PASS" starttime="20201030 15:53:40.629" endtime="20201030 15:53:40.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:40.649" level="INFO">${ACCURACY} = {'diff': [0.00014838899999999877, 0.00014801400000000187, 0.00014784699999999956, 0.0001483330000000005, 0.00014840299999999834, 0.00014820800000000384, 0.00014820800000000384, 0.0001483890000000057, ...</msg>
<status status="PASS" starttime="20201030 15:53:40.640" endtime="20201030 15:53:40.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.659" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:53:40.657" endtime="20201030 15:53:40.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.665" level="INFO">VALUE: [0.00014838899999999877, 0.00014801400000000187, 0.00014784699999999956, 0.0001483330000000005, 0.00014840299999999834, 0.00014820800000000384, 0.00014820800000000384, 0.0001483890000000057, 0.00014833399999999997, 0.00014811099999999938, 0.00014841600000000538, 0.00014829200000000126, 0.00014818100000000417, 0.0001483749999999992, 0.00014798600000000273, 0.00014848600000000323, 0.0001477079999999964, 0.00014773600000000248, 0.000148429999999998, 0.00014827799999999475, 0.0001480279999999945, 0.00014807000000000015, 0.00014825000000000255, 0.0001475969999999993, 0.00014856900000000117, 0.00014819500000000374, 0.00014758399999999922, 0.00014777800000000119, 0.00014801400000000187, 0.00014790299999999784, 0.0001479870000000022, 0.00014836099999999963, 0.0001480550000000011, 0.0001483619999999991, 0.0001477220000000029, 0.00014820800000000384, 0.0001476120000000053, 0.00014761099999999888, 0.00014758400000000615, 0.0001483059999999939, 0.00014808300000000024, 0.00014834700000000006, 0.00014837500000000614, 0.00014823599999999604, 0.00014819399999999733, 0.00014795799999999665, 0.00014759799999999879, 0.0001478199999999999, 0.00014756900000000017, 0.00014827800000000169]</msg>
<status status="PASS" starttime="20201030 15:53:40.662" endtime="20201030 15:53:40.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.651" endtime="20201030 15:53:40.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:40.677" endtime="20201030 15:53:40.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.673" endtime="20201030 15:53:40.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.670" endtime="20201030 15:53:40.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.188" endtime="20201030 15:53:40.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.187" endtime="20201030 15:53:40.702"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.724" endtime="20201030 15:53:40.745"></status>
</kw>
<msg timestamp="20201030 15:53:40.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.721" endtime="20201030 15:53:40.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.749" endtime="20201030 15:53:40.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.755" endtime="20201030 15:53:40.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.714" endtime="20201030 15:53:40.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.708" endtime="20201030 15:53:40.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.778" endtime="20201030 15:53:41.112"></status>
</kw>
<msg timestamp="20201030 15:53:41.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038952208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0391015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:40.775" endtime="20201030 15:53:41.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038952208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0391015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:41.121" endtime="20201030 15:53:41.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.139" endtime="20201030 15:53:41.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.767" endtime="20201030 15:53:41.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.763" endtime="20201030 15:53:41.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:41.156" level="INFO">${RESULT} = [{'diff': 0.00014929199999999532}, {'diff': 0.00014916699999999866}, {'diff': 0.00014912499999999995}, {'diff': 0.00014912499999999995}, {'diff': 0.00014923599999999704}, {'diff': 0.000149263999999996...</msg>
<status status="PASS" starttime="20201030 15:53:41.147" endtime="20201030 15:53:41.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:41.165" level="INFO">${ACCURACY} = {'diff': [0.00014929199999999532, 0.00014916699999999866, 0.00014912499999999995, 0.00014912499999999995, 0.00014923599999999704, 0.00014926399999999618, 0.00014890299999999884, 0.00014865300000000553...</msg>
<status status="PASS" starttime="20201030 15:53:41.158" endtime="20201030 15:53:41.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.176" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:53:41.174" endtime="20201030 15:53:41.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.181" level="INFO">VALUE: [0.00014929199999999532, 0.00014916699999999866, 0.00014912499999999995, 0.00014912499999999995, 0.00014923599999999704, 0.00014926399999999618, 0.00014890299999999884, 0.00014865300000000553, 0.00014904100000000253, 0.00014856900000000117, 0.00014856900000000117, 0.0001489580000000046, 0.0001493330000000015, 0.00014909800000000029, 0.00014927799999999575, 0.0001485550000000016, 0.0001486949999999973, 0.00014929200000000226, 0.0001487090000000038, 0.00014894399999999808, 0.00014931899999999498, 0.00014913899999999952, 0.0001492770000000032, 0.000148736999999996, 0.00014905499999999516, 0.000149042000000002, 0.0001489580000000046, 0.00014880499999999491, 0.00014890299999999884, 0.0001490279999999955, 0.00014862499999999945, 0.000149527999999996, 0.00014923599999999704, 0.00014881999999999396, 0.0001493330000000015, 0.00014923599999999704, 0.0001495550000000026, 0.00014919500000000474, 0.00014877800000000219, 0.00014897200000000416, 0.00014927800000000269, 0.0001488749999999997, 0.00014891599999999894, 0.00014857000000000065, 0.00014898600000000373, 0.00014947199999999772, 0.0001487499999999961, 0.00014936100000000063, 0.00014888899999999927, 0.00014876399999999568]</msg>
<status status="PASS" starttime="20201030 15:53:41.178" endtime="20201030 15:53:41.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.167" endtime="20201030 15:53:41.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:41.193" endtime="20201030 15:53:41.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.189" endtime="20201030 15:53:41.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.187" endtime="20201030 15:53:41.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.704" endtime="20201030 15:53:41.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.703" endtime="20201030 15:53:41.218"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.241" endtime="20201030 15:53:41.264"></status>
</kw>
<msg timestamp="20201030 15:53:41.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.237" endtime="20201030 15:53:41.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.267" endtime="20201030 15:53:41.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.273" endtime="20201030 15:53:41.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.230" endtime="20201030 15:53:41.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.224" endtime="20201030 15:53:41.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.296" endtime="20201030 15:53:41.628"></status>
</kw>
<msg timestamp="20201030 15:53:41.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040714639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040864778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.293" endtime="20201030 15:53:41.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040714639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040864778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.637" endtime="20201030 15:53:41.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.655" endtime="20201030 15:53:41.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.286" endtime="20201030 15:53:41.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.281" endtime="20201030 15:53:41.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:41.672" level="INFO">${RESULT} = [{'diff': 0.00015013900000000052}, {'diff': 0.0001502499999999976}, {'diff': 0.000149833000000002}, {'diff': 0.00014988900000000027}, {'diff': 0.0001499169999999994}, {'diff': 0.00014977799999999625},...</msg>
<status status="PASS" starttime="20201030 15:53:41.663" endtime="20201030 15:53:41.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:41.681" level="INFO">${ACCURACY} = {'diff': [0.00015013900000000052, 0.0001502499999999976, 0.000149833000000002, 0.00014988900000000027, 0.0001499169999999994, 0.00014977799999999625, 0.0001504859999999983, 0.00014962500000000045, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:41.674" endtime="20201030 15:53:41.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.692" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:53:41.690" endtime="20201030 15:53:41.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.697" level="INFO">VALUE: [0.00015013900000000052, 0.0001502499999999976, 0.000149833000000002, 0.00014988900000000027, 0.0001499169999999994, 0.00014977799999999625, 0.0001504859999999983, 0.00014962500000000045, 0.0001500279999999965, 0.00015023599999999804, 0.00014976399999999668, 0.00014969500000000524, 0.0001499859999999978, 0.00015027699999999727, 0.00014966699999999916, 0.00015036100000000163, 0.00015051299999999795, 0.00014970899999999787, 0.00015061200000000136, 0.00014994499999999855, 0.00014976400000000362, 0.0001498059999999954, 0.00014962500000000045, 0.00015011099999999444, 0.0001505970000000023, 0.0001503200000000024, 0.00015040300000000034, 0.00014961099999999394, 0.00015031899999999598, 0.00015049999999999786, 0.00015005599999999564, 0.00015036100000000163, 0.00015022199999999847, 0.0001497770000000037, 0.0001504169999999999, 0.00015030500000000335, 0.00015016699999999966, 0.00014977800000000319, 0.00014973600000000448, 0.0001497079999999984, 0.000150042000000003, 0.00015031899999999598, 0.0001503750000000012, 0.00014997200000000516, 0.00015030600000000283, 0.00015012500000000095, 0.0001499169999999994, 0.00015043, 0.00015006900000000267, 0.0001499729999999977]</msg>
<status status="PASS" starttime="20201030 15:53:41.694" endtime="20201030 15:53:41.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.683" endtime="20201030 15:53:41.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:41.711" endtime="20201030 15:53:41.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.705" endtime="20201030 15:53:41.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.703" endtime="20201030 15:53:41.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.220" endtime="20201030 15:53:41.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.219" endtime="20201030 15:53:41.736"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.758" endtime="20201030 15:53:41.780"></status>
</kw>
<msg timestamp="20201030 15:53:41.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.755" endtime="20201030 15:53:41.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.783" endtime="20201030 15:53:41.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.789" endtime="20201030 15:53:41.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.748" endtime="20201030 15:53:41.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.742" endtime="20201030 15:53:41.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.812" endtime="20201030 15:53:42.145"></status>
</kw>
<msg timestamp="20201030 15:53:42.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039163625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039314431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.809" endtime="20201030 15:53:42.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039163625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039314431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.154" endtime="20201030 15:53:42.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.172" endtime="20201030 15:53:42.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.802" endtime="20201030 15:53:42.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.797" endtime="20201030 15:53:42.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:42.189" level="INFO">${RESULT} = [{'diff': 0.0001508059999999964}, {'diff': 0.00015070899999999887}, {'diff': 0.00015143100000000048}, {'diff': 0.00015134700000000306}, {'diff': 0.00015115200000000162}, {'diff': 0.0001507229999999984...</msg>
<status status="PASS" starttime="20201030 15:53:42.180" endtime="20201030 15:53:42.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:42.199" level="INFO">${ACCURACY} = {'diff': [0.0001508059999999964, 0.00015070899999999887, 0.00015143100000000048, 0.00015134700000000306, 0.00015115200000000162, 0.00015072299999999844, 0.00015105600000000358, 0.00015093099999999998,...</msg>
<status status="PASS" starttime="20201030 15:53:42.191" endtime="20201030 15:53:42.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.210" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:53:42.208" endtime="20201030 15:53:42.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.215" level="INFO">VALUE: [0.0001508059999999964, 0.00015070899999999887, 0.00015143100000000048, 0.00015134700000000306, 0.00015115200000000162, 0.00015072299999999844, 0.00015105600000000358, 0.00015093099999999998, 0.00015076399999999768, 0.00015126399999999818, 0.00015134699999999612, 0.0001505829999999958, 0.00015137499999999526, 0.0001514859999999993, 0.0001506249999999945, 0.00015111100000000238, 0.00015129200000000426, 0.00015066700000000016, 0.00015088900000000127, 0.0001510970000000028, 0.00015144400000000058, 0.00015108300000000324, 0.00015058300000000274, 0.00015151299999999895, 0.00015072300000000538, 0.00015134699999999612, 0.0001506660000000007, 0.00015049999999999786, 0.00015068099999999973, 0.0001505420000000035, 0.000151430000000001, 0.0001509300000000005, 0.00015119400000000033, 0.00015155600000000408, 0.00015147199999999972, 0.00015159699999999637, 0.00015077699999999777, 0.00015073600000000548, 0.0001510970000000028, 0.00015126399999999818, 0.00015104199999999707, 0.00015151399999999843, 0.00015127799999999775, 0.0001506530000000006, 0.00015126399999999818, 0.00015123599999999904, 0.0001510279999999975, 0.000151430000000001, 0.00015113900000000152, 0.0001514859999999993]</msg>
<status status="PASS" starttime="20201030 15:53:42.212" endtime="20201030 15:53:42.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.201" endtime="20201030 15:53:42.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:42.228" endtime="20201030 15:53:42.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.223" endtime="20201030 15:53:42.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.221" endtime="20201030 15:53:42.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.738" endtime="20201030 15:53:42.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.737" endtime="20201030 15:53:42.253"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.275" endtime="20201030 15:53:42.298"></status>
</kw>
<msg timestamp="20201030 15:53:42.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.272" endtime="20201030 15:53:42.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.301" endtime="20201030 15:53:42.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.308" endtime="20201030 15:53:42.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.265" endtime="20201030 15:53:42.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.259" endtime="20201030 15:53:42.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.330" endtime="20201030 15:53:42.674"></status>
</kw>
<msg timestamp="20201030 15:53:42.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039363056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039515181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.327" endtime="20201030 15:53:42.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039363056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039515181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.683" endtime="20201030 15:53:42.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.701" endtime="20201030 15:53:42.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.320" endtime="20201030 15:53:42.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.315" endtime="20201030 15:53:42.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:42.718" level="INFO">${RESULT} = [{'diff': 0.00015212500000000295}, {'diff': 0.00015222299999999994}, {'diff': 0.00015194500000000055}, {'diff': 0.00015216700000000166}, {'diff': 0.00015255499999999866}, {'diff': 0.000151667000000001...</msg>
<status status="PASS" starttime="20201030 15:53:42.710" endtime="20201030 15:53:42.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:42.729" level="INFO">${ACCURACY} = {'diff': [0.00015212500000000295, 0.00015222299999999994, 0.00015194500000000055, 0.00015216700000000166, 0.00015255499999999866, 0.00015166700000000116, 0.0001523750000000032, 0.00015162500000000245,...</msg>
<status status="PASS" starttime="20201030 15:53:42.720" endtime="20201030 15:53:42.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.740" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:53:42.737" endtime="20201030 15:53:42.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.745" level="INFO">VALUE: [0.00015212500000000295, 0.00015222299999999994, 0.00015194500000000055, 0.00015216700000000166, 0.00015255499999999866, 0.00015166700000000116, 0.0001523750000000032, 0.00015162500000000245, 0.00015199999999999936, 0.00015165299999999465, 0.00015243100000000148, 0.00015188899999999533, 0.00015177699999999877, 0.00015216700000000166, 0.0001518059999999974, 0.00015184699999999662, 0.00015243100000000148, 0.00015166700000000116, 0.00015181899999999748, 0.0001522780000000057, 0.00015251399999999943, 0.00015251399999999943, 0.00015208300000000424, 0.0001516249999999955, 0.00015177799999999825, 0.0001518609999999962, 0.00015173599999999954, 0.00015220900000000037, 0.00015234699999999712, 0.00015172199999999997, 0.00015168100000000073, 0.0001521530000000021, 0.00015172199999999997, 0.0001522499999999996, 0.00015226399999999918, 0.0001523330000000045, 0.0001522369999999995, 0.00015218100000000123, 0.00015181899999999748, 0.0001522499999999996, 0.00015172199999999997, 0.00015238900000000277, 0.00015177799999999825, 0.00015223600000000004, 0.00015229100000000578, 0.00015180500000000485, 0.00015168000000000126, 0.00015199999999999936, 0.00015161100000000288, 0.00015163900000000202]</msg>
<status status="PASS" starttime="20201030 15:53:42.742" endtime="20201030 15:53:42.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.731" endtime="20201030 15:53:42.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:42.762" endtime="20201030 15:53:42.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.758" endtime="20201030 15:53:42.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.755" endtime="20201030 15:53:42.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.255" endtime="20201030 15:53:42.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.253" endtime="20201030 15:53:42.787"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.809" endtime="20201030 15:53:42.832"></status>
</kw>
<msg timestamp="20201030 15:53:42.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.806" endtime="20201030 15:53:42.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.836" endtime="20201030 15:53:42.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.842" endtime="20201030 15:53:42.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.799" endtime="20201030 15:53:42.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.793" endtime="20201030 15:53:42.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.865" endtime="20201030 15:53:43.211"></status>
</kw>
<msg timestamp="20201030 15:53:43.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039549486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.861" endtime="20201030 15:53:43.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039549486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.221" endtime="20201030 15:53:43.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.239" endtime="20201030 15:53:43.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.854" endtime="20201030 15:53:43.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.850" endtime="20201030 15:53:43.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:43.255" level="INFO">${RESULT} = [{'diff': 0.00015363900000000402}, {'diff': 0.0001529170000000024}, {'diff': 0.00015361100000000488}, {'diff': 0.000153430000000003}, {'diff': 0.00015288900000000327}, {'diff': 0.00015290199999999643}...</msg>
<status status="PASS" starttime="20201030 15:53:43.247" endtime="20201030 15:53:43.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:43.264" level="INFO">${ACCURACY} = {'diff': [0.00015363900000000402, 0.0001529170000000024, 0.00015361100000000488, 0.000153430000000003, 0.00015288900000000327, 0.00015290199999999643, 0.0001530829999999983, 0.0001528750000000037, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:43.257" endtime="20201030 15:53:43.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.275" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:53:43.273" endtime="20201030 15:53:43.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.280" level="INFO">VALUE: [0.00015363900000000402, 0.0001529170000000024, 0.00015361100000000488, 0.000153430000000003, 0.00015288900000000327, 0.00015290199999999643, 0.0001530829999999983, 0.0001528750000000037, 0.00015297200000000122, 0.00015338899999999683, 0.00015334800000000454, 0.00015305599999999864, 0.00015351400000000043, 0.00015276399999999968, 0.00015329199999999932, 0.00015354199999999957, 0.0001526530000000026, 0.00015361100000000488, 0.00015259699999999737, 0.00015323600000000104, 0.00015304199999999907, 0.0001533880000000043, 0.00015311199999999692, 0.00015313900000000352, 0.00015268000000000226, 0.00015337499999999726, 0.0001530279999999995, 0.0001536379999999976, 0.00015261100000000388, 0.00015331899999999898, 0.00015295900000000112, 0.00015329199999999932, 0.00015344400000000258, 0.00015272199999999403, 0.0001531950000000018, 0.00015279099999999934, 0.000152737, 0.00015361099999999794, 0.00015276399999999968, 0.00015347200000000172, 0.00015318100000000223, 0.00015322300000000094, 0.00015293100000000198, 0.00015331899999999898, 0.00015331899999999898, 0.0001529860000000008, 0.00015318000000000276, 0.00015327700000000027, 0.0001534860000000013, 0.0001526950000000013]</msg>
<status status="PASS" starttime="20201030 15:53:43.277" endtime="20201030 15:53:43.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.266" endtime="20201030 15:53:43.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:43.293" endtime="20201030 15:53:43.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.288" endtime="20201030 15:53:43.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.286" endtime="20201030 15:53:43.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.789" endtime="20201030 15:53:43.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.788" endtime="20201030 15:53:43.318"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.340" endtime="20201030 15:53:43.369"></status>
</kw>
<msg timestamp="20201030 15:53:43.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.337" endtime="20201030 15:53:43.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.372" endtime="20201030 15:53:43.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.379" endtime="20201030 15:53:43.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.330" endtime="20201030 15:53:43.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.324" endtime="20201030 15:53:43.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.403" endtime="20201030 15:53:43.738"></status>
</kw>
<msg timestamp="20201030 15:53:43.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044934417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045088194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.400" endtime="20201030 15:53:43.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044934417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045088194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.747" endtime="20201030 15:53:43.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.765" endtime="20201030 15:53:43.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.392" endtime="20201030 15:53:43.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.387" endtime="20201030 15:53:43.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:43.782" level="INFO">${RESULT} = [{'diff': 0.00015377700000000077}, {'diff': 0.00015381999999999896}, {'diff': 0.0001544170000000039}, {'diff': 0.00015377800000000025}, {'diff': 0.00015383399999999853}, {'diff': 0.0001535969999999983...</msg>
<status status="PASS" starttime="20201030 15:53:43.774" endtime="20201030 15:53:43.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:43.791" level="INFO">${ACCURACY} = {'diff': [0.00015377700000000077, 0.00015381999999999896, 0.0001544170000000039, 0.00015377800000000025, 0.00015383399999999853, 0.00015359699999999837, 0.00015400000000000136, 0.0001536530000000036, ...</msg>
<status status="PASS" starttime="20201030 15:53:43.784" endtime="20201030 15:53:43.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.802" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:53:43.800" endtime="20201030 15:53:43.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.807" level="INFO">VALUE: [0.00015377700000000077, 0.00015381999999999896, 0.0001544170000000039, 0.00015377800000000025, 0.00015383399999999853, 0.00015359699999999837, 0.00015400000000000136, 0.0001536530000000036, 0.00015415199999999768, 0.0001545970000000063, 0.00015447200000000272, 0.00015452699999999459, 0.00015400000000000136, 0.00015390300000000384, 0.00015368100000000273, 0.00015438899999999783, 0.00015443100000000348, 0.00015379100000000034, 0.00015381899999999948, 0.00015422200000000247, 0.0001544159999999975, 0.00015423600000000204, 0.0001538750000000047, 0.0001542080000000029, 0.0001541660000000042, 0.0001541379999999981, 0.0001543609999999987, 0.0001539449999999956, 0.00015441600000000444, 0.00015387499999999776, 0.0001540829999999993, 0.00015369400000000283, 0.00015394400000000308, 0.00015394399999999614, 0.00015444500000000305, 0.00015412499999999801, 0.00015380499999999991, 0.0001540829999999993, 0.000153915999999997, 0.00015436100000000563, 0.00015433299999999955, 0.00015420799999999596, 0.0001541530000000041, 0.0001540280000000005, 0.00015368100000000273, 0.00015387499999999776, 0.0001540829999999993, 0.0001541939999999964, 0.00015463899999999808, 0.00015393099999999604]</msg>
<status status="PASS" starttime="20201030 15:53:43.804" endtime="20201030 15:53:43.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.793" endtime="20201030 15:53:43.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:43.821" endtime="20201030 15:53:43.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.815" endtime="20201030 15:53:43.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.813" endtime="20201030 15:53:43.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.320" endtime="20201030 15:53:43.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.319" endtime="20201030 15:53:43.846"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.868" endtime="20201030 15:53:43.890"></status>
</kw>
<msg timestamp="20201030 15:53:43.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.865" endtime="20201030 15:53:43.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.893" endtime="20201030 15:53:43.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.899" endtime="20201030 15:53:43.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.858" endtime="20201030 15:53:43.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.852" endtime="20201030 15:53:43.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.922" endtime="20201030 15:53:44.253"></status>
</kw>
<msg timestamp="20201030 15:53:44.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039174528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039329542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.919" endtime="20201030 15:53:44.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039174528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039329542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:44.262" endtime="20201030 15:53:44.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.280" endtime="20201030 15:53:44.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.912" endtime="20201030 15:53:44.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.907" endtime="20201030 15:53:44.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:44.297" level="INFO">${RESULT} = [{'diff': 0.00015501400000000193}, {'diff': 0.0001553609999999997}, {'diff': 0.0001555830000000008}, {'diff': 0.0001549579999999967}, {'diff': 0.00015470799999999646}, {'diff': 0.00015544400000000458}...</msg>
<status status="PASS" starttime="20201030 15:53:44.289" endtime="20201030 15:53:44.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:44.307" level="INFO">${ACCURACY} = {'diff': [0.00015501400000000193, 0.0001553609999999997, 0.0001555830000000008, 0.0001549579999999967, 0.00015470799999999646, 0.00015544400000000458, 0.0001545699999999997, 0.0001548609999999992, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:44.299" endtime="20201030 15:53:44.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.318" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:53:44.316" endtime="20201030 15:53:44.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.323" level="INFO">VALUE: [0.00015501400000000193, 0.0001553609999999997, 0.0001555830000000008, 0.0001549579999999967, 0.00015470799999999646, 0.00015544400000000458, 0.0001545699999999997, 0.0001548609999999992, 0.00015526400000000218, 0.0001546950000000033, 0.00015515299999999815, 0.00015473600000000254, 0.00015530500000000141, 0.00015526399999999524, 0.00015498700000000226, 0.00015470899999999593, 0.0001554029999999984, 0.00015486100000000613, 0.00015534700000000012, 0.00015524999999999567, 0.00015497199999999628, 0.00015547199999999678, 0.00015463900000000502, 0.00015454200000000057, 0.0001552359999999961, 0.000155528000000002, 0.00015523600000000304, 0.00015499999999999542, 0.00015531900000000098, 0.0001548479999999991, 0.00015559700000000037, 0.00015499999999999542, 0.00015480500000000091, 0.00015520899999999643, 0.0001553479999999996, 0.0001549579999999967, 0.00015542999999999807, 0.00015543099999999754, 0.00015522200000000347, 0.00015483300000000005, 0.00015501400000000193, 0.00015469499999999636, 0.00015472199999999603, 0.00015477700000000177, 0.00015488900000000527, 0.00015463899999999808, 0.00015498599999999585, 0.0001550830000000003, 0.00015472199999999603, 0.00015484699999999962]</msg>
<status status="PASS" starttime="20201030 15:53:44.320" endtime="20201030 15:53:44.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.309" endtime="20201030 15:53:44.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:44.336" endtime="20201030 15:53:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.331" endtime="20201030 15:53:44.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.329" endtime="20201030 15:53:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.848" endtime="20201030 15:53:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.847" endtime="20201030 15:53:44.361"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.383" endtime="20201030 15:53:44.405"></status>
</kw>
<msg timestamp="20201030 15:53:44.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.380" endtime="20201030 15:53:44.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.408" endtime="20201030 15:53:44.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.415" endtime="20201030 15:53:44.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.372" endtime="20201030 15:53:44.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.367" endtime="20201030 15:53:44.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.439" endtime="20201030 15:53:44.769"></status>
</kw>
<msg timestamp="20201030 15:53:44.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039042028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039198, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:44.435" endtime="20201030 15:53:44.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039042028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039198, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:44.778" endtime="20201030 15:53:44.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.796" endtime="20201030 15:53:44.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.428" endtime="20201030 15:53:44.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.423" endtime="20201030 15:53:44.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:44.813" level="INFO">${RESULT} = [{'diff': 0.00015597199999999728}, {'diff': 0.00015647199999999778}, {'diff': 0.00015612500000000001}, {'diff': 0.00015615299999999915}, {'diff': 0.0001555830000000008}, {'diff': 0.0001559859999999968...</msg>
<status status="PASS" starttime="20201030 15:53:44.805" endtime="20201030 15:53:44.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:44.824" level="INFO">${ACCURACY} = {'diff': [0.00015597199999999728, 0.00015647199999999778, 0.00015612500000000001, 0.00015615299999999915, 0.0001555830000000008, 0.00015598599999999685, 0.00015588899999999933, 0.0001564730000000042, ...</msg>
<status status="PASS" starttime="20201030 15:53:44.815" endtime="20201030 15:53:44.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.835" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:53:44.833" endtime="20201030 15:53:44.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.840" level="INFO">VALUE: [0.00015597199999999728, 0.00015647199999999778, 0.00015612500000000001, 0.00015615299999999915, 0.0001555830000000008, 0.00015598599999999685, 0.00015588899999999933, 0.0001564730000000042, 0.00015637500000000026, 0.0001565139999999965, 0.00015601400000000293, 0.00015584700000000062, 0.00015641699999999897, 0.00015637500000000026, 0.00015588799999999986, 0.00015619499999999786, 0.0001559170000000054, 0.00015602699999999609, 0.00015649999999999692, 0.0001556809999999978, 0.00015612500000000001, 0.00015604200000000207, 0.00015622199999999753, 0.00015562499999999951, 0.00015566599999999875, 0.00015611100000000044, 0.00015576400000000268, 0.0001562359999999971, 0.00015611100000000044, 0.00015626400000000318, 0.00015593099999999804, 0.00015577800000000225, 0.00015652799999999606, 0.00015615299999999915, 0.00015642999999999907, 0.00015637500000000026, 0.00015632000000000146, 0.00015559700000000037, 0.00015652699999999659, 0.0001563480000000006, 0.000156013999999996, 0.00015561099999999994, 0.00015583300000000105, 0.00015647199999999778, 0.00015586199999999967, 0.00015594500000000455, 0.00015597199999999728, 0.00015616699999999872, 0.0001564029999999994, 0.00015605600000000164]</msg>
<status status="PASS" starttime="20201030 15:53:44.837" endtime="20201030 15:53:44.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.826" endtime="20201030 15:53:44.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:44.852" endtime="20201030 15:53:44.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.848" endtime="20201030 15:53:44.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.846" endtime="20201030 15:53:44.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.363" endtime="20201030 15:53:44.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.361" endtime="20201030 15:53:44.877"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.900" endtime="20201030 15:53:44.921"></status>
</kw>
<msg timestamp="20201030 15:53:44.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.896" endtime="20201030 15:53:44.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.925" endtime="20201030 15:53:44.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.931" endtime="20201030 15:53:44.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.889" endtime="20201030 15:53:44.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.884" endtime="20201030 15:53:44.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.954" endtime="20201030 15:53:45.291"></status>
</kw>
<msg timestamp="20201030 15:53:45.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039238, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:44.951" endtime="20201030 15:53:45.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039238, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:45.301" endtime="20201030 15:53:45.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.319" endtime="20201030 15:53:45.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.944" endtime="20201030 15:53:45.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.939" endtime="20201030 15:53:45.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:45.336" level="INFO">${RESULT} = [{'diff': 0.00015737500000000126}, {'diff': 0.0001575139999999975}, {'diff': 0.000157013999999997}, {'diff': 0.00015705499999999623}, {'diff': 0.00015683300000000205}, {'diff': 0.00015688900000000033}...</msg>
<status status="PASS" starttime="20201030 15:53:45.327" endtime="20201030 15:53:45.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:45.345" level="INFO">${ACCURACY} = {'diff': [0.00015737500000000126, 0.0001575139999999975, 0.000157013999999997, 0.00015705499999999623, 0.00015683300000000205, 0.00015688900000000033, 0.00015754199999999663, 0.00015698599999999785, 0...</msg>
<status status="PASS" starttime="20201030 15:53:45.338" endtime="20201030 15:53:45.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.355" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:53:45.353" endtime="20201030 15:53:45.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.360" level="INFO">VALUE: [0.00015737500000000126, 0.0001575139999999975, 0.000157013999999997, 0.00015705499999999623, 0.00015683300000000205, 0.00015688900000000033, 0.00015754199999999663, 0.00015698599999999785, 0.00015681900000000248, 0.00015687500000000076, 0.0001569579999999987, 0.00015663900000000008, 0.00015665299999999965, 0.00015727700000000427, 0.00015704200000000307, 0.0001574449999999991, 0.00015674999999999717, 0.00015713899999999364, 0.00015704200000000307, 0.0001567909999999964, 0.0001569449999999986, 0.0001574449999999991, 0.0001567630000000042, 0.00015698599999999785, 0.0001567229999999975, 0.00015688900000000033, 0.00015708400000000178, 0.00015761100000000194, 0.00015761100000000194, 0.00015690200000000043, 0.00015681899999999555, 0.00015715300000000015, 0.00015763900000000108, 0.00015765300000000065, 0.000157013999999997, 0.0001570280000000035, 0.00015722200000000547, 0.0001573610000000017, 0.00015666699999999922, 0.00015723600000000504, 0.00015743099999999954, 0.00015711100000000144, 0.0001575830000000028, 0.0001569029999999999, 0.00015662500000000051, 0.00015727800000000375, 0.00015693099999999904, 0.00015688900000000033, 0.00015730499999999648, 0.00015756900000000323]</msg>
<status status="PASS" starttime="20201030 15:53:45.357" endtime="20201030 15:53:45.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.346" endtime="20201030 15:53:45.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:45.373" endtime="20201030 15:53:45.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.369" endtime="20201030 15:53:45.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.366" endtime="20201030 15:53:45.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.879" endtime="20201030 15:53:45.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.878" endtime="20201030 15:53:45.398"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.420" endtime="20201030 15:53:45.445"></status>
</kw>
<msg timestamp="20201030 15:53:45.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.417" endtime="20201030 15:53:45.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.448" endtime="20201030 15:53:45.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.455" endtime="20201030 15:53:45.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.410" endtime="20201030 15:53:45.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.404" endtime="20201030 15:53:45.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.479" endtime="20201030 15:53:45.822"></status>
</kw>
<msg timestamp="20201030 15:53:45.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040600681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040759028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:45.476" endtime="20201030 15:53:45.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040600681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040759028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:45.831" endtime="20201030 15:53:45.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.850" endtime="20201030 15:53:45.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.468" endtime="20201030 15:53:45.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.463" endtime="20201030 15:53:45.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:45.866" level="INFO">${RESULT} = [{'diff': 0.00015834700000000312}, {'diff': 0.00015855500000000466}, {'diff': 0.00015788900000000133}, {'diff': 0.0001583060000000039}, {'diff': 0.0001577500000000051}, {'diff': 0.0001579579999999997}...</msg>
<status status="PASS" starttime="20201030 15:53:45.858" endtime="20201030 15:53:45.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:45.875" level="INFO">${ACCURACY} = {'diff': [0.00015834700000000312, 0.00015855500000000466, 0.00015788900000000133, 0.0001583060000000039, 0.0001577500000000051, 0.0001579579999999997, 0.00015787499999999483, 0.00015795899999999918, 0...</msg>
<status status="PASS" starttime="20201030 15:53:45.869" endtime="20201030 15:53:45.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.886" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:53:45.884" endtime="20201030 15:53:45.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.891" level="INFO">VALUE: [0.00015834700000000312, 0.00015855500000000466, 0.00015788900000000133, 0.0001583060000000039, 0.0001577500000000051, 0.0001579579999999997, 0.00015787499999999483, 0.00015795899999999918, 0.0001583610000000027, 0.00015841700000000097, 0.0001579860000000058, 0.00015770799999999946, 0.00015797200000000622, 0.0001575700000000027, 0.0001585559999999972, 0.00015794400000000014, 0.0001578060000000034, 0.00015861100000000294, 0.0001583610000000027, 0.00015770899999999893, 0.00015809699999999594, 0.0001581940000000004, 0.00015781900000000348, 0.00015849999999999892, 0.0001581109999999955, 0.00015805500000000416, 0.00015837500000000226, 0.00015816700000000072, 0.00015847199999999978, 0.00015763900000000108, 0.00015758399999999534, 0.00015852699999999859, 0.00015833400000000303, 0.00015776399999999774, 0.00015836199999999523, 0.00015831899999999705, 0.0001585559999999972, 0.00015805600000000364, 0.0001584580000000002, 0.00015793000000000057, 0.0001583339999999961, 0.0001576809999999998, 0.00015802799999999756, 0.0001579730000000057, 0.00015858299999999687, 0.00015820899999999943, 0.00015848599999999935, 0.00015794400000000014, 0.00015848699999999882, 0.00015823699999999857]</msg>
<status status="PASS" starttime="20201030 15:53:45.888" endtime="20201030 15:53:45.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.877" endtime="20201030 15:53:45.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:45.905" endtime="20201030 15:53:45.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.899" endtime="20201030 15:53:45.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.897" endtime="20201030 15:53:45.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.400" endtime="20201030 15:53:45.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.399" endtime="20201030 15:53:45.930"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.952" endtime="20201030 15:53:45.976"></status>
</kw>
<msg timestamp="20201030 15:53:45.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.949" endtime="20201030 15:53:45.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.979" endtime="20201030 15:53:45.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.985" endtime="20201030 15:53:45.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.942" endtime="20201030 15:53:45.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.936" endtime="20201030 15:53:45.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.009" endtime="20201030 15:53:46.360"></status>
</kw>
<msg timestamp="20201030 15:53:46.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039240875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039400458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.005" endtime="20201030 15:53:46.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039240875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039400458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.370" endtime="20201030 15:53:46.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.388" endtime="20201030 15:53:46.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.998" endtime="20201030 15:53:46.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.993" endtime="20201030 15:53:46.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:46.407" level="INFO">${RESULT} = [{'diff': 0.00015958299999999787}, {'diff': 0.00015909699999999694}, {'diff': 0.00015901300000000645}, {'diff': 0.00015958399999999734}, {'diff': 0.00015872200000000003}, {'diff': 0.000159152999999995...</msg>
<status status="PASS" starttime="20201030 15:53:46.398" endtime="20201030 15:53:46.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:46.418" level="INFO">${ACCURACY} = {'diff': [0.00015958299999999787, 0.00015909699999999694, 0.00015901300000000645, 0.00015958399999999734, 0.00015872200000000003, 0.00015915299999999521, 0.00015872200000000003, 0.00015952799999999906...</msg>
<status status="PASS" starttime="20201030 15:53:46.409" endtime="20201030 15:53:46.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.429" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:53:46.426" endtime="20201030 15:53:46.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.434" level="INFO">VALUE: [0.00015958299999999787, 0.00015909699999999694, 0.00015901300000000645, 0.00015958399999999734, 0.00015872200000000003, 0.00015915299999999521, 0.00015872200000000003, 0.00015952799999999906, 0.00015894400000000114, 0.00015870899999999993, 0.00015872200000000003, 0.00015945900000000068, 0.00015926399999999924, 0.00015929199999999838, 0.00015963899999999615, 0.00015876399999999874, 0.00015949999999999992, 0.0001594160000000025, 0.00015897200000000028, 0.00015944400000000164, 0.00015944500000000111, 0.00015866700000000122, 0.00015883300000000405, 0.00015956999999999777, 0.00015884699999999669, 0.00015930499999999848, 0.00015901400000000593, 0.0001592779999999988, 0.00015888900000000233, 0.00015944499999999417, 0.000159013999999999, 0.00015865300000000165, 0.000159013999999999, 0.00015963899999999615, 0.00015880599999999745, 0.00015909699999999694, 0.00015899999999999942, 0.0001595559999999982, 0.00015877699999999884, 0.000159223, 0.00015949999999999992, 0.00015901400000000593, 0.00015898599999999985, 0.00015876400000000568, 0.00015952799999999906, 0.0001587359999999996, 0.00015881899999999755, 0.00015902799999999856, 0.00015916699999999478, 0.00015944500000000111]</msg>
<status status="PASS" starttime="20201030 15:53:46.431" endtime="20201030 15:53:46.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.420" endtime="20201030 15:53:46.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:46.447" endtime="20201030 15:53:46.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.443" endtime="20201030 15:53:46.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.440" endtime="20201030 15:53:46.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.932" endtime="20201030 15:53:46.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.931" endtime="20201030 15:53:46.473"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.501" endtime="20201030 15:53:46.524"></status>
</kw>
<msg timestamp="20201030 15:53:46.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.497" endtime="20201030 15:53:46.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.527" endtime="20201030 15:53:46.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.534" endtime="20201030 15:53:46.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.490" endtime="20201030 15:53:46.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.484" endtime="20201030 15:53:46.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.557" endtime="20201030 15:53:46.891"></status>
</kw>
<msg timestamp="20201030 15:53:46.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046099875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046260139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.554" endtime="20201030 15:53:46.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046099875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046260139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.901" endtime="20201030 15:53:46.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.919" endtime="20201030 15:53:46.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.546" endtime="20201030 15:53:46.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.542" endtime="20201030 15:53:46.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:46.936" level="INFO">${RESULT} = [{'diff': 0.00016026400000000024}, {'diff': 0.00016041700000000297}, {'diff': 0.00015969399999999495}, {'diff': 0.0001601659999999963}, {'diff': 0.0001603610000000047}, {'diff': 0.00015963900000000308...</msg>
<status status="PASS" starttime="20201030 15:53:46.927" endtime="20201030 15:53:46.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:46.947" level="INFO">${ACCURACY} = {'diff': [0.00016026400000000024, 0.00016041700000000297, 0.00015969399999999495, 0.0001601659999999963, 0.0001603610000000047, 0.00015963900000000308, 0.0001601109999999975, 0.00016045900000000168, 0...</msg>
<status status="PASS" starttime="20201030 15:53:46.938" endtime="20201030 15:53:46.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.958" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:53:46.956" endtime="20201030 15:53:46.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.963" level="INFO">VALUE: [0.00016026400000000024, 0.00016041700000000297, 0.00015969399999999495, 0.0001601659999999963, 0.0001603610000000047, 0.00015963900000000308, 0.0001601109999999975, 0.00016045900000000168, 0.0001601109999999975, 0.00016002799999999956, 0.00016008400000000478, 0.00016008299999999837, 0.00015986099999999726, 0.00016061100000000494, 0.00015997200000000128, 0.00016025000000000067, 0.00015981899999999855, 0.00016033299999999862, 0.0001603889999999969, 0.00015968099999999485, 0.00015983299999999812, 0.00015988799999999692, 0.0001595700000000047, 0.00015980499999999898, 0.00015962499999999658, 0.00016038900000000383, 0.0001596940000000019, 0.00016033299999999862, 0.0001603889999999969, 0.00015991699999999553, 0.0001597360000000006, 0.0001598060000000054, 0.00016052800000000006, 0.00016008400000000478, 0.00016000000000000042, 0.00016025000000000067, 0.00015995799999999477, 0.00016034700000000512, 0.00015980499999999898, 0.00015975000000000017, 0.00016066699999999629, 0.00016009699999999794, 0.00016059699999999844, 0.00016058299999999887, 0.00015981999999999802, 0.00016026400000000024, 0.00016050000000000092, 0.00016004099999999966, 0.0001597219999999941, 0.00015975000000000017]</msg>
<status status="PASS" starttime="20201030 15:53:46.960" endtime="20201030 15:53:46.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.949" endtime="20201030 15:53:46.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:46.976" endtime="20201030 15:53:46.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.971" endtime="20201030 15:53:46.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.969" endtime="20201030 15:53:47.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.479" endtime="20201030 15:53:47.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.474" endtime="20201030 15:53:47.001"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.023" endtime="20201030 15:53:47.047"></status>
</kw>
<msg timestamp="20201030 15:53:47.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.020" endtime="20201030 15:53:47.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.051" endtime="20201030 15:53:47.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.057" endtime="20201030 15:53:47.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.013" endtime="20201030 15:53:47.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.007" endtime="20201030 15:53:47.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.081" endtime="20201030 15:53:47.417"></status>
</kw>
<msg timestamp="20201030 15:53:47.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.077" endtime="20201030 15:53:47.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.426" endtime="20201030 15:53:47.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.444" endtime="20201030 15:53:47.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.070" endtime="20201030 15:53:47.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.065" endtime="20201030 15:53:47.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:47.461" level="INFO">${RESULT} = [{'diff': 0.0001607910000000004}, {'diff': 0.00016094400000000314}, {'diff': 0.00016118099999999635}, {'diff': 0.00016065199999999724}, {'diff': 0.0001609580000000027}, {'diff': 0.0001612769999999944}...</msg>
<status status="PASS" starttime="20201030 15:53:47.453" endtime="20201030 15:53:47.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:47.471" level="INFO">${ACCURACY} = {'diff': [0.0001607910000000004, 0.00016094400000000314, 0.00016118099999999635, 0.00016065199999999724, 0.0001609580000000027, 0.0001612769999999944, 0.00016084700000000562, 0.00016065300000000365, 0...</msg>
<status status="PASS" starttime="20201030 15:53:47.463" endtime="20201030 15:53:47.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.481" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:53:47.479" endtime="20201030 15:53:47.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.487" level="INFO">VALUE: [0.0001607910000000004, 0.00016094400000000314, 0.00016118099999999635, 0.00016065199999999724, 0.0001609580000000027, 0.0001612769999999944, 0.00016084700000000562, 0.00016065300000000365, 0.00016115299999999722, 0.0001614030000000044, 0.00016147200000000278, 0.00016065300000000365, 0.00016170799999999652, 0.0001606940000000029, 0.00016113899999999765, 0.0001607360000000016, 0.00016070900000000193, 0.0001615690000000003, 0.00016140299999999747, 0.00016093100000000304, 0.0001607639999999938, 0.00016086099999999826, 0.00016167999999999738, 0.00016112500000000501, 0.00016086099999999826, 0.00016150000000000192, 0.0001610559999999997, 0.0001607360000000016, 0.00016079199999999988, 0.000161610999999999, 0.0001613889999999979, 0.00016163899999999815, 0.0001612219999999956, 0.00016113899999999765, 0.00016102800000000056, 0.00016075000000000117, 0.00016087499999999783, 0.00016141699999999704, 0.00016098600000000185, 0.0001611109999999985, 0.0001607910000000004, 0.0001613889999999979, 0.00016117999999999688, 0.00016149999999999498, 0.00016152800000000106, 0.0001609439999999962, 0.00016080499999999998, 0.00016158299999999987, 0.00016158399999999934, 0.00016094400000000314]</msg>
<status status="PASS" starttime="20201030 15:53:47.484" endtime="20201030 15:53:47.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.472" endtime="20201030 15:53:47.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:47.499" endtime="20201030 15:53:47.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.495" endtime="20201030 15:53:47.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.492" endtime="20201030 15:53:47.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.003" endtime="20201030 15:53:47.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.002" endtime="20201030 15:53:47.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.085" endtime="20201030 15:53:47.525"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:54.963" endtime="20201030 15:53:47.527" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:59.669" endtime="20201030 15:53:47.536"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.673" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:47.689" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:49.715" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:47.669" endtime="20201030 15:53:49.717"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.722" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:53:49.719" endtime="20201030 15:53:49.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.666" endtime="20201030 15:53:49.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.729" endtime="20201030 15:53:50.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.726" endtime="20201030 15:53:50.065"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.111" endtime="20201030 15:53:50.129"></status>
</kw>
<msg timestamp="20201030 15:53:50.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.107" endtime="20201030 15:53:50.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.132" endtime="20201030 15:53:50.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.143" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:50.139" endtime="20201030 15:53:50.144"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:50.099" endtime="20201030 15:53:50.146"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:50.090" endtime="20201030 15:53:50.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.087" endtime="20201030 15:53:50.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:50.158" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:50.156" endtime="20201030 15:53:50.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.150" endtime="20201030 15:53:50.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.084" endtime="20201030 15:53:50.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.081" endtime="20201030 15:53:50.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.161" endtime="20201030 15:53:50.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.076" endtime="20201030 15:53:50.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.168" endtime="20201030 15:53:50.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.072" endtime="20201030 15:53:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.663" endtime="20201030 15:53:50.174"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:50.188" endtime="20201030 15:53:50.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.184" endtime="20201030 15:53:50.211"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.243" endtime="20201030 15:53:50.261"></status>
</kw>
<msg timestamp="20201030 15:53:50.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.240" endtime="20201030 15:53:50.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.268" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.264" endtime="20201030 15:53:50.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.275" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:50.271" endtime="20201030 15:53:50.275"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:50.233" endtime="20201030 15:53:50.277"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:50.227" endtime="20201030 15:53:50.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.224" endtime="20201030 15:53:50.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:50.287" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:50.286" endtime="20201030 15:53:50.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.281" endtime="20201030 15:53:50.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.223" endtime="20201030 15:53:50.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.221" endtime="20201030 15:53:50.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.291" endtime="20201030 15:53:50.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.217" endtime="20201030 15:53:50.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.213" endtime="20201030 15:53:50.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.181" endtime="20201030 15:53:50.297"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.320" endtime="20201030 15:53:56.468"></status>
</kw>
<msg timestamp="20201030 15:53:56.469" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.315" endtime="20201030 15:53:56.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.479" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.474" endtime="20201030 15:53:56.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.481" endtime="20201030 15:53:56.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.308" endtime="20201030 15:53:56.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.303" endtime="20201030 15:53:56.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.500" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:53:56.495" endtime="20201030 15:53:56.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.512" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:56.509" endtime="20201030 15:53:56.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.516" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:56.514" endtime="20201030 15:53:56.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.502" endtime="20201030 15:53:56.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.528" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:56.526" endtime="20201030 15:53:56.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.532" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:56.530" endtime="20201030 15:53:56.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.520" endtime="20201030 15:53:56.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.544" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:56.542" endtime="20201030 15:53:56.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.548" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:53:56.546" endtime="20201030 15:53:56.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.536" endtime="20201030 15:53:56.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.567" endtime="20201030 15:53:56.922"></status>
</kw>
<msg timestamp="20201030 15:53:56.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1237185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224108778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:56.564" endtime="20201030 15:53:56.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1237185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224108778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:56.932" endtime="20201030 15:53:56.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.950" endtime="20201030 15:53:56.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.556" endtime="20201030 15:53:56.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.552" endtime="20201030 15:53:56.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:56.966" level="INFO">${FILTERED} = [{'diff': 0.10039027800000001}, {'diff': 0.10032495800000002}, {'diff': 0.10033275000000003}, {'diff': 0.10033840299999996}, {'diff': 0.10032805599999994}, {'diff': 0.10033515300000007}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 15:53:56.958" endtime="20201030 15:53:56.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.977" level="INFO">${RESULT} = {'diff': [0.10039027800000001, 0.10032495800000002, 0.10033275000000003, 0.10033840299999996, 0.10032805599999994, 0.10033515300000007, 0.10033108300000004, 0.10033058399999994, 0.10034327799999987, 0...</msg>
<status status="PASS" starttime="20201030 15:53:56.969" endtime="20201030 15:53:56.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.987" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:56.985" endtime="20201030 15:53:56.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.992" level="INFO">VALUE: [0.10039027800000001, 0.10032495800000002, 0.10033275000000003, 0.10033840299999996, 0.10032805599999994, 0.10033515300000007, 0.10033108300000004, 0.10033058399999994, 0.10034327799999987, 0.10034134700000008, 0.10033751400000002, 0.10033318000000002, 0.10034242999999998, 0.10033304100000007, 0.10033372299999987, 0.10033136099999984, 0.10033330600000001, 0.10032604199999984, 0.10033197199999999, 0.10033743099999981, 0.100346708, 0.10032780500000005, 0.10031943099999996, 0.10031683400000002, 0.10032837500000014, 0.10032693100000012, 0.10033084699999995, 0.1003179860000003, 0.10033133399999983, 0.10032204200000017, 0.10031136099999971, 0.10031288900000002, 0.10031334699999972, 0.10032037500000035, 0.10032147200000008, 0.10033176400000032, 0.10033113899999968, 0.10033668000000029, 0.10032833299999977, 0.10032905599999964, 0.10032836099999987, 0.10033298600000062, 0.1003298749999999, 0.10032445800000023, 0.10031779199999935, 0.10029926399999933, 0.10031068099999985, 0.10032170800000006, 0.10031987499999939, 0.10031938900000004, 0.10031394399999982]</msg>
<status status="PASS" starttime="20201030 15:53:56.989" endtime="20201030 15:53:56.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.979" endtime="20201030 15:53:56.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:57.004" endtime="20201030 15:53:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.000" endtime="20201030 15:53:57.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.997" endtime="20201030 15:53:57.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.299" endtime="20201030 15:53:57.029"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:50.175" endtime="20201030 15:53:57.030" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:57.046" endtime="20201030 15:53:57.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.043" endtime="20201030 15:53:57.070"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.104" endtime="20201030 15:53:57.119"></status>
</kw>
<msg timestamp="20201030 15:53:57.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.101" endtime="20201030 15:53:57.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.123" endtime="20201030 15:53:57.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.134" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:57.129" endtime="20201030 15:53:57.134"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:57.094" endtime="20201030 15:53:57.136"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:57.088" endtime="20201030 15:53:57.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.085" endtime="20201030 15:53:57.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:57.148" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:57.146" endtime="20201030 15:53:57.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.140" endtime="20201030 15:53:57.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.083" endtime="20201030 15:53:57.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.082" endtime="20201030 15:53:57.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.151" endtime="20201030 15:53:57.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.076" endtime="20201030 15:53:57.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.071" endtime="20201030 15:53:57.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.040" endtime="20201030 15:53:57.158"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.179" endtime="20201030 15:54:03.322"></status>
</kw>
<msg timestamp="20201030 15:54:03.324" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.176" endtime="20201030 15:54:03.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.330" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.326" endtime="20201030 15:54:03.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.332" endtime="20201030 15:54:03.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.169" endtime="20201030 15:54:03.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.164" endtime="20201030 15:54:03.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.345" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:54:03.341" endtime="20201030 15:54:03.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.355" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:03.353" endtime="20201030 15:54:03.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.360" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:03.357" endtime="20201030 15:54:03.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.347" endtime="20201030 15:54:03.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.371" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:03.369" endtime="20201030 15:54:03.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.376" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:03.373" endtime="20201030 15:54:03.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.363" endtime="20201030 15:54:03.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.387" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:03.385" endtime="20201030 15:54:03.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.392" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:54:03.390" endtime="20201030 15:54:03.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.379" endtime="20201030 15:54:03.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.410" endtime="20201030 15:54:03.776"></status>
</kw>
<msg timestamp="20201030 15:54:03.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124021903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224406083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.407" endtime="20201030 15:54:03.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124021903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224406083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.785" endtime="20201030 15:54:03.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.803" endtime="20201030 15:54:03.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.400" endtime="20201030 15:54:03.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.395" endtime="20201030 15:54:03.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:03.820" level="INFO">${FILTERED} = [{'diff': 0.10038418}, {'diff': 0.10062895799999999}, {'diff': 0.10003236100000001}, {'diff': 0.10032255600000006}, {'diff': 0.10031886099999998}, {'diff': 0.10031675000000007}, {'diff': 0.10032124999...</msg>
<status status="PASS" starttime="20201030 15:54:03.812" endtime="20201030 15:54:03.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.831" level="INFO">${RESULT} = {'diff': [0.10038418, 0.10062895799999999, 0.10003236100000001, 0.10032255600000006, 0.10031886099999998, 0.10031675000000007, 0.10032124999999992, 0.1003268610000001, 0.100335375, 0.10033036100000015...</msg>
<status status="PASS" starttime="20201030 15:54:03.824" endtime="20201030 15:54:03.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.841" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:03.838" endtime="20201030 15:54:03.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.846" level="INFO">VALUE: [0.10038418, 0.10062895799999999, 0.10003236100000001, 0.10032255600000006, 0.10031886099999998, 0.10031675000000007, 0.10032124999999992, 0.1003268610000001, 0.100335375, 0.10033036100000015, 0.10032320800000005, 0.10032865199999996, 0.10032574999999988, 0.10031705499999988, 0.10031148600000006, 0.10031473600000007, 0.10031358400000001, 0.10032026399999983, 0.100326986, 0.10034093099999986, 0.10032061099999989, 0.10032456899999964, 0.1003167920000001, 0.10031262499999993, 0.1003141249999997, 0.10031637499999979, 0.10032344400000026, 0.10032702700000007, 0.1003069860000001, 0.10031770799999995, 0.10031586100000034, 0.10032654100000027, 0.10033023600000002, 0.10032987500000035, 0.10032137500000005, 0.10031916699999988, 0.10031761099999992, 0.10031431999999985, 0.10031390299999998, 0.10033519500000043, 0.10034052800000026, 0.1003262359999999, 0.10030976400000036, 0.10030773599999954, 0.10030691700000016, 0.10031576400000031, 0.10034025000000035, 0.10033597200000077, 0.10031740300000003, 0.10032251400000014, 0.1003244169999995]</msg>
<status status="PASS" starttime="20201030 15:54:03.843" endtime="20201030 15:54:03.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.832" endtime="20201030 15:54:03.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.858" endtime="20201030 15:54:03.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.854" endtime="20201030 15:54:03.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.851" endtime="20201030 15:54:03.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.160" endtime="20201030 15:54:03.883"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:57.035" endtime="20201030 15:54:03.884" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.900" endtime="20201030 15:54:03.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.897" endtime="20201030 15:54:03.924"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.958" endtime="20201030 15:54:03.975"></status>
</kw>
<msg timestamp="20201030 15:54:03.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.955" endtime="20201030 15:54:03.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.979" endtime="20201030 15:54:03.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.989" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:03.985" endtime="20201030 15:54:03.990"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:03.948" endtime="20201030 15:54:03.992"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:03.940" endtime="20201030 15:54:03.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.937" endtime="20201030 15:54:03.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:04.002" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:04.000" endtime="20201030 15:54:04.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.996" endtime="20201030 15:54:04.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.935" endtime="20201030 15:54:04.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.933" endtime="20201030 15:54:04.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.005" endtime="20201030 15:54:04.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.930" endtime="20201030 15:54:04.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.925" endtime="20201030 15:54:04.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.894" endtime="20201030 15:54:04.012"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.033" endtime="20201030 15:54:10.173"></status>
</kw>
<msg timestamp="20201030 15:54:10.175" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.030" endtime="20201030 15:54:10.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.181" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.177" endtime="20201030 15:54:10.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.184" endtime="20201030 15:54:10.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.023" endtime="20201030 15:54:10.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.017" endtime="20201030 15:54:10.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:10.196" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:54:10.192" endtime="20201030 15:54:10.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.206" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:10.204" endtime="20201030 15:54:10.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.211" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:10.209" endtime="20201030 15:54:10.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.198" endtime="20201030 15:54:10.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.222" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:10.220" endtime="20201030 15:54:10.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.227" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:10.224" endtime="20201030 15:54:10.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.214" endtime="20201030 15:54:10.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.238" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:10.236" endtime="20201030 15:54:10.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.243" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:54:10.240" endtime="20201030 15:54:10.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.230" endtime="20201030 15:54:10.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.265" endtime="20201030 15:54:10.614"></status>
</kw>
<msg timestamp="20201030 15:54:10.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123989722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224689653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.262" endtime="20201030 15:54:10.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123989722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224689653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.623" endtime="20201030 15:54:10.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.642" endtime="20201030 15:54:10.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.252" endtime="20201030 15:54:10.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.246" endtime="20201030 15:54:10.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:10.662" level="INFO">${FILTERED} = [{'diff': 0.10069993099999999}, {'diff': 0.100012611}, {'diff': 0.10032750000000001}, {'diff': 0.10032338900000004}, {'diff': 0.10032529199999995}, {'diff': 0.10032840300000001}, {'diff': 0.100306848}...</msg>
<status status="PASS" starttime="20201030 15:54:10.652" endtime="20201030 15:54:10.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:10.672" level="INFO">${RESULT} = {'diff': [0.10069993099999999, 0.100012611, 0.10032750000000001, 0.10032338900000004, 0.10032529199999995, 0.10032840300000001, 0.100306848, 0.10030055500000001, 0.10029823599999999, 0.100295013999999...</msg>
<status status="PASS" starttime="20201030 15:54:10.664" endtime="20201030 15:54:10.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.684" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:10.681" endtime="20201030 15:54:10.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.689" level="INFO">VALUE: [0.10069993099999999, 0.100012611, 0.10032750000000001, 0.10032338900000004, 0.10032529199999995, 0.10032840300000001, 0.100306848, 0.10030055500000001, 0.10029823599999999, 0.10029501399999985, 0.10029009700000002, 0.10029720900000005, 0.10030547199999984, 0.10031252700000004, 0.1003040970000002, 0.10030509700000012, 0.10031072299999999, 0.10030768000000001, 0.10031852799999985, 0.10032018099999984, 0.10030859699999972, 0.10030850000000013, 0.10031369400000001, 0.10031790299999965, 0.10031280600000025, 0.10032166700000023, 0.10031524999999997, 0.10031522299999995, 0.100327375, 0.10031637500000024, 0.10031161200000005, 0.10031862499999988, 0.10031558400000007, 0.10031780600000006, 0.1003254440000001, 0.10032705600000025, 0.10032336100000006, 0.10032912500000002, 0.1003253049999997, 0.10031933399999993, 0.10031145800000019, 0.10031648599999965, 0.1003194030000003, 0.10031409700000005, 0.10032615299999925, 0.10031627799999931, 0.1003194719999998, 0.10032472200000075, 0.10031365199999964, 0.10031277699999919, 0.1003149169999995]</msg>
<status status="PASS" starttime="20201030 15:54:10.686" endtime="20201030 15:54:10.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.675" endtime="20201030 15:54:10.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.702" endtime="20201030 15:54:10.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.697" endtime="20201030 15:54:10.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.695" endtime="20201030 15:54:10.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.014" endtime="20201030 15:54:10.726"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:03.888" endtime="20201030 15:54:10.728" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.746" endtime="20201030 15:54:10.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.741" endtime="20201030 15:54:10.769"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.802" endtime="20201030 15:54:10.818"></status>
</kw>
<msg timestamp="20201030 15:54:10.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.799" endtime="20201030 15:54:10.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.821" endtime="20201030 15:54:10.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.832" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:10.827" endtime="20201030 15:54:10.832"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:10.792" endtime="20201030 15:54:10.834"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:10.785" endtime="20201030 15:54:10.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.783" endtime="20201030 15:54:10.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:10.844" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:10.843" endtime="20201030 15:54:10.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.838" endtime="20201030 15:54:10.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.781" endtime="20201030 15:54:10.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.779" endtime="20201030 15:54:10.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.848" endtime="20201030 15:54:10.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.775" endtime="20201030 15:54:10.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.771" endtime="20201030 15:54:10.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.738" endtime="20201030 15:54:10.855"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.876" endtime="20201030 15:54:17.017"></status>
</kw>
<msg timestamp="20201030 15:54:17.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.873" endtime="20201030 15:54:17.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.020" endtime="20201030 15:54:17.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.027" endtime="20201030 15:54:17.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.865" endtime="20201030 15:54:17.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.860" endtime="20201030 15:54:17.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:17.040" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:54:17.036" endtime="20201030 15:54:17.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.050" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:17.047" endtime="20201030 15:54:17.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.056" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:17.054" endtime="20201030 15:54:17.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.041" endtime="20201030 15:54:17.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.068" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:17.066" endtime="20201030 15:54:17.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.073" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:17.070" endtime="20201030 15:54:17.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.060" endtime="20201030 15:54:17.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.084" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:17.082" endtime="20201030 15:54:17.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.089" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:54:17.087" endtime="20201030 15:54:17.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.076" endtime="20201030 15:54:17.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.107" endtime="20201030 15:54:17.465"></status>
</kw>
<msg timestamp="20201030 15:54:17.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121199236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222114681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.104" endtime="20201030 15:54:17.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121199236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222114681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.474" endtime="20201030 15:54:17.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.492" endtime="20201030 15:54:17.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.097" endtime="20201030 15:54:17.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.092" endtime="20201030 15:54:17.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:17.510" level="INFO">${FILTERED} = [{'diff': 0.100915445}, {'diff': 0.09982168}, {'diff': 0.10032380600000002}, {'diff': 0.10032805600000005}, {'diff': 0.10032427799999999}, {'diff': 0.10033431999999998}, {'diff': 0.10032876400000001},...</msg>
<status status="PASS" starttime="20201030 15:54:17.501" endtime="20201030 15:54:17.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:17.521" level="INFO">${RESULT} = {'diff': [0.100915445, 0.09982168, 0.10032380600000002, 0.10032805600000005, 0.10032427799999999, 0.10033431999999998, 0.10032876400000001, 0.10033655600000002, 0.10032772200000006, 0.1003129030000000...</msg>
<status status="PASS" starttime="20201030 15:54:17.512" endtime="20201030 15:54:17.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.530" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:17.528" endtime="20201030 15:54:17.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.535" level="INFO">VALUE: [0.100915445, 0.09982168, 0.10032380600000002, 0.10032805600000005, 0.10032427799999999, 0.10033431999999998, 0.10032876400000001, 0.10033655600000002, 0.10032772200000006, 0.10031290300000006, 0.10032155599999992, 0.10031770800000017, 0.10032179099999983, 0.10031563899999996, 0.10032706899999999, 0.10031858400000004, 0.10031374999999998, 0.10034037499999982, 0.10032574999999988, 0.10032326400000002, 0.10031487500000003, 0.10030284800000011, 0.100312014, 0.10031916699999988, 0.10032648599999971, 0.10032655599999973, 0.10032024999999978, 0.10034200000000038, 0.10034954099999993, 0.10031916699999988, 0.10032386199999976, 0.10031198599999991, 0.1003345419999997, 0.10032397199999998, 0.100317569, 0.10032309800000005, 0.10033145799999987, 0.10032537499999972, 0.10033212500000044, 0.10031676399999956, 0.10030976399999947, 0.10030340300000073, 0.10030068000000014, 0.10031109699999963, 0.10030327799999927, 0.10030512500000022, 0.10030845899999985, 0.10030931899999995, 0.1002972359999994, 0.100307806, 0.10031390299999998]</msg>
<status status="PASS" starttime="20201030 15:54:17.533" endtime="20201030 15:54:17.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.522" endtime="20201030 15:54:17.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:17.548" endtime="20201030 15:54:17.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.544" endtime="20201030 15:54:17.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.541" endtime="20201030 15:54:17.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.856" endtime="20201030 15:54:17.573"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:10.732" endtime="20201030 15:54:17.574" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:17.590" endtime="20201030 15:54:17.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.587" endtime="20201030 15:54:17.614"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.646" endtime="20201030 15:54:17.664"></status>
</kw>
<msg timestamp="20201030 15:54:17.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.643" endtime="20201030 15:54:17.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.667" endtime="20201030 15:54:17.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.678" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:17.674" endtime="20201030 15:54:17.678"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:17.636" endtime="20201030 15:54:17.680"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:17.630" endtime="20201030 15:54:17.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.627" endtime="20201030 15:54:17.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:17.690" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:17.689" endtime="20201030 15:54:17.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.684" endtime="20201030 15:54:17.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.626" endtime="20201030 15:54:17.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.624" endtime="20201030 15:54:17.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.694" endtime="20201030 15:54:17.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.620" endtime="20201030 15:54:17.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.615" endtime="20201030 15:54:17.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.584" endtime="20201030 15:54:17.701"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.724" endtime="20201030 15:54:23.867"></status>
</kw>
<msg timestamp="20201030 15:54:23.868" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.721" endtime="20201030 15:54:23.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.874" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.870" endtime="20201030 15:54:23.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.877" endtime="20201030 15:54:23.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.713" endtime="20201030 15:54:23.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.706" endtime="20201030 15:54:23.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:23.890" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:54:23.886" endtime="20201030 15:54:23.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.900" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:23.897" endtime="20201030 15:54:23.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.904" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:23.902" endtime="20201030 15:54:23.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.892" endtime="20201030 15:54:23.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.916" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:23.914" endtime="20201030 15:54:23.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.920" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:23.918" endtime="20201030 15:54:23.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.908" endtime="20201030 15:54:23.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.932" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:23.930" endtime="20201030 15:54:23.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.937" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:54:23.935" endtime="20201030 15:54:23.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.924" endtime="20201030 15:54:23.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.955" endtime="20201030 15:54:24.308"></status>
</kw>
<msg timestamp="20201030 15:54:24.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124913806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226021889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.952" endtime="20201030 15:54:24.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124913806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226021889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.317" endtime="20201030 15:54:24.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.335" endtime="20201030 15:54:24.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.945" endtime="20201030 15:54:24.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.940" endtime="20201030 15:54:24.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:24.352" level="INFO">${FILTERED} = [{'diff': 0.101108083}, {'diff': 0.099601931}, {'diff': 0.10031904200000002}, {'diff': 0.10032165299999996}, {'diff': 0.10032130500000003}, {'diff': 0.10031343000000004}, {'diff': 0.10031199999999996}...</msg>
<status status="PASS" starttime="20201030 15:54:24.343" endtime="20201030 15:54:24.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.362" level="INFO">${RESULT} = {'diff': [0.101108083, 0.099601931, 0.10031904200000002, 0.10032165299999996, 0.10032130500000003, 0.10031343000000004, 0.10031199999999996, 0.10031516699999998, 0.10032131899999996, 0.100312262999999...</msg>
<status status="PASS" starttime="20201030 15:54:24.354" endtime="20201030 15:54:24.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.372" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:24.370" endtime="20201030 15:54:24.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.378" level="INFO">VALUE: [0.101108083, 0.099601931, 0.10031904200000002, 0.10032165299999996, 0.10032130500000003, 0.10031343000000004, 0.10031199999999996, 0.10031516699999998, 0.10032131899999996, 0.10031226299999996, 0.10031930600000005, 0.10031093000000002, 0.1003120420000001, 0.10030465300000002, 0.10031083399999985, 0.10030962499999996, 0.10031494500000004, 0.10031105600000001, 0.10031686099999981, 0.10031602799999995, 0.10030574999999997, 0.10030759800000011, 0.10031381900000014, 0.10030973600000026, 0.10031304200000024, 0.10031159700000014, 0.10031579099999988, 0.10031882000000003, 0.10031544400000003, 0.10031555500000033, 0.10032291700000018, 0.10031819499999983, 0.10031809700000016, 0.10032669499999969, 0.10030699999999992, 0.10029243100000018, 0.10029488899999972, 0.10030869500000028, 0.10030177799999995, 0.10031069500000012, 0.10030713899999988, 0.10031518100000003, 0.1003186110000005, 0.10030080599999991, 0.1003035419999998, 0.10030561100000046, 0.10030979199999912, 0.1003036530000001, 0.10032338899999971, 0.1003149169999995, 0.10031018100000022]</msg>
<status status="PASS" starttime="20201030 15:54:24.375" endtime="20201030 15:54:24.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.364" endtime="20201030 15:54:24.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.390" endtime="20201030 15:54:24.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.386" endtime="20201030 15:54:24.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.383" endtime="20201030 15:54:24.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.702" endtime="20201030 15:54:24.414"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:17.578" endtime="20201030 15:54:24.416" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.432" endtime="20201030 15:54:24.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.429" endtime="20201030 15:54:24.455"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.488" endtime="20201030 15:54:24.508"></status>
</kw>
<msg timestamp="20201030 15:54:24.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.485" endtime="20201030 15:54:24.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.511" endtime="20201030 15:54:24.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.522" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:24.518" endtime="20201030 15:54:24.523"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:24.478" endtime="20201030 15:54:24.525"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:24.471" endtime="20201030 15:54:24.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.469" endtime="20201030 15:54:24.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:24.535" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:24.533" endtime="20201030 15:54:24.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.529" endtime="20201030 15:54:24.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.467" endtime="20201030 15:54:24.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.465" endtime="20201030 15:54:24.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.538" endtime="20201030 15:54:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.461" endtime="20201030 15:54:24.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.457" endtime="20201030 15:54:24.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.426" endtime="20201030 15:54:24.545"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.566" endtime="20201030 15:54:30.706"></status>
</kw>
<msg timestamp="20201030 15:54:30.707" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.563" endtime="20201030 15:54:30.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.709" endtime="20201030 15:54:30.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.716" endtime="20201030 15:54:30.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.556" endtime="20201030 15:54:30.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.550" endtime="20201030 15:54:30.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.729" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 15:54:30.725" endtime="20201030 15:54:30.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.739" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:30.736" endtime="20201030 15:54:30.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.743" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:30.741" endtime="20201030 15:54:30.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.730" endtime="20201030 15:54:30.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.755" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:30.753" endtime="20201030 15:54:30.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.759" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:30.757" endtime="20201030 15:54:30.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.747" endtime="20201030 15:54:30.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.771" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:30.769" endtime="20201030 15:54:30.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.775" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:54:30.773" endtime="20201030 15:54:30.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.763" endtime="20201030 15:54:30.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.794" endtime="20201030 15:54:31.155"></status>
</kw>
<msg timestamp="20201030 15:54:31.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124958514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226347292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.791" endtime="20201030 15:54:31.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124958514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226347292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.164" endtime="20201030 15:54:31.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.182" endtime="20201030 15:54:31.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.783" endtime="20201030 15:54:31.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.779" endtime="20201030 15:54:31.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:31.199" level="INFO">${FILTERED} = [{'diff': 0.101388778}, {'diff': 0.10047640300000002}, {'diff': 0.09916698600000001}, {'diff': 0.10032737499999994}, {'diff': 0.10031373600000004}, {'diff': 0.10030263900000003}, {'diff': 0.1003198200...</msg>
<status status="PASS" starttime="20201030 15:54:31.191" endtime="20201030 15:54:31.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.208" level="INFO">${RESULT} = {'diff': [0.101388778, 0.10047640300000002, 0.09916698600000001, 0.10032737499999994, 0.10031373600000004, 0.10030263900000003, 0.10031982000000006, 0.10031461099999994, 0.10032869500000008, 0.1003249...</msg>
<status status="PASS" starttime="20201030 15:54:31.201" endtime="20201030 15:54:31.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.218" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:31.215" endtime="20201030 15:54:31.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.223" level="INFO">VALUE: [0.101388778, 0.10047640300000002, 0.09916698600000001, 0.10032737499999994, 0.10031373600000004, 0.10030263900000003, 0.10031982000000006, 0.10031461099999994, 0.10032869500000008, 0.10032492999999998, 0.10032659700000002, 0.10031082000000002, 0.1003132910000002, 0.10031013899999985, 0.10030651400000012, 0.10031401400000006, 0.10031116699999987, 0.10031370800000006, 0.1003268610000001, 0.10032379200000019, 0.10031145800000019, 0.10031606900000023, 0.10031219500000033, 0.10030702800000002, 0.1003113889999998, 0.10031604200000022, 0.10030140299999957, 0.10031395799999965, 0.1003103059999999, 0.10030172199999976, 0.10032036200000016, 0.10032186100000029, 0.10031666699999997, 0.1003168750000003, 0.1003150279999998, 0.10031913900000022, 0.10031805600000032, 0.10032783400000023, 0.10032399999999964, 0.10029743099999955, 0.10030651399999968, 0.10031370899999992, 0.10030626400000031, 0.10031519399999933, 0.10031466600000005, 0.10031816700000018, 0.10030572199999988, 0.10030379099999998, 0.10031131899999934, 0.10031406999999959, 0.10029872199999978]</msg>
<status status="PASS" starttime="20201030 15:54:31.220" endtime="20201030 15:54:31.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.210" endtime="20201030 15:54:31.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.235" endtime="20201030 15:54:31.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.231" endtime="20201030 15:54:31.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.229" endtime="20201030 15:54:31.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.546" endtime="20201030 15:54:31.260"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:24.420" endtime="20201030 15:54:31.261" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:47.559" endtime="20201030 15:54:31.278"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:50:55.749" endtime="20201030 15:54:31.356"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
