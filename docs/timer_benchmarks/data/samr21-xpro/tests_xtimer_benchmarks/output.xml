<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 12:42:56.179" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.544" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:57.561" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:59.569" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:57.539" endtime="20201029 12:42:59.571"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.576" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:59.573" endtime="20201029 12:42:59.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.536" endtime="20201029 12:42:59.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:59.583" endtime="20201029 12:42:59.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.580" endtime="20201029 12:42:59.930"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.962" endtime="20201029 12:42:59.981"></status>
</kw>
<msg timestamp="20201029 12:42:59.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.958" endtime="20201029 12:42:59.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.988" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.984" endtime="20201029 12:42:59.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.995" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:59.991" endtime="20201029 12:42:59.996"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.952" endtime="20201029 12:42:59.998"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.945" endtime="20201029 12:42:59.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.942" endtime="20201029 12:43:00.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:00.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:00.006" endtime="20201029 12:43:00.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.002" endtime="20201029 12:43:00.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.941" endtime="20201029 12:43:00.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.939" endtime="20201029 12:43:00.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.012" endtime="20201029 12:43:00.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.935" endtime="20201029 12:43:00.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.018" endtime="20201029 12:43:00.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.932" endtime="20201029 12:43:00.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.533" endtime="20201029 12:43:00.024"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:00.039" endtime="20201029 12:43:00.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.036" endtime="20201029 12:43:00.063"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.097" endtime="20201029 12:43:00.115"></status>
</kw>
<msg timestamp="20201029 12:43:00.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.094" endtime="20201029 12:43:00.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.118" endtime="20201029 12:43:00.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.129" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:00.125" endtime="20201029 12:43:00.130"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:00.087" endtime="20201029 12:43:00.131"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:00.080" endtime="20201029 12:43:00.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.076" endtime="20201029 12:43:00.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:00.141" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:00.140" endtime="20201029 12:43:00.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.135" endtime="20201029 12:43:00.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.074" endtime="20201029 12:43:00.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.072" endtime="20201029 12:43:00.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.145" endtime="20201029 12:43:00.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.068" endtime="20201029 12:43:00.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.064" endtime="20201029 12:43:00.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.033" endtime="20201029 12:43:00.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.170" endtime="20201029 12:43:00.182"></status>
</kw>
<msg timestamp="20201029 12:43:00.183" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.166" endtime="20201029 12:43:00.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.189" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.185" endtime="20201029 12:43:00.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.191" endtime="20201029 12:43:00.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.159" endtime="20201029 12:43:00.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.154" endtime="20201029 12:43:00.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.207" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:43:00.205" endtime="20201029 12:43:00.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.212" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:43:00.210" endtime="20201029 12:43:00.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.199" endtime="20201029 12:43:00.214"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:00.025" endtime="20201029 12:43:00.216" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:56.438" endtime="20201029 12:43:00.222"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.353" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:00.369" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:02.465" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:00.350" endtime="20201029 12:43:02.466"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.471" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:02.468" endtime="20201029 12:43:02.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.347" endtime="20201029 12:43:02.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:02.478" endtime="20201029 12:43:02.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.475" endtime="20201029 12:43:02.820"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.849" endtime="20201029 12:43:02.865"></status>
</kw>
<msg timestamp="20201029 12:43:02.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.846" endtime="20201029 12:43:02.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.872" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.868" endtime="20201029 12:43:02.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.879" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:02.874" endtime="20201029 12:43:02.879"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:02.839" endtime="20201029 12:43:02.881"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:02.834" endtime="20201029 12:43:02.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.831" endtime="20201029 12:43:02.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:02.891" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:02.890" endtime="20201029 12:43:02.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.885" endtime="20201029 12:43:02.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.829" endtime="20201029 12:43:02.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.828" endtime="20201029 12:43:02.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.895" endtime="20201029 12:43:02.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.825" endtime="20201029 12:43:02.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.901" endtime="20201029 12:43:02.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.821" endtime="20201029 12:43:02.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.344" endtime="20201029 12:43:02.907"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:02.921" endtime="20201029 12:43:02.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.917" endtime="20201029 12:43:02.944"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.039" endtime="20201029 12:43:03.055"></status>
</kw>
<msg timestamp="20201029 12:43:03.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.036" endtime="20201029 12:43:03.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.063" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.059" endtime="20201029 12:43:03.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.069" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:03.065" endtime="20201029 12:43:03.070"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.029" endtime="20201029 12:43:03.072"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:02.960" endtime="20201029 12:43:03.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.957" endtime="20201029 12:43:03.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:03.082" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:03.081" endtime="20201029 12:43:03.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.076" endtime="20201029 12:43:03.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.956" endtime="20201029 12:43:03.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.954" endtime="20201029 12:43:03.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.085" endtime="20201029 12:43:03.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.950" endtime="20201029 12:43:03.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.946" endtime="20201029 12:43:03.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.915" endtime="20201029 12:43:03.092"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.114" endtime="20201029 12:43:03.125"></status>
</kw>
<msg timestamp="20201029 12:43:03.126" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.111" endtime="20201029 12:43:03.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.132" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.128" endtime="20201029 12:43:03.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.134" endtime="20201029 12:43:03.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.104" endtime="20201029 12:43:03.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.099" endtime="20201029 12:43:03.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.159" endtime="20201029 12:43:03.513"></status>
</kw>
<msg timestamp="20201029 12:43:03.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.183379222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.183395375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:03.155" endtime="20201029 12:43:03.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.183379222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.183395375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:03.523" endtime="20201029 12:43:03.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.542" endtime="20201029 12:43:03.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.147" endtime="20201029 12:43:03.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.142" endtime="20201029 12:43:03.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.559" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.729999999730783e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.8599999999...</msg>
<status status="PASS" starttime="20201029 12:43:03.550" endtime="20201029 12:43:03.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:03.569" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.729999999730783e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.8...</msg>
<status status="PASS" starttime="20201029 12:43:03.561" endtime="20201029 12:43:03.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.579" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:03.576" endtime="20201029 12:43:03.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.584" level="INFO">VALUE: [0, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.729999999730783e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.869999999934649e-07, 4.869999999934649e-07, 4.869999999934649e-07, 4.859999999939912e-07, 4.869999999934649e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201029 12:43:03.581" endtime="20201029 12:43:03.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.570" endtime="20201029 12:43:03.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.096" endtime="20201029 12:43:03.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.095" endtime="20201029 12:43:03.588"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.610" endtime="20201029 12:43:03.620"></status>
</kw>
<msg timestamp="20201029 12:43:03.622" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.606" endtime="20201029 12:43:03.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.624" endtime="20201029 12:43:03.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.630" endtime="20201029 12:43:03.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.598" endtime="20201029 12:43:03.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.593" endtime="20201029 12:43:03.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.653" endtime="20201029 12:43:04.013"></status>
</kw>
<msg timestamp="20201029 12:43:04.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.183946389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.183946875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.650" endtime="20201029 12:43:04.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.183946389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.183946875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.024" endtime="20201029 12:43:04.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.047" endtime="20201029 12:43:04.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.642" endtime="20201029 12:43:04.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.638" endtime="20201029 12:43:04.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.068" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000217468e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:43:04.057" endtime="20201029 12:43:04.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:04.085" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7200...</msg>
<status status="PASS" starttime="20201029 12:43:04.071" endtime="20201029 12:43:04.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.101" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:04.098" endtime="20201029 12:43:04.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.107" level="INFO">VALUE: [4.860000000217468e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 12:43:04.104" endtime="20201029 12:43:04.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.091" endtime="20201029 12:43:04.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.590" endtime="20201029 12:43:04.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.589" endtime="20201029 12:43:04.111"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.132" endtime="20201029 12:43:04.143"></status>
</kw>
<msg timestamp="20201029 12:43:04.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.128" endtime="20201029 12:43:04.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.150" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.146" endtime="20201029 12:43:04.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.153" endtime="20201029 12:43:04.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.121" endtime="20201029 12:43:04.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.117" endtime="20201029 12:43:04.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.176" endtime="20201029 12:43:04.549"></status>
</kw>
<msg timestamp="20201029 12:43:04.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.670463556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.670464028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.173" endtime="20201029 12:43:04.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.670463556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.670464028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.561" endtime="20201029 12:43:04.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.583" endtime="20201029 12:43:04.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.165" endtime="20201029 12:43:04.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.161" endtime="20201029 12:43:04.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.600" level="INFO">${RESULT} = [{'diff': 4.7200000008462695e-07}, {'diff': 4.869999999934649e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:04.591" endtime="20201029 12:43:04.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:04.613" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000008462695e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 12:43:04.602" endtime="20201029 12:43:04.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.623" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:04.621" endtime="20201029 12:43:04.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.629" level="INFO">VALUE: [4.7200000008462695e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:04.626" endtime="20201029 12:43:04.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.615" endtime="20201029 12:43:04.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.113" endtime="20201029 12:43:04.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.112" endtime="20201029 12:43:04.633"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.654" endtime="20201029 12:43:04.664"></status>
</kw>
<msg timestamp="20201029 12:43:04.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.650" endtime="20201029 12:43:04.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.672" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.668" endtime="20201029 12:43:04.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.674" endtime="20201029 12:43:04.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.643" endtime="20201029 12:43:04.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.638" endtime="20201029 12:43:04.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.697" endtime="20201029 12:43:05.049"></status>
</kw>
<msg timestamp="20201029 12:43:05.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.183585194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.183585667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.693" endtime="20201029 12:43:05.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.183585194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.183585667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.060" endtime="20201029 12:43:05.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.082" endtime="20201029 12:43:05.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.686" endtime="20201029 12:43:05.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.682" endtime="20201029 12:43:05.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.100" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:05.090" endtime="20201029 12:43:05.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.110" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.859...</msg>
<status status="PASS" starttime="20201029 12:43:05.102" endtime="20201029 12:43:05.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.121" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:05.119" endtime="20201029 12:43:05.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.126" level="INFO">VALUE: [4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:05.123" endtime="20201029 12:43:05.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.113" endtime="20201029 12:43:05.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.635" endtime="20201029 12:43:05.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.634" endtime="20201029 12:43:05.131"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.152" endtime="20201029 12:43:05.163"></status>
</kw>
<msg timestamp="20201029 12:43:05.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.149" endtime="20201029 12:43:05.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.166" endtime="20201029 12:43:05.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.172" endtime="20201029 12:43:05.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.140" endtime="20201029 12:43:05.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.136" endtime="20201029 12:43:05.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.195" endtime="20201029 12:43:05.545"></status>
</kw>
<msg timestamp="20201029 12:43:05.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.695308375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.695308861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.192" endtime="20201029 12:43:05.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.695308375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.695308861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.557" endtime="20201029 12:43:05.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.581" endtime="20201029 12:43:05.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.185" endtime="20201029 12:43:05.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.180" endtime="20201029 12:43:05.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.602" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 12:43:05.592" endtime="20201029 12:43:05.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.614" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:43:05.604" endtime="20201029 12:43:05.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.624" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:05.622" endtime="20201029 12:43:05.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.630" level="INFO">VALUE: [4.860000000217468e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.870000003265318e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:05.627" endtime="20201029 12:43:05.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.616" endtime="20201029 12:43:05.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.132" endtime="20201029 12:43:05.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.132" endtime="20201029 12:43:05.634"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.655" endtime="20201029 12:43:05.665"></status>
</kw>
<msg timestamp="20201029 12:43:05.666" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.651" endtime="20201029 12:43:05.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.669" endtime="20201029 12:43:05.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.675" endtime="20201029 12:43:05.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.644" endtime="20201029 12:43:05.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.639" endtime="20201029 12:43:05.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.698" endtime="20201029 12:43:06.063"></status>
</kw>
<msg timestamp="20201029 12:43:06.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.182911139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.182911611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.694" endtime="20201029 12:43:06.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.182911139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.182911611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.074" endtime="20201029 12:43:06.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.096" endtime="20201029 12:43:06.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.687" endtime="20201029 12:43:06.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.683" endtime="20201029 12:43:06.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.114" level="INFO">${RESULT} = [{'diff': 4.7200000041769385e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:06.104" endtime="20201029 12:43:06.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.126" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.85...</msg>
<status status="PASS" starttime="20201029 12:43:06.116" endtime="20201029 12:43:06.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.136" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:06.134" endtime="20201029 12:43:06.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.142" level="INFO">VALUE: [4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:06.139" endtime="20201029 12:43:06.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.128" endtime="20201029 12:43:06.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.636" endtime="20201029 12:43:06.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.635" endtime="20201029 12:43:06.146"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.166" endtime="20201029 12:43:06.177"></status>
</kw>
<msg timestamp="20201029 12:43:06.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.163" endtime="20201029 12:43:06.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.180" endtime="20201029 12:43:06.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.186" endtime="20201029 12:43:06.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.156" endtime="20201029 12:43:06.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.151" endtime="20201029 12:43:06.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.209" endtime="20201029 12:43:06.595"></status>
</kw>
<msg timestamp="20201029 12:43:06.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.674565139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.674565625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.206" endtime="20201029 12:43:06.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.674565139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.674565625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.606" endtime="20201029 12:43:06.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.628" endtime="20201029 12:43:06.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.199" endtime="20201029 12:43:06.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.194" endtime="20201029 12:43:06.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.646" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07},...</msg>
<status status="PASS" starttime="20201029 12:43:06.637" endtime="20201029 12:43:06.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.658" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.8...</msg>
<status status="PASS" starttime="20201029 12:43:06.649" endtime="20201029 12:43:06.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.668" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:06.666" endtime="20201029 12:43:06.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.674" level="INFO">VALUE: [4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7200000041769385e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 12:43:06.670" endtime="20201029 12:43:06.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.660" endtime="20201029 12:43:06.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.148" endtime="20201029 12:43:06.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.147" endtime="20201029 12:43:06.678"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.699" endtime="20201029 12:43:06.711"></status>
</kw>
<msg timestamp="20201029 12:43:06.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.694" endtime="20201029 12:43:06.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.714" endtime="20201029 12:43:06.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.720" endtime="20201029 12:43:06.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.687" endtime="20201029 12:43:06.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.683" endtime="20201029 12:43:06.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.743" endtime="20201029 12:43:07.132"></status>
</kw>
<msg timestamp="20201029 12:43:07.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.176892111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.176892597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.740" endtime="20201029 12:43:07.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.176892111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.176892597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.143" endtime="20201029 12:43:07.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.165" endtime="20201029 12:43:07.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.733" endtime="20201029 12:43:07.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.728" endtime="20201029 12:43:07.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.183" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:07.173" endtime="20201029 12:43:07.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.195" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 12:43:07.185" endtime="20201029 12:43:07.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.205" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:07.203" endtime="20201029 12:43:07.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.211" level="INFO">VALUE: [4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.860000002437914e-07, 5.139999998959865e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:07.207" endtime="20201029 12:43:07.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.197" endtime="20201029 12:43:07.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.680" endtime="20201029 12:43:07.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.679" endtime="20201029 12:43:07.215"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.235" endtime="20201029 12:43:07.246"></status>
</kw>
<msg timestamp="20201029 12:43:07.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.232" endtime="20201029 12:43:07.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.253" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.249" endtime="20201029 12:43:07.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.255" endtime="20201029 12:43:07.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.225" endtime="20201029 12:43:07.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.220" endtime="20201029 12:43:07.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.278" endtime="20201029 12:43:07.640"></status>
</kw>
<msg timestamp="20201029 12:43:07.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.700245458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.700245944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.275" endtime="20201029 12:43:07.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.700245458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.700245944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.651" endtime="20201029 12:43:07.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.673" endtime="20201029 12:43:07.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.268" endtime="20201029 12:43:07.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.263" endtime="20201029 12:43:07.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.691" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 5.139999998959865e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07},...</msg>
<status status="PASS" starttime="20201029 12:43:07.681" endtime="20201029 12:43:07.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.706" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 5.139999998959865e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:43:07.693" endtime="20201029 12:43:07.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.716" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:07.714" endtime="20201029 12:43:07.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.722" level="INFO">VALUE: [4.860000002437914e-07, 5.139999998959865e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:43:07.719" endtime="20201029 12:43:07.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.708" endtime="20201029 12:43:07.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.217" endtime="20201029 12:43:07.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.216" endtime="20201029 12:43:07.726"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.747" endtime="20201029 12:43:07.757"></status>
</kw>
<msg timestamp="20201029 12:43:07.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.743" endtime="20201029 12:43:07.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.761" endtime="20201029 12:43:07.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.767" endtime="20201029 12:43:07.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.736" endtime="20201029 12:43:07.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.731" endtime="20201029 12:43:07.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.790" endtime="20201029 12:43:08.173"></status>
</kw>
<msg timestamp="20201029 12:43:08.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.225040931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.225041417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.787" endtime="20201029 12:43:08.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.225040931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.225041417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.185" endtime="20201029 12:43:08.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.207" endtime="20201029 12:43:08.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.779" endtime="20201029 12:43:08.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.775" endtime="20201029 12:43:08.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.225" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:08.216" endtime="20201029 12:43:08.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:08.235" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 12:43:08.227" endtime="20201029 12:43:08.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.245" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:08.243" endtime="20201029 12:43:08.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.251" level="INFO">VALUE: [4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.870000003265318e-07]</msg>
<status status="PASS" starttime="20201029 12:43:08.248" endtime="20201029 12:43:08.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.237" endtime="20201029 12:43:08.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.728" endtime="20201029 12:43:08.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.727" endtime="20201029 12:43:08.255"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.275" endtime="20201029 12:43:08.287"></status>
</kw>
<msg timestamp="20201029 12:43:08.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.272" endtime="20201029 12:43:08.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.291" endtime="20201029 12:43:08.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.297" endtime="20201029 12:43:08.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.265" endtime="20201029 12:43:08.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.260" endtime="20201029 12:43:08.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.320" endtime="20201029 12:43:08.686"></status>
</kw>
<msg timestamp="20201029 12:43:08.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.726959375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.726959861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.316" endtime="20201029 12:43:08.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.726959375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.726959861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.697" endtime="20201029 12:43:08.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.719" endtime="20201029 12:43:08.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.309" endtime="20201029 12:43:08.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.305" endtime="20201029 12:43:08.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.737" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.860000002437914e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:43:08.728" endtime="20201029 12:43:08.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:08.749" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 12:43:08.739" endtime="20201029 12:43:08.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.759" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:08.757" endtime="20201029 12:43:08.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.765" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.869999994383534e-07]</msg>
<status status="PASS" starttime="20201029 12:43:08.762" endtime="20201029 12:43:08.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.751" endtime="20201029 12:43:08.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.257" endtime="20201029 12:43:08.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.256" endtime="20201029 12:43:08.769"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.789" endtime="20201029 12:43:08.800"></status>
</kw>
<msg timestamp="20201029 12:43:08.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.786" endtime="20201029 12:43:08.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.807" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.803" endtime="20201029 12:43:08.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.810" endtime="20201029 12:43:08.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.779" endtime="20201029 12:43:08.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.774" endtime="20201029 12:43:08.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.833" endtime="20201029 12:43:09.223"></status>
</kw>
<msg timestamp="20201029 12:43:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.245736639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.245737125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.829" endtime="20201029 12:43:09.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.245736639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.245737125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.234" endtime="20201029 12:43:09.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.258" endtime="20201029 12:43:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.822" endtime="20201029 12:43:09.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.818" endtime="20201029 12:43:09.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.276" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:09.266" endtime="20201029 12:43:09.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:09.288" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000...</msg>
<status status="PASS" starttime="20201029 12:43:09.278" endtime="20201029 12:43:09.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.298" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:09.296" endtime="20201029 12:43:09.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.304" level="INFO">VALUE: [4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:09.301" endtime="20201029 12:43:09.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.290" endtime="20201029 12:43:09.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.771" endtime="20201029 12:43:09.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.770" endtime="20201029 12:43:09.309"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.329" endtime="20201029 12:43:09.341"></status>
</kw>
<msg timestamp="20201029 12:43:09.343" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.326" endtime="20201029 12:43:09.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.349" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.345" endtime="20201029 12:43:09.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.351" endtime="20201029 12:43:09.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.318" endtime="20201029 12:43:09.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.314" endtime="20201029 12:43:09.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.375" endtime="20201029 12:43:09.766"></status>
</kw>
<msg timestamp="20201029 12:43:09.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.74868275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.748683236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:09.372" endtime="20201029 12:43:09.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.74868275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.748683236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:09.778" endtime="20201029 12:43:09.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.802" endtime="20201029 12:43:09.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.364" endtime="20201029 12:43:09.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.359" endtime="20201029 12:43:09.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.820" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07},...</msg>
<status status="PASS" starttime="20201029 12:43:09.810" endtime="20201029 12:43:09.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:09.831" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:43:09.822" endtime="20201029 12:43:09.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.841" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:09.839" endtime="20201029 12:43:09.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.847" level="INFO">VALUE: [4.85999999355613e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:09.844" endtime="20201029 12:43:09.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.833" endtime="20201029 12:43:09.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.311" endtime="20201029 12:43:09.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.310" endtime="20201029 12:43:09.851"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.872" endtime="20201029 12:43:09.886"></status>
</kw>
<msg timestamp="20201029 12:43:09.887" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.869" endtime="20201029 12:43:09.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.893" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.889" endtime="20201029 12:43:09.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.896" endtime="20201029 12:43:09.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.861" endtime="20201029 12:43:09.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.856" endtime="20201029 12:43:09.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.920" endtime="20201029 12:43:10.296"></status>
</kw>
<msg timestamp="20201029 12:43:10.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.279508694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.279509167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.916" endtime="20201029 12:43:10.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.279508694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.279509167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.307" endtime="20201029 12:43:10.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.331" endtime="20201029 12:43:10.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.909" endtime="20201029 12:43:10.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.904" endtime="20201029 12:43:10.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.349" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:10.340" endtime="20201029 12:43:10.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:10.362" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7300...</msg>
<status status="PASS" starttime="20201029 12:43:10.351" endtime="20201029 12:43:10.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.372" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:10.370" endtime="20201029 12:43:10.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.378" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:10.374" endtime="20201029 12:43:10.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.363" endtime="20201029 12:43:10.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.853" endtime="20201029 12:43:10.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.852" endtime="20201029 12:43:10.382"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.403" endtime="20201029 12:43:10.415"></status>
</kw>
<msg timestamp="20201029 12:43:10.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.399" endtime="20201029 12:43:10.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.421" endtime="20201029 12:43:10.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.428" endtime="20201029 12:43:10.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.392" endtime="20201029 12:43:10.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.387" endtime="20201029 12:43:10.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.485" endtime="20201029 12:43:10.892"></status>
</kw>
<msg timestamp="20201029 12:43:10.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.815064472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.815064958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.480" endtime="20201029 12:43:10.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.815064472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.815064958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.903" endtime="20201029 12:43:10.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.927" endtime="20201029 12:43:10.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.463" endtime="20201029 12:43:10.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.445" endtime="20201029 12:43:10.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.945" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:10.935" endtime="20201029 12:43:10.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:10.957" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:43:10.947" endtime="20201029 12:43:10.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.968" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:10.966" endtime="20201029 12:43:10.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.974" level="INFO">VALUE: [4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07]</msg>
<status status="PASS" starttime="20201029 12:43:10.970" endtime="20201029 12:43:10.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.959" endtime="20201029 12:43:10.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.384" endtime="20201029 12:43:10.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.383" endtime="20201029 12:43:10.978"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.999" endtime="20201029 12:43:11.011"></status>
</kw>
<msg timestamp="20201029 12:43:11.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.995" endtime="20201029 12:43:11.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.019" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.015" endtime="20201029 12:43:11.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.021" endtime="20201029 12:43:11.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.988" endtime="20201029 12:43:11.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.983" endtime="20201029 12:43:11.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.045" endtime="20201029 12:43:11.435"></status>
</kw>
<msg timestamp="20201029 12:43:11.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.333954389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.333954861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.041" endtime="20201029 12:43:11.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.333954389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.333954861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.447" endtime="20201029 12:43:11.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.470" endtime="20201029 12:43:11.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.034" endtime="20201029 12:43:11.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.029" endtime="20201029 12:43:11.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.488" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:11.478" endtime="20201029 12:43:11.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:11.499" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 12:43:11.490" endtime="20201029 12:43:11.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.509" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:11.507" endtime="20201029 12:43:11.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.515" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:43:11.512" endtime="20201029 12:43:11.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.501" endtime="20201029 12:43:11.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.980" endtime="20201029 12:43:11.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.979" endtime="20201029 12:43:11.520"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.541" endtime="20201029 12:43:11.555"></status>
</kw>
<msg timestamp="20201029 12:43:11.556" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.537" endtime="20201029 12:43:11.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.563" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.559" endtime="20201029 12:43:11.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.566" endtime="20201029 12:43:11.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.529" endtime="20201029 12:43:11.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.525" endtime="20201029 12:43:11.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.590" endtime="20201029 12:43:11.968"></status>
</kw>
<msg timestamp="20201029 12:43:11.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.919430514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.919430986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.586" endtime="20201029 12:43:11.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.919430514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.919430986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.988" endtime="20201029 12:43:12.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.012" endtime="20201029 12:43:12.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.579" endtime="20201029 12:43:12.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.574" endtime="20201029 12:43:12.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.031" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:12.022" endtime="20201029 12:43:12.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:12.043" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.730...</msg>
<status status="PASS" starttime="20201029 12:43:12.033" endtime="20201029 12:43:12.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.054" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:12.051" endtime="20201029 12:43:12.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.059" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:12.056" endtime="20201029 12:43:12.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.045" endtime="20201029 12:43:12.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.521" endtime="20201029 12:43:12.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.520" endtime="20201029 12:43:12.064"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.085" endtime="20201029 12:43:12.097"></status>
</kw>
<msg timestamp="20201029 12:43:12.098" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.081" endtime="20201029 12:43:12.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.104" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.100" endtime="20201029 12:43:12.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.107" endtime="20201029 12:43:12.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.074" endtime="20201029 12:43:12.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.069" endtime="20201029 12:43:12.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.131" endtime="20201029 12:43:12.520"></status>
</kw>
<msg timestamp="20201029 12:43:12.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.454048236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.454048722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.127" endtime="20201029 12:43:12.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.454048236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.454048722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.531" endtime="20201029 12:43:12.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.553" endtime="20201029 12:43:12.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.120" endtime="20201029 12:43:12.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.115" endtime="20201029 12:43:12.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.574" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:43:12.561" endtime="20201029 12:43:12.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:12.590" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 12:43:12.576" endtime="20201029 12:43:12.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.601" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:12.599" endtime="20201029 12:43:12.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.607" level="INFO">VALUE: [4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:12.603" endtime="20201029 12:43:12.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.592" endtime="20201029 12:43:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.066" endtime="20201029 12:43:12.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.065" endtime="20201029 12:43:12.611"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.631" endtime="20201029 12:43:12.643"></status>
</kw>
<msg timestamp="20201029 12:43:12.644" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.628" endtime="20201029 12:43:12.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.650" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.646" endtime="20201029 12:43:12.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.653" endtime="20201029 12:43:12.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.621" endtime="20201029 12:43:12.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.616" endtime="20201029 12:43:12.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.676" endtime="20201029 12:43:13.064"></status>
</kw>
<msg timestamp="20201029 12:43:13.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.986165472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.986165958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.672" endtime="20201029 12:43:13.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.986165472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.986165958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.076" endtime="20201029 12:43:13.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.098" endtime="20201029 12:43:13.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.665" endtime="20201029 12:43:13.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.660" endtime="20201029 12:43:13.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.116" level="INFO">${RESULT} = [{'diff': 4.860000011319698e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.869999994383534e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.85999999355613e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:13.106" endtime="20201029 12:43:13.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:13.126" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000011319698e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.86000...</msg>
<status status="PASS" starttime="20201029 12:43:13.118" endtime="20201029 12:43:13.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.136" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:13.134" endtime="20201029 12:43:13.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.142" level="INFO">VALUE: [4.860000011319698e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201029 12:43:13.138" endtime="20201029 12:43:13.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.128" endtime="20201029 12:43:13.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.613" endtime="20201029 12:43:13.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.612" endtime="20201029 12:43:13.146"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.166" endtime="20201029 12:43:13.179"></status>
</kw>
<msg timestamp="20201029 12:43:13.180" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.162" endtime="20201029 12:43:13.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.182" endtime="20201029 12:43:13.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.188" endtime="20201029 12:43:13.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.155" endtime="20201029 12:43:13.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.151" endtime="20201029 12:43:13.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.212" endtime="20201029 12:43:13.586"></status>
</kw>
<msg timestamp="20201029 12:43:13.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.522849569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.522850056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.209" endtime="20201029 12:43:13.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.522849569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.522850056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.597" endtime="20201029 12:43:13.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.620" endtime="20201029 12:43:13.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.201" endtime="20201029 12:43:13.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.196" endtime="20201029 12:43:13.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.639" level="INFO">${RESULT} = [{'diff': 4.869999994383534e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:43:13.629" endtime="20201029 12:43:13.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:13.650" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.869999994383534e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.8599...</msg>
<status status="PASS" starttime="20201029 12:43:13.641" endtime="20201029 12:43:13.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.661" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:13.658" endtime="20201029 12:43:13.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.666" level="INFO">VALUE: [4.869999994383534e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.869999994383534e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:13.663" endtime="20201029 12:43:13.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.652" endtime="20201029 12:43:13.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.147" endtime="20201029 12:43:13.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.147" endtime="20201029 12:43:13.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.093" endtime="20201029 12:43:13.671"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:02.908" endtime="20201029 12:43:13.672" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:13.689" endtime="20201029 12:43:13.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.685" endtime="20201029 12:43:13.712"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.745" endtime="20201029 12:43:13.763"></status>
</kw>
<msg timestamp="20201029 12:43:13.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.742" endtime="20201029 12:43:13.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.766" endtime="20201029 12:43:13.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.777" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:13.773" endtime="20201029 12:43:13.778"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:13.735" endtime="20201029 12:43:13.779"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:13.728" endtime="20201029 12:43:13.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.726" endtime="20201029 12:43:13.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:13.789" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:13.788" endtime="20201029 12:43:13.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.784" endtime="20201029 12:43:13.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.724" endtime="20201029 12:43:13.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.722" endtime="20201029 12:43:13.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.793" endtime="20201029 12:43:13.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.718" endtime="20201029 12:43:13.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.714" endtime="20201029 12:43:13.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.683" endtime="20201029 12:43:13.800"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.824" endtime="20201029 12:43:13.837"></status>
</kw>
<msg timestamp="20201029 12:43:13.838" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.820" endtime="20201029 12:43:13.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.840" endtime="20201029 12:43:13.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.846" endtime="20201029 12:43:13.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.811" endtime="20201029 12:43:13.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.806" endtime="20201029 12:43:13.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.869" endtime="20201029 12:43:14.234"></status>
</kw>
<msg timestamp="20201029 12:43:14.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125502375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125511153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.866" endtime="20201029 12:43:14.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125502375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125511153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.244" endtime="20201029 12:43:14.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.262" endtime="20201029 12:43:14.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.859" endtime="20201029 12:43:14.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.854" endtime="20201029 12:43:14.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.279" level="INFO">${RESULT} = [{'diff': 8.777999999987074e-06}, {'diff': 8.596999999999078e-06}, {'diff': 8.98600000001637e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.0969999999857e-06}, {'diff': 8.610999999991709e-06}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:43:14.270" endtime="20201029 12:43:14.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:14.289" level="INFO">${OVERHEAD} = {'diff': [8.777999999987074e-06, 8.596999999999078e-06, 8.98600000001637e-06, 9.26400000000882e-06, 9.0969999999857e-06, 8.610999999991709e-06, 9.431000000004186e-06, 8.596999999999078e-06, 8.77800000...</msg>
<status status="PASS" starttime="20201029 12:43:14.282" endtime="20201029 12:43:14.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.299" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:14.297" endtime="20201029 12:43:14.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.306" level="INFO">VALUE: [8.777999999987074e-06, 8.596999999999078e-06, 8.98600000001637e-06, 9.26400000000882e-06, 9.0969999999857e-06, 8.610999999991709e-06, 9.431000000004186e-06, 8.596999999999078e-06, 8.77800000001483e-06, 9.263999999981065e-06, 9.111000000006086e-06, 8.596999999999078e-06, 9.431000000004186e-06, 9.597000000000078e-06, 9.556000000021658e-06, 8.944000000010721e-06, 8.763999999994443e-06, 9.278000000001452e-06, 9.417000000011555e-06, 8.750000000001812e-06, 9.443999999997343e-06, 9.083000000020824e-06, 9.290999999994609e-06, 8.777999999987074e-06, 9.249999999988434e-06, 9.291999999994083e-06, 9.111000000006086e-06, 8.943999999982966e-06, 9.124999999998717e-06, 9.097999999985174e-06, 9.124999999998717e-06, 8.777999999987074e-06, 9.278000000001452e-06, 8.777999999987074e-06, 8.945000000010195e-06, 9.26400000000882e-06, 8.611000000019464e-06, 8.929999999990335e-06, 9.416000000012081e-06, 8.875000000019284e-06, 9.111000000006086e-06, 8.931000000017564e-06, 9.319000000007627e-06, 9.26400000000882e-06, 9.069999999999911e-06, 8.83299999998588e-06, 9.278000000001452e-06, 9.263999999981065e-06, 9.30499999998724e-06, 9.097000000013455e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.303" endtime="20201029 12:43:14.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.291" endtime="20201029 12:43:14.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.803" endtime="20201029 12:43:14.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.802" endtime="20201029 12:43:14.310"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.330" endtime="20201029 12:43:14.343"></status>
</kw>
<msg timestamp="20201029 12:43:14.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.327" endtime="20201029 12:43:14.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.346" endtime="20201029 12:43:14.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.352" endtime="20201029 12:43:14.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.319" endtime="20201029 12:43:14.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.315" endtime="20201029 12:43:14.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.375" endtime="20201029 12:43:14.761"></status>
</kw>
<msg timestamp="20201029 12:43:14.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126105431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126114042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.372" endtime="20201029 12:43:14.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126105431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126114042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.774" endtime="20201029 12:43:14.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.800" endtime="20201029 12:43:14.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.365" endtime="20201029 12:43:14.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.360" endtime="20201029 12:43:14.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.817" level="INFO">${RESULT} = [{'diff': 8.611000000019464e-06}, {'diff': 8.929999999990335e-06}, {'diff': 9.416000000012081e-06}, {'diff': 8.875000000019284e-06}, {'diff': 9.111000000006086e-06}, {'diff': 8.931000000017564e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:14.808" endtime="20201029 12:43:14.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:14.830" level="INFO">${OVERHEAD} = {'diff': [8.611000000019464e-06, 8.929999999990335e-06, 9.416000000012081e-06, 8.875000000019284e-06, 9.111000000006086e-06, 8.931000000017564e-06, 9.319000000007627e-06, 9.26400000000882e-06, 9.06999...</msg>
<status status="PASS" starttime="20201029 12:43:14.820" endtime="20201029 12:43:14.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.840" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:14.838" endtime="20201029 12:43:14.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.845" level="INFO">VALUE: [8.611000000019464e-06, 8.929999999990335e-06, 9.416000000012081e-06, 8.875000000019284e-06, 9.111000000006086e-06, 8.931000000017564e-06, 9.319000000007627e-06, 9.26400000000882e-06, 9.069999999999911e-06, 8.83299999998588e-06, 9.278000000001452e-06, 9.263999999981065e-06, 9.30499999998724e-06, 9.097000000013455e-06, 9.098000000040685e-06, 9.181000000024753e-06, 8.94500000003795e-06, 8.637999999949741e-06, 9.387999999943553e-06, 9.138999999991348e-06, 8.93000000001809e-06, 8.61100000004722e-06, 9.431000000059697e-06, 8.94399999995521e-06, 9.26400000000882e-06, 9.250000000071701e-06, 8.94500000003795e-06, 9.444999999996817e-06, 8.62499999998434e-06, 9.334000000027487e-06, 9.278000000056963e-06, 9.249999999960679e-06, 9.430000000087979e-06, 9.26400000000882e-06, 8.777999999987074e-06, 8.596999999999078e-06, 8.930999999989808e-06, 9.097000000068967e-06, 9.098000000040685e-06, 9.27799999994594e-06, 8.930999999989808e-06, 8.778000000098096e-06, 9.291999999994083e-06, 8.596999999999078e-06, 9.582999999979691e-06, 8.61100000004722e-06, 9.27799999994594e-06, 8.95899999997507e-06, 8.583000000061958e-06, 8.61100000004722e-06, 9.096999999957944e-06, 9.457999999962219e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.417000000011555e-06, 8.83299999998588e-06, 8.94399999995521e-06, 8.763999999938932e-06, 9.402999999963413e-06, 9.097000000068967e-06, 8.791999999924194e-06, 8.777999999987074e-06, 8.915999999969948e-06, 9.597000000027833e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.842" endtime="20201029 12:43:14.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.832" endtime="20201029 12:43:14.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.312" endtime="20201029 12:43:14.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.311" endtime="20201029 12:43:14.850"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.870" endtime="20201029 12:43:14.883"></status>
</kw>
<msg timestamp="20201029 12:43:14.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.866" endtime="20201029 12:43:14.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.886" endtime="20201029 12:43:14.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.892" endtime="20201029 12:43:14.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.859" endtime="20201029 12:43:14.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.854" endtime="20201029 12:43:14.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.915" endtime="20201029 12:43:15.297"></status>
</kw>
<msg timestamp="20201029 12:43:15.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.624293528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.624302625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.912" endtime="20201029 12:43:15.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.624293528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.624302625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.308" endtime="20201029 12:43:15.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.330" endtime="20201029 12:43:15.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.905" endtime="20201029 12:43:15.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.900" endtime="20201029 12:43:15.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.349" level="INFO">${RESULT} = [{'diff': 9.096999999957944e-06}, {'diff': 9.457999999962219e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.417000000011555e-06}, {'diff': 8.83299999998588e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:15.338" endtime="20201029 12:43:15.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.360" level="INFO">${OVERHEAD} = {'diff': [9.096999999957944e-06, 9.457999999962219e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.417000000011555e-06, 8.83299999998588e-06, 8.94399999995521e-06, 8.763999999938932e-06, 9.4029999...</msg>
<status status="PASS" starttime="20201029 12:43:15.352" endtime="20201029 12:43:15.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.370" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:15.368" endtime="20201029 12:43:15.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.376" level="INFO">VALUE: [9.096999999957944e-06, 9.457999999962219e-06, 8.930999999989808e-06, 9.26400000000882e-06, 9.417000000011555e-06, 8.83299999998588e-06, 8.94399999995521e-06, 8.763999999938932e-06, 9.402999999963413e-06, 9.097000000068967e-06, 8.791999999924194e-06, 8.777999999987074e-06, 8.915999999969948e-06, 9.597000000027833e-06, 8.792000000035216e-06, 9.111000000006086e-06, 8.916999999941666e-06, 8.81900000004876e-06, 9.096999999957944e-06, 8.610999999936197e-06, 8.790999999952476e-06, 8.611000000158242e-06, 9.318999999896604e-06, 8.763999999938932e-06, 8.81900000004876e-06, 9.235999999912536e-06, 9.26400000000882e-06, 9.472000000121383e-06, 9.486000000169525e-06, 9.096999999957944e-06, 8.902000000032828e-06, 9.26400000000882e-06, 9.444999999885795e-06, 9.444999999885795e-06, 9.319999999979345e-06, 8.944999999815906e-06, 8.91600000008097e-06, 9.096999999957944e-06, 8.777999999987074e-06, 9.26400000000882e-06, 8.584000000144698e-06, 8.750000000112834e-06, 9.16599999989387e-06, 8.59800000019284e-06, 9.276999999974223e-06, 9.249999999960679e-06, 9.44500000010784e-06, 9.26400000000882e-06, 9.429999999976957e-06, 9.112000000088827e-06, 8.91700000016371e-06, 8.763999999938932e-06, 9.444999999885795e-06, 9.098000000040685e-06, 8.62499999998434e-06, 9.152999999928468e-06, 9.082999999909802e-06, 9.611000000075975e-06, 8.750000000112834e-06, 9.276999999974223e-06, 8.597999999970796e-06, 9.26400000000882e-06, 9.389000000137315e-06, 8.596999999888055e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.372" endtime="20201029 12:43:15.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.362" endtime="20201029 12:43:15.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.851" endtime="20201029 12:43:15.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.850" endtime="20201029 12:43:15.380"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.400" endtime="20201029 12:43:15.413"></status>
</kw>
<msg timestamp="20201029 12:43:15.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.397" endtime="20201029 12:43:15.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.420" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.416" endtime="20201029 12:43:15.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.422" endtime="20201029 12:43:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.390" endtime="20201029 12:43:15.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.385" endtime="20201029 12:43:15.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.447" endtime="20201029 12:43:15.819"></status>
</kw>
<msg timestamp="20201029 12:43:15.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.152902194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.152911111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.444" endtime="20201029 12:43:15.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.152902194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.152911111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.830" endtime="20201029 12:43:15.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.852" endtime="20201029 12:43:15.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.435" endtime="20201029 12:43:15.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.430" endtime="20201029 12:43:15.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.869" level="INFO">${RESULT} = [{'diff': 8.91700000016371e-06}, {'diff': 8.763999999938932e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.098000000040685e-06}, {'diff': 8.62499999998434e-06}, {'diff': 9.152999999928468e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:15.860" endtime="20201029 12:43:15.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.881" level="INFO">${OVERHEAD} = {'diff': [8.91700000016371e-06, 8.763999999938932e-06, 9.444999999885795e-06, 9.098000000040685e-06, 8.62499999998434e-06, 9.152999999928468e-06, 9.082999999909802e-06, 9.611000000075975e-06, 8.750000...</msg>
<status status="PASS" starttime="20201029 12:43:15.872" endtime="20201029 12:43:15.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.890" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:15.888" endtime="20201029 12:43:15.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.896" level="INFO">VALUE: [8.91700000016371e-06, 8.763999999938932e-06, 9.444999999885795e-06, 9.098000000040685e-06, 8.62499999998434e-06, 9.152999999928468e-06, 9.082999999909802e-06, 9.611000000075975e-06, 8.750000000112834e-06, 9.276999999974223e-06, 8.597999999970796e-06, 9.26400000000882e-06, 9.389000000137315e-06, 8.596999999888055e-06, 8.763999999938932e-06, 9.278000000056963e-06, 8.97299999991219e-06, 9.431000000059697e-06, 8.610999999936197e-06, 8.610999999936197e-06, 8.5970000001101e-06, 9.417000000011555e-06, 9.278000000056963e-06, 8.931000000211853e-06, 9.055999999896258e-06, 9.097000000179989e-06, 9.444000000025099e-06, 9.402999999963413e-06, 8.583000000061958e-06, 9.096999999957944e-06, 9.431000000059697e-06, 8.735999999842647e-06, 8.597999999970796e-06, 9.125000000054229e-06, 8.79100000017452e-06, 9.249999999960679e-06, 9.083000000131847e-06, 9.429999999976957e-06, 8.959000000086093e-06, 9.429999999976957e-06, 9.278000000056963e-06, 8.52799999995213e-06, 9.096999999957944e-06, 8.94500000003795e-06, 8.930000000129112e-06, 9.152999999928468e-06, 8.762999999856191e-06, 8.776999999904334e-06, 9.26400000000882e-06, 9.112000000088827e-06, 8.972000000051494e-06, 9.415999999928815e-06, 9.096999999957944e-06, 8.583000000061958e-06, 9.26400000000882e-06, 9.277999999834918e-06, 8.94399999995521e-06, 8.62499999998434e-06, 9.457999999851197e-06, 9.318999999896604e-06, 8.806000000083358e-06, 9.431000000059697e-06, 8.708000000190452e-06, 8.778000000209119e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.893" endtime="20201029 12:43:15.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.882" endtime="20201029 12:43:15.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.382" endtime="20201029 12:43:15.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.381" endtime="20201029 12:43:15.900"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.922" endtime="20201029 12:43:15.935"></status>
</kw>
<msg timestamp="20201029 12:43:15.936" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.918" endtime="20201029 12:43:15.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.942" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.938" endtime="20201029 12:43:15.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.944" endtime="20201029 12:43:15.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.911" endtime="20201029 12:43:15.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.905" endtime="20201029 12:43:15.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.967" endtime="20201029 12:43:16.345"></status>
</kw>
<msg timestamp="20201029 12:43:16.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.672440181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.672449153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.964" endtime="20201029 12:43:16.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.672440181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.672449153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.357" endtime="20201029 12:43:16.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.378" endtime="20201029 12:43:16.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.957" endtime="20201029 12:43:16.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.952" endtime="20201029 12:43:16.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.397" level="INFO">${RESULT} = [{'diff': 8.972000000051494e-06}, {'diff': 9.415999999928815e-06}, {'diff': 9.096999999957944e-06}, {'diff': 8.583000000061958e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.277999999834918e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:16.387" endtime="20201029 12:43:16.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:16.409" level="INFO">${OVERHEAD} = {'diff': [8.972000000051494e-06, 9.415999999928815e-06, 9.096999999957944e-06, 8.583000000061958e-06, 9.26400000000882e-06, 9.277999999834918e-06, 8.94399999995521e-06, 8.62499999998434e-06, 9.4579999...</msg>
<status status="PASS" starttime="20201029 12:43:16.399" endtime="20201029 12:43:16.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.429" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:16.425" endtime="20201029 12:43:16.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.443" level="INFO">VALUE: [8.972000000051494e-06, 9.415999999928815e-06, 9.096999999957944e-06, 8.583000000061958e-06, 9.26400000000882e-06, 9.277999999834918e-06, 8.94399999995521e-06, 8.62499999998434e-06, 9.457999999851197e-06, 9.318999999896604e-06, 8.806000000083358e-06, 9.431000000059697e-06, 8.708000000190452e-06, 8.778000000209119e-06, 8.930000000351157e-06, 9.235999999912536e-06, 9.597000000027833e-06, 8.916999999719621e-06, 8.902999999893524e-06, 8.762999999856191e-06, 9.096999999957944e-06, 9.180999999802708e-06, 9.556000000188192e-06, 8.97300000035628e-06, 9.16699999997661e-06, 9.458000000073241e-06, 8.944000000177255e-06, 8.943999999733165e-06, 9.4170000002336e-06, 8.945000000259995e-06, 8.569999999874511e-06, 8.916999999719621e-06, 8.777000000126378e-06, 9.096999999957944e-06, 9.26400000000882e-06, 8.583000000061958e-06, 9.111000000228131e-06, 9.250000000182723e-06, 9.444000000247144e-06, 8.597999999970796e-06, 9.444000000247144e-06, 9.096999999957944e-06, 9.16599999989387e-06, 9.347000000214933e-06, 9.583999999840387e-06, 8.597000000332145e-06, 9.277999999834918e-06, 8.597999999970796e-06, 8.72300000009929e-06, 8.763999999938932e-06, 8.930999999989808e-06, 8.76300000030028e-06, 9.195000000072895e-06, 9.098000000040685e-06, 8.929999999907068e-06, 9.276999999752178e-06, 8.611000000158242e-06, 9.431000000059697e-06, 9.431000000059697e-06, 9.362000000123771e-06, 8.569999999874511e-06, 8.792000000035216e-06, 9.4170000002336e-06, 9.26299999992608e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.435" endtime="20201029 12:43:16.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.410" endtime="20201029 12:43:16.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.902" endtime="20201029 12:43:16.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.901" endtime="20201029 12:43:16.450"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.482" endtime="20201029 12:43:16.498"></status>
</kw>
<msg timestamp="20201029 12:43:16.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.476" endtime="20201029 12:43:16.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.507" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.502" endtime="20201029 12:43:16.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.510" endtime="20201029 12:43:16.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.466" endtime="20201029 12:43:16.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.458" endtime="20201029 12:43:16.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.539" endtime="20201029 12:43:16.936"></status>
</kw>
<msg timestamp="20201029 12:43:16.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.184314486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.184323417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.535" endtime="20201029 12:43:16.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.184314486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.184323417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.947" endtime="20201029 12:43:16.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.968" endtime="20201029 12:43:16.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.526" endtime="20201029 12:43:16.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.521" endtime="20201029 12:43:16.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.991" level="INFO">${RESULT} = [{'diff': 8.930999999989808e-06}, {'diff': 8.76300000030028e-06}, {'diff': 9.195000000072895e-06}, {'diff': 9.098000000040685e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.276999999752178e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:16.982" endtime="20201029 12:43:16.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:17.003" level="INFO">${OVERHEAD} = {'diff': [8.930999999989808e-06, 8.76300000030028e-06, 9.195000000072895e-06, 9.098000000040685e-06, 8.929999999907068e-06, 9.276999999752178e-06, 8.611000000158242e-06, 9.431000000059697e-06, 9.43100...</msg>
<status status="PASS" starttime="20201029 12:43:16.993" endtime="20201029 12:43:17.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.013" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:17.011" endtime="20201029 12:43:17.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.019" level="INFO">VALUE: [8.930999999989808e-06, 8.76300000030028e-06, 9.195000000072895e-06, 9.098000000040685e-06, 8.929999999907068e-06, 9.276999999752178e-06, 8.611000000158242e-06, 9.431000000059697e-06, 9.431000000059697e-06, 9.362000000123771e-06, 8.569999999874511e-06, 8.792000000035216e-06, 9.4170000002336e-06, 9.26299999992608e-06, 8.929999999907068e-06, 8.958999999642003e-06, 8.56900000023586e-06, 9.347999999853585e-06, 8.596999999888055e-06, 9.625000000124118e-06, 8.597999999970796e-06, 8.972000000273539e-06, 8.945000000259995e-06, 8.91600000008097e-06, 9.250000000182723e-06, 9.096999999957944e-06, 9.26400000000882e-06, 8.776999999682289e-06, 8.763999999938932e-06, 9.26400000000882e-06, 9.277000000196267e-06, 8.833000000318947e-06, 9.125000000054229e-06, 8.735999999842647e-06, 8.763999999938932e-06, 9.277999999834918e-06, 9.110999999784042e-06, 8.944999999815906e-06, 9.597000000027833e-06, 8.777000000126378e-06, 9.111999999866782e-06, 9.429999999976957e-06, 9.26400000000882e-06, 8.72300000009929e-06, 9.26400000000882e-06, 9.111000000228131e-06, 9.41599999970677e-06, 8.91700000016371e-06, 8.596999999888055e-06, 8.777000000126378e-06, 8.930999999989808e-06, 9.249999999738634e-06, 8.929999999907068e-06, 8.778000000209119e-06, 8.847999999783696e-06, 9.12499999961014e-06, 9.430999999615608e-06, 9.096999999957944e-06, 9.471999999899339e-06, 9.249999999738634e-06, 9.26400000000882e-06, 9.06900000030575e-06, 8.804999999778573e-06, 9.277999999834918e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.016" endtime="20201029 12:43:17.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.005" endtime="20201029 12:43:17.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.453" endtime="20201029 12:43:17.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.451" endtime="20201029 12:43:17.023"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.043" endtime="20201029 12:43:17.056"></status>
</kw>
<msg timestamp="20201029 12:43:17.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.040" endtime="20201029 12:43:17.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.064" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.060" endtime="20201029 12:43:17.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.066" endtime="20201029 12:43:17.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.033" endtime="20201029 12:43:17.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.028" endtime="20201029 12:43:17.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.089" endtime="20201029 12:43:17.467"></status>
</kw>
<msg timestamp="20201029 12:43:17.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.735414319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.73542325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:17.085" endtime="20201029 12:43:17.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.735414319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.73542325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:17.478" endtime="20201029 12:43:17.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.500" endtime="20201029 12:43:17.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.078" endtime="20201029 12:43:17.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.074" endtime="20201029 12:43:17.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.519" level="INFO">${RESULT} = [{'diff': 8.930999999989808e-06}, {'diff': 9.249999999738634e-06}, {'diff': 8.929999999907068e-06}, {'diff': 8.778000000209119e-06}, {'diff': 8.847999999783696e-06}, {'diff': 9.12499999961014e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:17.509" endtime="20201029 12:43:17.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:17.529" level="INFO">${OVERHEAD} = {'diff': [8.930999999989808e-06, 9.249999999738634e-06, 8.929999999907068e-06, 8.778000000209119e-06, 8.847999999783696e-06, 9.12499999961014e-06, 9.430999999615608e-06, 9.096999999957944e-06, 9.47199...</msg>
<status status="PASS" starttime="20201029 12:43:17.521" endtime="20201029 12:43:17.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.539" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:17.537" endtime="20201029 12:43:17.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.545" level="INFO">VALUE: [8.930999999989808e-06, 9.249999999738634e-06, 8.929999999907068e-06, 8.778000000209119e-06, 8.847999999783696e-06, 9.12499999961014e-06, 9.430999999615608e-06, 9.096999999957944e-06, 9.471999999899339e-06, 9.249999999738634e-06, 9.26400000000882e-06, 9.06900000030575e-06, 8.804999999778573e-06, 9.277999999834918e-06, 9.444999999885795e-06, 9.277999999834918e-06, 9.096999999957944e-06, 8.62499999998434e-06, 8.763999999938932e-06, 8.87499999979724e-06, 9.125000000054229e-06, 8.958000000003352e-06, 9.26300000037017e-06, 9.431000000059697e-06, 9.459000000155982e-06, 8.916999999719621e-06, 9.277999999834918e-06, 9.111999999866782e-06, 9.26400000000882e-06, 8.903000000337613e-06, 9.278000000279008e-06, 9.598000000110574e-06, 8.763999999938932e-06, 8.612000000240982e-06, 8.583000000061958e-06, 8.610999999714153e-06, 9.41699999978951e-06, 9.277999999834918e-06, 9.096999999957944e-06, 9.444999999885795e-06, 8.929999999907068e-06, 8.792000000035216e-06, 9.083000000131847e-06, 8.958000000003352e-06, 8.8200000001315e-06, 9.444000000247144e-06, 8.903000000337613e-06, 9.250000000182723e-06, 9.249999999738634e-06, 8.583999999700609e-06, 9.429999999976957e-06, 8.583000000061958e-06, 8.91700000016371e-06, 8.610999999714153e-06, 8.930999999989808e-06, 9.597000000027833e-06, 8.91600000008097e-06, 9.291000000022365e-06, 8.749999999668745e-06, 9.277999999834918e-06, 9.096999999957944e-06, 9.096999999957944e-06, 9.389000000137315e-06, 8.958000000003352e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.541" endtime="20201029 12:43:17.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.531" endtime="20201029 12:43:17.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.025" endtime="20201029 12:43:17.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.024" endtime="20201029 12:43:17.549"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.570" endtime="20201029 12:43:17.583"></status>
</kw>
<msg timestamp="20201029 12:43:17.584" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.565" endtime="20201029 12:43:17.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.591" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.587" endtime="20201029 12:43:17.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.593" endtime="20201029 12:43:17.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.558" endtime="20201029 12:43:17.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.554" endtime="20201029 12:43:17.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.616" endtime="20201029 12:43:17.992"></status>
</kw>
<msg timestamp="20201029 12:43:18.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.285072667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.285082097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.612" endtime="20201029 12:43:18.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.285072667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.285082097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.003" endtime="20201029 12:43:18.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.027" endtime="20201029 12:43:18.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.605" endtime="20201029 12:43:18.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.601" endtime="20201029 12:43:18.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.047" level="INFO">${RESULT} = [{'diff': 9.429999999976957e-06}, {'diff': 8.583000000061958e-06}, {'diff': 8.91700000016371e-06}, {'diff': 8.610999999714153e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.597000000027833e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:18.038" endtime="20201029 12:43:18.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:18.059" level="INFO">${OVERHEAD} = {'diff': [9.429999999976957e-06, 8.583000000061958e-06, 8.91700000016371e-06, 8.610999999714153e-06, 8.930999999989808e-06, 9.597000000027833e-06, 8.91600000008097e-06, 9.291000000022365e-06, 8.749999...</msg>
<status status="PASS" starttime="20201029 12:43:18.049" endtime="20201029 12:43:18.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.069" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:18.067" endtime="20201029 12:43:18.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.074" level="INFO">VALUE: [9.429999999976957e-06, 8.583000000061958e-06, 8.91700000016371e-06, 8.610999999714153e-06, 8.930999999989808e-06, 9.597000000027833e-06, 8.91600000008097e-06, 9.291000000022365e-06, 8.749999999668745e-06, 9.277999999834918e-06, 9.096999999957944e-06, 9.096999999957944e-06, 9.389000000137315e-06, 8.958000000003352e-06, 9.083000000131847e-06, 9.277999999834918e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.12499999961014e-06, 8.597000000332145e-06, 9.0699999999444e-06, 8.778000000209119e-06, 8.62499999998434e-06, 8.597000000332145e-06, 8.944999999815906e-06, 8.610999999714153e-06, 9.096999999957944e-06, 9.250000000182723e-06, 8.763999999938932e-06, 8.763999999938932e-06, 9.110999999784042e-06, 9.110999999784042e-06, 8.596999999888055e-06, 8.91600000008097e-06, 9.26400000000882e-06, 8.792000000035216e-06, 9.583000000201736e-06, 9.431000000059697e-06, 8.763999999938932e-06, 9.111000000228131e-06, 9.292000000105105e-06, 9.3199999997573e-06, 9.26400000000882e-06, 9.458999999711892e-06, 9.111000000228131e-06, 8.902999999893524e-06, 8.763999999938932e-06, 9.138999999880326e-06, 9.250000000182723e-06, 9.445000000329884e-06, 9.096999999957944e-06, 8.583000000061958e-06, 9.096999999957944e-06, 9.26400000000882e-06, 8.916999999719621e-06, 9.098000000040685e-06, 8.72300000009929e-06, 9.429999999976957e-06, 9.054999999591473e-06, 8.707999999746363e-06, 8.709000000273193e-06, 9.444000000247144e-06, 9.26400000000882e-06, 8.638999999810437e-06]</msg>
<status status="PASS" starttime="20201029 12:43:18.071" endtime="20201029 12:43:18.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.061" endtime="20201029 12:43:18.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.551" endtime="20201029 12:43:18.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.550" endtime="20201029 12:43:18.079"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.099" endtime="20201029 12:43:18.112"></status>
</kw>
<msg timestamp="20201029 12:43:18.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.095" endtime="20201029 12:43:18.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.119" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.115" endtime="20201029 12:43:18.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.121" endtime="20201029 12:43:18.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.088" endtime="20201029 12:43:18.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.084" endtime="20201029 12:43:18.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.144" endtime="20201029 12:43:18.525"></status>
</kw>
<msg timestamp="20201029 12:43:18.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.802044375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.802053472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.141" endtime="20201029 12:43:18.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.802044375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.802053472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.536" endtime="20201029 12:43:18.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.559" endtime="20201029 12:43:18.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.134" endtime="20201029 12:43:18.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.129" endtime="20201029 12:43:18.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.577" level="INFO">${RESULT} = [{'diff': 9.096999999957944e-06}, {'diff': 8.583000000061958e-06}, {'diff': 9.096999999957944e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.916999999719621e-06}, {'diff': 9.098000000040685e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:18.567" endtime="20201029 12:43:18.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:18.589" level="INFO">${OVERHEAD} = {'diff': [9.096999999957944e-06, 8.583000000061958e-06, 9.096999999957944e-06, 9.26400000000882e-06, 8.916999999719621e-06, 9.098000000040685e-06, 8.72300000009929e-06, 9.429999999976957e-06, 9.054999...</msg>
<status status="PASS" starttime="20201029 12:43:18.579" endtime="20201029 12:43:18.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.599" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:18.596" endtime="20201029 12:43:18.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.604" level="INFO">VALUE: [9.096999999957944e-06, 8.583000000061958e-06, 9.096999999957944e-06, 9.26400000000882e-06, 8.916999999719621e-06, 9.098000000040685e-06, 8.72300000009929e-06, 9.429999999976957e-06, 9.054999999591473e-06, 8.707999999746363e-06, 8.709000000273193e-06, 9.444000000247144e-06, 9.26400000000882e-06, 8.638999999810437e-06, 8.597000000776234e-06, 9.278000000279008e-06, 9.431000000503786e-06, 9.110999999784042e-06, 9.430999999615608e-06, 9.056000000562392e-06, 9.26400000000882e-06, 8.625000000428429e-06, 9.444999999885795e-06, 9.054999999591473e-06, 8.833999999957598e-06, 9.054999999591473e-06, 8.929999999907068e-06, 9.110999999784042e-06, 9.26299999992608e-06, 9.26400000000882e-06, 9.582999999757646e-06, 9.4170000002336e-06, 8.861000000415231e-06, 9.125000000054229e-06, 9.06899999986166e-06, 8.91600000052506e-06, 8.763999999494843e-06, 8.583000000506047e-06, 8.805000000222662e-06, 9.431000000503786e-06, 9.096999999513855e-06, 8.693999999920266e-06, 9.110999999784042e-06, 9.0699999999444e-06, 8.625000000428429e-06, 8.776999999682289e-06, 9.26400000000882e-06, 8.750000000112834e-06, 9.430999999615608e-06, 8.597999999970796e-06, 9.278000000279008e-06, 8.9170000006078e-06, 8.915999999636881e-06, 9.110999999784042e-06, 8.930000000795246e-06, 9.430999999615608e-06, 8.583000000506047e-06, 9.26400000000882e-06, 9.444000000691233e-06, 9.443999999803054e-06, 9.499999999995623e-06, 8.763999999494843e-06, 9.416999999345421e-06, 9.250000000626812e-06]</msg>
<status status="PASS" starttime="20201029 12:43:18.601" endtime="20201029 12:43:18.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.591" endtime="20201029 12:43:18.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.080" endtime="20201029 12:43:18.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.080" endtime="20201029 12:43:18.608"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.631" endtime="20201029 12:43:18.646"></status>
</kw>
<msg timestamp="20201029 12:43:18.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.626" endtime="20201029 12:43:18.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.650" endtime="20201029 12:43:18.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.657" endtime="20201029 12:43:18.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.618" endtime="20201029 12:43:18.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.613" endtime="20201029 12:43:18.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.687" endtime="20201029 12:43:19.075"></status>
</kw>
<msg timestamp="20201029 12:43:19.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.321427653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.321436931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.683" endtime="20201029 12:43:19.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.321427653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.321436931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.086" endtime="20201029 12:43:19.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.109" endtime="20201029 12:43:19.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.675" endtime="20201029 12:43:19.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.667" endtime="20201029 12:43:19.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.126" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 8.9170000006078e-06}, {'diff': 8.915999999636881e-06}, {'diff': 9.110999999784042e-06}, {'diff': 8.930000000795246e-06}, {'diff': 9.430999999615608e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:19.117" endtime="20201029 12:43:19.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:19.137" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 8.9170000006078e-06, 8.915999999636881e-06, 9.110999999784042e-06, 8.930000000795246e-06, 9.430999999615608e-06, 8.583000000506047e-06, 9.26400000000882e-06, 9.4440000...</msg>
<status status="PASS" starttime="20201029 12:43:19.128" endtime="20201029 12:43:19.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.147" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:19.145" endtime="20201029 12:43:19.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.152" level="INFO">VALUE: [9.278000000279008e-06, 8.9170000006078e-06, 8.915999999636881e-06, 9.110999999784042e-06, 8.930000000795246e-06, 9.430999999615608e-06, 8.583000000506047e-06, 9.26400000000882e-06, 9.444000000691233e-06, 9.443999999803054e-06, 9.499999999995623e-06, 8.763999999494843e-06, 9.416999999345421e-06, 9.250000000626812e-06, 8.582999999617869e-06, 8.596999999888055e-06, 8.5700000003186e-06, 8.929999999907068e-06, 8.612000000240982e-06, 9.624999999680028e-06, 8.625000000428429e-06, 9.249999999738634e-06, 8.611000000158242e-06, 9.444999999885795e-06, 8.929999999907068e-06, 9.110999999784042e-06, 9.4170000002336e-06, 9.125000000054229e-06, 8.945000000259995e-06, 9.096999999513855e-06, 8.554999999965673e-06, 9.277999999390829e-06, 8.582999999617869e-06, 9.153000000594602e-06, 8.944000000177255e-06, 8.943999999289076e-06, 8.611000000158242e-06, 9.597000000027833e-06, 9.26400000000882e-06, 9.388999999693226e-06, 9.277000000196267e-06, 8.597999999970796e-06, 8.555000000853852e-06, 8.790999999952476e-06, 9.402999999963413e-06, 8.764000000383021e-06, 9.582999999757646e-06, 9.083000000131847e-06, 9.110999999784042e-06, 8.750000000112834e-06, 9.249999999738634e-06, 9.110999999784042e-06, 9.444999999885795e-06, 9.444000000691233e-06, 9.096999999513855e-06, 9.485999999725436e-06, 9.443999999803054e-06, 8.749999999224656e-06, 9.277000000196267e-06, 9.083000000131847e-06, 9.499999999995623e-06, 9.444999999885795e-06, 8.97199999982945e-06, 9.097000000402033e-06]</msg>
<status status="PASS" starttime="20201029 12:43:19.149" endtime="20201029 12:43:19.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.139" endtime="20201029 12:43:19.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.610" endtime="20201029 12:43:19.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.609" endtime="20201029 12:43:19.157"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.176" endtime="20201029 12:43:19.191"></status>
</kw>
<msg timestamp="20201029 12:43:19.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.173" endtime="20201029 12:43:19.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.198" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.194" endtime="20201029 12:43:19.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.201" endtime="20201029 12:43:19.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.166" endtime="20201029 12:43:19.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.162" endtime="20201029 12:43:19.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.224" endtime="20201029 12:43:19.596"></status>
</kw>
<msg timestamp="20201029 12:43:19.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.845268833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.845278083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.220" endtime="20201029 12:43:19.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.845268833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.845278083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.607" endtime="20201029 12:43:19.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.630" endtime="20201029 12:43:19.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.213" endtime="20201029 12:43:19.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.209" endtime="20201029 12:43:19.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.648" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 9.110999999784042e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.444000000691233e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.485999999725436e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:19.638" endtime="20201029 12:43:19.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:19.659" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 9.110999999784042e-06, 9.444999999885795e-06, 9.444000000691233e-06, 9.096999999513855e-06, 9.485999999725436e-06, 9.443999999803054e-06, 8.749999999224656e-06, 9.2770...</msg>
<status status="PASS" starttime="20201029 12:43:19.650" endtime="20201029 12:43:19.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.669" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:19.667" endtime="20201029 12:43:19.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.675" level="INFO">VALUE: [9.249999999738634e-06, 9.110999999784042e-06, 9.444999999885795e-06, 9.444000000691233e-06, 9.096999999513855e-06, 9.485999999725436e-06, 9.443999999803054e-06, 8.749999999224656e-06, 9.277000000196267e-06, 9.083000000131847e-06, 9.499999999995623e-06, 9.444999999885795e-06, 8.97199999982945e-06, 9.097000000402033e-06, 8.611000000158242e-06, 8.764000000383021e-06, 9.276999999308089e-06, 8.72199999957246e-06, 9.291999999661016e-06, 8.944000000177255e-06, 9.319000000118649e-06, 9.459000000155982e-06, 9.430999999615608e-06, 9.292000000549194e-06, 8.986000000099637e-06, 9.0699999999444e-06, 8.611000000158242e-06, 9.097000000402033e-06, 8.554999999965673e-06, 9.249999999738634e-06, 9.110999999784042e-06, 8.763999999494843e-06, 9.056000000562392e-06, 9.333000000388836e-06, 8.957999999559263e-06, 9.180999999358619e-06, 8.764000000383021e-06, 8.930999999989808e-06, 8.764000000383021e-06, 8.77799999976503e-06, 8.930999999989808e-06, 8.929999999907068e-06, 9.12499999916605e-06, 8.792000000035216e-06, 8.792000000035216e-06, 8.611000000158242e-06, 8.764000000383021e-06, 9.278000000279008e-06, 8.930999999989808e-06, 8.945000000259995e-06, 9.249999999738634e-06, 8.930999999989808e-06, 8.541999999778227e-06, 8.958000000447441e-06, 9.083000000131847e-06, 9.277999999390829e-06, 8.611000000158242e-06, 9.110999999784042e-06, 9.098000000484774e-06, 9.26400000000882e-06, 9.096999999513855e-06, 9.26400000000882e-06, 9.277999999390829e-06, 8.583000000506047e-06]</msg>
<status status="PASS" starttime="20201029 12:43:19.671" endtime="20201029 12:43:19.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.661" endtime="20201029 12:43:19.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.158" endtime="20201029 12:43:19.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.157" endtime="20201029 12:43:19.679"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.699" endtime="20201029 12:43:19.712"></status>
</kw>
<msg timestamp="20201029 12:43:19.713" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.696" endtime="20201029 12:43:19.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.719" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.715" endtime="20201029 12:43:19.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.721" endtime="20201029 12:43:19.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.688" endtime="20201029 12:43:19.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.684" endtime="20201029 12:43:19.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.744" endtime="20201029 12:43:20.123"></status>
</kw>
<msg timestamp="20201029 12:43:20.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.380031875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.380041125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.741" endtime="20201029 12:43:20.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.380031875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.380041125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.135" endtime="20201029 12:43:20.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.157" endtime="20201029 12:43:20.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.734" endtime="20201029 12:43:20.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.729" endtime="20201029 12:43:20.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.175" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.541999999778227e-06}, {'diff': 8.958000000447441e-06}, {'diff': 9.083000000131847e-06}, {'diff': 9.277999999390829e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:20.165" endtime="20201029 12:43:20.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.187" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 8.930999999989808e-06, 8.541999999778227e-06, 8.958000000447441e-06, 9.083000000131847e-06, 9.277999999390829e-06, 8.611000000158242e-06, 9.110999999784042e-06, 9.0980...</msg>
<status status="PASS" starttime="20201029 12:43:20.177" endtime="20201029 12:43:20.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.197" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:20.195" endtime="20201029 12:43:20.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.203" level="INFO">VALUE: [9.249999999738634e-06, 8.930999999989808e-06, 8.541999999778227e-06, 8.958000000447441e-06, 9.083000000131847e-06, 9.277999999390829e-06, 8.611000000158242e-06, 9.110999999784042e-06, 9.098000000484774e-06, 9.26400000000882e-06, 9.096999999513855e-06, 9.26400000000882e-06, 9.277999999390829e-06, 8.583000000506047e-06, 8.597999999970796e-06, 9.4170000002336e-06, 9.278000000279008e-06, 9.430000000421046e-06, 8.541999999778227e-06, 8.944000000177255e-06, 8.764000000383021e-06, 8.778000000653208e-06, 8.596999999888055e-06, 8.77799999976503e-06, 8.959000000530182e-06, 9.26400000000882e-06, 9.097000000402033e-06, 9.097999999596595e-06, 8.944000000177255e-06, 9.291999999661016e-06, 9.458000000073241e-06, 8.930999999989808e-06, 9.083000000131847e-06, 8.77799999976503e-06, 8.889000000067426e-06, 9.11200000075496e-06, 9.598000000110574e-06, 8.750000000112834e-06, 9.443999999803054e-06, 9.278000000279008e-06, 8.944000000177255e-06, 8.930999999989808e-06, 9.292000000549194e-06, 9.402999999963413e-06, 9.26400000000882e-06, 9.098000000484774e-06, 9.61100000029802e-06, 9.291999999661016e-06, 9.401999999880672e-06, 9.110999999784042e-06, 9.277000000196267e-06, 9.097000000402033e-06, 9.096999999513855e-06, 8.596999999888055e-06, 9.443999999803054e-06, 8.778000000653208e-06, 8.778000000653208e-06, 9.278000000279008e-06, 9.402999999963413e-06, 8.944999999371817e-06, 9.125000000054229e-06, 9.305999999931203e-06, 9.110999999784042e-06, 8.945000000259995e-06]</msg>
<status status="PASS" starttime="20201029 12:43:20.199" endtime="20201029 12:43:20.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.189" endtime="20201029 12:43:20.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.681" endtime="20201029 12:43:20.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.680" endtime="20201029 12:43:20.207"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.227" endtime="20201029 12:43:20.240"></status>
</kw>
<msg timestamp="20201029 12:43:20.241" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.223" endtime="20201029 12:43:20.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.247" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.243" endtime="20201029 12:43:20.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.249" endtime="20201029 12:43:20.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.216" endtime="20201029 12:43:20.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.212" endtime="20201029 12:43:20.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.272" endtime="20201029 12:43:20.653"></status>
</kw>
<msg timestamp="20201029 12:43:20.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.891816431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.891825708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.269" endtime="20201029 12:43:20.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.891816431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.891825708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.665" endtime="20201029 12:43:20.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.687" endtime="20201029 12:43:20.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.262" endtime="20201029 12:43:20.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.257" endtime="20201029 12:43:20.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.705" level="INFO">${RESULT} = [{'diff': 9.277000000196267e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.096999999513855e-06}, {'diff': 8.596999999888055e-06}, {'diff': 9.443999999803054e-06}, {'diff': 8.778000000653208e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:20.696" endtime="20201029 12:43:20.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.716" level="INFO">${OVERHEAD} = {'diff': [9.277000000196267e-06, 9.097000000402033e-06, 9.096999999513855e-06, 8.596999999888055e-06, 9.443999999803054e-06, 8.778000000653208e-06, 8.778000000653208e-06, 9.278000000279008e-06, 9.4029...</msg>
<status status="PASS" starttime="20201029 12:43:20.707" endtime="20201029 12:43:20.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.725" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:20.723" endtime="20201029 12:43:20.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.731" level="INFO">VALUE: [9.277000000196267e-06, 9.097000000402033e-06, 9.096999999513855e-06, 8.596999999888055e-06, 9.443999999803054e-06, 8.778000000653208e-06, 8.778000000653208e-06, 9.278000000279008e-06, 9.402999999963413e-06, 8.944999999371817e-06, 9.125000000054229e-06, 9.305999999931203e-06, 9.110999999784042e-06, 8.945000000259995e-06, 8.944000000177255e-06, 9.276999999308089e-06, 8.62499999954025e-06, 9.06899999986166e-06, 9.430000000421046e-06, 8.958000000447441e-06, 8.77799999976503e-06, 9.430000000421046e-06, 9.26400000000882e-06, 8.638999999810437e-06, 9.458000000073241e-06, 9.583999999840387e-06, 8.750000000112834e-06, 9.443999999803054e-06, 8.77799999976503e-06, 8.77799999976503e-06, 9.4170000002336e-06, 8.944000000177255e-06, 9.47199999945525e-06, 9.41600000015086e-06, 8.597999999970796e-06, 9.278000000279008e-06, 8.597999999970796e-06, 9.429999999532868e-06, 8.957999999559263e-06, 8.818999999604671e-06, 8.778000000653208e-06, 8.944000000177255e-06, 9.388999999693226e-06, 9.11100000067222e-06, 8.707999999302274e-06, 9.139000000324415e-06, 8.77799999976503e-06, 9.430999999615608e-06, 8.944000000177255e-06, 9.097000000402033e-06, 9.277999999390829e-06, 8.62499999954025e-06, 9.291999999661016e-06, 9.097000000402033e-06, 9.430000000421046e-06, 8.750000000112834e-06, 9.431000000503786e-06, 8.582999999617869e-06, 9.485999999725436e-06, 8.625000000428429e-06, 8.9170000006078e-06, 8.916999999719621e-06, 9.139000000324415e-06, 9.430999999615608e-06]</msg>
<status status="PASS" starttime="20201029 12:43:20.728" endtime="20201029 12:43:20.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.717" endtime="20201029 12:43:20.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.208" endtime="20201029 12:43:20.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.207" endtime="20201029 12:43:20.735"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.756" endtime="20201029 12:43:20.770"></status>
</kw>
<msg timestamp="20201029 12:43:20.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.752" endtime="20201029 12:43:20.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.778" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.774" endtime="20201029 12:43:20.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.780" endtime="20201029 12:43:20.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.745" endtime="20201029 12:43:20.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.740" endtime="20201029 12:43:20.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.803" endtime="20201029 12:43:21.193"></status>
</kw>
<msg timestamp="20201029 12:43:21.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.409466819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.409476097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.800" endtime="20201029 12:43:21.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.409466819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.409476097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.204" endtime="20201029 12:43:21.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.226" endtime="20201029 12:43:21.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.793" endtime="20201029 12:43:21.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.788" endtime="20201029 12:43:21.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.244" level="INFO">${RESULT} = [{'diff': 9.277999999390829e-06}, {'diff': 8.62499999954025e-06}, {'diff': 9.291999999661016e-06}, {'diff': 9.097000000402033e-06}, {'diff': 9.430000000421046e-06}, {'diff': 8.750000000112834e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:21.235" endtime="20201029 12:43:21.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:21.256" level="INFO">${OVERHEAD} = {'diff': [9.277999999390829e-06, 8.62499999954025e-06, 9.291999999661016e-06, 9.097000000402033e-06, 9.430000000421046e-06, 8.750000000112834e-06, 9.431000000503786e-06, 8.582999999617869e-06, 9.48599...</msg>
<status status="PASS" starttime="20201029 12:43:21.246" endtime="20201029 12:43:21.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.266" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:21.264" endtime="20201029 12:43:21.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.271" level="INFO">VALUE: [9.277999999390829e-06, 8.62499999954025e-06, 9.291999999661016e-06, 9.097000000402033e-06, 9.430000000421046e-06, 8.750000000112834e-06, 9.431000000503786e-06, 8.582999999617869e-06, 9.485999999725436e-06, 8.625000000428429e-06, 8.9170000006078e-06, 8.916999999719621e-06, 9.139000000324415e-06, 9.430999999615608e-06, 9.431000000503786e-06, 8.929999999907068e-06, 9.430999999615608e-06, 9.083000000131847e-06, 9.458000000073241e-06, 9.276999999308089e-06, 9.110999999784042e-06, 9.430000000421046e-06, 8.790999999952476e-06, 9.431000000503786e-06, 9.292000000549194e-06, 8.944999999371817e-06, 8.776999999682289e-06, 9.667000000490589e-06, 8.902999999449435e-06, 8.596999999888055e-06, 8.62499999954025e-06, 9.096999999513855e-06, 9.056000000562392e-06, 9.445000000773973e-06, 8.582999999617869e-06, 8.930999999989808e-06, 8.77799999976503e-06, 9.250000000626812e-06, 8.77799999976503e-06, 9.278000000279008e-06, 8.750000000112834e-06, 9.110999999784042e-06, 8.764000000383021e-06, 9.250000000626812e-06, 9.16699999997661e-06, 9.597000000027833e-06, 8.945000000259995e-06, 8.77799999976503e-06, 9.110999999784042e-06, 9.278000000279008e-06, 9.11100000067222e-06, 8.9170000006078e-06, 8.929999999907068e-06, 9.444999999885795e-06, 9.110999999784042e-06, 8.62499999954025e-06, 8.611000000158242e-06, 8.860999999527053e-06, 9.139000000324415e-06, 8.929999999907068e-06, 9.26400000000882e-06, 8.583000000506047e-06, 8.929999999907068e-06, 9.583999999840387e-06]</msg>
<status status="PASS" starttime="20201029 12:43:21.268" endtime="20201029 12:43:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.258" endtime="20201029 12:43:21.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.737" endtime="20201029 12:43:21.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.736" endtime="20201029 12:43:21.276"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.296" endtime="20201029 12:43:21.309"></status>
</kw>
<msg timestamp="20201029 12:43:21.310" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.292" endtime="20201029 12:43:21.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.312" endtime="20201029 12:43:21.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.318" endtime="20201029 12:43:21.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.285" endtime="20201029 12:43:21.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.281" endtime="20201029 12:43:21.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.342" endtime="20201029 12:43:21.706"></status>
</kw>
<msg timestamp="20201029 12:43:21.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.931139125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.931148236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.338" endtime="20201029 12:43:21.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.931139125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.931148236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.717" endtime="20201029 12:43:21.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.739" endtime="20201029 12:43:21.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.331" endtime="20201029 12:43:21.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.326" endtime="20201029 12:43:21.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.757" level="INFO">${RESULT} = [{'diff': 9.11100000067222e-06}, {'diff': 8.9170000006078e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.110999999784042e-06}, {'diff': 8.62499999954025e-06}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:43:21.747" endtime="20201029 12:43:21.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:21.769" level="INFO">${OVERHEAD} = {'diff': [9.11100000067222e-06, 8.9170000006078e-06, 8.929999999907068e-06, 9.444999999885795e-06, 9.110999999784042e-06, 8.62499999954025e-06, 8.611000000158242e-06, 8.860999999527053e-06, 9.13900000...</msg>
<status status="PASS" starttime="20201029 12:43:21.759" endtime="20201029 12:43:21.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.779" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:21.777" endtime="20201029 12:43:21.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.784" level="INFO">VALUE: [9.11100000067222e-06, 8.9170000006078e-06, 8.929999999907068e-06, 9.444999999885795e-06, 9.110999999784042e-06, 8.62499999954025e-06, 8.611000000158242e-06, 8.860999999527053e-06, 9.139000000324415e-06, 8.929999999907068e-06, 9.26400000000882e-06, 8.583000000506047e-06, 8.929999999907068e-06, 9.583999999840387e-06, 8.596999999888055e-06, 8.611000000158242e-06, 8.764000000383021e-06, 9.084000000214587e-06, 8.930999999989808e-06, 9.597000000027833e-06, 9.277999999390829e-06, 9.096999999513855e-06, 8.91600000052506e-06, 9.26400000000882e-06, 9.097000000402033e-06, 8.596999999888055e-06, 8.77799999976503e-06, 8.611000000158242e-06, 9.444999999885795e-06, 8.583000000506047e-06, 8.999999999481645e-06, 9.431000000503786e-06, 8.929999999907068e-06, 9.443999999803054e-06, 9.152999999706424e-06, 9.26400000000882e-06, 9.402999999963413e-06, 8.764000000383021e-06, 8.514000000126032e-06, 8.764000000383021e-06, 9.4170000002336e-06, 8.764000000383021e-06, 9.444999999885795e-06, 9.583999999840387e-06, 8.929999999907068e-06, 9.278000000279008e-06, 9.26400000000882e-06, 9.598000000110574e-06, 9.22300000016918e-06, 9.569000000375638e-06, 8.806000000305403e-06, 8.750000000112834e-06, 8.638999999810437e-06, 9.26400000000882e-06, 9.277999999390829e-06, 8.792000000035216e-06, 8.611000000158242e-06, 9.111999999866782e-06, 8.77799999976503e-06, 9.459000000155982e-06, 8.943999999289076e-06, 8.749999999224656e-06, 8.915999999636881e-06, 9.402999999963413e-06]</msg>
<status status="PASS" starttime="20201029 12:43:21.781" endtime="20201029 12:43:21.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.771" endtime="20201029 12:43:21.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.277" endtime="20201029 12:43:21.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.276" endtime="20201029 12:43:21.788"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.809" endtime="20201029 12:43:21.822"></status>
</kw>
<msg timestamp="20201029 12:43:21.823" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.805" endtime="20201029 12:43:21.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.829" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.825" endtime="20201029 12:43:21.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.831" endtime="20201029 12:43:21.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.798" endtime="20201029 12:43:21.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.794" endtime="20201029 12:43:21.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.855" endtime="20201029 12:43:22.220"></status>
</kw>
<msg timestamp="20201029 12:43:22.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.460532958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.460541764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.852" endtime="20201029 12:43:22.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.460532958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.460541764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.231" endtime="20201029 12:43:22.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.253" endtime="20201029 12:43:22.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.844" endtime="20201029 12:43:22.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.839" endtime="20201029 12:43:22.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.271" level="INFO">${RESULT} = [{'diff': 8.806000000305403e-06}, {'diff': 8.750000000112834e-06}, {'diff': 8.638999999810437e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.277999999390829e-06}, {'diff': 8.792000000035216e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:22.262" endtime="20201029 12:43:22.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:22.281" level="INFO">${OVERHEAD} = {'diff': [8.806000000305403e-06, 8.750000000112834e-06, 8.638999999810437e-06, 9.26400000000882e-06, 9.277999999390829e-06, 8.792000000035216e-06, 8.611000000158242e-06, 9.111999999866782e-06, 8.77799...</msg>
<status status="PASS" starttime="20201029 12:43:22.273" endtime="20201029 12:43:22.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.291" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:22.289" endtime="20201029 12:43:22.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.297" level="INFO">VALUE: [8.806000000305403e-06, 8.750000000112834e-06, 8.638999999810437e-06, 9.26400000000882e-06, 9.277999999390829e-06, 8.792000000035216e-06, 8.611000000158242e-06, 9.111999999866782e-06, 8.77799999976503e-06, 9.459000000155982e-06, 8.943999999289076e-06, 8.749999999224656e-06, 8.915999999636881e-06, 9.402999999963413e-06, 9.055999999674214e-06, 9.26400000000882e-06, 8.792000000035216e-06, 8.930999999989808e-06, 8.735999999842647e-06, 9.097000000402033e-06, 8.944000000177255e-06, 9.125000000054229e-06, 9.083000000131847e-06, 9.110999999784042e-06, 9.110999999784042e-06, 8.790999999952476e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.805000000222662e-06, 9.402999999963413e-06, 8.596999999888055e-06, 9.278000000279008e-06, 9.26400000000882e-06, 8.778000000653208e-06, 9.431000000503786e-06, 9.084000000214587e-06, 9.278000000279008e-06, 9.278000000279008e-06, 9.430999999615608e-06, 9.61100000029802e-06, 9.443999999803054e-06, 9.278000000279008e-06, 8.612000000240982e-06, 9.47199999945525e-06, 9.111999999866782e-06, 9.236000000356626e-06, 8.597999999970796e-06, 8.596999999888055e-06, 9.429999999532868e-06, 8.610999999270064e-06, 9.277000000196267e-06, 9.096999999513855e-06, 8.76300000030028e-06, 8.832999999874858e-06, 9.26400000000882e-06, 8.832999999874858e-06, 9.097000000402033e-06, 9.430000000421046e-06, 9.291999999661016e-06, 8.776999999682289e-06, 9.125000000054229e-06, 9.444999999885795e-06, 9.598000000110574e-06, 9.555000000105451e-06]</msg>
<status status="PASS" starttime="20201029 12:43:22.293" endtime="20201029 12:43:22.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.283" endtime="20201029 12:43:22.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.790" endtime="20201029 12:43:22.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.789" endtime="20201029 12:43:22.301"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.321" endtime="20201029 12:43:22.334"></status>
</kw>
<msg timestamp="20201029 12:43:22.336" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.318" endtime="20201029 12:43:22.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.342" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.338" endtime="20201029 12:43:22.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.344" endtime="20201029 12:43:22.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.311" endtime="20201029 12:43:22.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.306" endtime="20201029 12:43:22.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.374" endtime="20201029 12:43:22.732"></status>
</kw>
<msg timestamp="20201029 12:43:22.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.964620806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.964630083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.371" endtime="20201029 12:43:22.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.964620806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.964630083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.744" endtime="20201029 12:43:22.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.767" endtime="20201029 12:43:22.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.364" endtime="20201029 12:43:22.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.352" endtime="20201029 12:43:22.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.788" level="INFO">${RESULT} = [{'diff': 9.277000000196267e-06}, {'diff': 9.096999999513855e-06}, {'diff': 8.76300000030028e-06}, {'diff': 8.832999999874858e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.832999999874858e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:22.778" endtime="20201029 12:43:22.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:22.800" level="INFO">${OVERHEAD} = {'diff': [9.277000000196267e-06, 9.096999999513855e-06, 8.76300000030028e-06, 8.832999999874858e-06, 9.26400000000882e-06, 8.832999999874858e-06, 9.097000000402033e-06, 9.430000000421046e-06, 9.291999...</msg>
<status status="PASS" starttime="20201029 12:43:22.790" endtime="20201029 12:43:22.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.810" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:22.807" endtime="20201029 12:43:22.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.815" level="INFO">VALUE: [9.277000000196267e-06, 9.096999999513855e-06, 8.76300000030028e-06, 8.832999999874858e-06, 9.26400000000882e-06, 8.832999999874858e-06, 9.097000000402033e-06, 9.430000000421046e-06, 9.291999999661016e-06, 8.776999999682289e-06, 9.125000000054229e-06, 9.444999999885795e-06, 9.598000000110574e-06, 9.555000000105451e-06, 9.264000000897e-06, 9.430000000421046e-06, 9.111999998978604e-06, 8.611000000158242e-06, 8.944999999371817e-06, 9.263999999120642e-06, 8.929999999907068e-06, 8.9170000006078e-06, 9.084000000214587e-06, 8.9170000006078e-06, 9.084000000214587e-06, 8.929999999907068e-06, 8.653000000080624e-06, 9.597000000027833e-06, 8.763999998606664e-06, 8.611000000158242e-06, 8.77799999976503e-06, 8.778000001541386e-06, 9.443999999803054e-06, 9.402999999963413e-06, 8.930999999989808e-06, 9.194999998740627e-06, 9.43099999872743e-06, 8.611000000158242e-06, 8.958999998753825e-06, 9.263999999120642e-06, 8.9170000006078e-06, 9.263999999120642e-06, 9.431000000503786e-06, 8.749999999224656e-06, 9.42999999864469e-06, 9.097000001290212e-06, 8.943999999289076e-06, 9.625000000568207e-06, 9.416000001039038e-06, 9.62499999879185e-06, 9.263999999120642e-06, 8.929999999907068e-06, 8.611000000158242e-06, 9.443999999803054e-06, 9.278000000279008e-06, 9.292000001437373e-06, 8.943999999289076e-06, 8.91600000052506e-06, 9.43099999872743e-06, 9.263999999120642e-06, 8.929999999907068e-06, 9.278000000279008e-06, 9.443999999803054e-06, 9.306000000819381e-06]</msg>
<status status="PASS" starttime="20201029 12:43:22.812" endtime="20201029 12:43:22.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.801" endtime="20201029 12:43:22.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.303" endtime="20201029 12:43:22.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.302" endtime="20201029 12:43:22.819"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.839" endtime="20201029 12:43:22.851"></status>
</kw>
<msg timestamp="20201029 12:43:22.853" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.836" endtime="20201029 12:43:22.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.859" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.855" endtime="20201029 12:43:22.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.861" endtime="20201029 12:43:22.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.829" endtime="20201029 12:43:22.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.824" endtime="20201029 12:43:22.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.884" endtime="20201029 12:43:23.268"></status>
</kw>
<msg timestamp="20201029 12:43:23.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.468176486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.46818575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:22.881" endtime="20201029 12:43:23.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.468176486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.46818575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:23.279" endtime="20201029 12:43:23.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.301" endtime="20201029 12:43:23.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.874" endtime="20201029 12:43:23.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.870" endtime="20201029 12:43:23.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.319" level="INFO">${RESULT} = [{'diff': 9.263999999120642e-06}, {'diff': 8.929999999907068e-06}, {'diff': 8.611000000158242e-06}, {'diff': 9.443999999803054e-06}, {'diff': 9.278000000279008e-06}, {'diff': 9.292000001437373e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:23.310" endtime="20201029 12:43:23.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:23.331" level="INFO">${OVERHEAD} = {'diff': [9.263999999120642e-06, 8.929999999907068e-06, 8.611000000158242e-06, 9.443999999803054e-06, 9.278000000279008e-06, 9.292000001437373e-06, 8.943999999289076e-06, 8.91600000052506e-06, 9.43099...</msg>
<status status="PASS" starttime="20201029 12:43:23.321" endtime="20201029 12:43:23.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.341" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:23.339" endtime="20201029 12:43:23.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.346" level="INFO">VALUE: [9.263999999120642e-06, 8.929999999907068e-06, 8.611000000158242e-06, 9.443999999803054e-06, 9.278000000279008e-06, 9.292000001437373e-06, 8.943999999289076e-06, 8.91600000052506e-06, 9.43099999872743e-06, 9.263999999120642e-06, 8.929999999907068e-06, 9.278000000279008e-06, 9.443999999803054e-06, 9.306000000819381e-06, 9.431000000503786e-06, 8.77799999976503e-06, 9.431000000503786e-06, 9.11100000067222e-06, 8.77799999976503e-06, 9.430000000421046e-06, 9.667000000490589e-06, 8.97199999982945e-06, 9.431000000503786e-06, 8.943999999289076e-06, 8.611000000158242e-06, 8.944000001065433e-06, 9.611000001186198e-06, 9.416999999345421e-06, 8.930999999989808e-06, 9.11100000067222e-06, 8.930999999989808e-06, 9.264000000897e-06, 8.597000000776234e-06, 8.945000001148173e-06, 8.764000000383021e-06, 8.944999999371817e-06, 9.278000000279008e-06, 8.597000000776234e-06, 8.944999999371817e-06, 9.125000000054229e-06, 9.472000000343428e-06, 9.443999999803054e-06, 8.77799999976503e-06, 8.764000000383021e-06, 9.110999998895863e-06, 9.000000000369823e-06, 9.473000000426168e-06, 8.77799999976503e-06, 9.084000000214587e-06, 9.278000000279008e-06, 8.847000000145044e-06, 9.610999999409842e-06, 9.125000000054229e-06, 9.430000000421046e-06, 9.597000000027833e-06, 8.597999999082617e-06, 9.402999999963413e-06, 9.291999999661016e-06, 8.62499999954025e-06, 9.096999999513855e-06, 9.278000000279008e-06, 8.611000000158242e-06, 9.444999999885795e-06, 9.11100000067222e-06]</msg>
<status status="PASS" starttime="20201029 12:43:23.343" endtime="20201029 12:43:23.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.333" endtime="20201029 12:43:23.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.821" endtime="20201029 12:43:23.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.820" endtime="20201029 12:43:23.351"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.371" endtime="20201029 12:43:23.384"></status>
</kw>
<msg timestamp="20201029 12:43:23.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.367" endtime="20201029 12:43:23.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.391" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.387" endtime="20201029 12:43:23.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.393" endtime="20201029 12:43:23.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.360" endtime="20201029 12:43:23.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.356" endtime="20201029 12:43:23.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.417" endtime="20201029 12:43:23.805"></status>
</kw>
<msg timestamp="20201029 12:43:23.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.974197236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.974206083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.414" endtime="20201029 12:43:23.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.974197236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.974206083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.817" endtime="20201029 12:43:23.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.838" endtime="20201029 12:43:23.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.407" endtime="20201029 12:43:23.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.402" endtime="20201029 12:43:23.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.856" level="INFO">${RESULT} = [{'diff': 8.847000000145044e-06}, {'diff': 9.610999999409842e-06}, {'diff': 9.125000000054229e-06}, {'diff': 9.430000000421046e-06}, {'diff': 9.597000000027833e-06}, {'diff': 8.597999999082617e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:23.847" endtime="20201029 12:43:23.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:23.867" level="INFO">${OVERHEAD} = {'diff': [8.847000000145044e-06, 9.610999999409842e-06, 9.125000000054229e-06, 9.430000000421046e-06, 9.597000000027833e-06, 8.597999999082617e-06, 9.402999999963413e-06, 9.291999999661016e-06, 8.6249...</msg>
<status status="PASS" starttime="20201029 12:43:23.858" endtime="20201029 12:43:23.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.877" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:23.874" endtime="20201029 12:43:23.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.882" level="INFO">VALUE: [8.847000000145044e-06, 9.610999999409842e-06, 9.125000000054229e-06, 9.430000000421046e-06, 9.597000000027833e-06, 8.597999999082617e-06, 9.402999999963413e-06, 9.291999999661016e-06, 8.62499999954025e-06, 9.096999999513855e-06, 9.278000000279008e-06, 8.611000000158242e-06, 9.444999999885795e-06, 9.11100000067222e-06, 8.930999999989808e-06, 8.764000000383021e-06, 9.444999999885795e-06, 9.264000000897e-06, 9.249999999738634e-06, 8.929999999907068e-06, 9.11100000067222e-06, 9.56899999948746e-06, 9.11100000067222e-06, 9.097999999596595e-06, 8.929999999907068e-06, 9.597000000027833e-06, 9.291999999661016e-06, 8.776999999682289e-06, 8.985999999211458e-06, 9.444999999885795e-06, 8.764000000383021e-06, 9.125000000054229e-06, 9.096999999513855e-06, 9.389000000581404e-06, 9.291999999661016e-06, 9.444999999885795e-06, 9.610999999409842e-06, 8.62499999954025e-06, 8.930999999989808e-06, 8.77799999976503e-06, 8.764000000383021e-06, 9.277000000196267e-06, 8.750000001001013e-06, 9.096999999513855e-06, 8.77799999976503e-06, 9.236000000356626e-06, 8.583999999700609e-06, 9.084000000214587e-06, 9.11100000067222e-06, 9.249999999738634e-06, 9.27799999850265e-06, 8.77799999976503e-06, 8.986999999294198e-06, 9.264000000897e-06, 9.249999999738634e-06, 8.944999999371817e-06, 9.249999999738634e-06, 9.431000000503786e-06, 9.11100000067222e-06, 9.083000000131847e-06, 9.583000000645825e-06, 9.431000000503786e-06, 8.944999999371817e-06, 8.930999999989808e-06]</msg>
<status status="PASS" starttime="20201029 12:43:23.879" endtime="20201029 12:43:23.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.868" endtime="20201029 12:43:23.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.353" endtime="20201029 12:43:23.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.352" endtime="20201029 12:43:23.886"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.907" endtime="20201029 12:43:23.921"></status>
</kw>
<msg timestamp="20201029 12:43:23.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.903" endtime="20201029 12:43:23.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.928" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.924" endtime="20201029 12:43:23.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.931" endtime="20201029 12:43:23.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.896" endtime="20201029 12:43:23.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.892" endtime="20201029 12:43:23.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.955" endtime="20201029 12:43:24.324"></status>
</kw>
<msg timestamp="20201029 12:43:24.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.495766764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.495776042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.951" endtime="20201029 12:43:24.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.495766764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.495776042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.335" endtime="20201029 12:43:24.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.358" endtime="20201029 12:43:24.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.944" endtime="20201029 12:43:24.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.939" endtime="20201029 12:43:24.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.376" level="INFO">${RESULT} = [{'diff': 9.27799999850265e-06}, {'diff': 8.77799999976503e-06}, {'diff': 8.986999999294198e-06}, {'diff': 9.264000000897e-06}, {'diff': 9.249999999738634e-06}, {'diff': 8.944999999371817e-06}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:43:24.366" endtime="20201029 12:43:24.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:24.387" level="INFO">${OVERHEAD} = {'diff': [9.27799999850265e-06, 8.77799999976503e-06, 8.986999999294198e-06, 9.264000000897e-06, 9.249999999738634e-06, 8.944999999371817e-06, 9.249999999738634e-06, 9.431000000503786e-06, 9.111000000...</msg>
<status status="PASS" starttime="20201029 12:43:24.378" endtime="20201029 12:43:24.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.398" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:24.395" endtime="20201029 12:43:24.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.404" level="INFO">VALUE: [9.27799999850265e-06, 8.77799999976503e-06, 8.986999999294198e-06, 9.264000000897e-06, 9.249999999738634e-06, 8.944999999371817e-06, 9.249999999738634e-06, 9.431000000503786e-06, 9.11100000067222e-06, 9.083000000131847e-06, 9.583000000645825e-06, 9.431000000503786e-06, 8.944999999371817e-06, 8.930999999989808e-06, 8.611000000158242e-06, 8.791000000840654e-06, 9.11100000067222e-06, 9.457999999185063e-06, 8.943999999289076e-06, 8.958000000447441e-06, 9.444999999885795e-06, 8.764000000383021e-06, 9.263999999120642e-06, 8.611000000158242e-06, 8.77799999976503e-06, 9.416999999345421e-06, 9.597000000027833e-06, 9.180999999358619e-06, 8.902999999449435e-06, 8.77799999976503e-06, 9.096999999513855e-06, 9.334000001359755e-06, 9.443999999803054e-06, 8.776999999682289e-06, 9.485999999725436e-06, 8.764000000383021e-06, 9.096999999513855e-06, 9.096999999513855e-06, 9.069000000749838e-06, 9.263999999120642e-06, 9.11100000067222e-06, 8.860999999527053e-06, 9.139000001212594e-06, 9.431000000503786e-06, 9.277000000196267e-06, 8.944000001065433e-06, 9.42999999864469e-06, 9.27799999850265e-06, 8.791000000840654e-06, 9.45800000096142e-06, 8.77799999976503e-06, 8.889000000067426e-06, 9.096999999513855e-06, 8.77799999976503e-06, 9.457999999185063e-06, 9.444000001579411e-06, 9.472000000343428e-06, 9.264000000897e-06, 9.16699999997661e-06, 9.096999999513855e-06, 9.443999999803054e-06, 8.583999999700609e-06, 9.431000000503786e-06, 9.431000000503786e-06]</msg>
<status status="PASS" starttime="20201029 12:43:24.400" endtime="20201029 12:43:24.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.389" endtime="20201029 12:43:24.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.888" endtime="20201029 12:43:24.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.887" endtime="20201029 12:43:24.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.801" endtime="20201029 12:43:24.409"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:13.677" endtime="20201029 12:43:24.411" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.428" endtime="20201029 12:43:24.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.424" endtime="20201029 12:43:24.451"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.484" endtime="20201029 12:43:24.500"></status>
</kw>
<msg timestamp="20201029 12:43:24.501" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.481" endtime="20201029 12:43:24.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.503" endtime="20201029 12:43:24.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.514" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:24.510" endtime="20201029 12:43:24.515"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:24.474" endtime="20201029 12:43:24.517"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:24.468" endtime="20201029 12:43:24.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.464" endtime="20201029 12:43:24.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:24.526" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:24.525" endtime="20201029 12:43:24.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.521" endtime="20201029 12:43:24.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.463" endtime="20201029 12:43:24.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.461" endtime="20201029 12:43:24.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.530" endtime="20201029 12:43:24.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.457" endtime="20201029 12:43:24.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.453" endtime="20201029 12:43:24.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.422" endtime="20201029 12:43:24.537"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.561" endtime="20201029 12:43:24.581"></status>
</kw>
<msg timestamp="20201029 12:43:24.582" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.558" endtime="20201029 12:43:24.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.588" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.585" endtime="20201029 12:43:24.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.591" endtime="20201029 12:43:24.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.548" endtime="20201029 12:43:24.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.543" endtime="20201029 12:43:24.598"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.603" endtime="20201029 12:43:24.608"></status>
</kw>
<msg timestamp="20201029 12:43:24.609" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:24.600" endtime="20201029 12:43:24.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.619" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:24.617" endtime="20201029 12:43:24.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.623" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:24.621" endtime="20201029 12:43:24.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.611" endtime="20201029 12:43:24.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.637" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:24.634" endtime="20201029 12:43:24.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.643" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:24.640" endtime="20201029 12:43:24.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.627" endtime="20201029 12:43:24.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.665" endtime="20201029 12:43:25.046"></status>
</kw>
<msg timestamp="20201029 12:43:25.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124888069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124904486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.661" endtime="20201029 12:43:25.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124888069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124904486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.059" endtime="20201029 12:43:25.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.085" endtime="20201029 12:43:25.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.653" endtime="20201029 12:43:25.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.647" endtime="20201029 12:43:25.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.109" level="INFO">${RESULT} = [{'diff': 1.64169999999908e-05}, {'diff': 1.6806000000008092e-05}, {'diff': 1.6528000000001764e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.602700000000179e-05}, {'diff': 1.634699999999989e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:25.098" endtime="20201029 12:43:25.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:25.124" level="INFO">${OVERHEAD} = {'diff': [1.64169999999908e-05, 1.6806000000008092e-05, 1.6528000000001764e-05, 1.6500000000002624e-05, 1.602700000000179e-05, 1.634699999999989e-05, 1.6708000000004164e-05, 1.6486000000009993e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:25.112" endtime="20201029 12:43:25.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.139" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:25.136" endtime="20201029 12:43:25.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.147" level="INFO">VALUE: [1.64169999999908e-05, 1.6806000000008092e-05, 1.6528000000001764e-05, 1.6500000000002624e-05, 1.602700000000179e-05, 1.634699999999989e-05, 1.6708000000004164e-05, 1.6486000000009993e-05, 1.6916000000005704e-05, 1.6665999999998515e-05, 1.5861000000005898e-05, 1.6222000000010173e-05, 1.687499999999953e-05, 1.637499999998515e-05, 1.6693999999983777e-05, 1.666699999999799e-05, 1.6694000000011533e-05, 1.6028000000001263e-05, 1.583299999999288e-05, 1.616699999998361e-05, 1.6193999999997155e-05, 1.673600000001718e-05, 1.651400000002301e-05, 1.684699999998651e-05, 1.6014000000008632e-05, 1.6014000000008632e-05, 1.659700000000708e-05, 1.6028000000001263e-05, 1.584699999998551e-05, 1.6375000000012907e-05, 1.65410000000088e-05, 1.6041999999993894e-05, 1.6055999999986525e-05, 1.6207999999989786e-05, 1.6333999999978976e-05, 1.5861000000005898e-05, 1.6209000000017015e-05, 1.581900000000025e-05, 1.6278000000008452e-05, 1.6750000000009813e-05, 1.5999999999988246e-05, 1.5819999999999723e-05, 1.6709000000003638e-05, 1.588899999999116e-05, 1.587499999999853e-05, 1.652800000001564e-05, 1.6375000000012907e-05, 1.6013999999980877e-05, 1.659700000000708e-05, 1.6527999999987886e-05]</msg>
<status status="PASS" starttime="20201029 12:43:25.143" endtime="20201029 12:43:25.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.126" endtime="20201029 12:43:25.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.538" endtime="20201029 12:43:25.153"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:24.415" endtime="20201029 12:43:25.156" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.179" endtime="20201029 12:43:25.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.174" endtime="20201029 12:43:25.206"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.241" endtime="20201029 12:43:25.260"></status>
</kw>
<msg timestamp="20201029 12:43:25.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.238" endtime="20201029 12:43:25.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.263" endtime="20201029 12:43:25.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.274" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:25.270" endtime="20201029 12:43:25.275"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:25.230" endtime="20201029 12:43:25.276"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:25.223" endtime="20201029 12:43:25.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.220" endtime="20201029 12:43:25.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:25.287" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:25.285" endtime="20201029 12:43:25.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.281" endtime="20201029 12:43:25.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.218" endtime="20201029 12:43:25.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.217" endtime="20201029 12:43:25.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.290" endtime="20201029 12:43:25.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.213" endtime="20201029 12:43:25.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.208" endtime="20201029 12:43:25.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.170" endtime="20201029 12:43:25.297"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.322" endtime="20201029 12:43:25.435"></status>
</kw>
<msg timestamp="20201029 12:43:25.436" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.319" endtime="20201029 12:43:25.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.442" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.438" endtime="20201029 12:43:25.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.445" endtime="20201029 12:43:25.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.311" endtime="20201029 12:43:25.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.303" endtime="20201029 12:43:25.452"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.456" endtime="20201029 12:43:25.461"></status>
</kw>
<msg timestamp="20201029 12:43:25.462" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:25.454" endtime="20201029 12:43:25.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.472" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:25.470" endtime="20201029 12:43:25.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.477" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:25.475" endtime="20201029 12:43:25.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.464" endtime="20201029 12:43:25.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.490" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:25.486" endtime="20201029 12:43:25.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.494" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:25.492" endtime="20201029 12:43:25.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.480" endtime="20201029 12:43:25.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.513" endtime="20201029 12:43:25.876"></status>
</kw>
<msg timestamp="20201029 12:43:25.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135741083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135796778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.510" endtime="20201029 12:43:25.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135741083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135796778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.886" endtime="20201029 12:43:25.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.904" endtime="20201029 12:43:25.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.503" endtime="20201029 12:43:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.498" endtime="20201029 12:43:25.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.922" level="INFO">${RESULT} = [{'diff': 5.56949999999945e-05}, {'diff': 5.593000000000958e-05}, {'diff': 5.609700000000495e-05}, {'diff': 5.609800000000442e-05}, {'diff': 5.597200000001523e-05}, {'diff': 5.5915999999989197e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:25.913" endtime="20201029 12:43:25.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:25.933" level="INFO">${OVERHEAD} = {'diff': [5.56949999999945e-05, 5.593000000000958e-05, 5.609700000000495e-05, 5.609800000000442e-05, 5.597200000001523e-05, 5.5915999999989197e-05, 5.594500000000169e-05, 5.594500000000169e-05, 5.6097...</msg>
<status status="PASS" starttime="20201029 12:43:25.924" endtime="20201029 12:43:25.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.944" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:25.942" endtime="20201029 12:43:25.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.950" level="INFO">VALUE: [5.56949999999945e-05, 5.593000000000958e-05, 5.609700000000495e-05, 5.609800000000442e-05, 5.597200000001523e-05, 5.5915999999989197e-05, 5.594500000000169e-05, 5.594500000000169e-05, 5.609700000000495e-05, 5.602700000001404e-05, 5.592999999998183e-05, 5.608300000001232e-05, 5.5917000000016426e-05, 5.608300000001232e-05, 5.5901999999996566e-05, 5.6069999999991404e-05, 5.609700000000495e-05, 5.593100000000906e-05, 5.5957999999994845e-05, 5.593100000000906e-05, 5.593100000000906e-05, 5.6167000000023615e-05, 5.604200000000614e-05, 5.59309999999813e-05, 5.5944000000002214e-05, 5.591699999998867e-05, 5.591600000001695e-05, 5.59309999999813e-05, 5.593100000000906e-05, 5.611099999999758e-05, 5.593100000000906e-05, 5.593100000000906e-05, 5.604199999997839e-05, 5.5915999999989197e-05, 5.593100000000906e-05, 5.593000000000958e-05, 5.59309999999813e-05, 5.588900000000341e-05, 5.593100000000906e-05, 5.608400000001179e-05, 5.611099999999758e-05, 5.5903000000023795e-05, 5.5971999999987476e-05, 5.595899999999432e-05, 5.611099999999758e-05, 5.593000000000958e-05, 5.606899999999193e-05, 5.612499999999021e-05, 5.5888000000003935e-05, 5.616699999999586e-05]</msg>
<status status="PASS" starttime="20201029 12:43:25.947" endtime="20201029 12:43:25.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.935" endtime="20201029 12:43:25.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.299" endtime="20201029 12:43:25.954"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:25.162" endtime="20201029 12:43:25.955" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.973" endtime="20201029 12:43:25.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.969" endtime="20201029 12:43:25.998"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.041" endtime="20201029 12:43:26.057"></status>
</kw>
<msg timestamp="20201029 12:43:26.058" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.037" endtime="20201029 12:43:26.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.060" endtime="20201029 12:43:26.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.072" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:26.067" endtime="20201029 12:43:26.072"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:26.029" endtime="20201029 12:43:26.074"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:26.020" endtime="20201029 12:43:26.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.017" endtime="20201029 12:43:26.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:26.084" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:26.083" endtime="20201029 12:43:26.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.078" endtime="20201029 12:43:26.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.014" endtime="20201029 12:43:26.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.012" endtime="20201029 12:43:26.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.089" endtime="20201029 12:43:26.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.006" endtime="20201029 12:43:26.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.000" endtime="20201029 12:43:26.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.967" endtime="20201029 12:43:26.096"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.118" endtime="20201029 12:43:26.434"></status>
</kw>
<msg timestamp="20201029 12:43:26.435" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.115" endtime="20201029 12:43:26.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.442" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.438" endtime="20201029 12:43:26.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.444" endtime="20201029 12:43:26.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.108" endtime="20201029 12:43:26.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.102" endtime="20201029 12:43:26.451"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.455" endtime="20201029 12:43:26.460"></status>
</kw>
<msg timestamp="20201029 12:43:26.461" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:26.452" endtime="20201029 12:43:26.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.471" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:26.468" endtime="20201029 12:43:26.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.475" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:26.473" endtime="20201029 12:43:26.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.462" endtime="20201029 12:43:26.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.486" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:26.484" endtime="20201029 12:43:26.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.492" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:26.489" endtime="20201029 12:43:26.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.478" endtime="20201029 12:43:26.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.510" endtime="20201029 12:43:26.859"></status>
</kw>
<msg timestamp="20201029 12:43:26.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142330958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14243075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:26.507" endtime="20201029 12:43:26.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142330958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14243075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:26.868" endtime="20201029 12:43:26.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.886" endtime="20201029 12:43:26.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.500" endtime="20201029 12:43:26.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.495" endtime="20201029 12:43:26.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.903" level="INFO">${RESULT} = [{'diff': 9.979199999998745e-05}, {'diff': 9.90970000000202e-05}, {'diff': 9.908299999999981e-05}, {'diff': 9.890300000001129e-05}, {'diff': 9.906900000000718e-05}, {'diff': 9.907000000000665e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:26.894" endtime="20201029 12:43:26.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:26.917" level="INFO">${OVERHEAD} = {'diff': [9.979199999998745e-05, 9.90970000000202e-05, 9.908299999999981e-05, 9.890300000001129e-05, 9.906900000000718e-05, 9.907000000000665e-05, 9.909699999999244e-05, 9.911100000001283e-05, 9.90970...</msg>
<status status="PASS" starttime="20201029 12:43:26.905" endtime="20201029 12:43:26.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.928" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:26.926" endtime="20201029 12:43:26.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.934" level="INFO">VALUE: [9.979199999998745e-05, 9.90970000000202e-05, 9.908299999999981e-05, 9.890300000001129e-05, 9.906900000000718e-05, 9.907000000000665e-05, 9.909699999999244e-05, 9.911100000001283e-05, 9.90970000000202e-05, 9.904200000002139e-05, 9.905600000001402e-05, 9.908399999999928e-05, 9.904099999999416e-05, 9.906899999997942e-05, 9.909699999999244e-05, 9.905600000001402e-05, 9.899999999998799e-05, 9.908299999999981e-05, 9.906900000000718e-05, 9.906900000000718e-05, 9.908400000002704e-05, 9.904199999999364e-05, 9.909699999999244e-05, 9.905500000001455e-05, 9.904200000004915e-05, 9.891700000003167e-05, 9.909699999999244e-05, 9.9028000000001e-05, 9.908299999999981e-05, 9.904199999999364e-05, 9.908399999997153e-05, 9.890300000003904e-05, 9.905500000001455e-05, 9.888900000004641e-05, 9.906899999995167e-05, 9.904199999999364e-05, 9.888900000004641e-05, 9.891600000000444e-05, 9.911099999998507e-05, 9.9028000000001e-05, 9.911099999998507e-05, 9.9028000000001e-05, 9.909700000004795e-05, 9.9028000000001e-05, 9.909699999999244e-05, 9.904100000002192e-05, 9.906900000000718e-05, 9.911099999998507e-05, 9.906900000000718e-05, 9.909699999999244e-05]</msg>
<status status="PASS" starttime="20201029 12:43:26.931" endtime="20201029 12:43:26.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.919" endtime="20201029 12:43:26.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.097" endtime="20201029 12:43:26.938"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:25.960" endtime="20201029 12:43:26.939" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.956" endtime="20201029 12:43:26.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.952" endtime="20201029 12:43:26.980"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.014" endtime="20201029 12:43:27.030"></status>
</kw>
<msg timestamp="20201029 12:43:27.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.010" endtime="20201029 12:43:27.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.033" endtime="20201029 12:43:27.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.044" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:27.040" endtime="20201029 12:43:27.045"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:27.002" endtime="20201029 12:43:27.047"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:26.995" endtime="20201029 12:43:27.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.993" endtime="20201029 12:43:27.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:27.060" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:27.057" endtime="20201029 12:43:27.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.052" endtime="20201029 12:43:27.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.991" endtime="20201029 12:43:27.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.989" endtime="20201029 12:43:27.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.065" endtime="20201029 12:43:27.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.985" endtime="20201029 12:43:27.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.981" endtime="20201029 12:43:27.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.950" endtime="20201029 12:43:27.077"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.108" endtime="20201029 12:43:27.133"></status>
</kw>
<msg timestamp="20201029 12:43:27.134" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.104" endtime="20201029 12:43:27.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.140" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.136" endtime="20201029 12:43:27.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.143" endtime="20201029 12:43:27.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.095" endtime="20201029 12:43:27.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.085" endtime="20201029 12:43:27.149"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.154" endtime="20201029 12:43:27.158"></status>
</kw>
<msg timestamp="20201029 12:43:27.159" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:27.151" endtime="20201029 12:43:27.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.169" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:27.167" endtime="20201029 12:43:27.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.174" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:27.172" endtime="20201029 12:43:27.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.161" endtime="20201029 12:43:27.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.185" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:27.183" endtime="20201029 12:43:27.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.190" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:27.188" endtime="20201029 12:43:27.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.177" endtime="20201029 12:43:27.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.209" endtime="20201029 12:43:27.586"></status>
</kw>
<msg timestamp="20201029 12:43:27.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145497569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145499722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.206" endtime="20201029 12:43:27.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145497569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145499722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.596" endtime="20201029 12:43:27.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.624" endtime="20201029 12:43:27.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.199" endtime="20201029 12:43:27.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.194" endtime="20201029 12:43:27.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.651" level="INFO">${RESULT} = [{'diff': 2.1530000000047345e-06}, {'diff': 2.195000000010383e-06}, {'diff': 2.1940000000109094e-06}, {'diff': 2.193999999983154e-06}, {'diff': 2.209000000003014e-06}, {'diff': 2.1949999999826275e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:27.637" endtime="20201029 12:43:27.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:27.666" level="INFO">${OVERHEAD} = {'diff': [2.1530000000047345e-06, 2.195000000010383e-06, 2.1940000000109094e-06, 2.193999999983154e-06, 2.209000000003014e-06, 2.1949999999826275e-06, 2.1949999999826275e-06, 2.1940000000109094e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:43:27.654" endtime="20201029 12:43:27.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.684" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:27.680" endtime="20201029 12:43:27.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.693" level="INFO">VALUE: [2.1530000000047345e-06, 2.195000000010383e-06, 2.1940000000109094e-06, 2.193999999983154e-06, 2.209000000003014e-06, 2.1949999999826275e-06, 2.1949999999826275e-06, 2.1940000000109094e-06, 2.193999999983154e-06, 2.1940000000109094e-06, 2.236000000016558e-06, 2.165999999997892e-06, 2.195000000010383e-06, 2.195000000010383e-06, 2.1669999999973655e-06, 2.193999999983154e-06, 2.124999999991717e-06, 2.1809999999899965e-06, 2.1800000000182784e-06, 2.207999999975785e-06, 2.1949999999826275e-06, 2.236000000016558e-06, 2.236000000016558e-06, 2.181000000017752e-06, 2.1940000000109094e-06, 2.207999999975785e-06, 2.2219999999961715e-06, 2.1809999999899965e-06, 2.1809999999899965e-06, 2.250000000009189e-06, 2.1949999999826275e-06, 2.1390000000121034e-06, 2.236000000016558e-06, 2.179999999990523e-06, 2.1809999999899965e-06, 2.2219999999961715e-06, 2.181000000017752e-06, 2.181000000017752e-06, 2.1940000000109094e-06, 2.2219999999961715e-06, 2.181000000017752e-06, 2.181000000017752e-06, 2.2080000000035405e-06, 2.193999999983154e-06, 2.193999999983154e-06, 2.1949999999826275e-06, 2.195000000010383e-06, 2.1809999999899965e-06, 2.2080000000035405e-06, 2.193999999983154e-06]</msg>
<status status="PASS" starttime="20201029 12:43:27.689" endtime="20201029 12:43:27.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.668" endtime="20201029 12:43:27.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.078" endtime="20201029 12:43:27.700"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:26.944" endtime="20201029 12:43:27.703" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.736" endtime="20201029 12:43:27.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.731" endtime="20201029 12:43:27.764"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.825" endtime="20201029 12:43:27.850"></status>
</kw>
<msg timestamp="20201029 12:43:27.852" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.818" endtime="20201029 12:43:27.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.858" endtime="20201029 12:43:27.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.878" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:27.868" endtime="20201029 12:43:27.879"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:27.806" endtime="20201029 12:43:27.881"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:27.793" endtime="20201029 12:43:27.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.788" endtime="20201029 12:43:27.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:27.891" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:27.889" endtime="20201029 12:43:27.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.885" endtime="20201029 12:43:27.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.785" endtime="20201029 12:43:27.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.781" endtime="20201029 12:43:27.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.894" endtime="20201029 12:43:27.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.774" endtime="20201029 12:43:27.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.767" endtime="20201029 12:43:27.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.725" endtime="20201029 12:43:27.901"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.924" endtime="20201029 12:43:28.038"></status>
</kw>
<msg timestamp="20201029 12:43:28.039" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.920" endtime="20201029 12:43:28.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.045" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.041" endtime="20201029 12:43:28.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.047" endtime="20201029 12:43:28.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.913" endtime="20201029 12:43:28.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.907" endtime="20201029 12:43:28.054"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.058" endtime="20201029 12:43:28.063"></status>
</kw>
<msg timestamp="20201029 12:43:28.064" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:28.056" endtime="20201029 12:43:28.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.074" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:28.072" endtime="20201029 12:43:28.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.078" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:28.076" endtime="20201029 12:43:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.066" endtime="20201029 12:43:28.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.092" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:28.088" endtime="20201029 12:43:28.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.097" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:28.095" endtime="20201029 12:43:28.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.082" endtime="20201029 12:43:28.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.120" endtime="20201029 12:43:28.482"></status>
</kw>
<msg timestamp="20201029 12:43:28.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.180750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.180762792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.117" endtime="20201029 12:43:28.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.180750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.180762792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.493" endtime="20201029 12:43:28.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.515" endtime="20201029 12:43:28.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.107" endtime="20201029 12:43:28.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.102" endtime="20201029 12:43:28.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.536" level="INFO">${RESULT} = [{'diff': 1.2458999999992448e-05}, {'diff': 1.2458999999992448e-05}, {'diff': 1.2444000000000344e-05}, {'diff': 1.2471999999985606e-05}, {'diff': 1.2444000000000344e-05}, {'diff': 1.2457999999992975e-...</msg>
<status status="PASS" starttime="20201029 12:43:28.525" endtime="20201029 12:43:28.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:28.546" level="INFO">${OVERHEAD} = {'diff': [1.2458999999992448e-05, 1.2458999999992448e-05, 1.2444000000000344e-05, 1.2471999999985606e-05, 1.2444000000000344e-05, 1.2457999999992975e-05, 1.245800000002073e-05, 1.2486000000005992e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:28.539" endtime="20201029 12:43:28.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.557" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:28.555" endtime="20201029 12:43:28.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.563" level="INFO">VALUE: [1.2458999999992448e-05, 1.2458999999992448e-05, 1.2444000000000344e-05, 1.2471999999985606e-05, 1.2444000000000344e-05, 1.2457999999992975e-05, 1.245800000002073e-05, 1.2486000000005992e-05, 1.2472000000013361e-05, 1.2402999999994169e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2499999999998623e-05, 1.2457999999992975e-05, 1.2458999999992448e-05, 1.2473000000012835e-05, 1.2431000000007186e-05, 1.247299999998508e-05, 1.2444000000000344e-05, 1.2472000000013361e-05, 1.2402999999994169e-05, 1.2444999999999817e-05, 1.2444000000000344e-05, 1.2402999999994169e-05, 1.2457999999992975e-05, 1.2389000000001538e-05, 1.2431000000007186e-05, 1.2457999999992975e-05, 1.2444999999999817e-05, 1.2430000000007713e-05, 1.2499999999998623e-05, 1.2457999999992975e-05, 1.2444999999999817e-05, 1.2458999999992448e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2471999999985606e-05, 1.2389000000001538e-05, 1.2402999999994169e-05, 1.2472999999957324e-05, 1.2473000000012835e-05, 1.2472000000041117e-05, 1.24169999999868e-05, 1.2389000000001538e-05, 1.2457999999992975e-05, 1.2459000000020204e-05, 1.2445000000027573e-05, 1.2471999999985606e-05, 1.2471999999985606e-05, 1.254199999994876e-05]</msg>
<status status="PASS" starttime="20201029 12:43:28.560" endtime="20201029 12:43:28.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.548" endtime="20201029 12:43:28.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.902" endtime="20201029 12:43:28.567"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:27.714" endtime="20201029 12:43:28.569" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.587" endtime="20201029 12:43:28.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.583" endtime="20201029 12:43:28.610"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.644" endtime="20201029 12:43:28.660"></status>
</kw>
<msg timestamp="20201029 12:43:28.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.641" endtime="20201029 12:43:28.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.663" endtime="20201029 12:43:28.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.674" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:28.670" endtime="20201029 12:43:28.675"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:28.634" endtime="20201029 12:43:28.676"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:28.627" endtime="20201029 12:43:28.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.625" endtime="20201029 12:43:28.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:28.686" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:28.685" endtime="20201029 12:43:28.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.680" endtime="20201029 12:43:28.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.623" endtime="20201029 12:43:28.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.621" endtime="20201029 12:43:28.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.690" endtime="20201029 12:43:28.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.616" endtime="20201029 12:43:28.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.611" endtime="20201029 12:43:28.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.580" endtime="20201029 12:43:28.697"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.719" endtime="20201029 12:43:29.037"></status>
</kw>
<msg timestamp="20201029 12:43:29.038" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.715" endtime="20201029 12:43:29.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.044" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.040" endtime="20201029 12:43:29.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.046" endtime="20201029 12:43:29.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.708" endtime="20201029 12:43:29.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.702" endtime="20201029 12:43:29.053"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.058" endtime="20201029 12:43:29.062"></status>
</kw>
<msg timestamp="20201029 12:43:29.063" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:29.055" endtime="20201029 12:43:29.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.073" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:29.071" endtime="20201029 12:43:29.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.077" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:29.075" endtime="20201029 12:43:29.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.065" endtime="20201029 12:43:29.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.089" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:29.087" endtime="20201029 12:43:29.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.093" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:29.091" endtime="20201029 12:43:29.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.081" endtime="20201029 12:43:29.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.115" endtime="20201029 12:43:29.463"></status>
</kw>
<msg timestamp="20201029 12:43:29.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130016181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130039083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.111" endtime="20201029 12:43:29.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130016181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130039083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.472" endtime="20201029 12:43:29.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.490" endtime="20201029 12:43:29.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.104" endtime="20201029 12:43:29.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.100" endtime="20201029 12:43:29.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.507" level="INFO">${RESULT} = [{'diff': 2.2901999999991318e-05}, {'diff': 2.2902999999990792e-05}, {'diff': 2.2916000000011705e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.288899999999816e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:29.498" endtime="20201029 12:43:29.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:29.516" level="INFO">${OVERHEAD} = {'diff': [2.2901999999991318e-05, 2.2902999999990792e-05, 2.2916000000011705e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.2902000000019074e-05, 2.2901999999991318e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:29.509" endtime="20201029 12:43:29.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.527" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:29.525" endtime="20201029 12:43:29.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.533" level="INFO">VALUE: [2.2901999999991318e-05, 2.2902999999990792e-05, 2.2916000000011705e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.2902000000019074e-05, 2.2901999999991318e-05, 2.297199999998223e-05, 2.2902000000019074e-05, 2.288899999999816e-05, 2.2860999999985143e-05, 2.288899999999816e-05, 2.2846999999992512e-05, 2.2887999999998687e-05, 2.287500000000553e-05, 2.2901999999991318e-05, 2.2902999999990792e-05, 2.293100000000381e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.2887999999998687e-05, 2.2903000000018547e-05, 2.2889000000025916e-05, 2.2916999999955667e-05, 2.2901999999991318e-05, 2.2888999999970405e-05, 2.2903000000018547e-05, 2.2916999999955667e-05, 2.2875000000033285e-05, 2.2901999999991318e-05, 2.291600000003946e-05, 2.2888999999970405e-05, 2.291700000001118e-05, 2.291599999998395e-05, 2.2888999999970405e-05, 2.2889000000025916e-05, 2.2903000000018547e-05, 2.2889000000025916e-05, 2.2846999999992512e-05, 2.2888999999970405e-05, 2.2874999999977774e-05, 2.2874999999977774e-05, 2.2874999999977774e-05, 2.2903000000018547e-05, 2.2889000000025916e-05, 2.2875000000033285e-05, 2.2874999999977774e-05, 2.2861000000040654e-05, 2.2903000000018547e-05]</msg>
<status status="PASS" starttime="20201029 12:43:29.530" endtime="20201029 12:43:29.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.518" endtime="20201029 12:43:29.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.698" endtime="20201029 12:43:29.537"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:28.573" endtime="20201029 12:43:29.538" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.558" endtime="20201029 12:43:29.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.552" endtime="20201029 12:43:29.584"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.622" endtime="20201029 12:43:29.637"></status>
</kw>
<msg timestamp="20201029 12:43:29.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.618" endtime="20201029 12:43:29.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.641" endtime="20201029 12:43:29.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.652" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:29.647" endtime="20201029 12:43:29.652"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:29.611" endtime="20201029 12:43:29.654"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:29.605" endtime="20201029 12:43:29.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.602" endtime="20201029 12:43:29.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:29.664" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:29.663" endtime="20201029 12:43:29.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.658" endtime="20201029 12:43:29.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.600" endtime="20201029 12:43:29.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.598" endtime="20201029 12:43:29.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.668" endtime="20201029 12:43:29.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.592" endtime="20201029 12:43:29.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.587" endtime="20201029 12:43:29.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.549" endtime="20201029 12:43:29.675"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.683" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:29.699" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:31.752" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:29.680" endtime="20201029 12:43:31.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.762" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:31.756" endtime="20201029 12:43:31.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.676" endtime="20201029 12:43:31.765"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.777" endtime="20201029 12:43:31.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.771" endtime="20201029 12:43:31.804"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.828" endtime="20201029 12:43:31.837"></status>
</kw>
<msg timestamp="20201029 12:43:31.839" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.825" endtime="20201029 12:43:31.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.845" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.841" endtime="20201029 12:43:31.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.847" endtime="20201029 12:43:31.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.815" endtime="20201029 12:43:31.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.810" endtime="20201029 12:43:31.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.870" endtime="20201029 12:43:32.216"></status>
</kw>
<msg timestamp="20201029 12:43:32.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040073083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.040075597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:31.867" endtime="20201029 12:43:32.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040073083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.040075597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:32.225" endtime="20201029 12:43:32.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.245" endtime="20201029 12:43:32.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.860" endtime="20201029 12:43:32.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.855" endtime="20201029 12:43:32.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.261" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 1.6500000000002624e-05}, {'diff': 1.6485999999996115e-05}, {'diff': 1.6444000000004344e-05}, {'diff': 1.6695000000004068e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.64719...</msg>
<status status="PASS" starttime="20201029 12:43:32.253" endtime="20201029 12:43:32.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.271" level="INFO">${RESULT} = {'diff': [0, 1.6500000000002624e-05, 1.6485999999996115e-05, 1.6444000000004344e-05, 1.6695000000004068e-05, 1.6500000000002624e-05, 1.6471999999996545e-05, 1.6499999999995685e-05, 1.6486000000003054e...</msg>
<status status="PASS" starttime="20201029 12:43:32.263" endtime="20201029 12:43:32.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.282" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.280" endtime="20201029 12:43:32.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.290" level="INFO">VALUE: [0, 1.6500000000002624e-05, 1.6485999999996115e-05, 1.6444000000004344e-05, 1.6695000000004068e-05, 1.6500000000002624e-05, 1.6471999999996545e-05, 1.6499999999995685e-05, 1.6486000000003054e-05, 1.6500000000002624e-05, 1.6485999999996115e-05, 1.647299999999602e-05, 1.665299999999842e-05, 1.6444000000004344e-05, 1.6486000000003054e-05, 1.6485999999996115e-05, 1.6542000000001333e-05, 1.6458000000003914e-05, 1.6443999999997405e-05, 1.6499999999995685e-05, 1.661099999999971e-05, 1.6485999999996115e-05, 1.6473000000002957e-05, 1.6473000000002957e-05, 1.648699999999559e-05, 1.6487000000002527e-05, 1.655500000000143e-05, 1.6500000000002624e-05, 1.6721999999996795e-05, 1.6429999999997835e-05, 1.6485999999996115e-05, 1.6486000000003054e-05, 1.6472000000003484e-05, 1.6471999999996545e-05, 1.6486000000003054e-05, 1.6500000000002624e-05, 1.6639000000005788e-05, 1.6486000000003054e-05, 1.6485999999996115e-05, 1.6443999999997405e-05, 1.6472000000003484e-05, 1.6471999999996545e-05, 1.6513999999995255e-05, 1.6486000000003054e-05, 1.665299999999842e-05, 1.6487000000002527e-05, 1.6487000000002527e-05, 1.6485999999996115e-05, 1.6485999999996115e-05, 1.6486000000003054e-05]</msg>
<status status="PASS" starttime="20201029 12:43:32.286" endtime="20201029 12:43:32.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.273" endtime="20201029 12:43:32.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.806" endtime="20201029 12:43:32.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.768" endtime="20201029 12:43:32.294"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.300" endtime="20201029 12:43:32.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.296" endtime="20201029 12:43:32.324"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.344" endtime="20201029 12:43:32.353"></status>
</kw>
<msg timestamp="20201029 12:43:32.354" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.341" endtime="20201029 12:43:32.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.361" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.357" endtime="20201029 12:43:32.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.363" endtime="20201029 12:43:32.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.334" endtime="20201029 12:43:32.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.329" endtime="20201029 12:43:32.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.386" endtime="20201029 12:43:32.730"></status>
</kw>
<msg timestamp="20201029 12:43:32.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034087875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03411925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:32.383" endtime="20201029 12:43:32.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034087875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03411925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:32.748" endtime="20201029 12:43:32.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.767" endtime="20201029 12:43:32.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.375" endtime="20201029 12:43:32.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.371" endtime="20201029 12:43:32.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.783" level="INFO">${PHILIP_RES} = [{'diff': 3.137500000000015e-05}, {'diff': 3.037500000000609e-05}, {'diff': 3.070799999999735e-05}, {'diff': 3.186100000000108e-05}, {'diff': 3.038799999999925e-05}, {'diff': 3.072299999999639e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:32.775" endtime="20201029 12:43:32.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.793" level="INFO">${RESULT} = {'diff': [3.137500000000015e-05, 3.037500000000609e-05, 3.070799999999735e-05, 3.186100000000108e-05, 3.038799999999925e-05, 3.072299999999639e-05, 3.187500000000065e-05, 3.038799999999925e-05, 3.0694...</msg>
<status status="PASS" starttime="20201029 12:43:32.785" endtime="20201029 12:43:32.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.804" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.802" endtime="20201029 12:43:32.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.809" level="INFO">VALUE: [3.137500000000015e-05, 3.037500000000609e-05, 3.070799999999735e-05, 3.186100000000108e-05, 3.038799999999925e-05, 3.072299999999639e-05, 3.187500000000065e-05, 3.038799999999925e-05, 3.069499999999725e-05, 3.186100000000108e-05, 3.0388999999998723e-05, 3.070800000000429e-05, 3.186100000000108e-05, 3.040300000000523e-05, 3.070799999999735e-05, 3.187500000000065e-05, 3.0388999999998723e-05, 3.070799999999735e-05, 3.186100000000108e-05, 3.0374999999999153e-05, 3.070800000000429e-05, 3.1846999999994574e-05, 3.0388999999998723e-05, 3.072200000000386e-05, 3.183400000000142e-05, 3.0361999999999056e-05, 3.070899999999682e-05, 3.186100000000108e-05, 3.0388999999998723e-05, 3.072199999999692e-05, 3.186100000000108e-05, 3.0402999999998293e-05, 3.072200000000386e-05, 3.193099999999893e-05, 3.0360999999999583e-05, 3.070799999999735e-05, 3.184700000000151e-05, 3.0374999999999153e-05, 3.070799999999735e-05, 3.186100000000108e-05, 3.0374999999999153e-05, 3.073600000000343e-05, 3.1846999999994574e-05, 3.0374999999999153e-05, 3.070900000000376e-05, 3.190200000000032e-05, 3.0374999999999153e-05, 3.070899999999682e-05, 3.187500000000065e-05, 3.0402999999998293e-05]</msg>
<status status="PASS" starttime="20201029 12:43:32.806" endtime="20201029 12:43:32.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.795" endtime="20201029 12:43:32.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.325" endtime="20201029 12:43:32.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.295" endtime="20201029 12:43:32.813"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.819" endtime="20201029 12:43:32.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.815" endtime="20201029 12:43:32.842"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.863" endtime="20201029 12:43:32.873"></status>
</kw>
<msg timestamp="20201029 12:43:32.874" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.860" endtime="20201029 12:43:32.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.880" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.876" endtime="20201029 12:43:32.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.882" endtime="20201029 12:43:32.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.852" endtime="20201029 12:43:32.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.847" endtime="20201029 12:43:32.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.905" endtime="20201029 12:43:33.241"></status>
</kw>
<msg timestamp="20201029 12:43:33.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033567472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033612083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.902" endtime="20201029 12:43:33.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033567472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033612083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.252" endtime="20201029 12:43:33.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.273" endtime="20201029 12:43:33.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.895" endtime="20201029 12:43:33.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.890" endtime="20201029 12:43:33.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.291" level="INFO">${PHILIP_RES} = [{'diff': 4.4610999999999956e-05}, {'diff': 4.483400000000054e-05}, {'diff': 4.4819000000001497e-05}, {'diff': 4.4819000000001497e-05}, {'diff': 4.575000000000412e-05}, {'diff': 4.582000000000197e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:33.283" endtime="20201029 12:43:33.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.302" level="INFO">${RESULT} = {'diff': [4.4610999999999956e-05, 4.483400000000054e-05, 4.4819000000001497e-05, 4.4819000000001497e-05, 4.575000000000412e-05, 4.582000000000197e-05, 4.579200000000283e-05, 4.576400000000369e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 12:43:33.293" endtime="20201029 12:43:33.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.313" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.311" endtime="20201029 12:43:33.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.319" level="INFO">VALUE: [4.4610999999999956e-05, 4.483400000000054e-05, 4.4819000000001497e-05, 4.4819000000001497e-05, 4.575000000000412e-05, 4.582000000000197e-05, 4.579200000000283e-05, 4.576400000000369e-05, 4.570800000000541e-05, 4.579099999999642e-05, 4.582000000000197e-05, 4.575000000000412e-05, 4.577800000000326e-05, 4.583299999999513e-05, 4.58060000000024e-05, 4.577800000000326e-05, 4.577800000000326e-05, 4.580499999999599e-05, 4.579200000000283e-05, 4.580500000000293e-05, 4.579200000000283e-05, 4.577799999999632e-05, 4.577800000000326e-05, 4.5833000000002067e-05, 4.572200000000498e-05, 4.579099999999642e-05, 4.579200000000283e-05, 4.577800000000326e-05, 4.575000000000412e-05, 4.577799999999632e-05, 4.577799999999632e-05, 4.583400000000154e-05, 4.579199999999589e-05, 4.581899999999556e-05, 4.58060000000024e-05, 4.58060000000024e-05, 4.579100000000336e-05, 4.576399999999675e-05, 4.580499999999599e-05, 4.577800000000326e-05, 4.576400000000369e-05, 4.577799999999632e-05, 4.577799999999632e-05, 4.572199999999804e-05, 4.579200000000283e-05, 4.580599999999546e-05, 4.577800000000326e-05, 4.577800000000326e-05, 4.577799999999632e-05, 4.577799999999632e-05]</msg>
<status status="PASS" starttime="20201029 12:43:33.316" endtime="20201029 12:43:33.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.304" endtime="20201029 12:43:33.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.843" endtime="20201029 12:43:33.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.814" endtime="20201029 12:43:33.324"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.330" endtime="20201029 12:43:33.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.326" endtime="20201029 12:43:33.353"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.374" endtime="20201029 12:43:33.384"></status>
</kw>
<msg timestamp="20201029 12:43:33.386" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.370" endtime="20201029 12:43:33.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.392" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.388" endtime="20201029 12:43:33.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.394" endtime="20201029 12:43:33.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.363" endtime="20201029 12:43:33.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.358" endtime="20201029 12:43:33.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.417" endtime="20201029 12:43:33.757"></status>
</kw>
<msg timestamp="20201029 12:43:33.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033778847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033839042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.414" endtime="20201029 12:43:33.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033778847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033839042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.767" endtime="20201029 12:43:33.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.786" endtime="20201029 12:43:33.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.407" endtime="20201029 12:43:33.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.402" endtime="20201029 12:43:33.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.802" level="INFO">${PHILIP_RES} = [{'diff': 6.0194999999999e-05}, {'diff': 6.094499999999975e-05}, {'diff': 6.197200000000042e-05}, {'diff': 6.188900000000247e-05}, {'diff': 6.19029999999951e-05}, {'diff': 6.195800000000085e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:33.794" endtime="20201029 12:43:33.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.811" level="INFO">${RESULT} = {'diff': [6.0194999999999e-05, 6.094499999999975e-05, 6.197200000000042e-05, 6.188900000000247e-05, 6.19029999999951e-05, 6.195800000000085e-05, 6.193100000000118e-05, 6.194400000000128e-05, 6.1985999...</msg>
<status status="PASS" starttime="20201029 12:43:33.804" endtime="20201029 12:43:33.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.821" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.819" endtime="20201029 12:43:33.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.827" level="INFO">VALUE: [6.0194999999999e-05, 6.094499999999975e-05, 6.197200000000042e-05, 6.188900000000247e-05, 6.19029999999951e-05, 6.195800000000085e-05, 6.193100000000118e-05, 6.194400000000128e-05, 6.198599999999999e-05, 6.19300000000017e-05, 6.195800000000085e-05, 6.194400000000128e-05, 6.201399999999913e-05, 6.194400000000128e-05, 6.194399999999434e-05, 6.195800000000085e-05, 6.195900000000032e-05, 6.193099999999424e-05, 6.194400000000128e-05, 6.18750000000029e-05, 6.195800000000085e-05, 6.20279999999987e-05, 6.195900000000032e-05, 6.197299999999989e-05, 6.201299999999965e-05, 6.195800000000085e-05, 6.195800000000085e-05, 6.198599999999999e-05, 6.194500000000075e-05, 6.195900000000032e-05, 6.197200000000042e-05, 6.198599999999999e-05, 6.19300000000017e-05, 6.197200000000042e-05, 6.198599999999999e-05, 6.194400000000128e-05, 6.197300000000683e-05, 6.195900000000032e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.199999999999956e-05, 6.194500000000075e-05, 6.195799999999391e-05, 6.194400000000128e-05, 6.194500000000075e-05, 6.195900000000032e-05, 6.194400000000128e-05, 6.19300000000017e-05, 6.187499999999596e-05]</msg>
<status status="PASS" starttime="20201029 12:43:33.824" endtime="20201029 12:43:33.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.813" endtime="20201029 12:43:33.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.354" endtime="20201029 12:43:33.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.324" endtime="20201029 12:43:33.831"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.836" endtime="20201029 12:43:33.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.833" endtime="20201029 12:43:33.860"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.880" endtime="20201029 12:43:33.893"></status>
</kw>
<msg timestamp="20201029 12:43:33.894" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.877" endtime="20201029 12:43:33.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.900" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.896" endtime="20201029 12:43:33.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.903" endtime="20201029 12:43:33.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.870" endtime="20201029 12:43:33.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.865" endtime="20201029 12:43:33.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.925" endtime="20201029 12:43:34.262"></status>
</kw>
<msg timestamp="20201029 12:43:34.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034914222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034992181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.922" endtime="20201029 12:43:34.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034914222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034992181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.272" endtime="20201029 12:43:34.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.291" endtime="20201029 12:43:34.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.915" endtime="20201029 12:43:34.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.911" endtime="20201029 12:43:34.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.306" level="INFO">${PHILIP_RES} = [{'diff': 7.79589999999955e-05}, {'diff': 7.715300000000341e-05}, {'diff': 7.708299999999862e-05}, {'diff': 7.81389999999979e-05}, {'diff': 7.716700000000298e-05}, {'diff': 7.700000000000068e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:34.299" endtime="20201029 12:43:34.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.316" level="INFO">${RESULT} = {'diff': [7.79589999999955e-05, 7.715300000000341e-05, 7.708299999999862e-05, 7.81389999999979e-05, 7.716700000000298e-05, 7.700000000000068e-05, 7.815299999999747e-05, 7.717999999999614e-05, 7.700000...</msg>
<status status="PASS" starttime="20201029 12:43:34.308" endtime="20201029 12:43:34.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.326" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.324" endtime="20201029 12:43:34.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.332" level="INFO">VALUE: [7.79589999999955e-05, 7.715300000000341e-05, 7.708299999999862e-05, 7.81389999999979e-05, 7.716700000000298e-05, 7.700000000000068e-05, 7.815299999999747e-05, 7.717999999999614e-05, 7.700000000000068e-05, 7.81389999999979e-05, 7.716699999999604e-05, 7.700000000000068e-05, 7.813900000000484e-05, 7.718100000000255e-05, 7.700000000000068e-05, 7.818100000000355e-05, 7.716600000000351e-05, 7.702799999999982e-05, 7.816600000000451e-05, 7.715300000000341e-05, 7.702700000000035e-05, 7.818100000000355e-05, 7.720800000000222e-05, 7.702799999999982e-05, 7.816599999999757e-05, 7.718000000000308e-05, 7.701400000000025e-05, 7.815299999999747e-05, 7.718100000000255e-05, 7.702799999999982e-05, 7.812499999999833e-05, 7.715299999999647e-05, 7.700000000000068e-05, 7.812499999999833e-05, 7.716599999999657e-05, 7.695800000000197e-05, 7.81389999999979e-05, 7.71389999999969e-05, 7.702799999999982e-05, 7.816700000000398e-05, 7.71110000000047e-05, 7.694399999999546e-05, 7.812499999999833e-05, 7.715299999999647e-05, 7.695800000000197e-05, 7.815300000000441e-05, 7.715300000000341e-05, 7.699999999999374e-05, 7.812499999999833e-05, 7.720800000000222e-05]</msg>
<status status="PASS" starttime="20201029 12:43:34.328" endtime="20201029 12:43:34.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.318" endtime="20201029 12:43:34.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.861" endtime="20201029 12:43:34.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.832" endtime="20201029 12:43:34.336"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.342" endtime="20201029 12:43:34.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.338" endtime="20201029 12:43:34.366"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.388" endtime="20201029 12:43:34.401"></status>
</kw>
<msg timestamp="20201029 12:43:34.402" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.385" endtime="20201029 12:43:34.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.408" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.404" endtime="20201029 12:43:34.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.411" endtime="20201029 12:43:34.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.378" endtime="20201029 12:43:34.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.373" endtime="20201029 12:43:34.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.434" endtime="20201029 12:43:34.767"></status>
</kw>
<msg timestamp="20201029 12:43:34.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035712972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035808986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.430" endtime="20201029 12:43:34.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035712972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035808986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.776" endtime="20201029 12:43:34.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.795" endtime="20201029 12:43:34.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.423" endtime="20201029 12:43:34.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.419" endtime="20201029 12:43:34.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.811" level="INFO">${PHILIP_RES} = [{'diff': 9.601399999999843e-05}, {'diff': 9.52079999999994e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.536100000000214e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:34.803" endtime="20201029 12:43:34.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.820" level="INFO">${RESULT} = {'diff': [9.601399999999843e-05, 9.52079999999994e-05, 9.522199999999897e-05, 9.522199999999897e-05, 9.522199999999897e-05, 9.536100000000214e-05, 9.616599999999476e-05, 9.52079999999994e-05, 9.524999...</msg>
<status status="PASS" starttime="20201029 12:43:34.813" endtime="20201029 12:43:34.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.831" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.828" endtime="20201029 12:43:34.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.837" level="INFO">VALUE: [9.601399999999843e-05, 9.52079999999994e-05, 9.522199999999897e-05, 9.522199999999897e-05, 9.522199999999897e-05, 9.536100000000214e-05, 9.616599999999476e-05, 9.52079999999994e-05, 9.524999999999811e-05, 9.530499999999692e-05, 9.523699999999802e-05, 9.543099999999999e-05, 9.611200000000236e-05, 9.530600000000333e-05, 9.519399999999983e-05, 9.522199999999897e-05, 9.523599999999854e-05, 9.540200000000137e-05, 9.622299999999945e-05, 9.523599999999854e-05, 9.520899999999888e-05, 9.520899999999888e-05, 9.522299999999845e-05, 9.540300000000085e-05, 9.619400000000083e-05, 9.522200000000591e-05, 9.52079999999994e-05, 9.522199999999897e-05, 9.522199999999897e-05, 9.541600000000094e-05, 9.624999999999911e-05, 9.518099999999974e-05, 9.522199999999897e-05, 9.527799999999725e-05, 9.524999999999811e-05, 9.538900000000128e-05, 9.623699999999902e-05, 9.526399999999768e-05, 9.523699999999802e-05, 9.523599999999854e-05, 9.529099999999735e-05, 9.53880000000018e-05, 9.619500000000031e-05, 9.527700000000472e-05, 9.523700000000496e-05, 9.51530000000006e-05, 9.522199999999897e-05, 9.538900000000128e-05, 9.618000000000126e-05, 9.522199999999897e-05]</msg>
<status status="PASS" starttime="20201029 12:43:34.833" endtime="20201029 12:43:34.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.822" endtime="20201029 12:43:34.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.367" endtime="20201029 12:43:34.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.337" endtime="20201029 12:43:34.842"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.847" endtime="20201029 12:43:34.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.844" endtime="20201029 12:43:34.871"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.891" endtime="20201029 12:43:34.905"></status>
</kw>
<msg timestamp="20201029 12:43:34.906" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.888" endtime="20201029 12:43:34.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.912" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.908" endtime="20201029 12:43:34.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.915" endtime="20201029 12:43:34.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.881" endtime="20201029 12:43:34.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.876" endtime="20201029 12:43:34.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.938" endtime="20201029 12:43:35.272"></status>
</kw>
<msg timestamp="20201029 12:43:35.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033894111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034007597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.935" endtime="20201029 12:43:35.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033894111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034007597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.282" endtime="20201029 12:43:35.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.300" endtime="20201029 12:43:35.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.927" endtime="20201029 12:43:35.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.922" endtime="20201029 12:43:35.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.316" level="INFO">${PHILIP_RES} = [{'diff': 0.00011348600000000292}, {'diff': 0.00011433400000000066}, {'diff': 0.00011350000000000249}, {'diff': 0.00011426399999999587}, {'diff': 0.00011354100000000172}, {'diff': 0.000114292000000001...</msg>
<status status="PASS" starttime="20201029 12:43:35.308" endtime="20201029 12:43:35.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.328" level="INFO">${RESULT} = {'diff': [0.00011348600000000292, 0.00011433400000000066, 0.00011350000000000249, 0.00011426399999999587, 0.00011354100000000172, 0.00011429200000000195, 0.00011350000000000249, 0.00011429200000000195...</msg>
<status status="PASS" starttime="20201029 12:43:35.319" endtime="20201029 12:43:35.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.340" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.338" endtime="20201029 12:43:35.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.346" level="INFO">VALUE: [0.00011348600000000292, 0.00011433400000000066, 0.00011350000000000249, 0.00011426399999999587, 0.00011354100000000172, 0.00011429200000000195, 0.00011350000000000249, 0.00011429200000000195, 0.00011351400000000206, 0.0001142629999999964, 0.00011352800000000163, 0.00011426400000000281, 0.00011347199999999641, 0.00011438799999999999, 0.00011352800000000163, 0.00011426300000000333, 0.0001135420000000012, 0.00011429099999999554, 0.00011349999999999555, 0.00011431900000000161, 0.00011347200000000335, 0.00011427800000000238, 0.00011351400000000206, 0.00011429200000000195, 0.00011348699999999545, 0.00011423600000000367, 0.00011344400000000421, 0.0001143049999999951, 0.00011347199999999641, 0.00011427800000000238, 0.00011351300000000258, 0.00011430600000000152, 0.00011351399999999512, 0.00011427799999999544, 0.00011348599999999598, 0.00011434800000000023, 0.00011347200000000335, 0.00011429099999999554, 0.00011345799999999684, 0.00011423600000000367, 0.00011352800000000163, 0.00011429199999999501, 0.00011356899999999392, 0.00011429100000000247, 0.0001135420000000012, 0.00011427800000000238, 0.00011349999999999555, 0.00011431899999999467, 0.00011351399999999512, 0.00011430500000000204]</msg>
<status status="PASS" starttime="20201029 12:43:35.343" endtime="20201029 12:43:35.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.331" endtime="20201029 12:43:35.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.872" endtime="20201029 12:43:35.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.843" endtime="20201029 12:43:35.352"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.358" endtime="20201029 12:43:35.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.354" endtime="20201029 12:43:35.383"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.413" endtime="20201029 12:43:35.430"></status>
</kw>
<msg timestamp="20201029 12:43:35.431" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.408" endtime="20201029 12:43:35.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.438" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.434" endtime="20201029 12:43:35.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.441" endtime="20201029 12:43:35.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.399" endtime="20201029 12:43:35.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.391" endtime="20201029 12:43:35.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.473" endtime="20201029 12:43:35.834"></status>
</kw>
<msg timestamp="20201029 12:43:35.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045396986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045530083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.468" endtime="20201029 12:43:35.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045396986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045530083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.844" endtime="20201029 12:43:35.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.862" endtime="20201029 12:43:35.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.459" endtime="20201029 12:43:35.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.452" endtime="20201029 12:43:35.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.877" level="INFO">${PHILIP_RES} = [{'diff': 0.0001330969999999987}, {'diff': 0.00013465299999999847}, {'diff': 0.0001334860000000021}, {'diff': 0.00013462499999999933}, {'diff': 0.00013348599999999516}, {'diff': 0.00013461099999999976...</msg>
<status status="PASS" starttime="20201029 12:43:35.870" endtime="20201029 12:43:35.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.888" level="INFO">${RESULT} = {'diff': [0.0001330969999999987, 0.00013465299999999847, 0.0001334860000000021, 0.00013462499999999933, 0.00013348599999999516, 0.00013461099999999976, 0.00013351300000000177, 0.00013463900000000584, ...</msg>
<status status="PASS" starttime="20201029 12:43:35.879" endtime="20201029 12:43:35.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.898" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.896" endtime="20201029 12:43:35.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.904" level="INFO">VALUE: [0.0001330969999999987, 0.00013465299999999847, 0.0001334860000000021, 0.00013462499999999933, 0.00013348599999999516, 0.00013461099999999976, 0.00013351300000000177, 0.00013463900000000584, 0.00013351400000000124, 0.00013462499999999933, 0.00013349999999999473, 0.00013457000000000052, 0.00013351400000000124, 0.00013462499999999933, 0.00013348599999999516, 0.00013461099999999976, 0.0001335410000000009, 0.00013462499999999933, 0.0001334860000000021, 0.0001345970000000002, 0.0001334860000000021, 0.00013458300000000062, 0.00013356900000000005, 0.0001345970000000002, 0.0001334860000000021, 0.0001346389999999989, 0.0001334860000000021, 0.0001346389999999989, 0.0001335280000000008, 0.000134651999999999, 0.0001334860000000021, 0.00013458300000000062, 0.00013350000000000167, 0.00013465299999999847, 0.0001334860000000021, 0.00013462499999999933, 0.00013350000000000167, 0.0001346389999999989, 0.0001334719999999956, 0.0001345970000000002, 0.00013352700000000134, 0.00013461199999999923, 0.0001334719999999956, 0.00013462499999999933, 0.00013345800000000296, 0.00013458300000000062, 0.0001335139999999943, 0.0001346809999999976, 0.00013347200000000253, 0.00013466700000000498]</msg>
<status status="PASS" starttime="20201029 12:43:35.901" endtime="20201029 12:43:35.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.890" endtime="20201029 12:43:35.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.385" endtime="20201029 12:43:35.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.353" endtime="20201029 12:43:35.908"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.914" endtime="20201029 12:43:35.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.910" endtime="20201029 12:43:35.937"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.958" endtime="20201029 12:43:35.974"></status>
</kw>
<msg timestamp="20201029 12:43:35.975" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.954" endtime="20201029 12:43:35.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.981" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.977" endtime="20201029 12:43:35.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.984" endtime="20201029 12:43:35.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.947" endtime="20201029 12:43:35.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.942" endtime="20201029 12:43:35.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.007" endtime="20201029 12:43:36.355"></status>
</kw>
<msg timestamp="20201029 12:43:36.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033752972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033906167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.004" endtime="20201029 12:43:36.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033752972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033906167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.364" endtime="20201029 12:43:36.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.382" endtime="20201029 12:43:36.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.997" endtime="20201029 12:43:36.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.992" endtime="20201029 12:43:36.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.398" level="INFO">${PHILIP_RES} = [{'diff': 0.0001531950000000018}, {'diff': 0.00015477800000000125}, {'diff': 0.0001526530000000026}, {'diff': 0.00015268100000000173}, {'diff': 0.00015256899999999823}, {'diff': 0.00015266699999999522...</msg>
<status status="PASS" starttime="20201029 12:43:36.390" endtime="20201029 12:43:36.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.407" level="INFO">${RESULT} = {'diff': [0.0001531950000000018, 0.00015477800000000125, 0.0001526530000000026, 0.00015268100000000173, 0.00015256899999999823, 0.00015266699999999522, 0.0001526530000000026, 0.00015476400000000168, 0...</msg>
<status status="PASS" starttime="20201029 12:43:36.400" endtime="20201029 12:43:36.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.418" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.415" endtime="20201029 12:43:36.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.423" level="INFO">VALUE: [0.0001531950000000018, 0.00015477800000000125, 0.0001526530000000026, 0.00015268100000000173, 0.00015256899999999823, 0.00015266699999999522, 0.0001526530000000026, 0.00015476400000000168, 0.00015269499999999436, 0.00015266700000000216, 0.00015270900000000087, 0.00015263800000000355, 0.00015265299999999565, 0.00015477700000000177, 0.00015270900000000087, 0.00015266599999999575, 0.00015263899999999608, 0.0001527080000000014, 0.00015265200000000312, 0.00015477800000000125, 0.0001526530000000026, 0.0001526660000000027, 0.00015263899999999608, 0.00015259699999999737, 0.00015268100000000173, 0.0001548060000000004, 0.00015266700000000216, 0.0001526809999999948, 0.00015272200000000097, 0.00015268000000000226, 0.00015269400000000183, 0.00015479200000000082, 0.00015266700000000216, 0.00015266700000000216, 0.00015266699999999522, 0.00015268000000000226, 0.00015268100000000173, 0.0001547779999999943, 0.00015268000000000226, 0.00015269400000000183, 0.00015272200000000097, 0.0001526950000000013, 0.00015272200000000097, 0.0001548479999999991, 0.00015270899999999393, 0.0001527080000000014, 0.0001527500000000001, 0.00015265299999999565, 0.0001526249999999965, 0.00015477800000000125]</msg>
<status status="PASS" starttime="20201029 12:43:36.420" endtime="20201029 12:43:36.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.409" endtime="20201029 12:43:36.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.938" endtime="20201029 12:43:36.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.909" endtime="20201029 12:43:36.428"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.434" endtime="20201029 12:43:36.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.430" endtime="20201029 12:43:36.458"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.478" endtime="20201029 12:43:36.498"></status>
</kw>
<msg timestamp="20201029 12:43:36.500" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.475" endtime="20201029 12:43:36.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.506" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.502" endtime="20201029 12:43:36.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.509" endtime="20201029 12:43:36.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.468" endtime="20201029 12:43:36.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.463" endtime="20201029 12:43:36.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.540" endtime="20201029 12:43:36.887"></status>
</kw>
<msg timestamp="20201029 12:43:36.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034144292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034317889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.536" endtime="20201029 12:43:36.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034144292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034317889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.896" endtime="20201029 12:43:36.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.914" endtime="20201029 12:43:36.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.528" endtime="20201029 12:43:36.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.522" endtime="20201029 12:43:36.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.929" level="INFO">${PHILIP_RES} = [{'diff': 0.00017359699999999756}, {'diff': 0.00017394400000000226}, {'diff': 0.00017570799999999664}, {'diff': 0.0001739300000000027}, {'diff': 0.00017394399999999532}, {'diff': 0.0001757500000000023...</msg>
<status status="PASS" starttime="20201029 12:43:36.922" endtime="20201029 12:43:36.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.938" level="INFO">${RESULT} = {'diff': [0.00017359699999999756, 0.00017394400000000226, 0.00017570799999999664, 0.0001739300000000027, 0.00017394399999999532, 0.0001757500000000023, 0.00017392999999999575, 0.0001739170000000026, 0...</msg>
<status status="PASS" starttime="20201029 12:43:36.931" endtime="20201029 12:43:36.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.949" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.947" endtime="20201029 12:43:36.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.954" level="INFO">VALUE: [0.00017359699999999756, 0.00017394400000000226, 0.00017570799999999664, 0.0001739300000000027, 0.00017394399999999532, 0.0001757500000000023, 0.00017392999999999575, 0.0001739170000000026, 0.00017573599999999578, 0.00017390300000000303, 0.00017394399999999532, 0.0001757500000000023, 0.00017392999999999575, 0.0001739170000000026, 0.00017572199999999621, 0.00017390300000000303, 0.00017397199999999446, 0.00017569499999999655, 0.00017394500000000174, 0.00017391699999999566, 0.00017570800000000358, 0.00017388899999999652, 0.0001739170000000026, 0.0001757500000000023, 0.00017393100000000217, 0.00017386099999999738, 0.00017570800000000358, 0.00017388900000000346, 0.00017391699999999566, 0.00017573600000000272, 0.0001739029999999961, 0.00017391600000000312, 0.00017574999999999535, 0.00017391600000000312, 0.0001739029999999961, 0.00017572200000000315, 0.00017391600000000312, 0.00017394400000000226, 0.0001757500000000023, 0.00017394400000000226, 0.00017402799999999968, 0.0001757500000000023, 0.0001739579999999949, 0.00017390200000000355, 0.00017576399999999492, 0.0001739300000000027, 0.00017392999999999575, 0.00017576400000000186, 0.0001739300000000027, 0.00017392999999999575]</msg>
<status status="PASS" starttime="20201029 12:43:36.951" endtime="20201029 12:43:36.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.940" endtime="20201029 12:43:36.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.459" endtime="20201029 12:43:36.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.429" endtime="20201029 12:43:36.958"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.964" endtime="20201029 12:43:36.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.960" endtime="20201029 12:43:36.987"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.010" endtime="20201029 12:43:37.028"></status>
</kw>
<msg timestamp="20201029 12:43:37.029" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.006" endtime="20201029 12:43:37.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.036" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.031" endtime="20201029 12:43:37.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.038" endtime="20201029 12:43:37.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.999" endtime="20201029 12:43:37.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.994" endtime="20201029 12:43:37.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.061" endtime="20201029 12:43:37.394"></status>
</kw>
<msg timestamp="20201029 12:43:37.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035730778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035926306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.058" endtime="20201029 12:43:37.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035730778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035926306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.403" endtime="20201029 12:43:37.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.422" endtime="20201029 12:43:37.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.051" endtime="20201029 12:43:37.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.046" endtime="20201029 12:43:37.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:37.437" level="INFO">${PHILIP_RES} = [{'diff': 0.00019552800000000037}, {'diff': 0.00019586099999999856}, {'diff': 0.00019502799999999987}, {'diff': 0.000195055999999999}, {'diff': 0.00019498600000000116}, {'diff': 0.00019704200000000144...</msg>
<status status="PASS" starttime="20201029 12:43:37.430" endtime="20201029 12:43:37.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.447" level="INFO">${RESULT} = {'diff': [0.00019552800000000037, 0.00019586099999999856, 0.00019502799999999987, 0.000195055999999999, 0.00019498600000000116, 0.00019704200000000144, 0.000198056000000002, 0.00019802699999999646, 0....</msg>
<status status="PASS" starttime="20201029 12:43:37.439" endtime="20201029 12:43:37.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.457" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.455" endtime="20201029 12:43:37.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.465" level="INFO">VALUE: [0.00019552800000000037, 0.00019586099999999856, 0.00019502799999999987, 0.000195055999999999, 0.00019498600000000116, 0.00019704200000000144, 0.000198056000000002, 0.00019802699999999646, 0.0001980140000000033, 0.00019801399999999636, 0.00019802799999999593, 0.00019804100000000296, 0.00019800000000000373, 0.00019802799999999593, 0.00019804100000000296, 0.00019802800000000287, 0.00019801399999999636, 0.00019800000000000373, 0.0001980140000000033, 0.00019795899999999755, 0.00019801399999999636, 0.00019801399999999636, 0.00019802800000000287, 0.0001979439999999985, 0.0001979720000000046, 0.0001979999999999968, 0.00019798600000000416, 0.00019797299999999712, 0.00019804200000000244, 0.00019801399999999636, 0.000198056000000002, 0.0001980140000000033, 0.00019804099999999603, 0.0001980140000000033, 0.0001979999999999968, 0.0001979999999999968, 0.00019800000000000373, 0.00019802799999999593, 0.00019795899999999755, 0.0001980140000000033, 0.00019802699999999646, 0.0001980140000000033, 0.00019797299999999712, 0.00019802799999999593, 0.00019804200000000244, 0.0001980140000000033, 0.0001980419999999955, 0.00019800000000000373, 0.0001979999999999968, 0.00019802799999999593]</msg>
<status status="PASS" starttime="20201029 12:43:37.460" endtime="20201029 12:43:37.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.448" endtime="20201029 12:43:37.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.989" endtime="20201029 12:43:37.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.959" endtime="20201029 12:43:37.469"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.475" endtime="20201029 12:43:37.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.471" endtime="20201029 12:43:37.498"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.519" endtime="20201029 12:43:37.540"></status>
</kw>
<msg timestamp="20201029 12:43:37.541" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.516" endtime="20201029 12:43:37.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.547" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.543" endtime="20201029 12:43:37.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.550" endtime="20201029 12:43:37.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.509" endtime="20201029 12:43:37.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.503" endtime="20201029 12:43:37.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.573" endtime="20201029 12:43:37.918"></status>
</kw>
<msg timestamp="20201029 12:43:37.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033983639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034203931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.570" endtime="20201029 12:43:37.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033983639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034203931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.927" endtime="20201029 12:43:37.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.945" endtime="20201029 12:43:37.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.562" endtime="20201029 12:43:37.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.558" endtime="20201029 12:43:37.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:37.961" level="INFO">${PHILIP_RES} = [{'diff': 0.00022029199999999693}, {'diff': 0.00022023599999999866}, {'diff': 0.00022016700000000028}, {'diff': 0.00022012500000000157}, {'diff': 0.00022016700000000028}, {'diff': 0.000220193999999999...</msg>
<status status="PASS" starttime="20201029 12:43:37.954" endtime="20201029 12:43:37.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.971" level="INFO">${RESULT} = {'diff': [0.00022029199999999693, 0.00022023599999999866, 0.00022016700000000028, 0.00022012500000000157, 0.00022016700000000028, 0.00022019399999999995, 0.00022023599999999866, 0.00022012500000000157...</msg>
<status status="PASS" starttime="20201029 12:43:37.963" endtime="20201029 12:43:37.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.982" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.979" endtime="20201029 12:43:37.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.987" level="INFO">VALUE: [0.00022029199999999693, 0.00022023599999999866, 0.00022016700000000028, 0.00022012500000000157, 0.00022016700000000028, 0.00022019399999999995, 0.00022023599999999866, 0.00022012500000000157, 0.00022012500000000157, 0.00022016700000000028, 0.00022018099999999985, 0.00022016700000000028, 0.00022015200000000124, 0.00022012499999999463, 0.00022013900000000114, 0.00022009700000000243, 0.00022012500000000157, 0.00022018099999999985, 0.00022020900000000593, 0.000220111000000002, 0.00022022199999999909, 0.0002201530000000007, 0.00022013900000000114, 0.0002201389999999942, 0.0002200969999999955, 0.00022016700000000028, 0.00022016700000000028, 0.000220111000000002, 0.0002201660000000008, 0.00022013900000000114, 0.00022018099999999985, 0.00022013900000000114, 0.00022012500000000157, 0.00022016700000000028, 0.00022018000000000038, 0.0002201660000000008, 0.00022013900000000114, 0.00022013900000000114, 0.00022013800000000167, 0.00022012500000000157, 0.00022015200000000124, 0.00022012499999999463, 0.00022012500000000157, 0.00022016700000000028, 0.00022018000000000038, 0.00022013900000000114, 0.00022013799999999473, 0.00022008300000000286, 0.0002201660000000008, 0.000220111000000002]</msg>
<status status="PASS" starttime="20201029 12:43:37.984" endtime="20201029 12:43:37.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.973" endtime="20201029 12:43:37.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.500" endtime="20201029 12:43:37.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.470" endtime="20201029 12:43:37.991"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.997" endtime="20201029 12:43:38.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.993" endtime="20201029 12:43:38.020"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.041" endtime="20201029 12:43:38.067"></status>
</kw>
<msg timestamp="20201029 12:43:38.068" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.038" endtime="20201029 12:43:38.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.074" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.070" endtime="20201029 12:43:38.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.077" endtime="20201029 12:43:38.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.031" endtime="20201029 12:43:38.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.025" endtime="20201029 12:43:38.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.100" endtime="20201029 12:43:38.449"></status>
</kw>
<msg timestamp="20201029 12:43:38.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038683375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038927583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.096" endtime="20201029 12:43:38.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038683375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038927583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.458" endtime="20201029 12:43:38.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.477" endtime="20201029 12:43:38.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.089" endtime="20201029 12:43:38.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.085" endtime="20201029 12:43:38.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.494" level="INFO">${PHILIP_RES} = [{'diff': 0.0002442080000000027}, {'diff': 0.00024241700000000171}, {'diff': 0.00024223599999999984}, {'diff': 0.00024441600000000424}, {'diff': 0.00024243100000000128}, {'diff': 0.0002422499999999994...</msg>
<status status="PASS" starttime="20201029 12:43:38.486" endtime="20201029 12:43:38.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.505" level="INFO">${RESULT} = {'diff': [0.0002442080000000027, 0.00024241700000000171, 0.00024223599999999984, 0.00024441600000000424, 0.00024243100000000128, 0.0002422499999999994, 0.0002443330000000063, 0.00024240200000000267, 0...</msg>
<status status="PASS" starttime="20201029 12:43:38.496" endtime="20201029 12:43:38.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.516" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.514" endtime="20201029 12:43:38.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.521" level="INFO">VALUE: [0.0002442080000000027, 0.00024241700000000171, 0.00024223599999999984, 0.00024441600000000424, 0.00024243100000000128, 0.0002422499999999994, 0.0002443330000000063, 0.00024240200000000267, 0.00024225000000000635, 0.0002443469999999989, 0.00024238900000000257, 0.0002422499999999994, 0.00024436199999999797, 0.00024238899999999564, 0.00024218100000000103, 0.000244375000000005, 0.00024238900000000257, 0.00024222200000000027, 0.00024436100000000543, 0.00024241700000000171, 0.00024223599999999984, 0.0002443890000000046, 0.00024251399999999923, 0.0002422499999999994, 0.0002444170000000037, 0.00024238900000000257, 0.0002422080000000007, 0.000244375000000005, 0.00024243100000000128, 0.00024223600000000678, 0.00024440300000000414, 0.00024240300000000214, 0.0002422080000000007, 0.00024438799999999816, 0.00024244400000000138, 0.0002422780000000055, 0.00024437499999999807, 0.00024244400000000138, 0.00024220900000000017, 0.000244473000000002, 0.00024243100000000128, 0.00024226399999999898, 0.0002444449999999959, 0.00024243100000000128, 0.0002423330000000043, 0.000244473000000002, 0.00024251400000000617, 0.00024226399999999898, 0.000244457999999996, 0.00024240200000000267]</msg>
<status status="PASS" starttime="20201029 12:43:38.518" endtime="20201029 12:43:38.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.507" endtime="20201029 12:43:38.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.022" endtime="20201029 12:43:38.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.992" endtime="20201029 12:43:38.526"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.532" endtime="20201029 12:43:38.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.528" endtime="20201029 12:43:38.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.578" endtime="20201029 12:43:38.601"></status>
</kw>
<msg timestamp="20201029 12:43:38.602" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.574" endtime="20201029 12:43:38.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.608" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.604" endtime="20201029 12:43:38.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.611" endtime="20201029 12:43:38.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.567" endtime="20201029 12:43:38.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.561" endtime="20201029 12:43:38.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.634" endtime="20201029 12:43:38.988"></status>
</kw>
<msg timestamp="20201029 12:43:38.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035461264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035727764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.631" endtime="20201029 12:43:38.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035461264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035727764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.997" endtime="20201029 12:43:39.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.016" endtime="20201029 12:43:39.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.624" endtime="20201029 12:43:39.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.619" endtime="20201029 12:43:39.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:39.032" level="INFO">${PHILIP_RES} = [{'diff': 0.00026650000000000285}, {'diff': 0.0002665140000000024}, {'diff': 0.0002665140000000024}, {'diff': 0.00026666700000000515}, {'diff': 0.00026847299999999824}, {'diff': 0.00026648599999999634...</msg>
<status status="PASS" starttime="20201029 12:43:39.024" endtime="20201029 12:43:39.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.041" level="INFO">${RESULT} = {'diff': [0.00026650000000000285, 0.0002665140000000024, 0.0002665140000000024, 0.00026666700000000515, 0.00026847299999999824, 0.00026648599999999634, 0.00026654200000000156, 0.00026650000000000285, ...</msg>
<status status="PASS" starttime="20201029 12:43:39.034" endtime="20201029 12:43:39.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.052" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:39.049" endtime="20201029 12:43:39.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.057" level="INFO">VALUE: [0.00026650000000000285, 0.0002665140000000024, 0.0002665140000000024, 0.00026666700000000515, 0.00026847299999999824, 0.00026648599999999634, 0.00026654200000000156, 0.00026650000000000285, 0.00026654200000000156, 0.0002667229999999965, 0.0002685139999999975, 0.00026650000000000285, 0.00026647299999999624, 0.00026643099999999753, 0.0002664720000000037, 0.00026665299999999864, 0.00026840299999999345, 0.0002665140000000024, 0.00026648599999999634, 0.00026645800000000414, 0.00026647299999999624, 0.00026663899999999907, 0.00026847299999999824, 0.0002663889999999988, 0.0002665140000000024, 0.00026648599999999634, 0.00026647199999999677, 0.00026661099999999993, 0.00026837500000000125, 0.00026643099999999753, 0.00026644399999999763, 0.0002664860000000033, 0.00026647299999999624, 0.00026663899999999907, 0.00026848599999999834, 0.0002664999999999959, 0.00026648700000000275, 0.0002664860000000033, 0.0002664999999999959, 0.00026665299999999864, 0.00026844399999999963, 0.0002664579999999972, 0.00026645800000000414, 0.0002664999999999959, 0.00026647199999999677, 0.0002666669999999982, 0.0002683890000000008, 0.00026648599999999634, 0.00026654200000000156, 0.0002663889999999988]</msg>
<status status="PASS" starttime="20201029 12:43:39.054" endtime="20201029 12:43:39.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.043" endtime="20201029 12:43:39.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.557" endtime="20201029 12:43:39.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.526" endtime="20201029 12:43:39.061"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.067" endtime="20201029 12:43:39.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.063" endtime="20201029 12:43:39.091"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.117" endtime="20201029 12:43:39.141"></status>
</kw>
<msg timestamp="20201029 12:43:39.142" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.113" endtime="20201029 12:43:39.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.149" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.145" endtime="20201029 12:43:39.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.151" endtime="20201029 12:43:39.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.102" endtime="20201029 12:43:39.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.096" endtime="20201029 12:43:39.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.176" endtime="20201029 12:43:39.515"></status>
</kw>
<msg timestamp="20201029 12:43:39.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039779111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040073431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.173" endtime="20201029 12:43:39.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039779111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040073431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.525" endtime="20201029 12:43:39.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.545" endtime="20201029 12:43:39.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.165" endtime="20201029 12:43:39.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.161" endtime="20201029 12:43:39.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:39.561" level="INFO">${PHILIP_RES} = [{'diff': 0.0002943200000000007}, {'diff': 0.00029275000000000134}, {'diff': 0.00029454100000000233}, {'diff': 0.00029279200000000005}, {'diff': 0.0002944859999999966}, {'diff': 0.0002927780000000005}...</msg>
<status status="PASS" starttime="20201029 12:43:39.553" endtime="20201029 12:43:39.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.570" level="INFO">${RESULT} = {'diff': [0.0002943200000000007, 0.00029275000000000134, 0.00029454100000000233, 0.00029279200000000005, 0.0002944859999999966, 0.0002927780000000005, 0.0002945840000000005, 0.00029273700000000125, 0....</msg>
<status status="PASS" starttime="20201029 12:43:39.563" endtime="20201029 12:43:39.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.580" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:39.578" endtime="20201029 12:43:39.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.586" level="INFO">VALUE: [0.0002943200000000007, 0.00029275000000000134, 0.00029454100000000233, 0.00029279200000000005, 0.0002944859999999966, 0.0002927780000000005, 0.0002945840000000005, 0.00029273700000000125, 0.0002945840000000005, 0.00029269400000000306, 0.0002945139999999957, 0.0002927220000000022, 0.00029452800000000223, 0.0002927090000000021, 0.0002945829999999941, 0.00029275000000000134, 0.0002944860000000035, 0.00029280500000000015, 0.00029454199999999486, 0.00029273599999999483, 0.00029456900000000147, 0.0002927780000000005, 0.0002945840000000005, 0.0002927640000000009, 0.00029452800000000223, 0.00029273599999999483, 0.0002945550000000019, 0.00029273600000000177, 0.000294665999999999, 0.00029275000000000134, 0.0002945970000000006, 0.0002927910000000006, 0.00029456900000000147, 0.00029279200000000005, 0.0002944860000000035, 0.0002927780000000005, 0.0002945840000000005, 0.0002927640000000009, 0.00029456900000000147, 0.000292777000000001, 0.000294569999999994, 0.0002927919999999931, 0.00029459699999999367, 0.0002927780000000005, 0.00029456899999999453, 0.00029276300000000144, 0.00029456900000000147, 0.0002927640000000009, 0.00029456900000000147, 0.0002927780000000005]</msg>
<status status="PASS" starttime="20201029 12:43:39.583" endtime="20201029 12:43:39.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.572" endtime="20201029 12:43:39.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.092" endtime="20201029 12:43:39.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.062" endtime="20201029 12:43:39.590"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.596" endtime="20201029 12:43:39.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.592" endtime="20201029 12:43:39.619"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.642" endtime="20201029 12:43:39.668"></status>
</kw>
<msg timestamp="20201029 12:43:39.670" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.639" endtime="20201029 12:43:39.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.676" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.672" endtime="20201029 12:43:39.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.678" endtime="20201029 12:43:39.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.632" endtime="20201029 12:43:39.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.627" endtime="20201029 12:43:39.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.702" endtime="20201029 12:43:40.053"></status>
</kw>
<msg timestamp="20201029 12:43:40.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036707889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0370265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:39.698" endtime="20201029 12:43:40.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036707889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0370265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:40.062" endtime="20201029 12:43:40.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.080" endtime="20201029 12:43:40.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.691" endtime="20201029 12:43:40.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.686" endtime="20201029 12:43:40.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:40.096" level="INFO">${PHILIP_RES} = [{'diff': 0.0003186109999999964}, {'diff': 0.00032092999999999705}, {'diff': 0.00031876399999999916}, {'diff': 0.0003209159999999975}, {'diff': 0.0003188469999999971}, {'diff': 0.00032092999999999705}...</msg>
<status status="PASS" starttime="20201029 12:43:40.089" endtime="20201029 12:43:40.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.105" level="INFO">${RESULT} = {'diff': [0.0003186109999999964, 0.00032092999999999705, 0.00031876399999999916, 0.0003209159999999975, 0.0003188469999999971, 0.00032092999999999705, 0.00031879200000000524, 0.0003209309999999965, 0....</msg>
<status status="PASS" starttime="20201029 12:43:40.098" endtime="20201029 12:43:40.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.116" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:40.114" endtime="20201029 12:43:40.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.123" level="INFO">VALUE: [0.0003186109999999964, 0.00032092999999999705, 0.00031876399999999916, 0.0003209159999999975, 0.0003188469999999971, 0.00032092999999999705, 0.00031879200000000524, 0.0003209309999999965, 0.00031880599999999787, 0.00032094500000000303, 0.0003188609999999967, 0.00032097199999999576, 0.0003187919999999983, 0.000320930000000004, 0.00031883299999999754, 0.00032097199999999576, 0.0003188330000000045, 0.00032095800000000313, 0.0003188610000000036, 0.00032091699999999695, 0.0003188479999999966, 0.00032093100000000346, 0.0003188330000000045, 0.0003209019999999979, 0.00031877799999999873, 0.00032098600000000227, 0.00031877800000000567, 0.0003209309999999965, 0.0003188060000000048, 0.0003209170000000039, 0.00031880599999999787, 0.0003209170000000039, 0.0003187909999999988, 0.00032083299999999954, 0.00031876399999999916, 0.00032098599999999533, 0.0003188620000000031, 0.0003208609999999987, 0.00031879200000000524, 0.00032097199999999576, 0.00031876399999999916, 0.0003208609999999987, 0.00031870799999999394, 0.00032095899999999566, 0.000318736, 0.0003209029999999974, 0.0003187629999999997, 0.0003209029999999974, 0.000318736, 0.0003208469999999991]</msg>
<status status="PASS" starttime="20201029 12:43:40.118" endtime="20201029 12:43:40.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.107" endtime="20201029 12:43:40.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.621" endtime="20201029 12:43:40.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.591" endtime="20201029 12:43:40.127"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.135" endtime="20201029 12:43:40.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.129" endtime="20201029 12:43:40.158"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.179" endtime="20201029 12:43:40.207"></status>
</kw>
<msg timestamp="20201029 12:43:40.208" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.176" endtime="20201029 12:43:40.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.217" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.212" endtime="20201029 12:43:40.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.220" endtime="20201029 12:43:40.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.169" endtime="20201029 12:43:40.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.164" endtime="20201029 12:43:40.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.251" endtime="20201029 12:43:40.605"></status>
</kw>
<msg timestamp="20201029 12:43:40.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034523736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034872139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.247" endtime="20201029 12:43:40.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034523736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034872139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.615" endtime="20201029 12:43:40.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.633" endtime="20201029 12:43:40.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.238" endtime="20201029 12:43:40.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.232" endtime="20201029 12:43:40.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:40.649" level="INFO">${PHILIP_RES} = [{'diff': 0.00034840300000000407}, {'diff': 0.0003459729999999994}, {'diff': 0.0003459729999999994}, {'diff': 0.0003459580000000004}, {'diff': 0.00034597199999999995}, {'diff': 0.00034593000000000124}...</msg>
<status status="PASS" starttime="20201029 12:43:40.641" endtime="20201029 12:43:40.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.660" level="INFO">${RESULT} = {'diff': [0.00034840300000000407, 0.0003459729999999994, 0.0003459729999999994, 0.0003459580000000004, 0.00034597199999999995, 0.00034593000000000124, 0.00034911099999999917, 0.00034597199999999995, 0...</msg>
<status status="PASS" starttime="20201029 12:43:40.651" endtime="20201029 12:43:40.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.670" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:40.668" endtime="20201029 12:43:40.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.675" level="INFO">VALUE: [0.00034840300000000407, 0.0003459729999999994, 0.0003459729999999994, 0.0003459580000000004, 0.00034597199999999995, 0.00034593000000000124, 0.00034911099999999917, 0.00034597199999999995, 0.0003460279999999982, 0.00034590299999999463, 0.000345889000000002, 0.00034597199999999995, 0.00034918100000000396, 0.0003460419999999978, 0.0003459859999999995, 0.00034602800000000516, 0.0003459859999999995, 0.0003459310000000007, 0.00034911099999999917, 0.0003459310000000007, 0.00034595899999999985, 0.0003459859999999995, 0.00034597199999999995, 0.0003459999999999991, 0.0003490969999999996, 0.00034604100000000526, 0.00034606999999999694, 0.0003459859999999995, 0.0003459999999999991, 0.00034597199999999995, 0.00034916699999999745, 0.00034591599999999473, 0.00034591600000000167, 0.0003459440000000008, 0.00034597199999999995, 0.00034590300000000157, 0.00034908300000000003, 0.00034595899999999985, 0.00034591700000000114, 0.00034595899999999985, 0.00034595899999999985, 0.00034597199999999995, 0.00034911099999999917, 0.00034590300000000157, 0.00034593000000000124, 0.00034597199999999995, 0.0003459450000000003, 0.00034601399999999866, 0.00034912499999999874, 0.0003459859999999995]</msg>
<status status="PASS" starttime="20201029 12:43:40.673" endtime="20201029 12:43:40.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.661" endtime="20201029 12:43:40.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.160" endtime="20201029 12:43:40.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.128" endtime="20201029 12:43:40.680"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.686" endtime="20201029 12:43:40.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.683" endtime="20201029 12:43:40.710"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.732" endtime="20201029 12:43:40.761"></status>
</kw>
<msg timestamp="20201029 12:43:40.762" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.727" endtime="20201029 12:43:40.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.768" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.764" endtime="20201029 12:43:40.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.770" endtime="20201029 12:43:40.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.720" endtime="20201029 12:43:40.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.715" endtime="20201029 12:43:40.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.794" endtime="20201029 12:43:41.145"></status>
</kw>
<msg timestamp="20201029 12:43:41.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035688056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036061319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.790" endtime="20201029 12:43:41.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035688056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036061319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.155" endtime="20201029 12:43:41.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.173" endtime="20201029 12:43:41.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.783" endtime="20201029 12:43:41.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.778" endtime="20201029 12:43:41.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:41.189" level="INFO">${PHILIP_RES} = [{'diff': 0.0003732629999999987}, {'diff': 0.00037601399999999396}, {'diff': 0.00037316700000000064}, {'diff': 0.0003732079999999999}, {'diff': 0.0003759170000000034}, {'diff': 0.00037313899999999456}...</msg>
<status status="PASS" starttime="20201029 12:43:41.181" endtime="20201029 12:43:41.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.200" level="INFO">${RESULT} = {'diff': [0.0003732629999999987, 0.00037601399999999396, 0.00037316700000000064, 0.0003732079999999999, 0.0003759170000000034, 0.00037313899999999456, 0.0003730830000000032, 0.0003759579999999957, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:41.191" endtime="20201029 12:43:41.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.210" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:41.208" endtime="20201029 12:43:41.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.216" level="INFO">VALUE: [0.0003732629999999987, 0.00037601399999999396, 0.00037316700000000064, 0.0003732079999999999, 0.0003759170000000034, 0.00037313899999999456, 0.0003730830000000032, 0.0003759579999999957, 0.00037312500000000193, 0.00037302799999999747, 0.0003759439999999961, 0.0003731390000000015, 0.00037315199999999465, 0.0003759580000000026, 0.0003730970000000028, 0.00037312500000000193, 0.0003759030000000038, 0.00037309699999999585, 0.00037312500000000193, 0.00037593100000000296, 0.00037309699999999585, 0.00037316700000000064, 0.00037587499999999774, 0.00037315300000000107, 0.0003730970000000028, 0.000375930999999996, 0.0003730970000000028, 0.0003730970000000028, 0.000375930999999996, 0.00037316700000000064, 0.00037313899999999456, 0.00037593100000000296, 0.0003731109999999954, 0.00037311100000000236, 0.0003759439999999961, 0.0003731390000000015, 0.0003731949999999998, 0.0003759590000000021, 0.00037309699999999585, 0.0003731390000000015, 0.0003759439999999961, 0.000373138000000002, 0.0003731109999999954, 0.0003759300000000035, 0.0003730840000000027, 0.0003730979999999953, 0.00037594500000000253, 0.0003731390000000015, 0.00037305600000000355, 0.0003759580000000026]</msg>
<status status="PASS" starttime="20201029 12:43:41.213" endtime="20201029 12:43:41.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.201" endtime="20201029 12:43:41.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.711" endtime="20201029 12:43:41.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.681" endtime="20201029 12:43:41.221"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.226" endtime="20201029 12:43:41.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.223" endtime="20201029 12:43:41.250"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.271" endtime="20201029 12:43:41.301"></status>
</kw>
<msg timestamp="20201029 12:43:41.302" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.267" endtime="20201029 12:43:41.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.308" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.305" endtime="20201029 12:43:41.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.311" endtime="20201029 12:43:41.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.260" endtime="20201029 12:43:41.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.255" endtime="20201029 12:43:41.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.335" endtime="20201029 12:43:41.687"></status>
</kw>
<msg timestamp="20201029 12:43:41.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034493931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034895625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.332" endtime="20201029 12:43:41.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034493931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034895625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.697" endtime="20201029 12:43:41.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.715" endtime="20201029 12:43:41.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.324" endtime="20201029 12:43:41.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.319" endtime="20201029 12:43:41.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:41.732" level="INFO">${PHILIP_RES} = [{'diff': 0.00040169400000000105}, {'diff': 0.0004022220000000007}, {'diff': 0.00040525000000000283}, {'diff': 0.00040527800000000197}, {'diff': 0.00040525000000000283}, {'diff': 0.0004052229999999962...</msg>
<status status="PASS" starttime="20201029 12:43:41.723" endtime="20201029 12:43:41.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.741" level="INFO">${RESULT} = {'diff': [0.00040169400000000105, 0.0004022220000000007, 0.00040525000000000283, 0.00040527800000000197, 0.00040525000000000283, 0.0004052229999999962, 0.00040520899999999666, 0.00040516699999999795, ...</msg>
<status status="PASS" starttime="20201029 12:43:41.734" endtime="20201029 12:43:41.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.752" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:41.749" endtime="20201029 12:43:41.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.757" level="INFO">VALUE: [0.00040169400000000105, 0.0004022220000000007, 0.00040525000000000283, 0.00040527800000000197, 0.00040525000000000283, 0.0004052229999999962, 0.00040520899999999666, 0.00040516699999999795, 0.0004052499999999959, 0.0004052220000000037, 0.00040516599999999847, 0.0004052079999999972, 0.00040525000000000283, 0.0004051949999999971, 0.00040525000000000283, 0.00040525000000000283, 0.00040522199999999675, 0.00040529200000000154, 0.0004052919999999946, 0.0004053330000000008, 0.00040523600000000326, 0.0004053060000000011, 0.00040527800000000197, 0.0004052359999999963, 0.0004052770000000025, 0.00040525000000000283, 0.00040531999999999374, 0.0004053330000000008, 0.0004052079999999972, 0.0004053190000000012, 0.0004052919999999946, 0.0004053060000000011, 0.0004053200000000007, 0.00040529100000000207, 0.0004053190000000012, 0.00040527799999999503, 0.00040523600000000326, 0.00040527799999999503, 0.00040525000000000283, 0.0004052640000000024, 0.0004052079999999972, 0.0004051809999999975, 0.00040523600000000326, 0.0004051939999999976, 0.0004052080000000041, 0.00040522199999999675, 0.00040527800000000197, 0.00040533400000000025, 0.00040527800000000197, 0.0004052359999999963]</msg>
<status status="PASS" starttime="20201029 12:43:41.754" endtime="20201029 12:43:41.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.743" endtime="20201029 12:43:41.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.251" endtime="20201029 12:43:41.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.221" endtime="20201029 12:43:41.762"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.768" endtime="20201029 12:43:41.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.764" endtime="20201029 12:43:41.791"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.812" endtime="20201029 12:43:41.843"></status>
</kw>
<msg timestamp="20201029 12:43:41.844" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.809" endtime="20201029 12:43:41.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.851" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.847" endtime="20201029 12:43:41.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.853" endtime="20201029 12:43:41.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.802" endtime="20201029 12:43:41.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.796" endtime="20201029 12:43:41.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.878" endtime="20201029 12:43:42.227"></status>
</kw>
<msg timestamp="20201029 12:43:42.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034305611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034737306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.875" endtime="20201029 12:43:42.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034305611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034737306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.236" endtime="20201029 12:43:42.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.254" endtime="20201029 12:43:42.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.867" endtime="20201029 12:43:42.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.863" endtime="20201029 12:43:42.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:42.270" level="INFO">${PHILIP_RES} = [{'diff': 0.00043169500000000277}, {'diff': 0.00043120800000000237}, {'diff': 0.0004314439999999961}, {'diff': 0.0004344449999999986}, {'diff': 0.0004344579999999987}, {'diff': 0.00043445899999999815}...</msg>
<status status="PASS" starttime="20201029 12:43:42.263" endtime="20201029 12:43:42.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.279" level="INFO">${RESULT} = {'diff': [0.00043169500000000277, 0.00043120800000000237, 0.0004314439999999961, 0.0004344449999999986, 0.0004344579999999987, 0.00043445899999999815, 0.0004344859999999978, 0.00043441599999999997, 0....</msg>
<status status="PASS" starttime="20201029 12:43:42.272" endtime="20201029 12:43:42.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.289" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:42.287" endtime="20201029 12:43:42.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.295" level="INFO">VALUE: [0.00043169500000000277, 0.00043120800000000237, 0.0004314439999999961, 0.0004344449999999986, 0.0004344579999999987, 0.00043445899999999815, 0.0004344859999999978, 0.00043441599999999997, 0.0004344020000000004, 0.00043448600000000476, 0.0004344859999999978, 0.00043441599999999997, 0.00043447199999999825, 0.00043445899999999815, 0.000434430999999999, 0.00043447199999999825, 0.00043442999999999954, 0.00043447199999999825, 0.00043433399999999456, 0.0004343749999999938, 0.00043441599999999997, 0.00043447199999999825, 0.00043437500000000073, 0.000434430999999999, 0.00043442999999999954, 0.00043438800000000083, 0.0004344579999999987, 0.0004343470000000016, 0.0004343890000000003, 0.0004343470000000016, 0.00043440299999999987, 0.000434430999999999, 0.0004343890000000003, 0.0004344020000000004, 0.00043442999999999954, 0.00043437500000000073, 0.00043436100000000116, 0.00043434699999999465, 0.0004343329999999951, 0.0004343749999999938, 0.0004343609999999942, 0.00043442999999999954, 0.0004343890000000003, 0.00043437500000000073, 0.000434319999999995, 0.000434430999999999, 0.000434430999999999, 0.0004344590000000051, 0.0004343189999999955, 0.0004344439999999991]</msg>
<status status="PASS" starttime="20201029 12:43:42.292" endtime="20201029 12:43:42.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.281" endtime="20201029 12:43:42.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.792" endtime="20201029 12:43:42.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.763" endtime="20201029 12:43:42.300"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.305" endtime="20201029 12:43:42.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.302" endtime="20201029 12:43:42.329"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.351" endtime="20201029 12:43:42.384"></status>
</kw>
<msg timestamp="20201029 12:43:42.385" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.348" endtime="20201029 12:43:42.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.392" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.387" endtime="20201029 12:43:42.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.394" endtime="20201029 12:43:42.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.341" endtime="20201029 12:43:42.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.335" endtime="20201029 12:43:42.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.417" endtime="20201029 12:43:42.772"></status>
</kw>
<msg timestamp="20201029 12:43:42.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035593972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036056514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.413" endtime="20201029 12:43:42.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035593972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036056514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.782" endtime="20201029 12:43:42.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.799" endtime="20201029 12:43:42.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.406" endtime="20201029 12:43:42.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.402" endtime="20201029 12:43:42.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:42.815" level="INFO">${PHILIP_RES} = [{'diff': 0.00046254199999999634}, {'diff': 0.00046237499999999404}, {'diff': 0.0004655279999999998}, {'diff': 0.0004624579999999989}, {'diff': 0.0004624160000000002}, {'diff': 0.00046548600000000107}...</msg>
<status status="PASS" starttime="20201029 12:43:42.808" endtime="20201029 12:43:42.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.824" level="INFO">${RESULT} = {'diff': [0.00046254199999999634, 0.00046237499999999404, 0.0004655279999999998, 0.0004624579999999989, 0.0004624160000000002, 0.00046548600000000107, 0.00046254099999999687, 0.00046236099999999447, 0...</msg>
<status status="PASS" starttime="20201029 12:43:42.817" endtime="20201029 12:43:42.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.835" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:42.832" endtime="20201029 12:43:42.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.841" level="INFO">VALUE: [0.00046254199999999634, 0.00046237499999999404, 0.0004655279999999998, 0.0004624579999999989, 0.0004624160000000002, 0.00046548600000000107, 0.00046254099999999687, 0.00046236099999999447, 0.00046555499999999944, 0.0004625420000000033, 0.0004624579999999989, 0.00046550000000000064, 0.0004625970000000021, 0.00046234700000000184, 0.00046550000000000064, 0.00046249999999999764, 0.00046238900000000055, 0.0004655270000000003, 0.0004626249999999943, 0.0004624579999999989, 0.00046556900000000595, 0.00046256900000000295, 0.0004624160000000002, 0.00046555499999999944, 0.00046256900000000295, 0.00046247200000000543, 0.0004656119999999972, 0.0004625970000000021, 0.0004623610000000014, 0.0004655829999999986, 0.0004625559999999959, 0.000462375000000001, 0.0004655270000000003, 0.0004625970000000021, 0.0004623469999999949, 0.00046554199999999935, 0.0004625550000000034, 0.00046247200000000543, 0.0004655559999999989, 0.0004625559999999959, 0.00046238900000000055, 0.0004654170000000027, 0.00046262500000000123, 0.0004624589999999984, 0.00046558399999999805, 0.0004625559999999959, 0.0004624579999999989, 0.0004655140000000002, 0.0004624589999999984, 0.00046233300000000227]</msg>
<status status="PASS" starttime="20201029 12:43:42.837" endtime="20201029 12:43:42.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.826" endtime="20201029 12:43:42.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.330" endtime="20201029 12:43:42.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.300" endtime="20201029 12:43:42.846"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.852" endtime="20201029 12:43:42.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.848" endtime="20201029 12:43:42.876"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.896" endtime="20201029 12:43:42.931"></status>
</kw>
<msg timestamp="20201029 12:43:42.932" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.893" endtime="20201029 12:43:42.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.938" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.934" endtime="20201029 12:43:42.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.940" endtime="20201029 12:43:42.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.886" endtime="20201029 12:43:42.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.881" endtime="20201029 12:43:42.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.963" endtime="20201029 12:43:43.312"></status>
</kw>
<msg timestamp="20201029 12:43:43.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033908264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034402069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.960" endtime="20201029 12:43:43.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033908264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034402069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.321" endtime="20201029 12:43:43.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.339" endtime="20201029 12:43:43.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.953" endtime="20201029 12:43:43.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.948" endtime="20201029 12:43:43.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:43.355" level="INFO">${PHILIP_RES} = [{'diff': 0.0004938049999999999}, {'diff': 0.000497610999999995}, {'diff': 0.0004936810000000028}, {'diff': 0.0004936940000000029}, {'diff': 0.000493721999999995}, {'diff': 0.0004936670000000032}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:43.347" endtime="20201029 12:43:43.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.365" level="INFO">${RESULT} = {'diff': [0.0004938049999999999, 0.000497610999999995, 0.0004936810000000028, 0.0004936940000000029, 0.000493721999999995, 0.0004936670000000032, 0.0004938470000000056, 0.0004976530000000007, 0.000493...</msg>
<status status="PASS" starttime="20201029 12:43:43.357" endtime="20201029 12:43:43.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.375" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:43.373" endtime="20201029 12:43:43.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.381" level="INFO">VALUE: [0.0004938049999999999, 0.000497610999999995, 0.0004936810000000028, 0.0004936940000000029, 0.000493721999999995, 0.0004936670000000032, 0.0004938470000000056, 0.0004976530000000007, 0.0004937090000000019, 0.0004936810000000028, 0.000493708999999995, 0.0004937360000000016, 0.0004938890000000043, 0.0004976800000000003, 0.0004935969999999984, 0.0004938189999999995, 0.0004937770000000008, 0.0004937640000000007, 0.0004939730000000017, 0.0004977499999999982, 0.0004938339999999986, 0.0004937780000000003, 0.0004938470000000056, 0.0004938469999999986, 0.0004940000000000014, 0.0004978620000000017, 0.0004938889999999974, 0.0004938749999999978, 0.0004938329999999991, 0.0004937769999999939, 0.0004939720000000022, 0.0004977779999999973, 0.0004937770000000008, 0.0004938610000000052, 0.0004938480000000051, 0.0004938610000000052, 0.0004939580000000027, 0.0004977909999999974, 0.0004939019999999975, 0.0004938189999999995, 0.0004938049999999999, 0.0004937780000000003, 0.000493931000000003, 0.0004976809999999998, 0.0004936940000000029, 0.0004936520000000041, 0.0004936799999999963, 0.0004937080000000024, 0.0004938610000000052, 0.0004976800000000003]</msg>
<status status="PASS" starttime="20201029 12:43:43.378" endtime="20201029 12:43:43.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.367" endtime="20201029 12:43:43.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.877" endtime="20201029 12:43:43.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.847" endtime="20201029 12:43:43.390"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.396" endtime="20201029 12:43:43.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.392" endtime="20201029 12:43:43.419"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.440" endtime="20201029 12:43:43.477"></status>
</kw>
<msg timestamp="20201029 12:43:43.478" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.437" endtime="20201029 12:43:43.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.484" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.480" endtime="20201029 12:43:43.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.487" endtime="20201029 12:43:43.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.430" endtime="20201029 12:43:43.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.425" endtime="20201029 12:43:43.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.510" endtime="20201029 12:43:43.857"></status>
</kw>
<msg timestamp="20201029 12:43:43.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034260111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034787403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.506" endtime="20201029 12:43:43.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034260111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034787403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.866" endtime="20201029 12:43:43.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.884" endtime="20201029 12:43:43.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.499" endtime="20201029 12:43:43.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.495" endtime="20201029 12:43:43.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:43.900" level="INFO">${PHILIP_RES} = [{'diff': 0.0005272919999999987}, {'diff': 0.0005269590000000005}, {'diff': 0.0005300419999999945}, {'diff': 0.0005272220000000008}, {'diff': 0.0005299860000000031}, {'diff': 0.0005271389999999959}, {...</msg>
<status status="PASS" starttime="20201029 12:43:43.892" endtime="20201029 12:43:43.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.910" level="INFO">${RESULT} = {'diff': [0.0005272919999999987, 0.0005269590000000005, 0.0005300419999999945, 0.0005272220000000008, 0.0005299860000000031, 0.0005271389999999959, 0.0005299590000000035, 0.0005270139999999993, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:43:43.902" endtime="20201029 12:43:43.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.921" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:43.918" endtime="20201029 12:43:43.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.926" level="INFO">VALUE: [0.0005272919999999987, 0.0005269590000000005, 0.0005300419999999945, 0.0005272220000000008, 0.0005299860000000031, 0.0005271389999999959, 0.0005299590000000035, 0.0005270139999999993, 0.0005298330000000004, 0.000527152000000003, 0.0005299029999999982, 0.000527167000000002, 0.0005299299999999979, 0.0005271530000000024, 0.0005299589999999965, 0.0005272220000000008, 0.0005298749999999991, 0.0005271249999999963, 0.0005299720000000036, 0.0005271109999999968, 0.0005298749999999991, 0.0005271120000000032, 0.0005299169999999978, 0.0005271249999999963, 0.0005298480000000064, 0.0005271529999999955, 0.000529957999999997, 0.000527084000000004, 0.000529944999999997, 0.0005270979999999967, 0.0005299170000000047, 0.0005270279999999988, 0.0005299029999999982, 0.0005270549999999985, 0.0005298749999999991, 0.0005270279999999988, 0.0005298889999999987, 0.0005271530000000024, 0.0005299869999999957, 0.0005270830000000046, 0.0005299439999999975, 0.0005270969999999972, 0.0005299030000000052, 0.0005270699999999975, 0.0005299029999999982, 0.0005270549999999985, 0.0005298889999999987, 0.000527084000000004, 0.0005299029999999982, 0.0005271950000000011]</msg>
<status status="PASS" starttime="20201029 12:43:43.923" endtime="20201029 12:43:43.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.912" endtime="20201029 12:43:43.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.421" endtime="20201029 12:43:43.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.391" endtime="20201029 12:43:43.931"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.937" endtime="20201029 12:43:43.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.933" endtime="20201029 12:43:43.960"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.981" endtime="20201029 12:43:44.020"></status>
</kw>
<msg timestamp="20201029 12:43:44.021" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.978" endtime="20201029 12:43:44.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.027" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.023" endtime="20201029 12:43:44.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.029" endtime="20201029 12:43:44.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.970" endtime="20201029 12:43:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.965" endtime="20201029 12:43:44.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.052" endtime="20201029 12:43:44.407"></status>
</kw>
<msg timestamp="20201029 12:43:44.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03437225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034932903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:44.049" endtime="20201029 12:43:44.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03437225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034932903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:44.417" endtime="20201029 12:43:44.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.435" endtime="20201029 12:43:44.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.042" endtime="20201029 12:43:44.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.037" endtime="20201029 12:43:44.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:44.451" level="INFO">${PHILIP_RES} = [{'diff': 0.0005606530000000012}, {'diff': 0.0005633609999999983}, {'diff': 0.000561193999999994}, {'diff': 0.0005643339999999997}, {'diff': 0.0005613059999999975}, {'diff': 0.0005643339999999997}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:44.443" endtime="20201029 12:43:44.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.460" level="INFO">${RESULT} = {'diff': [0.0005606530000000012, 0.0005633609999999983, 0.000561193999999994, 0.0005643339999999997, 0.0005613059999999975, 0.0005643339999999997, 0.0005612220000000001, 0.0005642639999999949, 0.00056...</msg>
<status status="PASS" starttime="20201029 12:43:44.453" endtime="20201029 12:43:44.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.470" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:44.468" endtime="20201029 12:43:44.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.476" level="INFO">VALUE: [0.0005606530000000012, 0.0005633609999999983, 0.000561193999999994, 0.0005643339999999997, 0.0005613059999999975, 0.0005643339999999997, 0.0005612220000000001, 0.0005642639999999949, 0.000561194000000001, 0.0005643749999999989, 0.0005612359999999997, 0.0005643749999999989, 0.0005612359999999997, 0.0005642780000000014, 0.0005612360000000066, 0.0005643889999999985, 0.0005612229999999996, 0.0005643469999999998, 0.0005612229999999996, 0.0005643339999999997, 0.0005612779999999984, 0.0005642220000000031, 0.000561194000000001, 0.0005642770000000019, 0.000561111000000003, 0.0005642360000000027, 0.0005611250000000026, 0.0005642500000000022, 0.0005612359999999997, 0.000564402999999998, 0.000561209, 0.0005643330000000002, 0.0005612220000000001, 0.0005642640000000018, 0.0005611670000000013, 0.0005642360000000027, 0.0005611530000000017, 0.0005642500000000022, 0.000561111000000003, 0.000564292000000001, 0.0005611249999999957, 0.0005643060000000005, 0.0005611659999999949, 0.0005642500000000022, 0.0005611530000000017, 0.0005642770000000019, 0.000561194000000001, 0.0005643060000000005, 0.0005611670000000013, 0.0005642640000000088]</msg>
<status status="PASS" starttime="20201029 12:43:44.473" endtime="20201029 12:43:44.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.462" endtime="20201029 12:43:44.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.961" endtime="20201029 12:43:44.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.932" endtime="20201029 12:43:44.482"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.488" endtime="20201029 12:43:44.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.484" endtime="20201029 12:43:44.511"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.532" endtime="20201029 12:43:44.572"></status>
</kw>
<msg timestamp="20201029 12:43:44.573" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.528" endtime="20201029 12:43:44.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.579" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.575" endtime="20201029 12:43:44.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.582" endtime="20201029 12:43:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.521" endtime="20201029 12:43:44.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.516" endtime="20201029 12:43:44.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.605" endtime="20201029 12:43:44.939"></status>
</kw>
<msg timestamp="20201029 12:43:44.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034161083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034759819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.601" endtime="20201029 12:43:44.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034161083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034759819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.948" endtime="20201029 12:43:44.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.966" endtime="20201029 12:43:44.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.594" endtime="20201029 12:43:44.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.590" endtime="20201029 12:43:44.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:44.982" level="INFO">${PHILIP_RES} = [{'diff': 0.0005987359999999955}, {'diff': 0.000594235999999998}, {'diff': 0.000594235999999998}, {'diff': 0.0005942640000000041}, {'diff': 0.0005943750000000012}, {'diff': 0.0005942780000000036}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:44.975" endtime="20201029 12:43:44.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.991" level="INFO">${RESULT} = {'diff': [0.0005987359999999955, 0.000594235999999998, 0.000594235999999998, 0.0005942640000000041, 0.0005943750000000012, 0.0005942780000000036, 0.0005984169999999969, 0.0005942229999999979, 0.000594...</msg>
<status status="PASS" starttime="20201029 12:43:44.984" endtime="20201029 12:43:44.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.002" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:44.999" endtime="20201029 12:43:45.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.007" level="INFO">VALUE: [0.0005987359999999955, 0.000594235999999998, 0.000594235999999998, 0.0005942640000000041, 0.0005943750000000012, 0.0005942780000000036, 0.0005984169999999969, 0.0005942229999999979, 0.0005942079999999988, 0.0005941660000000001, 0.0005943189999999959, 0.0005942219999999984, 0.0005983890000000047, 0.0005942630000000046, 0.0005942500000000045, 0.000594347000000002, 0.0005943050000000033, 0.0005942770000000042, 0.0005984440000000035, 0.0005942079999999988, 0.000594235999999998, 0.0005942909999999968, 0.0005942780000000036, 0.0005942780000000036, 0.0005983329999999995, 0.0005941390000000005, 0.0005942360000000049, 0.0005941809999999992, 0.0005942499999999976, 0.0005941940000000062, 0.0005982920000000003, 0.0005942090000000053, 0.0005941669999999996, 0.0005941809999999992, 0.0005942500000000045, 0.0005942920000000032, 0.0005984870000000017, 0.0005942499999999976, 0.0005942779999999967, 0.0005943049999999964, 0.0005942639999999971, 0.0005943469999999951, 0.0005983609999999986, 0.0005943060000000028, 0.0005943060000000028, 0.0005943610000000016, 0.0005944030000000072, 0.0005942500000000045, 0.0005984870000000087, 0.0005944030000000072]</msg>
<status status="PASS" starttime="20201029 12:43:45.004" endtime="20201029 12:43:45.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.993" endtime="20201029 12:43:45.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.512" endtime="20201029 12:43:45.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.483" endtime="20201029 12:43:45.012"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.017" endtime="20201029 12:43:45.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.014" endtime="20201029 12:43:45.041"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.063" endtime="20201029 12:43:45.104"></status>
</kw>
<msg timestamp="20201029 12:43:45.105" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.059" endtime="20201029 12:43:45.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.112" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.107" endtime="20201029 12:43:45.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.114" endtime="20201029 12:43:45.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.052" endtime="20201029 12:43:45.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.047" endtime="20201029 12:43:45.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.139" endtime="20201029 12:43:45.480"></status>
</kw>
<msg timestamp="20201029 12:43:45.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035291708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035924972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.136" endtime="20201029 12:43:45.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035291708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035924972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.489" endtime="20201029 12:43:45.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.507" endtime="20201029 12:43:45.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.127" endtime="20201029 12:43:45.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.122" endtime="20201029 12:43:45.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:45.523" level="INFO">${PHILIP_RES} = [{'diff': 0.0006332640000000014}, {'diff': 0.0006295969999999956}, {'diff': 0.0006294859999999985}, {'diff': 0.0006333199999999997}, {'diff': 0.0006295559999999964}, {'diff': 0.0006295560000000033}, {...</msg>
<status status="PASS" starttime="20201029 12:43:45.515" endtime="20201029 12:43:45.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.532" level="INFO">${RESULT} = {'diff': [0.0006332640000000014, 0.0006295969999999956, 0.0006294859999999985, 0.0006333199999999997, 0.0006295559999999964, 0.0006295560000000033, 0.0006334160000000047, 0.0006295970000000026, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:45.525" endtime="20201029 12:43:45.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.542" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:45.540" endtime="20201029 12:43:45.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.549" level="INFO">VALUE: [0.0006332640000000014, 0.0006295969999999956, 0.0006294859999999985, 0.0006333199999999997, 0.0006295559999999964, 0.0006295560000000033, 0.0006334160000000047, 0.0006295970000000026, 0.0006295969999999956, 0.0006334029999999977, 0.0006296250000000017, 0.0006296390000000013, 0.0006334579999999965, 0.0006296110000000021, 0.0006295419999999968, 0.0006335270000000018, 0.0006296390000000013, 0.0006295269999999978, 0.0006333749999999985, 0.0006296529999999939, 0.0006295840000000025, 0.0006333750000000055, 0.0006296110000000021, 0.0006295140000000046, 0.000633360999999999, 0.0006296670000000004, 0.0006295840000000025, 0.0006333749999999985, 0.000629598000000002, 0.0006296109999999952, 0.0006333750000000055, 0.0006295280000000042, 0.0006295700000000029, 0.0006333889999999981, 0.0006295549999999969, 0.000629666000000001, 0.0006334439999999969, 0.0006295700000000029, 0.0006295970000000026, 0.000633471999999996, 0.0006296529999999939, 0.0006296529999999939, 0.0006334860000000025, 0.0006295979999999951, 0.000629583000000003, 0.0006334159999999978, 0.0006295139999999977, 0.0006296110000000021, 0.0006333610000000128, 0.0006296390000000013]</msg>
<status status="PASS" starttime="20201029 12:43:45.545" endtime="20201029 12:43:45.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.534" endtime="20201029 12:43:45.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.042" endtime="20201029 12:43:45.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.013" endtime="20201029 12:43:45.554"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.560" endtime="20201029 12:43:45.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.556" endtime="20201029 12:43:45.583"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.604" endtime="20201029 12:43:45.647"></status>
</kw>
<msg timestamp="20201029 12:43:45.648" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.600" endtime="20201029 12:43:45.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.654" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.650" endtime="20201029 12:43:45.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.656" endtime="20201029 12:43:45.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.593" endtime="20201029 12:43:45.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.588" endtime="20201029 12:43:45.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.680" endtime="20201029 12:43:46.015"></status>
</kw>
<msg timestamp="20201029 12:43:46.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033750903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034415944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.676" endtime="20201029 12:43:46.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033750903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034415944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.024" endtime="20201029 12:43:46.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.042" endtime="20201029 12:43:46.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.669" endtime="20201029 12:43:46.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.664" endtime="20201029 12:43:46.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:46.057" level="INFO">${PHILIP_RES} = [{'diff': 0.0006650409999999982}, {'diff': 0.0006646520000000017}, {'diff': 0.0006685690000000008}, {'diff': 0.0006686799999999979}, {'diff': 0.0006687360000000031}, {'diff': 0.0006686939999999975}, {...</msg>
<status status="PASS" starttime="20201029 12:43:46.050" endtime="20201029 12:43:46.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.068" level="INFO">${RESULT} = {'diff': [0.0006650409999999982, 0.0006646520000000017, 0.0006685690000000008, 0.0006686799999999979, 0.0006687360000000031, 0.0006686939999999975, 0.0006687500000000027, 0.0006687499999999957, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:46.059" endtime="20201029 12:43:46.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.078" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:46.076" endtime="20201029 12:43:46.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.084" level="INFO">VALUE: [0.0006650409999999982, 0.0006646520000000017, 0.0006685690000000008, 0.0006686799999999979, 0.0006687360000000031, 0.0006686939999999975, 0.0006687500000000027, 0.0006687499999999957, 0.0006686670000000047, 0.0006686950000000039, 0.0006686809999999974, 0.0006687920000000014, 0.0006687499999999957, 0.0006686249999999991, 0.0006685969999999999, 0.0006686109999999995, 0.0006686529999999982, 0.0006686109999999995, 0.0006686800000000048, 0.0006686529999999982, 0.0006686519999999987, 0.0006686799999999979, 0.0006687220000000035, 0.0006686949999999969, 0.0006687360000000031, 0.0006686809999999974, 0.0006686669999999978, 0.0006685969999999999, 0.0006686670000000047, 0.0006686669999999978, 0.0006686389999999987, 0.0006686949999999969, 0.0006687090000000034, 0.0006687220000000035, 0.000668819000000001, 0.0006687369999999956, 0.0006687360000000031, 0.0006686939999999975, 0.0006685839999999998, 0.0006687219999999966, 0.0006686809999999904, 0.0006686390000000125, 0.0006687219999999966, 0.0006686939999999975, 0.0006686669999999978, 0.0006687920000000014, 0.0006687090000000034, 0.0006687219999999966, 0.0006687779999999949, 0.0006686810000000043]</msg>
<status status="PASS" starttime="20201029 12:43:46.081" endtime="20201029 12:43:46.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.070" endtime="20201029 12:43:46.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.584" endtime="20201029 12:43:46.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.555" endtime="20201029 12:43:46.088"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.094" endtime="20201029 12:43:46.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.091" endtime="20201029 12:43:46.117"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.138" endtime="20201029 12:43:46.184"></status>
</kw>
<msg timestamp="20201029 12:43:46.185" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.135" endtime="20201029 12:43:46.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.191" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.187" endtime="20201029 12:43:46.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.193" endtime="20201029 12:43:46.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.127" endtime="20201029 12:43:46.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.122" endtime="20201029 12:43:46.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.216" endtime="20201029 12:43:46.551"></status>
</kw>
<msg timestamp="20201029 12:43:46.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033955861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034657042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.213" endtime="20201029 12:43:46.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033955861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034657042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.560" endtime="20201029 12:43:46.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.578" endtime="20201029 12:43:46.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.206" endtime="20201029 12:43:46.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.201" endtime="20201029 12:43:46.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:46.594" level="INFO">${PHILIP_RES} = [{'diff': 0.0007011810000000021}, {'diff': 0.0007019860000000017}, {'diff': 0.0007018330000000059}, {'diff': 0.0007017780000000001}, {'diff': 0.0007018749999999976}, {'diff': 0.000705832999999996}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:46.586" endtime="20201029 12:43:46.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.604" level="INFO">${RESULT} = {'diff': [0.0007011810000000021, 0.0007019860000000017, 0.0007018330000000059, 0.0007017780000000001, 0.0007018749999999976, 0.000705832999999996, 0.0007058340000000024, 0.0007058470000000025, 0.00070...</msg>
<status status="PASS" starttime="20201029 12:43:46.596" endtime="20201029 12:43:46.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.615" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:46.612" endtime="20201029 12:43:46.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.620" level="INFO">VALUE: [0.0007011810000000021, 0.0007019860000000017, 0.0007018330000000059, 0.0007017780000000001, 0.0007018749999999976, 0.000705832999999996, 0.0007058340000000024, 0.0007058470000000025, 0.0007058060000000033, 0.0007059030000000008, 0.0007059030000000008, 0.0007058890000000012, 0.0007059030000000008, 0.0007058750000000016, 0.0007057780000000041, 0.0007058059999999963, 0.0007058470000000025, 0.0007059030000000008, 0.0007059170000000003, 0.0007058050000000038, 0.0007059030000000008, 0.0007058050000000038, 0.0007058469999999956, 0.0007059309999999999, 0.0007058890000000012, 0.0007058059999999963, 0.0007058750000000016, 0.0007058750000000016, 0.0007058470000000025, 0.0007059170000000003, 0.0007059860000000057, 0.0007058889999999943, 0.0007059309999999999, 0.0007059719999999992, 0.000705944, 0.0007059029999999938, 0.0007058609999999951, 0.0007058060000000033, 0.0007057499999999911, 0.0007058610000000021, 0.0007059160000000009, 0.000705832999999989, 0.0007059160000000009, 0.0007059310000000069, 0.0007059310000000069, 0.0007057220000000058, 0.0007058610000000021, 0.000705944, 0.0007059449999999995, 0.0007057780000000041]</msg>
<status status="PASS" starttime="20201029 12:43:46.617" endtime="20201029 12:43:46.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.606" endtime="20201029 12:43:46.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.118" endtime="20201029 12:43:46.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.089" endtime="20201029 12:43:46.625"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.631" endtime="20201029 12:43:46.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.627" endtime="20201029 12:43:46.654"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.674" endtime="20201029 12:43:46.722"></status>
</kw>
<msg timestamp="20201029 12:43:46.723" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.671" endtime="20201029 12:43:46.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.729" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.725" endtime="20201029 12:43:46.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.731" endtime="20201029 12:43:46.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.664" endtime="20201029 12:43:46.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.659" endtime="20201029 12:43:46.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.755" endtime="20201029 12:43:47.108"></status>
</kw>
<msg timestamp="20201029 12:43:47.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033572472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034311417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.751" endtime="20201029 12:43:47.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033572472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034311417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.117" endtime="20201029 12:43:47.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.136" endtime="20201029 12:43:47.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.744" endtime="20201029 12:43:47.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.739" endtime="20201029 12:43:47.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:47.152" level="INFO">${PHILIP_RES} = [{'diff': 0.0007389449999999978}, {'diff': 0.0007431249999999973}, {'diff': 0.0007392079999999981}, {'diff': 0.000738875}, {'diff': 0.0007430829999999986}, {'diff': 0.0007390830000000015}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:43:47.145" endtime="20201029 12:43:47.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.161" level="INFO">${RESULT} = {'diff': [0.0007389449999999978, 0.0007431249999999973, 0.0007392079999999981, 0.000738875, 0.0007430829999999986, 0.0007390830000000015, 0.0007388610000000004, 0.0007431110000000046, 0.00073916599999...</msg>
<status status="PASS" starttime="20201029 12:43:47.154" endtime="20201029 12:43:47.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.171" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:47.169" endtime="20201029 12:43:47.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.177" level="INFO">VALUE: [0.0007389449999999978, 0.0007431249999999973, 0.0007392079999999981, 0.000738875, 0.0007430829999999986, 0.0007390830000000015, 0.0007388610000000004, 0.0007431110000000046, 0.0007391659999999994, 0.0007389580000000048, 0.0007430279999999997, 0.0007391529999999993, 0.0007389309999999982, 0.0007430279999999997, 0.0007391250000000002, 0.0007388060000000016, 0.0007430140000000002, 0.0007390700000000014, 0.000738875, 0.0007430699999999985, 0.0007390000000000035, 0.000738875, 0.0007430699999999985, 0.0007389439999999983, 0.0007389029999999991, 0.0007430419999999993, 0.0007390550000000023, 0.0007388889999999995, 0.0007430690000000059, 0.0007391389999999998, 0.0007388469999999939, 0.0007431109999999977, 0.0007390549999999954, 0.0007389029999999991, 0.0007430969999999981, 0.0007390970000000011, 0.0007391249999999933, 0.0007432079999999952, 0.0007392219999999977, 0.0007390280000000027, 0.0007431389999999899, 0.0007391110000000006, 0.000738985999999997, 0.000743195000000002, 0.0007391800000000059, 0.000739068999999995, 0.0007432359999999943, 0.0007392780000000099, 0.0007390409999999958, 0.0007433330000000127]</msg>
<status status="PASS" starttime="20201029 12:43:47.174" endtime="20201029 12:43:47.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.163" endtime="20201029 12:43:47.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.655" endtime="20201029 12:43:47.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.625" endtime="20201029 12:43:47.182"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.187" endtime="20201029 12:43:47.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.184" endtime="20201029 12:43:47.211"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.231" endtime="20201029 12:43:47.282"></status>
</kw>
<msg timestamp="20201029 12:43:47.283" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.228" endtime="20201029 12:43:47.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.290" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.285" endtime="20201029 12:43:47.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.292" endtime="20201029 12:43:47.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.221" endtime="20201029 12:43:47.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.216" endtime="20201029 12:43:47.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.315" endtime="20201029 12:43:47.650"></status>
</kw>
<msg timestamp="20201029 12:43:47.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035459944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036237764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.311" endtime="20201029 12:43:47.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035459944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036237764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.659" endtime="20201029 12:43:47.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.677" endtime="20201029 12:43:47.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.304" endtime="20201029 12:43:47.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.300" endtime="20201029 12:43:47.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:47.693" level="INFO">${PHILIP_RES} = [{'diff': 0.0007778199999999985}, {'diff': 0.0007783609999999982}, {'diff': 0.0007821249999999946}, {'diff': 0.0007781249999999976}, {'diff': 0.0007781810000000028}, {'diff': 0.0007781530000000036}, {...</msg>
<status status="PASS" starttime="20201029 12:43:47.686" endtime="20201029 12:43:47.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.702" level="INFO">${RESULT} = {'diff': [0.0007778199999999985, 0.0007783609999999982, 0.0007821249999999946, 0.0007781249999999976, 0.0007781810000000028, 0.0007781530000000036, 0.0007781389999999971, 0.0007783609999999982, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:43:47.695" endtime="20201029 12:43:47.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.712" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:47.710" endtime="20201029 12:43:47.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.717" level="INFO">VALUE: [0.0007778199999999985, 0.0007783609999999982, 0.0007821249999999946, 0.0007781249999999976, 0.0007781810000000028, 0.0007781530000000036, 0.0007781389999999971, 0.0007783609999999982, 0.0007820840000000023, 0.0007780699999999988, 0.0007781659999999968, 0.0007781519999999972, 0.0007781389999999971, 0.0007783609999999982, 0.0007821670000000003, 0.0007781810000000028, 0.0007780829999999989, 0.0007780829999999989, 0.0007781250000000045, 0.0007782500000000012, 0.0007820549999999968, 0.0007781119999999975, 0.0007780829999999989, 0.000778013000000001, 0.0007781520000000042, 0.0007783469999999987, 0.0007821809999999998, 0.0007781389999999971, 0.0007781810000000028, 0.0007781940000000029, 0.000778208999999995, 0.0007784440000000031, 0.0007820689999999964, 0.0007781669999999963, 0.0007781249999999906, 0.0007782770000000078, 0.0007783189999999995, 0.0007784860000000088, 0.0007821249999999946, 0.0007781800000000033, 0.0007782080000000025, 0.0007782779999999934, 0.0007782499999999942, 0.000778402999999997, 0.0007821390000000011, 0.0007782360000000016, 0.0007781530000000036, 0.0007782640000000007, 0.0007782360000000016, 0.000778402999999997]</msg>
<status status="PASS" starttime="20201029 12:43:47.715" endtime="20201029 12:43:47.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.704" endtime="20201029 12:43:47.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.212" endtime="20201029 12:43:47.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.183" endtime="20201029 12:43:47.722"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.728" endtime="20201029 12:43:47.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.724" endtime="20201029 12:43:47.751"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.773" endtime="20201029 12:43:47.825"></status>
</kw>
<msg timestamp="20201029 12:43:47.826" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.770" endtime="20201029 12:43:47.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.833" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.828" endtime="20201029 12:43:47.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.835" endtime="20201029 12:43:47.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.763" endtime="20201029 12:43:47.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.758" endtime="20201029 12:43:47.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.858" endtime="20201029 12:43:48.193"></status>
</kw>
<msg timestamp="20201029 12:43:48.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035275944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036093208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.855" endtime="20201029 12:43:48.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035275944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036093208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.202" endtime="20201029 12:43:48.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.220" endtime="20201029 12:43:48.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.848" endtime="20201029 12:43:48.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.843" endtime="20201029 12:43:48.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:48.236" level="INFO">${PHILIP_RES} = [{'diff': 0.000817264000000005}, {'diff': 0.0008172229999999989}, {'diff': 0.000821347}, {'diff': 0.0008175140000000053}, {'diff': 0.0008212920000000012}, {'diff': 0.0008174999999999988}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:48.229" endtime="20201029 12:43:48.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.245" level="INFO">${RESULT} = {'diff': [0.000817264000000005, 0.0008172229999999989, 0.000821347, 0.0008175140000000053, 0.0008212920000000012, 0.0008174999999999988, 0.0008213479999999995, 0.0008175970000000032, 0.000821374999999...</msg>
<status status="PASS" starttime="20201029 12:43:48.238" endtime="20201029 12:43:48.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.256" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:48.253" endtime="20201029 12:43:48.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.263" level="INFO">VALUE: [0.000817264000000005, 0.0008172229999999989, 0.000821347, 0.0008175140000000053, 0.0008212920000000012, 0.0008174999999999988, 0.0008213479999999995, 0.0008175970000000032, 0.0008213749999999992, 0.0008174729999999991, 0.0008214169999999979, 0.0008175549999999976, 0.0008214019999999989, 0.0008175830000000037, 0.0008214730000000031, 0.0008177359999999995, 0.0008214589999999966, 0.000817639000000002, 0.0008213619999999991, 0.0008175279999999979, 0.0008213889999999988, 0.0008175419999999975, 0.0008214719999999967, 0.000817639000000002, 0.0008214860000000032, 0.0008175979999999958, 0.0008214169999999979, 0.0008176110000000028, 0.0008214030000000053, 0.0008177219999999999, 0.0008214440000000045, 0.0008175559999999971, 0.0008214029999999983, 0.0008176250000000024, 0.0008214440000000045, 0.0008175269999999984, 0.0008213889999999918, 0.0008175279999999979, 0.0008212920000000012, 0.0008175829999999967, 0.0008214579999999971, 0.0008176249999999885, 0.0008214170000000048, 0.0008175840000000101, 0.0008213749999999992, 0.0008176810000000007, 0.0008215000000000028, 0.0008176530000000015, 0.0008214029999999983, 0.0008176800000000012]</msg>
<status status="PASS" starttime="20201029 12:43:48.258" endtime="20201029 12:43:48.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.247" endtime="20201029 12:43:48.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.752" endtime="20201029 12:43:48.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.723" endtime="20201029 12:43:48.267"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.273" endtime="20201029 12:43:48.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.270" endtime="20201029 12:43:48.297"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.317" endtime="20201029 12:43:48.372"></status>
</kw>
<msg timestamp="20201029 12:43:48.373" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.314" endtime="20201029 12:43:48.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.379" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.375" endtime="20201029 12:43:48.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.381" endtime="20201029 12:43:48.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.307" endtime="20201029 12:43:48.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.302" endtime="20201029 12:43:48.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.404" endtime="20201029 12:43:48.745"></status>
</kw>
<msg timestamp="20201029 12:43:48.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033895806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034754, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:48.401" endtime="20201029 12:43:48.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033895806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034754, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:48.754" endtime="20201029 12:43:48.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.772" endtime="20201029 12:43:48.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.394" endtime="20201029 12:43:48.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.389" endtime="20201029 12:43:48.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:48.788" level="INFO">${PHILIP_RES} = [{'diff': 0.0008581939999999996}, {'diff': 0.0008627500000000024}, {'diff': 0.0008586530000000009}, {'diff': 0.0008627360000000028}, {'diff': 0.0008585969999999957}, {'diff': 0.0008627500000000024}, {...</msg>
<status status="PASS" starttime="20201029 12:43:48.781" endtime="20201029 12:43:48.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.799" level="INFO">${RESULT} = {'diff': [0.0008581939999999996, 0.0008627500000000024, 0.0008586530000000009, 0.0008627360000000028, 0.0008585969999999957, 0.0008627500000000024, 0.0008585970000000026, 0.0008627220000000033, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:43:48.790" endtime="20201029 12:43:48.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.809" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:48.807" endtime="20201029 12:43:48.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.814" level="INFO">VALUE: [0.0008581939999999996, 0.0008627500000000024, 0.0008586530000000009, 0.0008627360000000028, 0.0008585969999999957, 0.0008627500000000024, 0.0008585970000000026, 0.0008627220000000033, 0.0008585139999999977, 0.0008626249999999988, 0.0008585279999999973, 0.0008625420000000009, 0.0008584999999999982, 0.0008626390000000053, 0.0008584859999999986, 0.0008626109999999992, 0.0008584589999999989, 0.0008626109999999992, 0.0008585129999999982, 0.0008625560000000004, 0.0008584309999999998, 0.0008626670000000045, 0.0008585419999999969, 0.0008627079999999968, 0.0008585420000000038, 0.0008625830000000001, 0.0008584859999999986, 0.0008627080000000037, 0.0008585419999999969, 0.0008626389999999984, 0.0008585840000000025, 0.0008627219999999963, 0.0008586250000000017, 0.0008627769999999951, 0.0008586109999999952, 0.0008627360000000028, 0.0008586250000000017, 0.0008627500000000093, 0.0008586389999999944, 0.000862652999999991, 0.0008585140000000047, 0.000862665999999998, 0.0008584859999999916, 0.0008626670000000114, 0.0008584860000000055, 0.0008626109999999992, 0.0008584729999999985, 0.0008626939999999972, 0.0008585409999999905, 0.000862555000000001]</msg>
<status status="PASS" starttime="20201029 12:43:48.811" endtime="20201029 12:43:48.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.800" endtime="20201029 12:43:48.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.298" endtime="20201029 12:43:48.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.268" endtime="20201029 12:43:48.827"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.833" endtime="20201029 12:43:48.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.829" endtime="20201029 12:43:48.857"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.877" endtime="20201029 12:43:48.933"></status>
</kw>
<msg timestamp="20201029 12:43:48.934" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.874" endtime="20201029 12:43:48.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.941" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.936" endtime="20201029 12:43:48.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.943" endtime="20201029 12:43:48.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.867" endtime="20201029 12:43:48.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.862" endtime="20201029 12:43:48.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.966" endtime="20201029 12:43:49.300"></status>
</kw>
<msg timestamp="20201029 12:43:49.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034233375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035132903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.962" endtime="20201029 12:43:49.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034233375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035132903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.309" endtime="20201029 12:43:49.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.326" endtime="20201029 12:43:49.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.955" endtime="20201029 12:43:49.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.951" endtime="20201029 12:43:49.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:49.343" level="INFO">${PHILIP_RES} = [{'diff': 0.0008995279999999967}, {'diff': 0.0008988750000000004}, {'diff': 0.0008988330000000017}, {'diff': 0.0008988750000000004}, {'diff': 0.0008987640000000033}, {'diff': 0.0009039169999999971}, {...</msg>
<status status="PASS" starttime="20201029 12:43:49.335" endtime="20201029 12:43:49.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.353" level="INFO">${RESULT} = {'diff': [0.0008995279999999967, 0.0008988750000000004, 0.0008988330000000017, 0.0008988750000000004, 0.0008987640000000033, 0.0009039169999999971, 0.0008986809999999984, 0.0008986799999999989, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:43:49.345" endtime="20201029 12:43:49.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.364" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:49.361" endtime="20201029 12:43:49.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.369" level="INFO">VALUE: [0.0008995279999999967, 0.0008988750000000004, 0.0008988330000000017, 0.0008988750000000004, 0.0008987640000000033, 0.0009039169999999971, 0.0008986809999999984, 0.0008986799999999989, 0.0008987219999999976, 0.0008987359999999972, 0.0008986950000000049, 0.0009038329999999997, 0.0008987229999999971, 0.0008987219999999976, 0.000898694999999998, 0.0008989169999999991, 0.0008988750000000004, 0.0009038609999999989, 0.0008987359999999972, 0.0008987360000000041, 0.0008986529999999993, 0.0008985980000000005, 0.0008986529999999993, 0.0009037640000000013, 0.0008986529999999993, 0.0008987359999999972, 0.0008987780000000029, 0.000898791000000003, 0.0008987920000000024, 0.0009039449999999963, 0.0008988330000000017, 0.0008987780000000029, 0.0008987079999999981, 0.0008987780000000029, 0.0008987640000000102, 0.0009039029999999976, 0.0008987770000000034, 0.0008987219999999907, 0.000898819000000009, 0.0008986950000000049, 0.0008987500000000037, 0.0009038749999999984, 0.0008987919999999955, 0.0008987089999999975, 0.0008987640000000102, 0.000898806000000002, 0.0008988189999999951, 0.0009039160000000046, 0.0008988470000000082, 0.0008988889999999999]</msg>
<status status="PASS" starttime="20201029 12:43:49.366" endtime="20201029 12:43:49.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.355" endtime="20201029 12:43:49.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.858" endtime="20201029 12:43:49.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.828" endtime="20201029 12:43:49.374"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.380" endtime="20201029 12:43:49.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.376" endtime="20201029 12:43:49.403"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.423" endtime="20201029 12:43:49.481"></status>
</kw>
<msg timestamp="20201029 12:43:49.482" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.420" endtime="20201029 12:43:49.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.489" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.485" endtime="20201029 12:43:49.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.491" endtime="20201029 12:43:49.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.413" endtime="20201029 12:43:49.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.408" endtime="20201029 12:43:49.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.514" endtime="20201029 12:43:49.854"></status>
</kw>
<msg timestamp="20201029 12:43:49.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03360275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034543917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:49.511" endtime="20201029 12:43:49.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03360275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034543917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:49.863" endtime="20201029 12:43:49.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.881" endtime="20201029 12:43:49.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.504" endtime="20201029 12:43:49.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.499" endtime="20201029 12:43:49.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:49.897" level="INFO">${PHILIP_RES} = [{'diff': 0.0009411669999999997}, {'diff': 0.000945708999999996}, {'diff': 0.000941125000000001}, {'diff': 0.0009409860000000048}, {'diff': 0.0009459170000000044}, {'diff': 0.0009409860000000048}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:49.890" endtime="20201029 12:43:49.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.906" level="INFO">${RESULT} = {'diff': [0.0009411669999999997, 0.000945708999999996, 0.000941125000000001, 0.0009409860000000048, 0.0009459170000000044, 0.0009409860000000048, 0.0009410000000000043, 0.0009458889999999984, 0.000940...</msg>
<status status="PASS" starttime="20201029 12:43:49.900" endtime="20201029 12:43:49.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.917" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:49.914" endtime="20201029 12:43:49.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.922" level="INFO">VALUE: [0.0009411669999999997, 0.000945708999999996, 0.000941125000000001, 0.0009409860000000048, 0.0009459170000000044, 0.0009409860000000048, 0.0009410000000000043, 0.0009458889999999984, 0.0009409999999999974, 0.0009409859999999978, 0.0009457640000000017, 0.0009409999999999974, 0.0009408890000000003, 0.0009458890000000053, 0.0009410140000000039, 0.0009410140000000039, 0.0009458060000000004, 0.0009409719999999983, 0.000940930999999999, 0.0009457360000000026, 0.0009408889999999934, 0.0009411110000000014, 0.0009458890000000053, 0.0009411110000000014, 0.0009410689999999958, 0.0009458469999999997, 0.0009411390000000006, 0.0009411659999999933, 0.0009458749999999988, 0.0009410970000000018, 0.0009410839999999948, 0.0009458610000000062, 0.0009409719999999983, 0.0009409999999999974, 0.0009459720000000033, 0.0009411109999999945, 0.0009411249999999871, 0.0009459720000000033, 0.0009411950000000058, 0.0009411530000000001, 0.0009458890000000053, 0.0009409999999999974, 0.000941042000000003, 0.0009459720000000033, 0.00094101399999999, 0.0009411390000000075, 0.0009458609999999923, 0.0009409999999999974, 0.0009410690000000027, 0.0009458479999999991]</msg>
<status status="PASS" starttime="20201029 12:43:49.919" endtime="20201029 12:43:49.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.908" endtime="20201029 12:43:49.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.404" endtime="20201029 12:43:49.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.375" endtime="20201029 12:43:49.927"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.933" endtime="20201029 12:43:49.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.929" endtime="20201029 12:43:49.956"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.977" endtime="20201029 12:43:50.039"></status>
</kw>
<msg timestamp="20201029 12:43:50.040" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.973" endtime="20201029 12:43:50.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.046" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.043" endtime="20201029 12:43:50.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.049" endtime="20201029 12:43:50.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.966" endtime="20201029 12:43:50.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.961" endtime="20201029 12:43:50.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.071" endtime="20201029 12:43:50.420"></status>
</kw>
<msg timestamp="20201029 12:43:50.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035438569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036421694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.068" endtime="20201029 12:43:50.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035438569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036421694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.429" endtime="20201029 12:43:50.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.447" endtime="20201029 12:43:50.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.061" endtime="20201029 12:43:50.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.057" endtime="20201029 12:43:50.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:50.462" level="INFO">${PHILIP_RES} = [{'diff': 0.0009831249999999944}, {'diff': 0.000988138999999999}, {'diff': 0.0009890420000000025}, {'diff': 0.0009890830000000017}, {'diff': 0.0009890550000000026}, {'diff': 0.0009892910000000033}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:50.455" endtime="20201029 12:43:50.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.471" level="INFO">${RESULT} = {'diff': [0.0009831249999999944, 0.000988138999999999, 0.0009890420000000025, 0.0009890830000000017, 0.0009890550000000026, 0.0009892910000000033, 0.0009890700000000016, 0.0009889859999999973, 0.00098...</msg>
<status status="PASS" starttime="20201029 12:43:50.464" endtime="20201029 12:43:50.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.482" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:50.479" endtime="20201029 12:43:50.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.487" level="INFO">VALUE: [0.0009831249999999944, 0.000988138999999999, 0.0009890420000000025, 0.0009890830000000017, 0.0009890550000000026, 0.0009892910000000033, 0.0009890700000000016, 0.0009889859999999973, 0.0009890700000000016, 0.000989139, 0.0009890830000000017, 0.0009892089999999978, 0.0009892630000000041, 0.0009891799999999992, 0.0009891940000000057, 0.0009890970000000013, 0.0009889719999999977, 0.0009891529999999996, 0.0009891110000000009, 0.0009891659999999997, 0.000989221999999998, 0.0009891949999999983, 0.0009891659999999997, 0.0009890969999999943, 0.0009890140000000033, 0.0009890970000000013, 0.0009889859999999973, 0.0009890700000000086, 0.0009891110000000009, 0.000989056000000002, 0.0009891110000000009, 0.0009891800000000062, 0.0009890840000000012, 0.000989152000000007, 0.0009889859999999973, 0.0009889439999999916, 0.0009889869999999967, 0.000988945000000005, 0.0009889999999999899, 0.0009890140000000103, 0.000989028000000003, 0.000989027999999989, 0.000989028000000003, 0.0009891249999999935, 0.0009890419999999955, 0.0009888750000000002, 0.000989139, 0.0009889859999999973, 0.000989139, 0.0009891669999999991]</msg>
<status status="PASS" starttime="20201029 12:43:50.484" endtime="20201029 12:43:50.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.473" endtime="20201029 12:43:50.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.957" endtime="20201029 12:43:50.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.928" endtime="20201029 12:43:50.492"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.498" endtime="20201029 12:43:50.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.494" endtime="20201029 12:43:50.521"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.543" endtime="20201029 12:43:50.606"></status>
</kw>
<msg timestamp="20201029 12:43:50.608" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.540" endtime="20201029 12:43:50.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.614" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.610" endtime="20201029 12:43:50.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.616" endtime="20201029 12:43:50.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.533" endtime="20201029 12:43:50.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.527" endtime="20201029 12:43:50.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.639" endtime="20201029 12:43:50.986"></status>
</kw>
<msg timestamp="20201029 12:43:50.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035723833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036756042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.636" endtime="20201029 12:43:50.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035723833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036756042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.995" endtime="20201029 12:43:51.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.013" endtime="20201029 12:43:51.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.629" endtime="20201029 12:43:51.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.624" endtime="20201029 12:43:51.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:51.029" level="INFO">${PHILIP_RES} = [{'diff': 0.0010322089999999992}, {'diff': 0.0010324719999999996}, {'diff': 0.0010324859999999991}, {'diff': 0.0010323049999999973}, {'diff': 0.0010322779999999976}, {'diff': 0.0010323890000000016}, {...</msg>
<status status="PASS" starttime="20201029 12:43:51.021" endtime="20201029 12:43:51.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.038" level="INFO">${RESULT} = {'diff': [0.0010322089999999992, 0.0010324719999999996, 0.0010324859999999991, 0.0010323049999999973, 0.0010322779999999976, 0.0010323890000000016, 0.0010322359999999989, 0.0010322910000000046, 0.0010...</msg>
<status status="PASS" starttime="20201029 12:43:51.031" endtime="20201029 12:43:51.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.048" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:51.046" endtime="20201029 12:43:51.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.055" level="INFO">VALUE: [0.0010322089999999992, 0.0010324719999999996, 0.0010324859999999991, 0.0010323049999999973, 0.0010322779999999976, 0.0010323890000000016, 0.0010322359999999989, 0.0010322910000000046, 0.0010322219999999993, 0.0010322769999999981, 0.0010323330000000033, 0.0010322359999999989, 0.001032347000000003, 0.001032472999999999, 0.0010323610000000025, 0.0010324449999999999, 0.001032540999999998, 0.001032556000000004, 0.0010325419999999974, 0.001032374999999995, 0.0010324160000000013, 0.0010324310000000003, 0.0010325280000000048, 0.001032347000000003, 0.0010323050000000042, 0.0010323609999999955, 0.0010322779999999976, 0.001032527999999991, 0.0010324999999999918, 0.001032486000000013, 0.0010324310000000003, 0.0010325139999999983, 0.0010322919999999902, 0.0010322779999999976, 0.0010323049999999973, 0.0010322360000000058, 0.001032292000000004, 0.001032264000000005, 0.0010324720000000065, 0.0010322499999999984, 0.0010323889999999947, 0.0010323200000000032, 0.001032235999999992, 0.0010322360000000058, 0.0010323340000000097, 0.0010322499999999984, 0.0010321940000000002, 0.0010321390000000014, 0.001032166000000001, 0.001032166000000001]</msg>
<status status="PASS" starttime="20201029 12:43:51.051" endtime="20201029 12:43:51.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.039" endtime="20201029 12:43:51.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.522" endtime="20201029 12:43:51.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.493" endtime="20201029 12:43:51.060"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.066" endtime="20201029 12:43:51.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.062" endtime="20201029 12:43:51.089"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.110" endtime="20201029 12:43:51.175"></status>
</kw>
<msg timestamp="20201029 12:43:51.176" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.106" endtime="20201029 12:43:51.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.182" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.178" endtime="20201029 12:43:51.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.184" endtime="20201029 12:43:51.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.099" endtime="20201029 12:43:51.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.094" endtime="20201029 12:43:51.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.208" endtime="20201029 12:43:51.542"></status>
</kw>
<msg timestamp="20201029 12:43:51.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034160764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035232792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.204" endtime="20201029 12:43:51.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034160764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035232792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.551" endtime="20201029 12:43:51.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.569" endtime="20201029 12:43:51.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.197" endtime="20201029 12:43:51.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.193" endtime="20201029 12:43:51.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:51.585" level="INFO">${PHILIP_RES} = [{'diff': 0.0010720279999999957}, {'diff': 0.001077583}, {'diff': 0.0010726390000000002}, {'diff': 0.0010723190000000021}, {'diff': 0.0010776109999999992}, {'diff': 0.0010726250000000007}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:43:51.577" endtime="20201029 12:43:51.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.595" level="INFO">${RESULT} = {'diff': [0.0010720279999999957, 0.001077583, 0.0010726390000000002, 0.0010723190000000021, 0.0010776109999999992, 0.0010726250000000007, 0.0010723329999999948, 0.0010774859999999956, 0.00107259700000...</msg>
<status status="PASS" starttime="20201029 12:43:51.587" endtime="20201029 12:43:51.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.606" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:51.603" endtime="20201029 12:43:51.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.611" level="INFO">VALUE: [0.0010720279999999957, 0.001077583, 0.0010726390000000002, 0.0010723190000000021, 0.0010776109999999992, 0.0010726250000000007, 0.0010723329999999948, 0.0010774859999999956, 0.0010725970000000015, 0.0010725840000000014, 0.0010776389999999983, 0.0010727219999999982, 0.0010726390000000002, 0.0010777500000000023, 0.0010726390000000002, 0.0010724860000000044, 0.0010776109999999992, 0.0010725420000000027, 0.0010725140000000036, 0.0010775140000000016, 0.001072666, 0.001072487000000004, 0.0010776249999999987, 0.0010727360000000047, 0.0010726249999999937, 0.0010778060000000006, 0.0010729579999999989, 0.0010727779999999965, 0.0010779439999999973, 0.001072875000000001, 0.0010726949999999985, 0.0010778889999999985, 0.0010729719999999915, 0.0010726810000000059, 0.001077887999999999, 0.0010729020000000006, 0.0010726949999999985, 0.0010778330000000003, 0.0010729449999999918, 0.001072875000000001, 0.0010778609999999994, 0.0010730000000000045, 0.001072722000000012, 0.0010779580000000039, 0.0010730279999999898, 0.001072693999999999, 0.001077903000000005, 0.0010729169999999927, 0.0010728889999999935, 0.001078069000000001]</msg>
<status status="PASS" starttime="20201029 12:43:51.608" endtime="20201029 12:43:51.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.597" endtime="20201029 12:43:51.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.090" endtime="20201029 12:43:51.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.061" endtime="20201029 12:43:51.616"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.621" endtime="20201029 12:43:51.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.618" endtime="20201029 12:43:51.645"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.665" endtime="20201029 12:43:51.733"></status>
</kw>
<msg timestamp="20201029 12:43:51.734" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.662" endtime="20201029 12:43:51.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.740" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.736" endtime="20201029 12:43:51.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.743" endtime="20201029 12:43:51.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.655" endtime="20201029 12:43:51.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.650" endtime="20201029 12:43:51.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.766" endtime="20201029 12:43:52.113"></status>
</kw>
<msg timestamp="20201029 12:43:52.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033926, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035049431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:51.762" endtime="20201029 12:43:52.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033926, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035049431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:52.123" endtime="20201029 12:43:52.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.141" endtime="20201029 12:43:52.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.755" endtime="20201029 12:43:52.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.751" endtime="20201029 12:43:52.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:52.157" level="INFO">${PHILIP_RES} = [{'diff': 0.0011234310000000011}, {'diff': 0.001117833999999998}, {'diff': 0.001117901999999997}, {'diff': 0.0011178049999999995}, {'diff': 0.0011177640000000003}, {'diff': 0.0011180829999999989}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:52.149" endtime="20201029 12:43:52.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.167" level="INFO">${RESULT} = {'diff': [0.0011234310000000011, 0.001117833999999998, 0.001117901999999997, 0.0011178049999999995, 0.0011177640000000003, 0.0011180829999999989, 0.0011226940000000005, 0.0011177779999999998, 0.001117...</msg>
<status status="PASS" starttime="20201029 12:43:52.159" endtime="20201029 12:43:52.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.178" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:52.175" endtime="20201029 12:43:52.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.183" level="INFO">VALUE: [0.0011234310000000011, 0.001117833999999998, 0.001117901999999997, 0.0011178049999999995, 0.0011177640000000003, 0.0011180829999999989, 0.0011226940000000005, 0.0011177779999999998, 0.0011177779999999998, 0.0011176940000000024, 0.0011176530000000032, 0.0011178469999999982, 0.001122680000000001, 0.001117708000000002, 0.0011177919999999994, 0.0011176530000000032, 0.0011177500000000007, 0.0011177779999999998, 0.0011226659999999944, 0.0011178329999999986, 0.0011177220000000015, 0.001117723000000001, 0.0011176940000000024, 0.001117819000000006, 0.0011224999999999985, 0.0011176529999999962, 0.001117694999999988, 0.0011177640000000072, 0.0011179030000000034, 0.0011182640000000077, 0.0011229299999999942, 0.0011179310000000026, 0.0011180550000000067, 0.0011180830000000058, 0.0011180980000000118, 0.0011180969999999985, 0.001122917000000001, 0.0011180419999999996, 0.0011179440000000096, 0.0011179719999999949, 0.0011179449999999952, 0.001118082999999992, 0.0011230559999999973, 0.0011179729999999943, 0.0011181529999999967, 0.0011180140000000005, 0.0011180559999999923, 0.0011181809999999959, 0.0011230420000000046, 0.0011181799999999964]</msg>
<status status="PASS" starttime="20201029 12:43:52.180" endtime="20201029 12:43:52.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.169" endtime="20201029 12:43:52.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.646" endtime="20201029 12:43:52.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.616" endtime="20201029 12:43:52.188"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.194" endtime="20201029 12:43:52.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.190" endtime="20201029 12:43:52.217"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.238" endtime="20201029 12:43:52.308"></status>
</kw>
<msg timestamp="20201029 12:43:52.309" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.234" endtime="20201029 12:43:52.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.315" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.311" endtime="20201029 12:43:52.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.317" endtime="20201029 12:43:52.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.227" endtime="20201029 12:43:52.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.222" endtime="20201029 12:43:52.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.340" endtime="20201029 12:43:52.710"></status>
</kw>
<msg timestamp="20201029 12:43:52.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033887958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035052736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.337" endtime="20201029 12:43:52.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033887958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035052736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.720" endtime="20201029 12:43:52.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.737" endtime="20201029 12:43:52.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.330" endtime="20201029 12:43:52.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.325" endtime="20201029 12:43:52.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:52.753" level="INFO">${PHILIP_RES} = [{'diff': 0.0011647779999999983}, {'diff': 0.0011696669999999992}, {'diff': 0.001164820000000004}, {'diff': 0.0011697079999999985}, {'diff': 0.0011650559999999976}, {'diff': 0.001169903}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:52.746" endtime="20201029 12:43:52.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.762" level="INFO">${RESULT} = {'diff': [0.0011647779999999983, 0.0011696669999999992, 0.001164820000000004, 0.0011697079999999985, 0.0011650559999999976, 0.001169903, 0.0011650970000000038, 0.0011697499999999972, 0.001165013999999...</msg>
<status status="PASS" starttime="20201029 12:43:52.755" endtime="20201029 12:43:52.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.773" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:52.771" endtime="20201029 12:43:52.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.778" level="INFO">VALUE: [0.0011647779999999983, 0.0011696669999999992, 0.001164820000000004, 0.0011697079999999985, 0.0011650559999999976, 0.001169903, 0.0011650970000000038, 0.0011697499999999972, 0.001165013999999999, 0.0011697920000000028, 0.0011650129999999995, 0.0011697919999999959, 0.0011650409999999986, 0.0011697629999999973, 0.0011649720000000002, 0.0011699719999999983, 0.0011650279999999985, 0.001169833000000002, 0.0011650829999999973, 0.0011699020000000004, 0.0011649169999999945, 0.0011697640000000037, 0.0011646810000000007, 0.001169527999999996, 0.0011647919999999978, 0.001169820000000002, 0.001165042000000005, 0.001169903, 0.0011648890000000023, 0.0011696249999999936, 0.0011648060000000043, 0.0011695689999999953, 0.0011648340000000035, 0.001169611000000001, 0.0011650689999999908, 0.0011697080000000054, 0.0011649450000000006, 0.001169721999999998, 0.0011649999999999994, 0.0011698339999999946, 0.0011650690000000047, 0.0011698470000000016, 0.0011650829999999973, 0.0011699719999999914, 0.0011652220000000074, 0.0011700280000000035, 0.0011650140000000059, 0.0011698340000000085, 0.0011650549999999982, 0.0011698329999999951]</msg>
<status status="PASS" starttime="20201029 12:43:52.775" endtime="20201029 12:43:52.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.764" endtime="20201029 12:43:52.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.218" endtime="20201029 12:43:52.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.189" endtime="20201029 12:43:52.783"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.788" endtime="20201029 12:43:52.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.785" endtime="20201029 12:43:52.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.832" endtime="20201029 12:43:52.906"></status>
</kw>
<msg timestamp="20201029 12:43:52.907" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.829" endtime="20201029 12:43:52.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.913" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.909" endtime="20201029 12:43:52.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.915" endtime="20201029 12:43:52.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.822" endtime="20201029 12:43:52.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.817" endtime="20201029 12:43:52.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.938" endtime="20201029 12:43:53.274"></status>
</kw>
<msg timestamp="20201029 12:43:53.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035249833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036466875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.935" endtime="20201029 12:43:53.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035249833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036466875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.284" endtime="20201029 12:43:53.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.302" endtime="20201029 12:43:53.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.928" endtime="20201029 12:43:53.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.923" endtime="20201029 12:43:53.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:53.317" level="INFO">${PHILIP_RES} = [{'diff': 0.0012170420000000015}, {'diff': 0.0012116949999999987}, {'diff': 0.0012169999999999959}, {'diff': 0.0012119169999999999}, {'diff': 0.0012171109999999999}, {'diff': 0.001212056000000003}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:53.310" endtime="20201029 12:43:53.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.326" level="INFO">${RESULT} = {'diff': [0.0012170420000000015, 0.0012116949999999987, 0.0012169999999999959, 0.0012119169999999999, 0.0012171109999999999, 0.001212056000000003, 0.001217028000000002, 0.0012119999999999978, 0.001217...</msg>
<status status="PASS" starttime="20201029 12:43:53.320" endtime="20201029 12:43:53.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.337" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:53.335" endtime="20201029 12:43:53.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.342" level="INFO">VALUE: [0.0012170420000000015, 0.0012116949999999987, 0.0012169999999999959, 0.0012119169999999999, 0.0012171109999999999, 0.001212056000000003, 0.001217028000000002, 0.0012119999999999978, 0.0012170140000000024, 0.001211957999999999, 0.0012170840000000002, 0.0012119439999999995, 0.001217304999999995, 0.0012120280000000039, 0.0012169999999999959, 0.0012118060000000028, 0.001216847, 0.0012117780000000036, 0.0012169029999999983, 0.0012119859999999982, 0.0012171810000000047, 0.0012118890000000007, 0.001216930000000005, 0.0012117089999999914, 0.0012169310000000044, 0.0012118610000000085, 0.0012169309999999905, 0.0012118190000000029, 0.0012169439999999976, 0.001211833999999995, 0.0012169869999999888, 0.0012118329999999955, 0.0012169579999999902, 0.0012119999999999909, 0.0012172079999999974, 0.0012121530000000075, 0.0012171949999999904, 0.0012121939999999998, 0.0012171940000000048, 0.0012119589999999986, 0.0012170979999999998, 0.0012120830000000027, 0.001217333000000001, 0.0012121949999999992, 0.0012172909999999953, 0.0012122360000000054, 0.0012172640000000096, 0.0012121809999999927, 0.0012172770000000027, 0.0012120830000000027]</msg>
<status status="PASS" starttime="20201029 12:43:53.339" endtime="20201029 12:43:53.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.328" endtime="20201029 12:43:53.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.813" endtime="20201029 12:43:53.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.784" endtime="20201029 12:43:53.347"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.353" endtime="20201029 12:43:53.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.349" endtime="20201029 12:43:53.376"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.399" endtime="20201029 12:43:53.474"></status>
</kw>
<msg timestamp="20201029 12:43:53.475" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.395" endtime="20201029 12:43:53.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.481" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.477" endtime="20201029 12:43:53.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.483" endtime="20201029 12:43:53.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.388" endtime="20201029 12:43:53.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.383" endtime="20201029 12:43:53.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.506" endtime="20201029 12:43:53.842"></status>
</kw>
<msg timestamp="20201029 12:43:53.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036123792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037390125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.503" endtime="20201029 12:43:53.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036123792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037390125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.851" endtime="20201029 12:43:53.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.869" endtime="20201029 12:43:53.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.496" endtime="20201029 12:43:53.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.491" endtime="20201029 12:43:53.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:53.885" level="INFO">${PHILIP_RES} = [{'diff': 0.0012663330000000014}, {'diff': 0.001260347000000002}, {'diff': 0.0012603890000000006}, {'diff': 0.001260235999999998}, {'diff': 0.0012603199999999953}, {'diff': 0.001260263999999997}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:53.877" endtime="20201029 12:43:53.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.894" level="INFO">${RESULT} = {'diff': [0.0012663330000000014, 0.001260347000000002, 0.0012603890000000006, 0.001260235999999998, 0.0012603199999999953, 0.001260263999999997, 0.0012664029999999993, 0.0012602499999999975, 0.0012600...</msg>
<status status="PASS" starttime="20201029 12:43:53.887" endtime="20201029 12:43:53.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.904" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:53.902" endtime="20201029 12:43:53.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.911" level="INFO">VALUE: [0.0012663330000000014, 0.001260347000000002, 0.0012603890000000006, 0.001260235999999998, 0.0012603199999999953, 0.001260263999999997, 0.0012664029999999993, 0.0012602499999999975, 0.0012600830000000021, 0.001260264000000004, 0.001260054999999996, 0.001260235999999998, 0.0012662219999999974, 0.0012599449999999984, 0.0012600830000000021, 0.0012601250000000008, 0.0012601939999999992, 0.0012602500000000044, 0.0012662369999999964, 0.0012602499999999975, 0.0012602499999999905, 0.0012602230000000048, 0.0012601799999999996, 0.0012601669999999926, 0.001266236000000004, 0.001260153, 0.0012601250000000008, 0.0012601670000000065, 0.0012603610000000015, 0.0012603059999999888, 0.0012664720000000046, 0.0012603610000000015, 0.0012603890000000006, 0.001260235999999998, 0.001260264000000011, 0.0012603059999999888, 0.0012662639999999892, 0.0012599310000000058, 0.00126005500000001, 0.0012600980000000012, 0.001260153, 0.001260153, 0.0012663190000000019, 0.0012599999999999972, 0.0012601250000000008, 0.0012599999999999972, 0.0012602370000000113, 0.0012601940000000061, 0.0012665000000000037, 0.001260375000000008]</msg>
<status status="PASS" starttime="20201029 12:43:53.906" endtime="20201029 12:43:53.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.895" endtime="20201029 12:43:53.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.378" endtime="20201029 12:43:53.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.348" endtime="20201029 12:43:53.920"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.926" endtime="20201029 12:43:53.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.922" endtime="20201029 12:43:53.950"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.971" endtime="20201029 12:43:54.049"></status>
</kw>
<msg timestamp="20201029 12:43:54.051" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.968" endtime="20201029 12:43:54.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.057" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.053" endtime="20201029 12:43:54.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.059" endtime="20201029 12:43:54.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.961" endtime="20201029 12:43:54.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.955" endtime="20201029 12:43:54.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.082" endtime="20201029 12:43:54.425"></status>
</kw>
<msg timestamp="20201029 12:43:54.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0351415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036455958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:54.079" endtime="20201029 12:43:54.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0351415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036455958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:54.435" endtime="20201029 12:43:54.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.452" endtime="20201029 12:43:54.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.072" endtime="20201029 12:43:54.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.067" endtime="20201029 12:43:54.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:54.468" level="INFO">${PHILIP_RES} = [{'diff': 0.0013144579999999975}, {'diff': 0.0013085560000000024}, {'diff': 0.0013084859999999976}, {'diff': 0.0013142640000000025}, {'diff': 0.001308570000000002}, {'diff': 0.0013084859999999976}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:54.461" endtime="20201029 12:43:54.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.479" level="INFO">${RESULT} = {'diff': [0.0013144579999999975, 0.0013085560000000024, 0.0013084859999999976, 0.0013142640000000025, 0.001308570000000002, 0.0013084859999999976, 0.001314250000000003, 0.0013084029999999996, 0.001308...</msg>
<status status="PASS" starttime="20201029 12:43:54.470" endtime="20201029 12:43:54.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.489" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:54.487" endtime="20201029 12:43:54.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.494" level="INFO">VALUE: [0.0013144579999999975, 0.0013085560000000024, 0.0013084859999999976, 0.0013142640000000025, 0.001308570000000002, 0.0013084859999999976, 0.001314250000000003, 0.0013084029999999996, 0.001308471999999998, 0.0013143190000000013, 0.0013084299999999993, 0.0013084439999999989, 0.0013144310000000048, 0.0013085410000000033, 0.0013085280000000032, 0.0013144160000000057, 0.0013085280000000032, 0.0013084300000000063, 0.0013142920000000016, 0.001308555000000003, 0.0013086949999999986, 0.0013144300000000053, 0.0013086389999999865, 0.0013086249999999938, 0.001314361, 0.001308443999999992, 0.0013084029999999996, 0.0013142919999999947, 0.0013083610000000079, 0.0013086250000000077, 0.0013143469999999935, 0.0013086939999999991, 0.0013086110000000012, 0.001314555000000009, 0.0013086390000000003, 0.0013087219999999983, 0.001314652999999999, 0.0013088049999999962, 0.001308680999999992, 0.0013143189999999944, 0.0013086250000000077, 0.0013087219999999983, 0.001314735999999997, 0.0013085420000000098, 0.0013084859999999976, 0.0013143469999999935, 0.0013085970000000086, 0.0013084169999999923, 0.001314250000000003, 0.0013085419999999959]</msg>
<status status="PASS" starttime="20201029 12:43:54.491" endtime="20201029 12:43:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.480" endtime="20201029 12:43:54.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.951" endtime="20201029 12:43:54.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.921" endtime="20201029 12:43:54.499"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.505" endtime="20201029 12:43:54.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.501" endtime="20201029 12:43:54.528"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.548" endtime="20201029 12:43:54.628"></status>
</kw>
<msg timestamp="20201029 12:43:54.630" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.545" endtime="20201029 12:43:54.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.636" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.632" endtime="20201029 12:43:54.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.638" endtime="20201029 12:43:54.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.538" endtime="20201029 12:43:54.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.533" endtime="20201029 12:43:54.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.661" endtime="20201029 12:43:54.998"></status>
</kw>
<msg timestamp="20201029 12:43:55.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033826319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035185153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.658" endtime="20201029 12:43:55.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033826319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035185153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.007" endtime="20201029 12:43:55.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.025" endtime="20201029 12:43:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.651" endtime="20201029 12:43:55.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.646" endtime="20201029 12:43:55.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:55.042" level="INFO">${PHILIP_RES} = [{'diff': 0.0013588339999999963}, {'diff': 0.0013584579999999999}, {'diff': 0.0013588059999999971}, {'diff': 0.0013586940000000006}, {'diff': 0.001358583999999996}, {'diff': 0.001364861000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:55.034" endtime="20201029 12:43:55.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.053" level="INFO">${RESULT} = {'diff': [0.0013588339999999963, 0.0013584579999999999, 0.0013588059999999971, 0.0013586940000000006, 0.001358583999999996, 0.001364861000000002, 0.0013649999999999982, 0.0013648189999999963, 0.001364...</msg>
<status status="PASS" starttime="20201029 12:43:55.044" endtime="20201029 12:43:55.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.064" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:55.061" endtime="20201029 12:43:55.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.069" level="INFO">VALUE: [0.0013588339999999963, 0.0013584579999999999, 0.0013588059999999971, 0.0013586940000000006, 0.001358583999999996, 0.001364861000000002, 0.0013649999999999982, 0.0013648189999999963, 0.0013646939999999996, 0.001364667, 0.0013645139999999972, 0.0013647079999999992, 0.0013648339999999953, 0.0013648199999999958, 0.0013647219999999988, 0.0013647920000000036, 0.0013647219999999988, 0.0013647920000000036, 0.0013647500000000048, 0.0013645970000000021, 0.001364457999999999, 0.0013647079999999923, 0.0013647090000000056, 0.0013648329999999959, 0.0013647500000000118, 0.00136480600000001, 0.0013647769999999976, 0.001364777999999997, 0.0013648470000000024, 0.0013646939999999996, 0.0013647089999999917, 0.0013647359999999914, 0.0013646249999999943, 0.0013646249999999943, 0.001364568999999996, 0.0013648200000000027, 0.0013646249999999943, 0.0013647080000000061, 0.001364667, 0.0013646380000000013, 0.0013645410000000108, 0.0013644999999999907, 0.001364584000000002, 0.001364860999999995, 0.001364777999999997, 0.0013645830000000025, 0.0013645139999999972, 0.0013646110000000017, 0.0013645550000000034, 0.001364540999999997]</msg>
<status status="PASS" starttime="20201029 12:43:55.066" endtime="20201029 12:43:55.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.055" endtime="20201029 12:43:55.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.529" endtime="20201029 12:43:55.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.500" endtime="20201029 12:43:55.074"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.080" endtime="20201029 12:43:55.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.076" endtime="20201029 12:43:55.103"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.124" endtime="20201029 12:43:55.206"></status>
</kw>
<msg timestamp="20201029 12:43:55.207" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.120" endtime="20201029 12:43:55.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.213" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.209" endtime="20201029 12:43:55.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.216" endtime="20201029 12:43:55.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.113" endtime="20201029 12:43:55.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.108" endtime="20201029 12:43:55.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.239" endtime="20201029 12:43:55.580"></status>
</kw>
<msg timestamp="20201029 12:43:55.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034003681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035412653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.236" endtime="20201029 12:43:55.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034003681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035412653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.590" endtime="20201029 12:43:55.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.608" endtime="20201029 12:43:55.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.228" endtime="20201029 12:43:55.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.224" endtime="20201029 12:43:55.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:55.624" level="INFO">${PHILIP_RES} = [{'diff': 0.0014089720000000014}, {'diff': 0.001408693999999995}, {'diff': 0.0014087779999999994}, {'diff': 0.0014147080000000006}, {'diff': 0.0014147220000000002}, {'diff': 0.0014147499999999993}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:55.616" endtime="20201029 12:43:55.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.633" level="INFO">${RESULT} = {'diff': [0.0014089720000000014, 0.001408693999999995, 0.0014087779999999994, 0.0014147080000000006, 0.0014147220000000002, 0.0014147499999999993, 0.0014148339999999968, 0.001414805000000005, 0.001414...</msg>
<status status="PASS" starttime="20201029 12:43:55.626" endtime="20201029 12:43:55.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.643" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:55.641" endtime="20201029 12:43:55.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.648" level="INFO">VALUE: [0.0014089720000000014, 0.001408693999999995, 0.0014087779999999994, 0.0014147080000000006, 0.0014147220000000002, 0.0014147499999999993, 0.0014148339999999968, 0.001414805000000005, 0.0014147220000000002, 0.0014147499999999993, 0.001414903000000002, 0.0014148610000000034, 0.0014149029999999951, 0.0014147500000000063, 0.0014147079999999937, 0.0014148059999999976, 0.0014148049999999981, 0.0014148890000000025, 0.001414791999999998, 0.001414875000000003, 0.0014149170000000016, 0.001414957999999994, 0.0014148609999999895, 0.0014150559999999979, 0.0014153610000000039, 0.0014151109999999967, 0.0014151250000000032, 0.0014151810000000015, 0.0014152230000000071, 0.001414985999999993, 0.0014150969999999902, 0.0014148469999999969, 0.001415083999999997, 0.0014149999999999996, 0.0014149999999999996, 0.0014149160000000022, 0.0014147500000000063, 0.0014149029999999951, 0.001414985999999993, 0.0014148199999999972, 0.0014150279999999987, 0.001415014000000006, 0.0014149999999999996, 0.0014149170000000016, 0.001414874999999996, 0.0014149580000000078, 0.001414820000000011, 0.001414985999999993, 0.001414874999999996, 0.0014148470000000107]</msg>
<status status="PASS" starttime="20201029 12:43:55.645" endtime="20201029 12:43:55.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.634" endtime="20201029 12:43:55.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.104" endtime="20201029 12:43:55.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.075" endtime="20201029 12:43:55.653"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.659" endtime="20201029 12:43:55.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.655" endtime="20201029 12:43:55.682"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.702" endtime="20201029 12:43:55.789"></status>
</kw>
<msg timestamp="20201029 12:43:55.790" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.699" endtime="20201029 12:43:55.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.796" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.792" endtime="20201029 12:43:55.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.798" endtime="20201029 12:43:55.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.692" endtime="20201029 12:43:55.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.687" endtime="20201029 12:43:55.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.821" endtime="20201029 12:43:56.164"></status>
</kw>
<msg timestamp="20201029 12:43:56.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035205125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036666708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.818" endtime="20201029 12:43:56.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035205125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036666708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.173" endtime="20201029 12:43:56.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.191" endtime="20201029 12:43:56.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.811" endtime="20201029 12:43:56.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.806" endtime="20201029 12:43:56.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:56.207" level="INFO">${PHILIP_RES} = [{'diff': 0.0014615830000000024}, {'diff': 0.0014674999999999966}, {'diff': 0.0014616660000000004}, {'diff': 0.001461513999999997}, {'diff': 0.001467790999999996}, {'diff': 0.0014616810000000063}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:56.200" endtime="20201029 12:43:56.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.216" level="INFO">${RESULT} = {'diff': [0.0014615830000000024, 0.0014674999999999966, 0.0014616660000000004, 0.001461513999999997, 0.001467790999999996, 0.0014616810000000063, 0.0014615419999999962, 0.001467568999999995, 0.0014614...</msg>
<status status="PASS" starttime="20201029 12:43:56.209" endtime="20201029 12:43:56.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.226" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:56.224" endtime="20201029 12:43:56.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.232" level="INFO">VALUE: [0.0014615830000000024, 0.0014674999999999966, 0.0014616660000000004, 0.001461513999999997, 0.001467790999999996, 0.0014616810000000063, 0.0014615419999999962, 0.001467568999999995, 0.001461485999999998, 0.0014611670000000063, 0.0014672359999999968, 0.0014610269999999967, 0.0014610700000000018, 0.0014672219999999972, 0.001461304999999996, 0.0014609730000000043, 0.001467388, 0.001461222000000005, 0.0014609029999999995, 0.0014671249999999997, 0.001460971999999991, 0.0014609440000000057, 0.001466999999999996, 0.0014610559999999884, 0.0014609029999999995, 0.001467180999999998, 0.001461180999999992, 0.0014610969999999945, 0.0014672359999999968, 0.0014612499999999973, 0.0014610409999999963, 0.0014671949999999906, 0.001461209000000005, 0.001461028000000003, 0.0014672780000000024, 0.0014612910000000034, 0.0014610699999999949, 0.0014671519999999993, 0.0014612499999999973, 0.001461111000000001, 0.001467028000000009, 0.0014611530000000067, 0.0014609309999999986, 0.0014670970000000005, 0.001461000000000004, 0.0014608750000000004, 0.0014669169999999981, 0.0014609859999999975, 0.0014608750000000004, 0.0014672220000000041]</msg>
<status status="PASS" starttime="20201029 12:43:56.229" endtime="20201029 12:43:56.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.218" endtime="20201029 12:43:56.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.683" endtime="20201029 12:43:56.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.654" endtime="20201029 12:43:56.237"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.242" endtime="20201029 12:43:56.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.239" endtime="20201029 12:43:56.266"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.288" endtime="20201029 12:43:56.376"></status>
</kw>
<msg timestamp="20201029 12:43:56.377" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.285" endtime="20201029 12:43:56.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.383" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.379" endtime="20201029 12:43:56.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.386" endtime="20201029 12:43:56.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.278" endtime="20201029 12:43:56.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.272" endtime="20201029 12:43:56.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.408" endtime="20201029 12:43:56.746"></status>
</kw>
<msg timestamp="20201029 12:43:56.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035827528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037347028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.405" endtime="20201029 12:43:56.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035827528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037347028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.755" endtime="20201029 12:43:56.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.773" endtime="20201029 12:43:56.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.398" endtime="20201029 12:43:56.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.394" endtime="20201029 12:43:56.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:56.789" level="INFO">${PHILIP_RES} = [{'diff': 0.0015195}, {'diff': 0.0015130419999999992}, {'diff': 0.001513014}, {'diff': 0.0015130419999999992}, {'diff': 0.0015130689999999988}, {'diff': 0.0015132919999999994}, {'diff': 0.001520027999...</msg>
<status status="PASS" starttime="20201029 12:43:56.782" endtime="20201029 12:43:56.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.798" level="INFO">${RESULT} = {'diff': [0.0015195, 0.0015130419999999992, 0.001513014, 0.0015130419999999992, 0.0015130689999999988, 0.0015132919999999994, 0.0015200279999999997, 0.0015130279999999996, 0.0015131389999999967, 0.001...</msg>
<status status="PASS" starttime="20201029 12:43:56.791" endtime="20201029 12:43:56.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.808" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:56.806" endtime="20201029 12:43:56.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.815" level="INFO">VALUE: [0.0015195, 0.0015130419999999992, 0.001513014, 0.0015130419999999992, 0.0015130689999999988, 0.0015132919999999994, 0.0015200279999999997, 0.0015130279999999996, 0.0015131389999999967, 0.0015129300000000026, 0.0015128890000000034, 0.0015131529999999963, 0.001520014, 0.0015129170000000025, 0.0015127639999999998, 0.0015128469999999977, 0.0015129450000000086, 0.0015130000000000005, 0.0015197230000000006, 0.0015129580000000087, 0.0015130839999999979, 0.001513097000000005, 0.0015131390000000106, 0.0015132640000000003, 0.0015202500000000008, 0.001513013999999993, 0.0015133749999999974, 0.0015132370000000006, 0.0015132769999999934, 0.0015134160000000035, 0.0015201670000000028, 0.0015131940000000094, 0.001513194999999995, 0.0015133329999999917, 0.0015131950000000088, 0.0015132499999999938, 0.0015200830000000054, 0.0015131110000000114, 0.001513042000000006, 0.0015131249999999902, 0.0015131389999999967, 0.0015132219999999946, 0.0015200419999999992, 0.0015129720000000013, 0.0015131109999999975, 0.0015128889999999895, 0.001512902999999996, 0.001513125000000004, 0.0015200419999999992, 0.0015130829999999984]</msg>
<status status="PASS" starttime="20201029 12:43:56.811" endtime="20201029 12:43:56.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.800" endtime="20201029 12:43:56.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.267" endtime="20201029 12:43:56.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.237" endtime="20201029 12:43:56.820"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.826" endtime="20201029 12:43:56.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.822" endtime="20201029 12:43:56.849"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.870" endtime="20201029 12:43:56.960"></status>
</kw>
<msg timestamp="20201029 12:43:56.962" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.867" endtime="20201029 12:43:56.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.968" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.964" endtime="20201029 12:43:56.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.970" endtime="20201029 12:43:56.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.859" endtime="20201029 12:43:56.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.854" endtime="20201029 12:43:56.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.993" endtime="20201029 12:43:57.351"></status>
</kw>
<msg timestamp="20201029 12:43:57.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035336264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.990" endtime="20201029 12:43:57.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035336264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.361" endtime="20201029 12:43:57.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.379" endtime="20201029 12:43:57.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.983" endtime="20201029 12:43:57.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.978" endtime="20201029 12:43:57.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:57.395" level="INFO">${PHILIP_RES} = [{'diff': 0.0015733890000000014}, {'diff': 0.0015677499999999997}, {'diff': 0.0015734440000000002}, {'diff': 0.0015676939999999945}, {'diff': 0.0015734440000000002}, {'diff': 0.0015675839999999969}, {...</msg>
<status status="PASS" starttime="20201029 12:43:57.388" endtime="20201029 12:43:57.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.406" level="INFO">${RESULT} = {'diff': [0.0015733890000000014, 0.0015677499999999997, 0.0015734440000000002, 0.0015676939999999945, 0.0015734440000000002, 0.0015675839999999969, 0.0015732909999999975, 0.0015675409999999987, 0.0015...</msg>
<status status="PASS" starttime="20201029 12:43:57.397" endtime="20201029 12:43:57.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.417" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:57.415" endtime="20201029 12:43:57.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.422" level="INFO">VALUE: [0.0015733890000000014, 0.0015677499999999997, 0.0015734440000000002, 0.0015676939999999945, 0.0015734440000000002, 0.0015675839999999969, 0.0015732909999999975, 0.0015675409999999987, 0.001573374999999995, 0.0015675419999999982, 0.001573276999999998, 0.0015674999999999994, 0.0015734729999999988, 0.0015676389999999957, 0.0015733610000000023, 0.001567708000000001, 0.0015733480000000022, 0.0015674870000000063, 0.0015733339999999957, 0.0015675549999999983, 0.0015731670000000003, 0.0015674439999999873, 0.0015735419999999972, 0.0015675690000000048, 0.0015733060000000104, 0.001567304999999991, 0.0015731529999999938, 0.001567597000000004, 0.0015734579999999998, 0.0015676109999999965, 0.0015734310000000001, 0.0015675689999999909, 0.0015733610000000092, 0.0015673749999999959, 0.0015732499999999983, 0.0015675549999999983, 0.001573304999999997, 0.0015674999999999994, 0.0015733750000000019, 0.0015674729999999998, 0.0015733609999999953, 0.0015675410000000056, 0.0015731529999999938, 0.0015673749999999959, 0.00157333300000001, 0.0015676110000000104, 0.001573485999999999, 0.0015675559999999977, 0.0015731250000000085, 0.001567513999999992]</msg>
<status status="PASS" starttime="20201029 12:43:57.419" endtime="20201029 12:43:57.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.408" endtime="20201029 12:43:57.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.850" endtime="20201029 12:43:57.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.821" endtime="20201029 12:43:57.427"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.433" endtime="20201029 12:43:57.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.429" endtime="20201029 12:43:57.457"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.478" endtime="20201029 12:43:57.572"></status>
</kw>
<msg timestamp="20201029 12:43:57.574" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.475" endtime="20201029 12:43:57.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.580" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.576" endtime="20201029 12:43:57.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.582" endtime="20201029 12:43:57.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.467" endtime="20201029 12:43:57.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.462" endtime="20201029 12:43:57.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.606" endtime="20201029 12:43:57.956"></status>
</kw>
<msg timestamp="20201029 12:43:57.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034892861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036514528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.602" endtime="20201029 12:43:57.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034892861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036514528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.966" endtime="20201029 12:43:57.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.984" endtime="20201029 12:43:57.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.595" endtime="20201029 12:43:57.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.590" endtime="20201029 12:43:57.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:58.000" level="INFO">${PHILIP_RES} = [{'diff': 0.0016216670000000002}, {'diff': 0.0016279439999999992}, {'diff': 0.0016226669999999943}, {'diff': 0.0016287629999999984}, {'diff': 0.0016227920000000048}, {'diff': 0.001628902999999994}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:57.993" endtime="20201029 12:43:58.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.011" level="INFO">${RESULT} = {'diff': [0.0016216670000000002, 0.0016279439999999992, 0.0016226669999999943, 0.0016287629999999984, 0.0016227920000000048, 0.001628902999999994, 0.0016227640000000057, 0.0016287640000000048, 0.00162...</msg>
<status status="PASS" starttime="20201029 12:43:58.002" endtime="20201029 12:43:58.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.022" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:58.020" endtime="20201029 12:43:58.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.027" level="INFO">VALUE: [0.0016216670000000002, 0.0016279439999999992, 0.0016226669999999943, 0.0016287629999999984, 0.0016227920000000048, 0.001628902999999994, 0.0016227640000000057, 0.0016287640000000048, 0.0016226530000000017, 0.0016287359999999987, 0.0016225549999999977, 0.0016289170000000006, 0.0016225409999999982, 0.0016287909999999975, 0.0016227639999999988, 0.001628791999999997, 0.0016225549999999977, 0.0016288890000000084, 0.0016226659999999948, 0.0016285559999999893, 0.0016225970000000034, 0.0016286109999999882, 0.0016225140000000055, 0.0016287359999999917, 0.0016225559999999972, 0.0016287499999999983, 0.0016226389999999952, 0.0016287640000000048, 0.0016227080000000005, 0.0016287360000000056, 0.0016225689999999904, 0.0016285830000000029, 0.00162230599999999, 0.0016285830000000029, 0.001622499999999999, 0.0016286390000000012, 0.0016225970000000034, 0.0016287219999999991, 0.0016224860000000063, 0.0016285840000000024, 0.0016225140000000055, 0.0016287640000000048, 0.001622610999999996, 0.0016287359999999917, 0.0016225270000000125, 0.0016287499999999983, 0.0016226800000000013, 0.0016286660000000008, 0.00162261100000001, 0.0016286800000000073]</msg>
<status status="PASS" starttime="20201029 12:43:58.025" endtime="20201029 12:43:58.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.013" endtime="20201029 12:43:58.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.458" endtime="20201029 12:43:58.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.428" endtime="20201029 12:43:58.032"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.038" endtime="20201029 12:43:58.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.035" endtime="20201029 12:43:58.062"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.083" endtime="20201029 12:43:58.181"></status>
</kw>
<msg timestamp="20201029 12:43:58.182" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.080" endtime="20201029 12:43:58.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.188" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.184" endtime="20201029 12:43:58.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.190" endtime="20201029 12:43:58.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.073" endtime="20201029 12:43:58.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.067" endtime="20201029 12:43:58.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.214" endtime="20201029 12:43:58.569"></status>
</kw>
<msg timestamp="20201029 12:43:58.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034869056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036545708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.211" endtime="20201029 12:43:58.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034869056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036545708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.578" endtime="20201029 12:43:58.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.597" endtime="20201029 12:43:58.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.203" endtime="20201029 12:43:58.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.199" endtime="20201029 12:43:58.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:58.613" level="INFO">${PHILIP_RES} = [{'diff': 0.0016766520000000007}, {'diff': 0.001676818999999996}, {'diff': 0.0016841670000000003}, {'diff': 0.001677110999999995}, {'diff': 0.001676888999999994}, {'diff': 0.0016767499999999977}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:58.606" endtime="20201029 12:43:58.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.622" level="INFO">${RESULT} = {'diff': [0.0016766520000000007, 0.001676818999999996, 0.0016841670000000003, 0.001677110999999995, 0.001676888999999994, 0.0016767499999999977, 0.0016769030000000004, 0.0016769870000000048, 0.0016840...</msg>
<status status="PASS" starttime="20201029 12:43:58.615" endtime="20201029 12:43:58.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.633" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:58.631" endtime="20201029 12:43:58.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.638" level="INFO">VALUE: [0.0016766520000000007, 0.001676818999999996, 0.0016841670000000003, 0.001677110999999995, 0.001676888999999994, 0.0016767499999999977, 0.0016769030000000004, 0.0016769870000000048, 0.0016840559999999963, 0.0016770969999999955, 0.0016773059999999965, 0.001677333000000003, 0.0016771250000000015, 0.0016772079999999995, 0.0016842909999999975, 0.001676847000000009, 0.001676694999999992, 0.0016770420000000036, 0.0016769449999999991, 0.0016769029999999935, 0.0016840830000000029, 0.001676999999999998, 0.001676917, 0.0016768890000000009, 0.0016772359999999986, 0.0016770839999999954, 0.0016842779999999974, 0.0016771379999999947, 0.0016771660000000077, 0.0016771250000000015, 0.0016772230000000055, 0.0016771659999999938, 0.0016840689999999964, 0.0016768050000000034, 0.0016769449999999991, 0.0016769299999999931, 0.0016768890000000009, 0.001677027999999997, 0.0016842219999999991, 0.0016770830000000098, 0.001677027999999997, 0.001677222000000006, 0.0016771800000000003, 0.0016769449999999991, 0.001684209000000006, 0.0016770139999999906, 0.0016770970000000024, 0.001677221999999992, 0.0016770700000000027, 0.001677208999999999]</msg>
<status status="PASS" starttime="20201029 12:43:58.635" endtime="20201029 12:43:58.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.624" endtime="20201029 12:43:58.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.063" endtime="20201029 12:43:58.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.033" endtime="20201029 12:43:58.643"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.650" endtime="20201029 12:43:58.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.646" endtime="20201029 12:43:58.673"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.694" endtime="20201029 12:43:58.796"></status>
</kw>
<msg timestamp="20201029 12:43:58.797" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.691" endtime="20201029 12:43:58.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.804" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.800" endtime="20201029 12:43:58.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.806" endtime="20201029 12:43:58.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.684" endtime="20201029 12:43:58.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.678" endtime="20201029 12:43:58.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.830" endtime="20201029 12:43:59.176"></status>
</kw>
<msg timestamp="20201029 12:43:59.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036382264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038115417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.826" endtime="20201029 12:43:59.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036382264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038115417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.186" endtime="20201029 12:43:59.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.205" endtime="20201029 12:43:59.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.819" endtime="20201029 12:43:59.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.814" endtime="20201029 12:43:59.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:59.221" level="INFO">${PHILIP_RES} = [{'diff': 0.0017331530000000012}, {'diff': 0.0017333469999999962}, {'diff': 0.0017400559999999968}, {'diff': 0.0017331520000000017}, {'diff': 0.0017331810000000003}, {'diff': 0.0017399719999999994}, {...</msg>
<status status="PASS" starttime="20201029 12:43:59.214" endtime="20201029 12:43:59.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.231" level="INFO">${RESULT} = {'diff': [0.0017331530000000012, 0.0017333469999999962, 0.0017400559999999968, 0.0017331520000000017, 0.0017331810000000003, 0.0017399719999999994, 0.0017332639999999983, 0.0017333619999999952, 0.0017...</msg>
<status status="PASS" starttime="20201029 12:43:59.223" endtime="20201029 12:43:59.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.241" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:59.239" endtime="20201029 12:43:59.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.247" level="INFO">VALUE: [0.0017331530000000012, 0.0017333469999999962, 0.0017400559999999968, 0.0017331520000000017, 0.0017331810000000003, 0.0017399719999999994, 0.0017332639999999983, 0.0017333619999999952, 0.0017401519999999948, 0.0017334310000000006, 0.0017333620000000022, 0.0017401530000000012, 0.0017330689999999968, 0.0017331390000000016, 0.0017396250000000016, 0.001732819999999996, 0.0017330970000000029, 0.001739985999999999, 0.0017332780000000048, 0.0017330970000000029, 0.001739916000000008, 0.0017331519999999878, 0.0017331669999999938, 0.0017400689999999969, 0.0017331110000000094, 0.0017329860000000058, 0.0017401110000000025, 0.0017332359999999991, 0.0017329860000000058, 0.0017398190000000036, 0.0017330279999999976, 0.0017330970000000029, 0.0017398750000000018, 0.0017331800000000008, 0.001733125000000002, 0.0017399449999999927, 0.0017332359999999991, 0.0017332359999999991, 0.0017403330000000106, 0.0017333330000000036, 0.001733430000000008, 0.0017404450000000071, 0.001733417000000001, 0.001733125000000002, 0.0017399439999999933, 0.0017329999999999984, 0.0017328610000000022, 0.0017398480000000022, 0.0017331530000000012, 0.0017330559999999828]</msg>
<status status="PASS" starttime="20201029 12:43:59.244" endtime="20201029 12:43:59.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.232" endtime="20201029 12:43:59.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.674" endtime="20201029 12:43:59.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.644" endtime="20201029 12:43:59.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.766" endtime="20201029 12:43:59.256"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:29.543" endtime="20201029 12:43:59.258" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:00.236" endtime="20201029 12:43:59.281"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.463" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:59.479" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:44:01.472" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:59.460" endtime="20201029 12:44:01.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.479" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:44:01.476" endtime="20201029 12:44:01.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.457" endtime="20201029 12:44:01.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.486" endtime="20201029 12:44:01.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.483" endtime="20201029 12:44:01.824"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.853" endtime="20201029 12:44:01.872"></status>
</kw>
<msg timestamp="20201029 12:44:01.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.850" endtime="20201029 12:44:01.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.880" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.875" endtime="20201029 12:44:01.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.888" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:01.882" endtime="20201029 12:44:01.889"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:01.844" endtime="20201029 12:44:01.891"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:01.838" endtime="20201029 12:44:01.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.835" endtime="20201029 12:44:01.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:01.901" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:01.899" endtime="20201029 12:44:01.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.895" endtime="20201029 12:44:01.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.834" endtime="20201029 12:44:01.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.832" endtime="20201029 12:44:01.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.905" endtime="20201029 12:44:01.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.828" endtime="20201029 12:44:01.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.911" endtime="20201029 12:44:01.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.825" endtime="20201029 12:44:01.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.454" endtime="20201029 12:44:01.917"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.931" endtime="20201029 12:44:01.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.928" endtime="20201029 12:44:01.955"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.993" endtime="20201029 12:44:02.012"></status>
</kw>
<msg timestamp="20201029 12:44:02.013" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.989" endtime="20201029 12:44:02.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.015" endtime="20201029 12:44:02.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.027" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:02.022" endtime="20201029 12:44:02.027"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:01.981" endtime="20201029 12:44:02.029"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:01.972" endtime="20201029 12:44:02.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.969" endtime="20201029 12:44:02.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:02.039" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:02.038" endtime="20201029 12:44:02.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.033" endtime="20201029 12:44:02.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.967" endtime="20201029 12:44:02.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.966" endtime="20201029 12:44:02.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.045" endtime="20201029 12:44:02.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.962" endtime="20201029 12:44:02.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.957" endtime="20201029 12:44:02.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.925" endtime="20201029 12:44:02.052"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.077" endtime="20201029 12:44:02.094"></status>
</kw>
<msg timestamp="20201029 12:44:02.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.074" endtime="20201029 12:44:02.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.097" endtime="20201029 12:44:02.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.104" endtime="20201029 12:44:02.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.066" endtime="20201029 12:44:02.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.061" endtime="20201029 12:44:02.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.127" endtime="20201029 12:44:02.491"></status>
</kw>
<msg timestamp="20201029 12:44:02.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137276236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.137286583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:44:02.124" endtime="20201029 12:44:02.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137276236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.137286583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:44:02.501" endtime="20201029 12:44:02.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.521" endtime="20201029 12:44:02.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.117" endtime="20201029 12:44:02.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.112" endtime="20201029 12:44:02.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.538" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6695000000011007e-05}, {'diff': 1.7055999999987526e-05}, {'diff': 1.7055999999987526e-05}, {'diff': 1.672299999999627e-05}, {'diff': 1.6542000000008272e-05}, {'diff': 1.670900...</msg>
<status status="PASS" starttime="20201029 12:44:02.529" endtime="20201029 12:44:02.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.551" level="INFO">${ACCURACY} = {'diff': [0, 1.6695000000011007e-05, 1.7055999999987526e-05, 1.7055999999987526e-05, 1.672299999999627e-05, 1.6542000000008272e-05, 1.6709000000003638e-05, 1.7054999999988052e-05, 1.6556000000000903e-...</msg>
<status status="PASS" starttime="20201029 12:44:02.540" endtime="20201029 12:44:02.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.562" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.559" endtime="20201029 12:44:02.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.567" level="INFO">VALUE: [0, 1.6695000000011007e-05, 1.7055999999987526e-05, 1.7055999999987526e-05, 1.672299999999627e-05, 1.6542000000008272e-05, 1.6709000000003638e-05, 1.7054999999988052e-05, 1.6556000000000903e-05, 1.7389000000006538e-05, 1.6903000000012547e-05, 1.7388999999978783e-05, 1.6708000000004164e-05, 1.6513999999995255e-05, 1.7166000000012893e-05, 1.6735999999989426e-05, 1.7221999999983417e-05, 1.7389000000006538e-05, 1.7207999999990786e-05, 1.6889000000019916e-05, 1.6721999999996795e-05, 1.6708000000004164e-05, 1.6653000000005358e-05, 1.737499999998615e-05, 1.672299999999627e-05, 1.7221999999983417e-05, 1.6540999999981043e-05, 1.704099999999542e-05, 1.6708000000004164e-05, 1.720899999999026e-05, 1.705600000001528e-05, 1.6887999999992687e-05, 1.704099999999542e-05, 1.6527999999987886e-05, 1.6929999999998335e-05, 1.6903000000012547e-05, 1.6708000000004164e-05, 1.6721999999996795e-05, 1.7055000000015808e-05, 1.6721999999996795e-05, 1.6708000000004164e-05, 1.7223000000010646e-05, 1.704099999999542e-05, 1.6431000000011187e-05, 1.6542000000008272e-05, 1.7236000000003804e-05, 1.690299999998479e-05, 1.7221999999983417e-05, 1.704099999999542e-05, 1.655500000000143e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.564" endtime="20201029 12:44:02.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.552" endtime="20201029 12:44:02.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.579" endtime="20201029 12:44:02.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.575" endtime="20201029 12:44:02.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.573" endtime="20201029 12:44:02.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.056" endtime="20201029 12:44:02.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.055" endtime="20201029 12:44:02.606"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.637" endtime="20201029 12:44:02.655"></status>
</kw>
<msg timestamp="20201029 12:44:02.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.632" endtime="20201029 12:44:02.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.659" endtime="20201029 12:44:02.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.665" endtime="20201029 12:44:02.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.623" endtime="20201029 12:44:02.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.615" endtime="20201029 12:44:02.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.690" endtime="20201029 12:44:03.042"></status>
</kw>
<msg timestamp="20201029 12:44:03.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049973597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049990139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.685" endtime="20201029 12:44:03.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049973597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049990139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.052" endtime="20201029 12:44:03.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.071" endtime="20201029 12:44:03.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.678" endtime="20201029 12:44:03.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.673" endtime="20201029 12:44:03.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.089" level="INFO">${RESULT} = [{'diff': 1.6542000000001333e-05}, {'diff': 1.705500000000193e-05}, {'diff': 1.705500000000193e-05}, {'diff': 1.655500000000143e-05}, {'diff': 1.6569000000001e-05}, {'diff': 1.654100000000186e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:03.080" endtime="20201029 12:44:03.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.100" level="INFO">${ACCURACY} = {'diff': [1.6542000000001333e-05, 1.705500000000193e-05, 1.705500000000193e-05, 1.655500000000143e-05, 1.6569000000001e-05, 1.654100000000186e-05, 1.6707999999997225e-05, 1.687499999999953e-05, 1.7388...</msg>
<status status="PASS" starttime="20201029 12:44:03.091" endtime="20201029 12:44:03.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.111" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.109" endtime="20201029 12:44:03.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.117" level="INFO">VALUE: [1.6542000000001333e-05, 1.705500000000193e-05, 1.705500000000193e-05, 1.655500000000143e-05, 1.6569000000001e-05, 1.654100000000186e-05, 1.6707999999997225e-05, 1.687499999999953e-05, 1.73889999999996e-05, 1.6569000000001e-05, 1.73889999999996e-05, 1.6764000000002444e-05, 1.7056000000001403e-05, 1.68889999999991e-05, 1.6973000000003458e-05, 1.6528000000001764e-05, 1.6569000000001e-05, 1.7056000000001403e-05, 1.737500000000003e-05, 1.740299999999917e-05, 1.712499999999978e-05, 1.6721999999996795e-05, 1.713899999999935e-05, 1.7249999999996435e-05, 1.6570000000000473e-05, 1.7221999999997295e-05, 1.70690000000015e-05, 1.655500000000143e-05, 1.7222000000004234e-05, 1.719499999999763e-05, 1.7388000000000126e-05, 1.6943999999997905e-05, 1.727700000000304e-05, 1.7221999999997295e-05, 1.687499999999953e-05, 1.6514000000002194e-05, 1.690299999999867e-05, 1.7207999999997725e-05, 1.73889999999996e-05, 1.6722000000003734e-05, 1.6542000000001333e-05, 1.7028000000002264e-05, 1.736100000000046e-05, 1.715299999999892e-05, 1.6722000000003734e-05, 1.68889999999991e-05, 1.7235999999996865e-05, 1.6542000000001333e-05, 1.72089999999972e-05, 1.6723000000003208e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.114" endtime="20201029 12:44:03.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.102" endtime="20201029 12:44:03.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.129" endtime="20201029 12:44:03.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.124" endtime="20201029 12:44:03.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.122" endtime="20201029 12:44:03.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.610" endtime="20201029 12:44:03.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.608" endtime="20201029 12:44:03.154"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.177" endtime="20201029 12:44:03.194"></status>
</kw>
<msg timestamp="20201029 12:44:03.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.173" endtime="20201029 12:44:03.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.198" endtime="20201029 12:44:03.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.205" endtime="20201029 12:44:03.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.166" endtime="20201029 12:44:03.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.160" endtime="20201029 12:44:03.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.230" endtime="20201029 12:44:03.592"></status>
</kw>
<msg timestamp="20201029 12:44:03.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039673069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039690292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.226" endtime="20201029 12:44:03.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039673069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039690292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.602" endtime="20201029 12:44:03.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.621" endtime="20201029 12:44:03.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.219" endtime="20201029 12:44:03.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.214" endtime="20201029 12:44:03.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.638" level="INFO">${RESULT} = [{'diff': 1.7223000000003708e-05}, {'diff': 1.7236000000003804e-05}, {'diff': 1.705499999999499e-05}, {'diff': 1.6528000000001764e-05}, {'diff': 1.68889999999991e-05}, {'diff': 1.652700000000229e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:03.629" endtime="20201029 12:44:03.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.648" level="INFO">${ACCURACY} = {'diff': [1.7223000000003708e-05, 1.7236000000003804e-05, 1.705499999999499e-05, 1.6528000000001764e-05, 1.68889999999991e-05, 1.652700000000229e-05, 1.687499999999953e-05, 1.6707999999997225e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 12:44:03.640" endtime="20201029 12:44:03.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.658" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.656" endtime="20201029 12:44:03.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.664" level="INFO">VALUE: [1.7223000000003708e-05, 1.7236000000003804e-05, 1.705499999999499e-05, 1.6528000000001764e-05, 1.68889999999991e-05, 1.652700000000229e-05, 1.687499999999953e-05, 1.6707999999997225e-05, 1.687499999999953e-05, 1.737500000000003e-05, 1.6555999999993964e-05, 1.687499999999953e-05, 1.704099999999542e-05, 1.687499999999953e-05, 1.7361999999999933e-05, 1.6569000000001e-05, 1.6457999999996975e-05, 1.72089999999972e-05, 1.7249999999996435e-05, 1.7208000000004664e-05, 1.686099999999996e-05, 1.6542000000001333e-05, 1.655500000000143e-05, 1.6875000000006468e-05, 1.740299999999917e-05, 1.654100000000186e-05, 1.736100000000046e-05, 1.6736000000003304e-05, 1.737500000000003e-05, 1.68889999999991e-05, 1.655500000000143e-05, 1.6721999999996795e-05, 1.7041999999994895e-05, 1.6569000000001e-05, 1.6736000000003304e-05, 1.691699999999824e-05, 1.7056000000001403e-05, 1.7222000000004234e-05, 1.695899999999695e-05, 1.687499999999953e-05, 1.690299999999867e-05, 1.6721999999996795e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.655499999999449e-05, 1.6556000000000903e-05, 1.687499999999953e-05, 1.7208000000004664e-05, 1.654100000000186e-05, 1.6930000000005274e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.661" endtime="20201029 12:44:03.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.649" endtime="20201029 12:44:03.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.675" endtime="20201029 12:44:03.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.671" endtime="20201029 12:44:03.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.669" endtime="20201029 12:44:03.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.156" endtime="20201029 12:44:03.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.155" endtime="20201029 12:44:03.703"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.744" endtime="20201029 12:44:03.761"></status>
</kw>
<msg timestamp="20201029 12:44:03.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.740" endtime="20201029 12:44:03.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.764" endtime="20201029 12:44:03.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.771" endtime="20201029 12:44:03.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.732" endtime="20201029 12:44:03.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.719" endtime="20201029 12:44:03.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.795" endtime="20201029 12:44:04.137"></status>
</kw>
<msg timestamp="20201029 12:44:04.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062682292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062698819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.791" endtime="20201029 12:44:04.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062682292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062698819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.147" endtime="20201029 12:44:04.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.166" endtime="20201029 12:44:04.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.784" endtime="20201029 12:44:04.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.780" endtime="20201029 12:44:04.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.184" level="INFO">${RESULT} = [{'diff': 1.652700000000229e-05}, {'diff': 1.640299999999817e-05}, {'diff': 1.7361000000007398e-05}, {'diff': 1.6556000000000903e-05}, {'diff': 1.688899999999216e-05}, {'diff': 1.64169999999908e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:04.174" endtime="20201029 12:44:04.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.193" level="INFO">${ACCURACY} = {'diff': [1.652700000000229e-05, 1.640299999999817e-05, 1.7361000000007398e-05, 1.6556000000000903e-05, 1.688899999999216e-05, 1.64169999999908e-05, 1.684700000000039e-05, 1.6542000000008272e-05, 1.73...</msg>
<status status="PASS" starttime="20201029 12:44:04.186" endtime="20201029 12:44:04.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.204" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.202" endtime="20201029 12:44:04.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.216" level="INFO">VALUE: [1.652700000000229e-05, 1.640299999999817e-05, 1.7361000000007398e-05, 1.6556000000000903e-05, 1.688899999999216e-05, 1.64169999999908e-05, 1.684700000000039e-05, 1.6542000000008272e-05, 1.7388000000007064e-05, 1.7250000000010313e-05, 1.7389000000006538e-05, 1.708300000000107e-05, 1.7209000000004138e-05, 1.69169999999913e-05, 1.7111999999999683e-05, 1.722299999999677e-05, 1.687499999999953e-05, 1.6889000000006038e-05, 1.720899999999026e-05, 1.6667000000011867e-05, 1.6708000000004164e-05, 1.6764000000002444e-05, 1.737500000000003e-05, 1.688899999999216e-05, 1.6722000000010673e-05, 1.687499999999953e-05, 1.7195000000011507e-05, 1.6556000000000903e-05, 1.7000000000003124e-05, 1.6527999999987886e-05, 1.688899999999216e-05, 1.6499999999988746e-05, 1.658300000000057e-05, 1.6736000000003304e-05, 1.656899999999406e-05, 1.655500000000143e-05, 1.737500000000003e-05, 1.688899999999216e-05, 1.6556000000000903e-05, 1.6861000000006898e-05, 1.7262999999989592e-05, 1.7042000000008772e-05, 1.7417000000005678e-05, 1.687499999999953e-05, 1.6901999999999195e-05, 1.7403000000013047e-05, 1.6681000000004498e-05, 1.669499999999713e-05, 1.70410000000093e-05, 1.730499999999524e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.212" endtime="20201029 12:44:04.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.195" endtime="20201029 12:44:04.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.238" endtime="20201029 12:44:04.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.231" endtime="20201029 12:44:04.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.227" endtime="20201029 12:44:04.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.707" endtime="20201029 12:44:04.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.705" endtime="20201029 12:44:04.269"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.291" endtime="20201029 12:44:04.308"></status>
</kw>
<msg timestamp="20201029 12:44:04.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.288" endtime="20201029 12:44:04.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.323" endtime="20201029 12:44:04.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.331" endtime="20201029 12:44:04.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.281" endtime="20201029 12:44:04.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.275" endtime="20201029 12:44:04.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.359" endtime="20201029 12:44:04.710"></status>
</kw>
<msg timestamp="20201029 12:44:04.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044024542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044041931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.356" endtime="20201029 12:44:04.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044024542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044041931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.719" endtime="20201029 12:44:04.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.739" endtime="20201029 12:44:04.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.348" endtime="20201029 12:44:04.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.342" endtime="20201029 12:44:04.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.756" level="INFO">${RESULT} = [{'diff': 1.73889999999996e-05}, {'diff': 1.7041999999994895e-05}, {'diff': 1.70690000000015e-05}, {'diff': 1.741699999999874e-05}, {'diff': 1.6820000000000723e-05}, {'diff': 1.6722000000003734e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:04.747" endtime="20201029 12:44:04.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.767" level="INFO">${ACCURACY} = {'diff': [1.73889999999996e-05, 1.7041999999994895e-05, 1.70690000000015e-05, 1.741699999999874e-05, 1.6820000000000723e-05, 1.6722000000003734e-05, 1.6707999999997225e-05, 1.6570000000000473e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 12:44:04.758" endtime="20201029 12:44:04.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.778" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.776" endtime="20201029 12:44:04.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.786" level="INFO">VALUE: [1.73889999999996e-05, 1.7041999999994895e-05, 1.70690000000015e-05, 1.741699999999874e-05, 1.6820000000000723e-05, 1.6722000000003734e-05, 1.6707999999997225e-05, 1.6570000000000473e-05, 1.6722000000003734e-05, 1.6528000000001764e-05, 1.718099999999806e-05, 1.6735999999996365e-05, 1.740299999999917e-05, 1.6708000000004164e-05, 1.736100000000046e-05, 1.654100000000186e-05, 1.6901999999999195e-05, 1.6722000000003734e-05, 1.73889999999996e-05, 1.7195000000004568e-05, 1.6722000000003734e-05, 1.7222000000004234e-05, 1.7235999999996865e-05, 1.6556000000000903e-05, 1.6973000000003458e-05, 1.72089999999972e-05, 1.6722000000003734e-05, 1.6485999999996115e-05, 1.6723000000003208e-05, 1.6556000000000903e-05, 1.731899999999481e-05, 1.7250000000003374e-05, 1.737500000000003e-05, 1.7041999999994895e-05, 1.6709000000003638e-05, 1.7207999999997725e-05, 1.733300000000132e-05, 1.6943999999997905e-05, 1.672299999999627e-05, 1.7207999999997725e-05, 1.6764000000002444e-05, 1.6556000000000903e-05, 1.7098000000000113e-05, 1.7207999999997725e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.655500000000143e-05, 1.7208000000004664e-05, 1.737500000000003e-05, 1.7056000000001403e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.780" endtime="20201029 12:44:04.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.769" endtime="20201029 12:44:04.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.803" endtime="20201029 12:44:04.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.798" endtime="20201029 12:44:04.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.795" endtime="20201029 12:44:04.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.271" endtime="20201029 12:44:04.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.270" endtime="20201029 12:44:04.830"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.855" endtime="20201029 12:44:04.869"></status>
</kw>
<msg timestamp="20201029 12:44:04.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.851" endtime="20201029 12:44:04.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.873" endtime="20201029 12:44:04.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.879" endtime="20201029 12:44:04.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.844" endtime="20201029 12:44:04.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.837" endtime="20201029 12:44:04.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.902" endtime="20201029 12:44:05.248"></status>
</kw>
<msg timestamp="20201029 12:44:05.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042460681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042477903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.899" endtime="20201029 12:44:05.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042460681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042477903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.258" endtime="20201029 12:44:05.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.276" endtime="20201029 12:44:05.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.892" endtime="20201029 12:44:05.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.887" endtime="20201029 12:44:05.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.294" level="INFO">${RESULT} = [{'diff': 1.7221999999997295e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.68889999999991e-05}, {'diff': 1.690299999999867e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.68889999999991e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:05.285" endtime="20201029 12:44:05.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.305" level="INFO">${ACCURACY} = {'diff': [1.7221999999997295e-05, 1.7056000000001403e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.7056000000001403e-05, 1.68889999999991e-05, 1.6709000000003638e-05, 1.633300000000032e-05, 1.68...</msg>
<status status="PASS" starttime="20201029 12:44:05.296" endtime="20201029 12:44:05.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.316" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.313" endtime="20201029 12:44:05.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.321" level="INFO">VALUE: [1.7221999999997295e-05, 1.7056000000001403e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.7056000000001403e-05, 1.68889999999991e-05, 1.6709000000003638e-05, 1.633300000000032e-05, 1.68889999999991e-05, 1.655499999999449e-05, 1.655500000000143e-05, 1.73889999999996e-05, 1.68889999999991e-05, 1.7179999999998585e-05, 1.7193999999998155e-05, 1.68889999999991e-05, 1.704100000000236e-05, 1.663899999999885e-05, 1.711100000000021e-05, 1.687499999999953e-05, 1.6917000000005178e-05, 1.7179999999998585e-05, 1.665299999999842e-05, 1.6708000000004164e-05, 1.7401999999999695e-05, 1.7042000000001833e-05, 1.68889999999991e-05, 1.6736000000003304e-05, 1.6889000000006038e-05, 1.658300000000057e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.658299999999363e-05, 1.723699999999634e-05, 1.7236000000003804e-05, 1.7221999999997295e-05, 1.676299999999603e-05, 1.7222000000004234e-05, 1.68889999999991e-05, 1.705500000000193e-05, 1.655499999999449e-05, 1.6735999999996365e-05, 1.6556000000000903e-05, 1.6556000000000903e-05, 1.7070000000000973e-05, 1.7207999999997725e-05, 1.68889999999991e-05, 1.722299999999677e-05, 1.7235999999996865e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.318" endtime="20201029 12:44:05.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.307" endtime="20201029 12:44:05.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.333" endtime="20201029 12:44:05.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.328" endtime="20201029 12:44:05.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.326" endtime="20201029 12:44:05.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.833" endtime="20201029 12:44:05.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.831" endtime="20201029 12:44:05.358"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.381" endtime="20201029 12:44:05.398"></status>
</kw>
<msg timestamp="20201029 12:44:05.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.378" endtime="20201029 12:44:05.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.401" endtime="20201029 12:44:05.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.408" endtime="20201029 12:44:05.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.371" endtime="20201029 12:44:05.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.365" endtime="20201029 12:44:05.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.431" endtime="20201029 12:44:05.825"></status>
</kw>
<msg timestamp="20201029 12:44:05.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040707847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040724764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.428" endtime="20201029 12:44:05.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040707847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040724764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.835" endtime="20201029 12:44:05.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.854" endtime="20201029 12:44:05.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.421" endtime="20201029 12:44:05.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.416" endtime="20201029 12:44:05.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.871" level="INFO">${RESULT} = [{'diff': 1.691699999999824e-05}, {'diff': 1.7193999999998155e-05}, {'diff': 1.704100000000236e-05}, {'diff': 1.67089999999967e-05}, {'diff': 1.722299999999677e-05}, {'diff': 1.652700000000229e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:05.862" endtime="20201029 12:44:05.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.880" level="INFO">${ACCURACY} = {'diff': [1.691699999999824e-05, 1.7193999999998155e-05, 1.704100000000236e-05, 1.67089999999967e-05, 1.722299999999677e-05, 1.652700000000229e-05, 1.7070000000000973e-05, 1.7056000000001403e-05, 1.72...</msg>
<status status="PASS" starttime="20201029 12:44:05.873" endtime="20201029 12:44:05.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.891" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.889" endtime="20201029 12:44:05.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.896" level="INFO">VALUE: [1.691699999999824e-05, 1.7193999999998155e-05, 1.704100000000236e-05, 1.67089999999967e-05, 1.722299999999677e-05, 1.652700000000229e-05, 1.7070000000000973e-05, 1.7056000000001403e-05, 1.7264000000002944e-05, 1.7042000000001833e-05, 1.690299999999867e-05, 1.655500000000143e-05, 1.637499999999903e-05, 1.6541999999994395e-05, 1.6570000000000473e-05, 1.704099999999542e-05, 1.7028000000002264e-05, 1.7055999999994464e-05, 1.6721999999996795e-05, 1.7207999999997725e-05, 1.73889999999996e-05, 1.684700000000039e-05, 1.68889999999991e-05, 1.7208000000004664e-05, 1.7056000000001403e-05, 1.652700000000229e-05, 1.6709000000003638e-05, 1.6735999999996365e-05, 1.705499999999499e-05, 1.687499999999953e-05, 1.6679999999998085e-05, 1.73889999999996e-05, 1.6721999999996795e-05, 1.6722000000003734e-05, 1.67089999999967e-05, 1.716699999999849e-05, 1.740299999999917e-05, 1.7221999999997295e-05, 1.702699999999585e-05, 1.7221999999997295e-05, 1.655499999999449e-05, 1.715299999999892e-05, 1.661099999999971e-05, 1.737500000000003e-05, 1.7070000000000973e-05, 1.6721999999996795e-05, 1.736100000000046e-05, 1.6569000000001e-05, 1.7194000000005094e-05, 1.6708000000004164e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.893" endtime="20201029 12:44:05.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.882" endtime="20201029 12:44:05.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.909" endtime="20201029 12:44:05.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.904" endtime="20201029 12:44:05.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.902" endtime="20201029 12:44:05.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.361" endtime="20201029 12:44:05.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.360" endtime="20201029 12:44:05.934"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.956" endtime="20201029 12:44:05.973"></status>
</kw>
<msg timestamp="20201029 12:44:05.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.953" endtime="20201029 12:44:05.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.976" endtime="20201029 12:44:05.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.982" endtime="20201029 12:44:05.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.946" endtime="20201029 12:44:05.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.940" endtime="20201029 12:44:05.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.007" endtime="20201029 12:44:06.371"></status>
</kw>
<msg timestamp="20201029 12:44:06.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038949917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038973625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.004" endtime="20201029 12:44:06.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038949917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038973625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.381" endtime="20201029 12:44:06.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.399" endtime="20201029 12:44:06.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.997" endtime="20201029 12:44:06.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.992" endtime="20201029 12:44:06.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.417" level="INFO">${RESULT} = [{'diff': 2.3707999999997287e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.369500000000413e-05}, {'diff': 2.4236000000003866e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.437500000000009e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:06.407" endtime="20201029 12:44:06.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.427" level="INFO">${ACCURACY} = {'diff': [2.3707999999997287e-05, 2.437500000000009e-05, 2.369500000000413e-05, 2.4236000000003866e-05, 2.440299999999923e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.386100000000002e-05, 2.43...</msg>
<status status="PASS" starttime="20201029 12:44:06.419" endtime="20201029 12:44:06.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.438" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.436" endtime="20201029 12:44:06.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.444" level="INFO">VALUE: [2.3707999999997287e-05, 2.437500000000009e-05, 2.369500000000413e-05, 2.4236000000003866e-05, 2.440299999999923e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.386100000000002e-05, 2.437500000000009e-05, 2.4193999999998217e-05, 2.369500000000413e-05, 2.4056000000001465e-05, 2.3693999999997717e-05, 2.436100000000052e-05, 2.3485999999996177e-05, 2.419499999999769e-05, 2.4069999999994096e-05, 2.3514000000002255e-05, 2.434700000000095e-05, 2.372299999999633e-05, 2.4070000000001035e-05, 2.386100000000002e-05, 2.437500000000009e-05, 2.4208000000004726e-05, 2.386100000000002e-05, 2.419500000000463e-05, 2.386100000000002e-05, 2.37090000000037e-05, 2.3584000000000105e-05, 2.3542000000001395e-05, 2.368100000000456e-05, 2.4028000000002325e-05, 2.4054999999995053e-05, 2.369500000000413e-05, 2.387499999999959e-05, 2.4040999999995483e-05, 2.387499999999959e-05, 2.4098000000000175e-05, 2.370899999999676e-05, 2.369499999999719e-05, 2.3485999999996177e-05, 2.387499999999959e-05, 2.4221999999997357e-05, 2.4207999999997787e-05, 2.352700000000235e-05, 2.354100000000192e-05, 2.4207999999997787e-05, 2.356900000000106e-05, 2.437500000000009e-05, 2.368099999999762e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.440" endtime="20201029 12:44:06.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.428" endtime="20201029 12:44:06.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.458" endtime="20201029 12:44:06.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.452" endtime="20201029 12:44:06.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.450" endtime="20201029 12:44:06.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.936" endtime="20201029 12:44:06.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.935" endtime="20201029 12:44:06.483"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.505" endtime="20201029 12:44:06.520"></status>
</kw>
<msg timestamp="20201029 12:44:06.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.502" endtime="20201029 12:44:06.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.523" endtime="20201029 12:44:06.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.529" endtime="20201029 12:44:06.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.495" endtime="20201029 12:44:06.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.489" endtime="20201029 12:44:06.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.552" endtime="20201029 12:44:06.885"></status>
</kw>
<msg timestamp="20201029 12:44:06.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038833486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038857528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.549" endtime="20201029 12:44:06.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038833486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038857528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.895" endtime="20201029 12:44:06.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.913" endtime="20201029 12:44:06.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.542" endtime="20201029 12:44:06.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.537" endtime="20201029 12:44:06.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.930" level="INFO">${RESULT} = [{'diff': 2.4042000000001895e-05}, {'diff': 2.369499999999719e-05}, {'diff': 2.4333999999993916e-05}, {'diff': 2.4028000000002325e-05}, {'diff': 2.4042000000001895e-05}, {'diff': 2.4221999999997357e-0...</msg>
<status status="PASS" starttime="20201029 12:44:06.922" endtime="20201029 12:44:06.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.941" level="INFO">${ACCURACY} = {'diff': [2.4042000000001895e-05, 2.369499999999719e-05, 2.4333999999993916e-05, 2.4028000000002325e-05, 2.4042000000001895e-05, 2.4221999999997357e-05, 2.4042000000001895e-05, 2.4207999999997787e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:06.932" endtime="20201029 12:44:06.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.951" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.949" endtime="20201029 12:44:06.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.957" level="INFO">VALUE: [2.4042000000001895e-05, 2.369499999999719e-05, 2.4333999999993916e-05, 2.4028000000002325e-05, 2.4042000000001895e-05, 2.4221999999997357e-05, 2.4042000000001895e-05, 2.4207999999997787e-05, 2.3556000000000965e-05, 2.4193999999998217e-05, 2.4042000000001895e-05, 2.355500000000149e-05, 2.3528000000001825e-05, 2.366699999999805e-05, 2.383300000000088e-05, 2.387499999999959e-05, 2.3778000000002075e-05, 2.3707999999997287e-05, 2.369499999999719e-05, 2.3528000000001825e-05, 2.4221999999997357e-05, 2.386100000000002e-05, 2.3972000000004046e-05, 2.386100000000002e-05, 2.436100000000052e-05, 2.42090000000042e-05, 2.4221999999997357e-05, 2.38890000000061e-05, 2.436100000000052e-05, 2.4249999999996497e-05, 2.3862000000006434e-05, 2.436100000000052e-05, 2.4193999999998217e-05, 2.420899999999726e-05, 2.3665999999998577e-05, 2.386100000000002e-05, 2.4221999999997357e-05, 2.4042000000001895e-05, 2.405500000000199e-05, 2.4361999999999995e-05, 2.437500000000009e-05, 2.37090000000037e-05, 2.4013999999995816e-05, 2.4305999999994776e-05, 2.39169999999983e-05, 2.369499999999719e-05, 2.387499999999959e-05, 2.3542000000001395e-05, 2.437500000000009e-05, 2.386100000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.954" endtime="20201029 12:44:06.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.942" endtime="20201029 12:44:06.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.969" endtime="20201029 12:44:06.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.965" endtime="20201029 12:44:06.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.963" endtime="20201029 12:44:06.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.485" endtime="20201029 12:44:06.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.484" endtime="20201029 12:44:06.994"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.017" endtime="20201029 12:44:07.032"></status>
</kw>
<msg timestamp="20201029 12:44:07.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.014" endtime="20201029 12:44:07.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.035" endtime="20201029 12:44:07.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.041" endtime="20201029 12:44:07.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.006" endtime="20201029 12:44:07.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.001" endtime="20201029 12:44:07.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.065" endtime="20201029 12:44:07.406"></status>
</kw>
<msg timestamp="20201029 12:44:07.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039263819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039287694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.061" endtime="20201029 12:44:07.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039263819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039287694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.415" endtime="20201029 12:44:07.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.434" endtime="20201029 12:44:07.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.054" endtime="20201029 12:44:07.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.049" endtime="20201029 12:44:07.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.451" level="INFO">${RESULT} = [{'diff': 2.387499999999959e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.406900000000156e-05}, {'diff': 2.3541999999994456e-05}, {'diff': 2.3887999999999687e-05}, {'diff': 2.4193999999998217e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:07.442" endtime="20201029 12:44:07.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.462" level="INFO">${ACCURACY} = {'diff': [2.387499999999959e-05, 2.388899999999916e-05, 2.406900000000156e-05, 2.3541999999994456e-05, 2.3887999999999687e-05, 2.4193999999998217e-05, 2.4193999999998217e-05, 2.387499999999959e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:07.453" endtime="20201029 12:44:07.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.474" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.471" endtime="20201029 12:44:07.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.479" level="INFO">VALUE: [2.387499999999959e-05, 2.388899999999916e-05, 2.406900000000156e-05, 2.3541999999994456e-05, 2.3887999999999687e-05, 2.4193999999998217e-05, 2.4193999999998217e-05, 2.387499999999959e-05, 2.4360999999993582e-05, 2.408300000000113e-05, 2.437500000000009e-05, 2.405500000000199e-05, 2.420899999999726e-05, 2.4042000000001895e-05, 2.436100000000052e-05, 2.386100000000002e-05, 2.368099999999762e-05, 2.434700000000095e-05, 2.419499999999769e-05, 2.3556000000000965e-05, 2.404100000000242e-05, 2.387499999999959e-05, 2.4361999999999995e-05, 2.3541999999994456e-05, 2.363900000000585e-05, 2.3570000000000535e-05, 2.38890000000061e-05, 2.4249999999996497e-05, 2.3722000000003796e-05, 2.4348000000000425e-05, 2.4264000000003005e-05, 2.3570000000000535e-05, 2.3999999999996247e-05, 2.3541999999994456e-05, 2.419499999999769e-05, 2.3722000000003796e-05, 2.39169999999983e-05, 2.3542000000001395e-05, 2.388899999999916e-05, 2.3485999999996177e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.387499999999959e-05, 2.3820000000000785e-05, 2.4250000000003435e-05, 2.422299999999683e-05, 2.413899999999941e-05, 2.3708000000004226e-05, 2.438899999999966e-05, 2.4208000000004726e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.476" endtime="20201029 12:44:07.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.464" endtime="20201029 12:44:07.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.492" endtime="20201029 12:44:07.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.488" endtime="20201029 12:44:07.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.485" endtime="20201029 12:44:07.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.996" endtime="20201029 12:44:07.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.995" endtime="20201029 12:44:07.517"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.540" endtime="20201029 12:44:07.555"></status>
</kw>
<msg timestamp="20201029 12:44:07.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.536" endtime="20201029 12:44:07.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.558" endtime="20201029 12:44:07.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.564" endtime="20201029 12:44:07.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.529" endtime="20201029 12:44:07.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.524" endtime="20201029 12:44:07.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.587" endtime="20201029 12:44:07.927"></status>
</kw>
<msg timestamp="20201029 12:44:07.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039276722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039300931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.584" endtime="20201029 12:44:07.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039276722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039300931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.936" endtime="20201029 12:44:07.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.955" endtime="20201029 12:44:07.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.577" endtime="20201029 12:44:07.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.572" endtime="20201029 12:44:07.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.972" level="INFO">${RESULT} = [{'diff': 2.420899999999726e-05}, {'diff': 2.413900000000635e-05}, {'diff': 2.3721999999996857e-05}, {'diff': 2.3514000000002255e-05}, {'diff': 2.3693999999997717e-05}, {'diff': 2.437500000000009e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:07.963" endtime="20201029 12:44:07.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.981" level="INFO">${ACCURACY} = {'diff': [2.420899999999726e-05, 2.413900000000635e-05, 2.3721999999996857e-05, 2.3514000000002255e-05, 2.3693999999997717e-05, 2.437500000000009e-05, 2.3722000000003796e-05, 2.402700000000285e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:07.974" endtime="20201029 12:44:07.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.992" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.989" endtime="20201029 12:44:07.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.997" level="INFO">VALUE: [2.420899999999726e-05, 2.413900000000635e-05, 2.3721999999996857e-05, 2.3514000000002255e-05, 2.3693999999997717e-05, 2.437500000000009e-05, 2.3722000000003796e-05, 2.402700000000285e-05, 2.397299999999658e-05, 2.390299999999873e-05, 2.386100000000002e-05, 2.408300000000113e-05, 2.386100000000002e-05, 2.38890000000061e-05, 2.437500000000009e-05, 2.4028000000002325e-05, 2.388899999999916e-05, 2.386100000000002e-05, 2.3514000000002255e-05, 2.434700000000095e-05, 2.370899999999676e-05, 2.3693999999997717e-05, 2.369499999999719e-05, 2.368099999999762e-05, 2.369499999999719e-05, 2.436100000000052e-05, 2.4042000000001895e-05, 2.422299999999683e-05, 2.42090000000042e-05, 2.4014000000002755e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.3514000000002255e-05, 2.3707999999997287e-05, 2.369499999999719e-05, 2.434700000000095e-05, 2.3861999999999495e-05, 2.3527999999994886e-05, 2.4250000000003435e-05, 2.4014000000002755e-05, 2.386100000000002e-05, 2.434700000000095e-05, 2.352700000000235e-05, 2.3542000000001395e-05, 2.3722000000003796e-05, 2.437500000000009e-05, 2.3528000000001825e-05, 2.387499999999959e-05, 2.3513999999995316e-05, 2.3722000000003796e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.994" endtime="20201029 12:44:07.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.983" endtime="20201029 12:44:08.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.010" endtime="20201029 12:44:08.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.005" endtime="20201029 12:44:08.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.003" endtime="20201029 12:44:08.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.519" endtime="20201029 12:44:08.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.518" endtime="20201029 12:44:08.034"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.056" endtime="20201029 12:44:08.073"></status>
</kw>
<msg timestamp="20201029 12:44:08.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.053" endtime="20201029 12:44:08.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.076" endtime="20201029 12:44:08.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.082" endtime="20201029 12:44:08.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.046" endtime="20201029 12:44:08.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.041" endtime="20201029 12:44:08.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.105" endtime="20201029 12:44:08.453"></status>
</kw>
<msg timestamp="20201029 12:44:08.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04018475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:08.102" endtime="20201029 12:44:08.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04018475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:08.463" endtime="20201029 12:44:08.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.482" endtime="20201029 12:44:08.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.095" endtime="20201029 12:44:08.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.090" endtime="20201029 12:44:08.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.500" level="INFO">${RESULT} = [{'diff': 2.386100000000002e-05}, {'diff': 2.3556000000000965e-05}, {'diff': 2.4193999999998217e-05}, {'diff': 2.4028000000002325e-05}, {'diff': 2.405500000000199e-05}, {'diff': 2.386100000000002e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:08.491" endtime="20201029 12:44:08.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.510" level="INFO">${ACCURACY} = {'diff': [2.386100000000002e-05, 2.3556000000000965e-05, 2.4193999999998217e-05, 2.4028000000002325e-05, 2.405500000000199e-05, 2.386100000000002e-05, 2.420899999999726e-05, 2.368099999999762e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 12:44:08.502" endtime="20201029 12:44:08.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.521" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.519" endtime="20201029 12:44:08.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.527" level="INFO">VALUE: [2.386100000000002e-05, 2.3556000000000965e-05, 2.4193999999998217e-05, 2.4028000000002325e-05, 2.405500000000199e-05, 2.386100000000002e-05, 2.420899999999726e-05, 2.368099999999762e-05, 2.387500000000653e-05, 2.387499999999959e-05, 2.3526999999995413e-05, 2.419499999999769e-05, 2.405500000000199e-05, 2.3556000000000965e-05, 2.3542000000001395e-05, 2.438899999999966e-05, 2.3929999999998397e-05, 2.3887999999999687e-05, 2.4193999999998217e-05, 2.4042000000001895e-05, 2.420899999999726e-05, 2.37090000000037e-05, 2.3887999999999687e-05, 2.3527999999994886e-05, 2.372300000000327e-05, 2.4040999999995483e-05, 2.4026999999995913e-05, 2.3528000000001825e-05, 2.440300000000617e-05, 2.363900000000585e-05, 2.3707999999997287e-05, 2.436100000000052e-05, 2.4042000000001895e-05, 2.387499999999959e-05, 2.4040999999995483e-05, 2.4207999999997787e-05, 2.4361999999999995e-05, 2.420899999999726e-05, 2.3542000000001395e-05, 2.387499999999959e-05, 2.3708000000004226e-05, 2.4221999999997357e-05, 2.3708000000004226e-05, 2.4042000000001895e-05, 2.420899999999726e-05, 2.3500000000002685e-05, 2.35970000000002e-05, 2.436100000000052e-05, 2.3707999999997287e-05, 2.3943999999997967e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.524" endtime="20201029 12:44:08.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.512" endtime="20201029 12:44:08.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.541" endtime="20201029 12:44:08.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.535" endtime="20201029 12:44:08.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.532" endtime="20201029 12:44:08.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.036" endtime="20201029 12:44:08.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.035" endtime="20201029 12:44:08.566"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.592" endtime="20201029 12:44:08.610"></status>
</kw>
<msg timestamp="20201029 12:44:08.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.588" endtime="20201029 12:44:08.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.613" endtime="20201029 12:44:08.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.620" endtime="20201029 12:44:08.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.581" endtime="20201029 12:44:08.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.575" endtime="20201029 12:44:08.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.644" endtime="20201029 12:44:08.998"></status>
</kw>
<msg timestamp="20201029 12:44:09.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043938306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043961847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.641" endtime="20201029 12:44:09.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043938306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043961847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.008" endtime="20201029 12:44:09.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.027" endtime="20201029 12:44:09.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.634" endtime="20201029 12:44:09.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.629" endtime="20201029 12:44:09.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.044" level="INFO">${RESULT} = [{'diff': 2.3540999999994983e-05}, {'diff': 2.4208000000004726e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.387499999999959e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.3556000000000965e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:09.035" endtime="20201029 12:44:09.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.055" level="INFO">${ACCURACY} = {'diff': [2.3540999999994983e-05, 2.4208000000004726e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.44169999999988e-05, 2.3556000000000965e-05, 2.3486000000003115e-05, 2.419500000000463e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 12:44:09.046" endtime="20201029 12:44:09.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.066" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.064" endtime="20201029 12:44:09.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.071" level="INFO">VALUE: [2.3540999999994983e-05, 2.4208000000004726e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.44169999999988e-05, 2.3556000000000965e-05, 2.3486000000003115e-05, 2.419500000000463e-05, 2.386100000000002e-05, 2.4208000000004726e-05, 2.4028000000002325e-05, 2.4361999999999995e-05, 2.420899999999726e-05, 2.4193999999998217e-05, 2.3528000000001825e-05, 2.369499999999719e-05, 2.368100000000456e-05, 2.3792000000001645e-05, 2.4221999999997357e-05, 2.387499999999959e-05, 2.386100000000002e-05, 2.354100000000192e-05, 2.3680000000005086e-05, 2.404100000000242e-05, 2.3721999999996857e-05, 2.3707999999997287e-05, 2.404100000000242e-05, 2.369499999999719e-05, 2.3721999999996857e-05, 2.387499999999959e-05, 2.3722000000003796e-05, 2.354100000000192e-05, 2.4056000000001465e-05, 2.4026999999995913e-05, 2.37090000000037e-05, 2.3542000000001395e-05, 2.390300000000567e-05, 2.386100000000002e-05, 2.420899999999726e-05, 2.387499999999959e-05, 2.3722000000003796e-05, 2.438899999999966e-05, 2.390299999999873e-05, 2.387499999999959e-05, 2.436100000000052e-05, 2.3708000000004226e-05, 2.387499999999959e-05, 2.4179999999998647e-05, 2.386100000000002e-05, 2.418099999999812e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.068" endtime="20201029 12:44:09.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.057" endtime="20201029 12:44:09.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.084" endtime="20201029 12:44:09.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.079" endtime="20201029 12:44:09.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.077" endtime="20201029 12:44:09.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.568" endtime="20201029 12:44:09.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.567" endtime="20201029 12:44:09.109"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.132" endtime="20201029 12:44:09.149"></status>
</kw>
<msg timestamp="20201029 12:44:09.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.128" endtime="20201029 12:44:09.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.152" endtime="20201029 12:44:09.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.158" endtime="20201029 12:44:09.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.121" endtime="20201029 12:44:09.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.116" endtime="20201029 12:44:09.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.182" endtime="20201029 12:44:09.518"></status>
</kw>
<msg timestamp="20201029 12:44:09.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039717556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039741764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.178" endtime="20201029 12:44:09.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039717556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039741764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.528" endtime="20201029 12:44:09.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.547" endtime="20201029 12:44:09.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.171" endtime="20201029 12:44:09.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.166" endtime="20201029 12:44:09.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.565" level="INFO">${RESULT} = [{'diff': 2.4207999999997787e-05}, {'diff': 2.3707999999997287e-05}, {'diff': 2.4222000000004296e-05}, {'diff': 2.4041999999994956e-05}, {'diff': 2.4207999999997787e-05}, {'diff': 2.437500000000009e-0...</msg>
<status status="PASS" starttime="20201029 12:44:09.556" endtime="20201029 12:44:09.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.576" level="INFO">${ACCURACY} = {'diff': [2.4207999999997787e-05, 2.3707999999997287e-05, 2.4222000000004296e-05, 2.4041999999994956e-05, 2.4207999999997787e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4042000000001895e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:09.567" endtime="20201029 12:44:09.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.586" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.584" endtime="20201029 12:44:09.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.592" level="INFO">VALUE: [2.4207999999997787e-05, 2.3707999999997287e-05, 2.4222000000004296e-05, 2.4041999999994956e-05, 2.4207999999997787e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4042000000001895e-05, 2.3887999999999687e-05, 2.4056000000001465e-05, 2.369500000000413e-05, 2.404100000000242e-05, 2.354100000000192e-05, 2.373700000000284e-05, 2.436100000000052e-05, 2.4207999999997787e-05, 2.4249999999996497e-05, 2.4207999999997787e-05, 2.386100000000002e-05, 2.437500000000009e-05, 2.419499999999769e-05, 2.436100000000052e-05, 2.3693999999997717e-05, 2.4042000000001895e-05, 2.386100000000002e-05, 2.437500000000009e-05, 2.370899999999676e-05, 2.3514000000002255e-05, 2.4000000000003185e-05, 2.4306000000001715e-05, 2.387499999999959e-05, 2.35970000000002e-05, 2.3763000000003032e-05, 2.3847999999999925e-05, 2.4042000000001895e-05, 2.3611999999999245e-05, 2.4014000000002755e-05, 2.387499999999959e-05, 2.3554999999994553e-05, 2.404100000000242e-05, 2.3735999999996427e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.419500000000463e-05, 2.438899999999966e-05, 2.419499999999769e-05, 2.3542000000001395e-05, 2.4236000000003866e-05, 2.3680000000005086e-05, 2.4193999999998217e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.589" endtime="20201029 12:44:09.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.577" endtime="20201029 12:44:09.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.609" endtime="20201029 12:44:09.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.605" endtime="20201029 12:44:09.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.602" endtime="20201029 12:44:09.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.111" endtime="20201029 12:44:09.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.110" endtime="20201029 12:44:09.634"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.656" endtime="20201029 12:44:09.673"></status>
</kw>
<msg timestamp="20201029 12:44:09.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.653" endtime="20201029 12:44:09.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.678" endtime="20201029 12:44:09.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.687" endtime="20201029 12:44:09.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.646" endtime="20201029 12:44:09.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.641" endtime="20201029 12:44:09.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.718" endtime="20201029 12:44:10.055"></status>
</kw>
<msg timestamp="20201029 12:44:10.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038704042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038734556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.715" endtime="20201029 12:44:10.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038704042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038734556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.065" endtime="20201029 12:44:10.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.083" endtime="20201029 12:44:10.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.705" endtime="20201029 12:44:10.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.699" endtime="20201029 12:44:10.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.100" level="INFO">${RESULT} = [{'diff': 3.0514000000002317e-05}, {'diff': 3.101400000000282e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.122200000000436e-05}, {'diff': 3.119399999999828e-05}, {'diff': 3.070800000000429e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:10.091" endtime="20201029 12:44:10.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.109" level="INFO">${ACCURACY} = {'diff': [3.0514000000002317e-05, 3.101400000000282e-05, 3.063899999999897e-05, 3.122200000000436e-05, 3.119399999999828e-05, 3.070800000000429e-05, 3.055599999999409e-05, 3.137500000000015e-05, 3.136...</msg>
<status status="PASS" starttime="20201029 12:44:10.102" endtime="20201029 12:44:10.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.120" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.118" endtime="20201029 12:44:10.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.125" level="INFO">VALUE: [3.0514000000002317e-05, 3.101400000000282e-05, 3.063899999999897e-05, 3.122200000000436e-05, 3.119399999999828e-05, 3.070800000000429e-05, 3.055599999999409e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.063899999999897e-05, 3.137500000000015e-05, 3.087499999999965e-05, 3.105600000000153e-05, 3.119499999999775e-05, 3.0818999999994434e-05, 3.104200000000196e-05, 3.133399999999398e-05, 3.119399999999828e-05, 3.102800000000239e-05, 3.093100000000487e-05, 3.084700000000051e-05, 3.104100000000248e-05, 3.119399999999828e-05, 3.1362000000000056e-05, 3.119399999999828e-05, 3.101399999999588e-05, 3.0514000000002317e-05, 3.119499999999775e-05, 3.119500000000469e-05, 3.138899999999972e-05, 3.069400000000472e-05, 3.137500000000015e-05, 3.084700000000051e-05, 3.070900000000376e-05, 3.086100000000008e-05, 3.070799999999735e-05, 3.069399999999778e-05, 3.069399999999778e-05, 3.052800000000189e-05, 3.104200000000196e-05, 3.0513999999995378e-05, 3.087499999999965e-05, 3.0540999999995044e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.091699999999836e-05, 3.052800000000189e-05, 3.067999999999821e-05, 3.052800000000189e-05, 3.070800000000429e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.122" endtime="20201029 12:44:10.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.111" endtime="20201029 12:44:10.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.138" endtime="20201029 12:44:10.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.134" endtime="20201029 12:44:10.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.131" endtime="20201029 12:44:10.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.636" endtime="20201029 12:44:10.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.635" endtime="20201029 12:44:10.163"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.185" endtime="20201029 12:44:10.200"></status>
</kw>
<msg timestamp="20201029 12:44:10.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.182" endtime="20201029 12:44:10.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.204" endtime="20201029 12:44:10.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.210" endtime="20201029 12:44:10.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.175" endtime="20201029 12:44:10.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.169" endtime="20201029 12:44:10.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.234" endtime="20201029 12:44:10.569"></status>
</kw>
<msg timestamp="20201029 12:44:10.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038941208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038972403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.231" endtime="20201029 12:44:10.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038941208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038972403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.578" endtime="20201029 12:44:10.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.597" endtime="20201029 12:44:10.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.224" endtime="20201029 12:44:10.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.219" endtime="20201029 12:44:10.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.614" level="INFO">${RESULT} = [{'diff': 3.119500000000469e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.152799999999595e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.069500000000419e-05}, {'diff': 3.104200000000196e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:10.605" endtime="20201029 12:44:10.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.624" level="INFO">${ACCURACY} = {'diff': [3.119500000000469e-05, 3.137500000000015e-05, 3.152799999999595e-05, 3.138899999999972e-05, 3.069500000000419e-05, 3.104200000000196e-05, 3.134700000000101e-05, 3.1360999999993644e-05, 3.069...</msg>
<status status="PASS" starttime="20201029 12:44:10.616" endtime="20201029 12:44:10.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.634" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.632" endtime="20201029 12:44:10.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.640" level="INFO">VALUE: [3.119500000000469e-05, 3.137500000000015e-05, 3.152799999999595e-05, 3.138899999999972e-05, 3.069500000000419e-05, 3.104200000000196e-05, 3.134700000000101e-05, 3.1360999999993644e-05, 3.069399999999778e-05, 3.0514000000002317e-05, 3.122199999999742e-05, 3.136100000000058e-05, 3.087499999999965e-05, 3.120799999999785e-05, 3.068100000000462e-05, 3.084700000000051e-05, 3.066599999999864e-05, 3.119499999999775e-05, 3.069500000000419e-05, 3.0611999999999306e-05, 3.1348000000000487e-05, 3.087499999999965e-05, 3.120899999999732e-05, 3.137500000000015e-05, 3.069399999999778e-05, 3.116699999999861e-05, 3.086100000000008e-05, 3.076400000000257e-05, 3.070899999999682e-05, 3.102800000000239e-05, 3.06249999999994e-05, 3.119400000000522e-05, 3.086100000000008e-05, 3.083400000000042e-05, 3.067999999999821e-05, 3.118100000000512e-05, 3.0500000000002747e-05, 3.119499999999775e-05, 3.118099999999818e-05, 3.119499999999775e-05, 3.0513000000002843e-05, 3.0500000000002747e-05, 3.102799999999545e-05, 3.0514000000002317e-05, 3.070899999999682e-05, 3.134700000000101e-05, 3.122199999999742e-05, 3.100000000000325e-05, 3.069399999999778e-05, 3.117999999999871e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.637" endtime="20201029 12:44:10.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.626" endtime="20201029 12:44:10.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.654" endtime="20201029 12:44:10.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.648" endtime="20201029 12:44:10.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.645" endtime="20201029 12:44:10.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.165" endtime="20201029 12:44:10.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.164" endtime="20201029 12:44:10.678"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.701" endtime="20201029 12:44:10.716"></status>
</kw>
<msg timestamp="20201029 12:44:10.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.697" endtime="20201029 12:44:10.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.720" endtime="20201029 12:44:10.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.726" endtime="20201029 12:44:10.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.690" endtime="20201029 12:44:10.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.685" endtime="20201029 12:44:10.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.749" endtime="20201029 12:44:11.084"></status>
</kw>
<msg timestamp="20201029 12:44:11.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038904347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038935042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.745" endtime="20201029 12:44:11.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038904347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038935042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.093" endtime="20201029 12:44:11.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.111" endtime="20201029 12:44:11.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.738" endtime="20201029 12:44:11.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.734" endtime="20201029 12:44:11.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.128" level="INFO">${RESULT} = [{'diff': 3.069500000000419e-05}, {'diff': 3.082000000000085e-05}, {'diff': 3.0499999999995808e-05}, {'diff': 3.052800000000189e-05}, {'diff': 3.0846999999993574e-05}, {'diff': 3.086100000000008e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:11.120" endtime="20201029 12:44:11.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.139" level="INFO">${ACCURACY} = {'diff': [3.069500000000419e-05, 3.082000000000085e-05, 3.0499999999995808e-05, 3.052800000000189e-05, 3.0846999999993574e-05, 3.086100000000008e-05, 3.0513999999995378e-05, 3.136100000000058e-05, 3.0...</msg>
<status status="PASS" starttime="20201029 12:44:11.130" endtime="20201029 12:44:11.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.150" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.147" endtime="20201029 12:44:11.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.155" level="INFO">VALUE: [3.069500000000419e-05, 3.082000000000085e-05, 3.0499999999995808e-05, 3.052800000000189e-05, 3.0846999999993574e-05, 3.086100000000008e-05, 3.0513999999995378e-05, 3.136100000000058e-05, 3.052799999999495e-05, 3.120799999999785e-05, 3.122199999999742e-05, 3.119499999999775e-05, 3.069500000000419e-05, 3.119499999999775e-05, 3.119400000000522e-05, 3.137500000000015e-05, 3.069500000000419e-05, 3.086100000000008e-05, 3.058300000000069e-05, 3.124999999999656e-05, 3.141699999999886e-05, 3.11249999999999e-05, 3.087499999999965e-05, 3.0514000000002317e-05, 3.105599999999459e-05, 3.100000000000325e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.0540999999995044e-05, 3.069499999999725e-05, 3.093099999999793e-05, 3.072200000000386e-05, 3.104100000000248e-05, 3.086100000000008e-05, 3.052700000000241e-05, 3.140299999999929e-05, 3.102800000000239e-05, 3.056900000000112e-05, 3.102799999999545e-05, 3.122199999999742e-05, 3.069500000000419e-05, 3.055600000000103e-05, 3.074999999999606e-05, 3.102800000000239e-05, 3.108400000000067e-05, 3.087499999999965e-05, 3.0790999999995294e-05, 3.055599999999409e-05, 3.122199999999742e-05, 3.067999999999821e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.152" endtime="20201029 12:44:11.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.141" endtime="20201029 12:44:11.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.167" endtime="20201029 12:44:11.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.163" endtime="20201029 12:44:11.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.161" endtime="20201029 12:44:11.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.681" endtime="20201029 12:44:11.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.679" endtime="20201029 12:44:11.192"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.215" endtime="20201029 12:44:11.230"></status>
</kw>
<msg timestamp="20201029 12:44:11.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.211" endtime="20201029 12:44:11.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.233" endtime="20201029 12:44:11.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.240" endtime="20201029 12:44:11.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.204" endtime="20201029 12:44:11.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.199" endtime="20201029 12:44:11.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.265" endtime="20201029 12:44:11.622"></status>
</kw>
<msg timestamp="20201029 12:44:11.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039231819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039262528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.260" endtime="20201029 12:44:11.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039231819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039262528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.632" endtime="20201029 12:44:11.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.650" endtime="20201029 12:44:11.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.252" endtime="20201029 12:44:11.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.247" endtime="20201029 12:44:11.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.668" level="INFO">${RESULT} = [{'diff': 3.070899999999682e-05}, {'diff': 3.152799999999595e-05}, {'diff': 3.120899999999732e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.082000000000085e-05}, {'diff': 3.070899999999682e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:11.659" endtime="20201029 12:44:11.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.679" level="INFO">${ACCURACY} = {'diff': [3.070899999999682e-05, 3.152799999999595e-05, 3.120899999999732e-05, 3.137500000000015e-05, 3.082000000000085e-05, 3.070899999999682e-05, 3.070799999999735e-05, 3.154100000000298e-05, 3.0500...</msg>
<status status="PASS" starttime="20201029 12:44:11.670" endtime="20201029 12:44:11.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.690" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.687" endtime="20201029 12:44:11.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.695" level="INFO">VALUE: [3.070899999999682e-05, 3.152799999999595e-05, 3.120899999999732e-05, 3.137500000000015e-05, 3.082000000000085e-05, 3.070899999999682e-05, 3.070799999999735e-05, 3.154100000000298e-05, 3.0500000000002747e-05, 3.102800000000239e-05, 3.052700000000241e-05, 3.136100000000058e-05, 3.070900000000376e-05, 3.137500000000015e-05, 3.119400000000522e-05, 3.087499999999965e-05, 3.155500000000255e-05, 3.072199999999692e-05, 3.137500000000015e-05, 3.069400000000472e-05, 3.117999999999871e-05, 3.070900000000376e-05, 3.119399999999828e-05, 3.070900000000376e-05, 3.102800000000239e-05, 3.052800000000189e-05, 3.140299999999929e-05, 3.116699999999861e-05, 3.140299999999929e-05, 3.070799999999735e-05, 3.070799999999735e-05, 3.105599999999459e-05, 3.137500000000015e-05, 3.048700000000265e-05, 3.104199999999502e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.104200000000196e-05, 3.133300000000144e-05, 3.119400000000522e-05, 3.136100000000058e-05, 3.084700000000051e-05, 3.119399999999828e-05, 3.102800000000239e-05, 3.119499999999775e-05, 3.070899999999682e-05, 3.052800000000189e-05, 3.1540999999996044e-05, 3.086100000000008e-05, 3.070899999999682e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.692" endtime="20201029 12:44:11.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.681" endtime="20201029 12:44:11.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.708" endtime="20201029 12:44:11.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.703" endtime="20201029 12:44:11.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.701" endtime="20201029 12:44:11.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.194" endtime="20201029 12:44:11.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.193" endtime="20201029 12:44:11.733"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.755" endtime="20201029 12:44:11.773"></status>
</kw>
<msg timestamp="20201029 12:44:11.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.752" endtime="20201029 12:44:11.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.776" endtime="20201029 12:44:11.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.782" endtime="20201029 12:44:11.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.745" endtime="20201029 12:44:11.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.739" endtime="20201029 12:44:11.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.807" endtime="20201029 12:44:12.158"></status>
</kw>
<msg timestamp="20201029 12:44:12.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039738736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.803" endtime="20201029 12:44:12.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039738736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.168" endtime="20201029 12:44:12.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.186" endtime="20201029 12:44:12.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.796" endtime="20201029 12:44:12.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.790" endtime="20201029 12:44:12.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.205" level="INFO">${RESULT} = [{'diff': 3.115299999999904e-05}, {'diff': 3.136100000000058e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.119500000000469e-05}, {'diff': 3.141599999999939e-05}, {'diff': 3.070799999999735e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.196" endtime="20201029 12:44:12.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.214" level="INFO">${ACCURACY} = {'diff': [3.115299999999904e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.119500000000469e-05, 3.141599999999939e-05, 3.070799999999735e-05, 3.142999999999896e-05, 3.095899999999707e-05, 3.1375...</msg>
<status status="PASS" starttime="20201029 12:44:12.207" endtime="20201029 12:44:12.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.228" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.225" endtime="20201029 12:44:12.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.234" level="INFO">VALUE: [3.115299999999904e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.119500000000469e-05, 3.141599999999939e-05, 3.070799999999735e-05, 3.142999999999896e-05, 3.095899999999707e-05, 3.137500000000015e-05, 3.052700000000241e-05, 3.070800000000429e-05, 3.054199999999452e-05, 3.072199999999692e-05, 3.055600000000103e-05, 3.133400000000092e-05, 3.118000000000565e-05, 3.0597999999999737e-05, 3.138899999999972e-05, 3.087499999999965e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.086100000000008e-05, 3.086100000000008e-05, 3.120799999999785e-05, 3.086100000000008e-05, 3.119399999999828e-05, 3.118099999999818e-05, 3.138899999999972e-05, 3.058300000000069e-05, 3.084700000000051e-05, 3.138899999999972e-05, 3.054100000000198e-05, 3.140300000000623e-05, 3.086100000000008e-05, 3.068099999999768e-05, 3.136100000000058e-05, 3.072200000000386e-05, 3.068000000000515e-05, 3.055599999999409e-05, 3.066699999999811e-05, 3.120799999999785e-05, 3.120899999999732e-05, 3.067999999999821e-05, 3.087500000000659e-05, 3.086100000000008e-05, 3.120899999999732e-05, 3.069399999999778e-05, 3.119500000000469e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.231" endtime="20201029 12:44:12.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.216" endtime="20201029 12:44:12.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.246" endtime="20201029 12:44:12.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.242" endtime="20201029 12:44:12.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.240" endtime="20201029 12:44:12.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.735" endtime="20201029 12:44:12.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.734" endtime="20201029 12:44:12.272"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.295" endtime="20201029 12:44:12.313"></status>
</kw>
<msg timestamp="20201029 12:44:12.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.291" endtime="20201029 12:44:12.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.316" endtime="20201029 12:44:12.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.322" endtime="20201029 12:44:12.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.284" endtime="20201029 12:44:12.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.278" endtime="20201029 12:44:12.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.346" endtime="20201029 12:44:12.699"></status>
</kw>
<msg timestamp="20201029 12:44:12.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039827014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039858375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.342" endtime="20201029 12:44:12.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039827014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039858375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.708" endtime="20201029 12:44:12.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.727" endtime="20201029 12:44:12.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.335" endtime="20201029 12:44:12.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.330" endtime="20201029 12:44:12.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.744" level="INFO">${RESULT} = [{'diff': 3.136100000000058e-05}, {'diff': 3.070799999999735e-05}, {'diff': 3.102800000000239e-05}, {'diff': 3.118099999999818e-05}, {'diff': 3.052800000000189e-05}, {'diff': 3.113899999999947e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.736" endtime="20201029 12:44:12.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.754" level="INFO">${ACCURACY} = {'diff': [3.136100000000058e-05, 3.070799999999735e-05, 3.102800000000239e-05, 3.118099999999818e-05, 3.052800000000189e-05, 3.113899999999947e-05, 3.069400000000472e-05, 3.054200000000146e-05, 3.0526...</msg>
<status status="PASS" starttime="20201029 12:44:12.746" endtime="20201029 12:44:12.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.764" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.762" endtime="20201029 12:44:12.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.770" level="INFO">VALUE: [3.136100000000058e-05, 3.070799999999735e-05, 3.102800000000239e-05, 3.118099999999818e-05, 3.052800000000189e-05, 3.113899999999947e-05, 3.069400000000472e-05, 3.054200000000146e-05, 3.0526999999995474e-05, 3.0514000000002317e-05, 3.070799999999735e-05, 3.087499999999965e-05, 3.09449999999975e-05, 3.0526999999995474e-05, 3.109700000000076e-05, 3.120799999999785e-05, 3.069399999999778e-05, 3.070899999999682e-05, 3.120900000000426e-05, 3.066599999999864e-05, 3.086100000000008e-05, 3.136100000000058e-05, 3.067999999999821e-05, 3.070800000000429e-05, 3.072200000000386e-05, 3.102700000000291e-05, 3.1348000000000487e-05, 3.108400000000067e-05, 3.136100000000058e-05, 3.152800000000289e-05, 3.069399999999778e-05, 3.136100000000058e-05, 3.068100000000462e-05, 3.0513000000002843e-05, 3.119499999999775e-05, 3.129200000000221e-05, 3.134700000000101e-05, 3.148700000000365e-05, 3.086100000000008e-05, 3.084700000000051e-05, 3.102800000000239e-05, 3.118099999999818e-05, 3.090299999999879e-05, 3.066699999999811e-05, 3.156900000000212e-05, 3.066699999999811e-05, 3.1360999999993644e-05, 3.066699999999811e-05, 3.134700000000101e-05, 3.101400000000282e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.767" endtime="20201029 12:44:12.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.755" endtime="20201029 12:44:12.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.788" endtime="20201029 12:44:12.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.778" endtime="20201029 12:44:12.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.776" endtime="20201029 12:44:12.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.274" endtime="20201029 12:44:12.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.273" endtime="20201029 12:44:12.813"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.836" endtime="20201029 12:44:12.853"></status>
</kw>
<msg timestamp="20201029 12:44:12.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.833" endtime="20201029 12:44:12.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.856" endtime="20201029 12:44:12.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.863" endtime="20201029 12:44:12.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.825" endtime="20201029 12:44:12.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.820" endtime="20201029 12:44:12.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.886" endtime="20201029 12:44:13.245"></status>
</kw>
<msg timestamp="20201029 12:44:13.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039507333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039538375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.883" endtime="20201029 12:44:13.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039507333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039538375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.255" endtime="20201029 12:44:13.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.274" endtime="20201029 12:44:13.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.875" endtime="20201029 12:44:13.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.871" endtime="20201029 12:44:13.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.291" level="INFO">${RESULT} = [{'diff': 3.104200000000196e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.119399999999828e-05}, {'diff': 3.095899999999707e-05}, {'diff': 3.123599999999699e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:13.282" endtime="20201029 12:44:13.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.302" level="INFO">${ACCURACY} = {'diff': [3.104200000000196e-05, 3.137500000000015e-05, 3.087499999999965e-05, 3.119399999999828e-05, 3.095899999999707e-05, 3.123599999999699e-05, 3.052700000000241e-05, 3.086100000000008e-05, 3.1194...</msg>
<status status="PASS" starttime="20201029 12:44:13.293" endtime="20201029 12:44:13.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.313" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.310" endtime="20201029 12:44:13.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.318" level="INFO">VALUE: [3.104200000000196e-05, 3.137500000000015e-05, 3.087499999999965e-05, 3.119399999999828e-05, 3.095899999999707e-05, 3.123599999999699e-05, 3.052700000000241e-05, 3.086100000000008e-05, 3.119499999999775e-05, 3.0513999999995378e-05, 3.091699999999836e-05, 3.1362000000000056e-05, 3.137500000000015e-05, 3.105599999999459e-05, 3.086100000000008e-05, 3.06249999999994e-05, 3.1012999999996405e-05, 3.122300000000383e-05, 3.154200000000246e-05, 3.104200000000196e-05, 3.134700000000101e-05, 3.119399999999828e-05, 3.055600000000103e-05, 3.152799999999595e-05, 3.069399999999778e-05, 3.151399999999638e-05, 3.0514000000002317e-05, 3.069400000000472e-05, 3.086100000000008e-05, 3.069499999999725e-05, 3.101400000000282e-05, 3.072199999999692e-05, 3.134700000000101e-05, 3.137500000000015e-05, 3.054199999999452e-05, 3.067999999999821e-05, 3.102800000000239e-05, 3.118099999999818e-05, 3.0486000000003177e-05, 3.143099999999843e-05, 3.098599999999674e-05, 3.119499999999775e-05, 3.0499999999995808e-05, 3.104200000000196e-05, 3.067999999999821e-05, 3.065299999999854e-05, 3.0513000000002843e-05, 3.0847999999999987e-05, 3.070899999999682e-05, 3.123599999999699e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.315" endtime="20201029 12:44:13.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.304" endtime="20201029 12:44:13.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.331" endtime="20201029 12:44:13.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.326" endtime="20201029 12:44:13.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.324" endtime="20201029 12:44:13.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.815" endtime="20201029 12:44:13.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.814" endtime="20201029 12:44:13.356"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.379" endtime="20201029 12:44:13.397"></status>
</kw>
<msg timestamp="20201029 12:44:13.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.376" endtime="20201029 12:44:13.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.401" endtime="20201029 12:44:13.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.407" endtime="20201029 12:44:13.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.368" endtime="20201029 12:44:13.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.362" endtime="20201029 12:44:13.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.430" endtime="20201029 12:44:13.781"></status>
</kw>
<msg timestamp="20201029 12:44:13.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.427" endtime="20201029 12:44:13.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.791" endtime="20201029 12:44:13.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.810" endtime="20201029 12:44:13.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.420" endtime="20201029 12:44:13.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.415" endtime="20201029 12:44:13.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.828" level="INFO">${RESULT} = [{'diff': 3.770799999999741e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.816600000000614e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.804200000000202e-05}, {'diff': 3.8347000000001075e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:13.819" endtime="20201029 12:44:13.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.839" level="INFO">${ACCURACY} = {'diff': [3.770799999999741e-05, 3.7861000000000145e-05, 3.816600000000614e-05, 3.7652999999998604e-05, 3.804200000000202e-05, 3.8347000000001075e-05, 3.7874999999999714e-05, 3.79859999999968e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 12:44:13.830" endtime="20201029 12:44:13.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.850" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.847" endtime="20201029 12:44:13.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.855" level="INFO">VALUE: [3.770799999999741e-05, 3.7861000000000145e-05, 3.816600000000614e-05, 3.7652999999998604e-05, 3.804200000000202e-05, 3.8347000000001075e-05, 3.7874999999999714e-05, 3.79859999999968e-05, 3.751400000000238e-05, 3.7861000000000145e-05, 3.8347000000001075e-05, 3.7861000000000145e-05, 3.7846999999993636e-05, 3.768100000000468e-05, 3.754199999999458e-05, 3.834800000000055e-05, 3.7680999999997744e-05, 3.751400000000238e-05, 3.752800000000195e-05, 3.8027000000002975e-05, 3.8180999999998244e-05, 3.8180999999998244e-05, 3.801399999999594e-05, 3.7652999999998604e-05, 3.800000000000331e-05, 3.7861000000000145e-05, 3.7680999999997744e-05, 3.8180999999998244e-05, 3.7847000000000575e-05, 3.767999999999827e-05, 3.797200000000417e-05, 3.751400000000238e-05, 3.768100000000468e-05, 3.8361000000000645e-05, 3.752800000000195e-05, 3.802799999999551e-05, 3.847199999999773e-05, 3.8361000000000645e-05, 3.808400000000073e-05, 3.7847000000000575e-05, 3.770799999999741e-05, 3.8361000000000645e-05, 3.8166999999998674e-05, 3.815199999999963e-05, 3.801400000000288e-05, 3.7680999999997744e-05, 3.769500000000425e-05, 3.751399999999544e-05, 3.81659999999992e-05, 3.802800000000245e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.852" endtime="20201029 12:44:13.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.841" endtime="20201029 12:44:13.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.868" endtime="20201029 12:44:13.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.863" endtime="20201029 12:44:13.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.861" endtime="20201029 12:44:13.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.358" endtime="20201029 12:44:13.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.357" endtime="20201029 12:44:13.893"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.915" endtime="20201029 12:44:13.933"></status>
</kw>
<msg timestamp="20201029 12:44:13.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.912" endtime="20201029 12:44:13.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.936" endtime="20201029 12:44:13.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.942" endtime="20201029 12:44:13.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.905" endtime="20201029 12:44:13.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.899" endtime="20201029 12:44:13.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.966" endtime="20201029 12:44:14.321"></status>
</kw>
<msg timestamp="20201029 12:44:14.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039552375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039590083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.962" endtime="20201029 12:44:14.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039552375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039590083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.331" endtime="20201029 12:44:14.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.350" endtime="20201029 12:44:14.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.955" endtime="20201029 12:44:14.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.950" endtime="20201029 12:44:14.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.367" level="INFO">${RESULT} = [{'diff': 3.770799999999741e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.769399999999784e-05}, {'diff': 3.801399999999594e-05}, {'diff': 3.820800000000485e-05}, {'diff': 3.7833000000001005e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:14.358" endtime="20201029 12:44:14.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.376" level="INFO">${ACCURACY} = {'diff': [3.770799999999741e-05, 3.8347000000001075e-05, 3.769399999999784e-05, 3.801399999999594e-05, 3.820800000000485e-05, 3.7833000000001005e-05, 3.801400000000288e-05, 3.816700000000561e-05, 3.80...</msg>
<status status="PASS" starttime="20201029 12:44:14.369" endtime="20201029 12:44:14.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.387" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.385" endtime="20201029 12:44:14.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.393" level="INFO">VALUE: [3.770799999999741e-05, 3.8347000000001075e-05, 3.769399999999784e-05, 3.801399999999594e-05, 3.820800000000485e-05, 3.7833000000001005e-05, 3.801400000000288e-05, 3.816700000000561e-05, 3.800000000000331e-05, 3.752800000000195e-05, 3.8388999999999784e-05, 3.769399999999784e-05, 3.752800000000195e-05, 3.752800000000195e-05, 3.7833000000001005e-05, 3.784800000000005e-05, 3.758400000000023e-05, 3.7666999999998174e-05, 3.7666999999998174e-05, 3.802800000000245e-05, 3.7861000000000145e-05, 3.767999999999827e-05, 3.819399999999834e-05, 3.750000000000281e-05, 3.8540999999996106e-05, 3.7527000000002475e-05, 3.752800000000195e-05, 3.7512999999995966e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.7847000000000575e-05, 3.7680999999997744e-05, 3.822199999999748e-05, 3.784800000000005e-05, 3.8361000000000645e-05, 3.81659999999992e-05, 3.76659999999987e-05, 3.7861000000000145e-05, 3.768100000000468e-05, 3.76659999999987e-05, 3.8347000000001075e-05, 3.802799999999551e-05, 3.751400000000238e-05, 3.775000000000306e-05, 3.752800000000195e-05, 3.745900000000357e-05, 3.797200000000417e-05, 3.769399999999784e-05, 3.7847000000000575e-05, 3.751400000000238e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.389" endtime="20201029 12:44:14.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.378" endtime="20201029 12:44:14.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.406" endtime="20201029 12:44:14.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.402" endtime="20201029 12:44:14.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.399" endtime="20201029 12:44:14.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.895" endtime="20201029 12:44:14.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.894" endtime="20201029 12:44:14.431"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.454" endtime="20201029 12:44:14.473"></status>
</kw>
<msg timestamp="20201029 12:44:14.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.451" endtime="20201029 12:44:14.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.476" endtime="20201029 12:44:14.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.483" endtime="20201029 12:44:14.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.443" endtime="20201029 12:44:14.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.438" endtime="20201029 12:44:14.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.506" endtime="20201029 12:44:14.855"></status>
</kw>
<msg timestamp="20201029 12:44:14.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041186347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041224028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.503" endtime="20201029 12:44:14.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041186347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041224028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.864" endtime="20201029 12:44:14.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.883" endtime="20201029 12:44:14.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.496" endtime="20201029 12:44:14.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.491" endtime="20201029 12:44:14.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.900" level="INFO">${RESULT} = [{'diff': 3.768100000000468e-05}, {'diff': 3.7694999999997314e-05}, {'diff': 3.770799999999741e-05}, {'diff': 3.7694999999997314e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.8512999999996966e-05...</msg>
<status status="PASS" starttime="20201029 12:44:14.891" endtime="20201029 12:44:14.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.909" level="INFO">${ACCURACY} = {'diff': [3.768100000000468e-05, 3.7694999999997314e-05, 3.770799999999741e-05, 3.7694999999997314e-05, 3.7861000000000145e-05, 3.8512999999996966e-05, 3.7847000000000575e-05, 3.8333000000001505e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:14.902" endtime="20201029 12:44:14.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.920" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.918" endtime="20201029 12:44:14.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.926" level="INFO">VALUE: [3.768100000000468e-05, 3.7694999999997314e-05, 3.770799999999741e-05, 3.7694999999997314e-05, 3.7861000000000145e-05, 3.8512999999996966e-05, 3.7847000000000575e-05, 3.8333000000001505e-05, 3.768100000000468e-05, 3.8526999999996536e-05, 3.786199999999962e-05, 3.751399999999544e-05, 3.7833000000001005e-05, 3.817999999999877e-05, 3.751400000000238e-05, 3.7694999999997314e-05, 3.8152999999999104e-05, 3.8083000000001255e-05, 3.7847000000000575e-05, 3.833400000000098e-05, 3.7680999999997744e-05, 3.768100000000468e-05, 3.8596999999994386e-05, 3.772199999999698e-05, 3.7666999999998174e-05, 3.804199999999508e-05, 3.790300000000579e-05, 3.822199999999748e-05, 3.7846999999993636e-05, 3.8027000000002975e-05, 3.7680999999997744e-05, 3.7847000000000575e-05, 3.819400000000528e-05, 3.801399999999594e-05, 3.802800000000245e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.822199999999748e-05, 3.8111000000000395e-05, 3.7846999999993636e-05, 3.754200000000152e-05, 3.8180999999998244e-05, 3.769500000000425e-05, 3.7888999999999284e-05, 3.768100000000468e-05, 3.7874999999999714e-05, 3.7568999999994246e-05, 3.7847000000000575e-05, 3.818100000000518e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.923" endtime="20201029 12:44:14.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.911" endtime="20201029 12:44:14.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.944" endtime="20201029 12:44:14.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.938" endtime="20201029 12:44:14.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.935" endtime="20201029 12:44:14.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.433" endtime="20201029 12:44:14.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.432" endtime="20201029 12:44:14.968"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.991" endtime="20201029 12:44:15.007"></status>
</kw>
<msg timestamp="20201029 12:44:15.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.988" endtime="20201029 12:44:15.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.010" endtime="20201029 12:44:15.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.016" endtime="20201029 12:44:15.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.981" endtime="20201029 12:44:15.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.975" endtime="20201029 12:44:15.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.040" endtime="20201029 12:44:15.384"></status>
</kw>
<msg timestamp="20201029 12:44:15.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039227861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039266194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.036" endtime="20201029 12:44:15.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039227861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039266194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.394" endtime="20201029 12:44:15.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.413" endtime="20201029 12:44:15.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.029" endtime="20201029 12:44:15.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.025" endtime="20201029 12:44:15.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.430" level="INFO">${RESULT} = [{'diff': 3.8332999999994566e-05}, {'diff': 3.750000000000281e-05}, {'diff': 3.750000000000281e-05}, {'diff': 3.7846999999993636e-05}, {'diff': 3.8332999999994566e-05}, {'diff': 3.763900000000597e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:15.421" endtime="20201029 12:44:15.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.442" level="INFO">${ACCURACY} = {'diff': [3.8332999999994566e-05, 3.750000000000281e-05, 3.750000000000281e-05, 3.7846999999993636e-05, 3.8332999999994566e-05, 3.763900000000597e-05, 3.772200000000392e-05, 3.7666999999998174e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:44:15.432" endtime="20201029 12:44:15.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.457" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.454" endtime="20201029 12:44:15.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.465" level="INFO">VALUE: [3.8332999999994566e-05, 3.750000000000281e-05, 3.750000000000281e-05, 3.7846999999993636e-05, 3.8332999999994566e-05, 3.763900000000597e-05, 3.772200000000392e-05, 3.7666999999998174e-05, 3.833400000000098e-05, 3.8375000000000214e-05, 3.855600000000209e-05, 3.819500000000475e-05, 3.851400000000338e-05, 3.76659999999987e-05, 3.7540999999995106e-05, 3.8402999999999354e-05, 3.8124999999999964e-05, 3.8347000000001075e-05, 3.783400000000048e-05, 3.7722999999996454e-05, 3.8194999999997814e-05, 3.7569000000001185e-05, 3.769399999999784e-05, 3.820799999999791e-05, 3.8346999999994136e-05, 3.8333000000001505e-05, 3.8347000000001075e-05, 3.787500000000665e-05, 3.849999999999687e-05, 3.804199999999508e-05, 3.801399999999594e-05, 3.820799999999791e-05, 3.7694999999997314e-05, 3.834800000000055e-05, 3.7680999999997744e-05, 3.8026999999996036e-05, 3.8416999999998924e-05, 3.787500000000665e-05, 3.8361000000000645e-05, 3.801400000000288e-05, 3.8041000000002545e-05, 3.801400000000288e-05, 3.769500000000425e-05, 3.8347000000001075e-05, 3.7860999999993206e-05, 3.8180999999998244e-05, 3.8375000000000214e-05, 3.850000000000381e-05, 3.8347000000001075e-05, 3.751399999999544e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.460" endtime="20201029 12:44:15.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.445" endtime="20201029 12:44:15.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.483" endtime="20201029 12:44:15.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.476" endtime="20201029 12:44:15.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.473" endtime="20201029 12:44:15.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.971" endtime="20201029 12:44:15.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.969" endtime="20201029 12:44:15.513"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.535" endtime="20201029 12:44:15.553"></status>
</kw>
<msg timestamp="20201029 12:44:15.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.532" endtime="20201029 12:44:15.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.557" endtime="20201029 12:44:15.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.563" endtime="20201029 12:44:15.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.525" endtime="20201029 12:44:15.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.519" endtime="20201029 12:44:15.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.586" endtime="20201029 12:44:15.963"></status>
</kw>
<msg timestamp="20201029 12:44:15.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043508736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.583" endtime="20201029 12:44:15.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043508736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.972" endtime="20201029 12:44:15.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.991" endtime="20201029 12:44:15.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.576" endtime="20201029 12:44:15.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.571" endtime="20201029 12:44:15.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.008" level="INFO">${RESULT} = [{'diff': 3.7597000000000325e-05}, {'diff': 3.751400000000238e-05}, {'diff': 3.819400000000528e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.751400000000238e-05}, {'diff': 3.852800000000295e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:15.999" endtime="20201029 12:44:16.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.019" level="INFO">${ACCURACY} = {'diff': [3.7597000000000325e-05, 3.751400000000238e-05, 3.819400000000528e-05, 3.8375000000000214e-05, 3.751400000000238e-05, 3.852800000000295e-05, 3.8375000000000214e-05, 3.8333000000001505e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:44:16.010" endtime="20201029 12:44:16.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.030" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.028" endtime="20201029 12:44:16.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.035" level="INFO">VALUE: [3.7597000000000325e-05, 3.751400000000238e-05, 3.819400000000528e-05, 3.8375000000000214e-05, 3.751400000000238e-05, 3.852800000000295e-05, 3.8375000000000214e-05, 3.8333000000001505e-05, 3.8360999999993706e-05, 3.768100000000468e-05, 3.818000000000571e-05, 3.816600000000614e-05, 3.8041000000002545e-05, 3.802799999999551e-05, 3.7902999999998854e-05, 3.801400000000288e-05, 3.802799999999551e-05, 3.786199999999962e-05, 3.8347000000001075e-05, 3.8361000000000645e-05, 3.8194999999997814e-05, 3.819399999999834e-05, 3.822200000000442e-05, 3.7861000000000145e-05, 3.806999999999422e-05, 3.8375000000000214e-05, 3.749999999999587e-05, 3.7847000000000575e-05, 3.8333000000001505e-05, 3.751400000000238e-05, 3.752799999999501e-05, 3.8055000000002115e-05, 3.8180999999998244e-05, 3.797200000000417e-05, 3.7694999999997314e-05, 3.752800000000195e-05, 3.819400000000528e-05, 3.802799999999551e-05, 3.817999999999877e-05, 3.834799999999361e-05, 3.8388999999999784e-05, 3.8194999999997814e-05, 3.754200000000152e-05, 3.8180999999998244e-05, 3.7638999999999034e-05, 3.7847000000000575e-05, 3.8402999999999354e-05, 3.801399999999594e-05, 3.804199999999508e-05, 3.819399999999834e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.032" endtime="20201029 12:44:16.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.021" endtime="20201029 12:44:16.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.047" endtime="20201029 12:44:16.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.043" endtime="20201029 12:44:16.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.041" endtime="20201029 12:44:16.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.515" endtime="20201029 12:44:16.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.513" endtime="20201029 12:44:16.072"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.095" endtime="20201029 12:44:16.110"></status>
</kw>
<msg timestamp="20201029 12:44:16.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.091" endtime="20201029 12:44:16.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.113" endtime="20201029 12:44:16.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.120" endtime="20201029 12:44:16.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.084" endtime="20201029 12:44:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.079" endtime="20201029 12:44:16.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.142" endtime="20201029 12:44:16.479"></status>
</kw>
<msg timestamp="20201029 12:44:16.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038871056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038908583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.139" endtime="20201029 12:44:16.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038871056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038908583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.488" endtime="20201029 12:44:16.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.507" endtime="20201029 12:44:16.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.132" endtime="20201029 12:44:16.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.127" endtime="20201029 12:44:16.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.524" level="INFO">${RESULT} = [{'diff': 3.7526999999995536e-05}, {'diff': 3.770799999999741e-05}, {'diff': 3.8333000000001505e-05}, {'diff': 3.786199999999962e-05}, {'diff': 3.817999999999877e-05}, {'diff': 3.772199999999698e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:16.516" endtime="20201029 12:44:16.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.534" level="INFO">${ACCURACY} = {'diff': [3.7526999999995536e-05, 3.770799999999741e-05, 3.8333000000001505e-05, 3.786199999999962e-05, 3.817999999999877e-05, 3.772199999999698e-05, 3.815199999999963e-05, 3.8361000000000645e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:44:16.526" endtime="20201029 12:44:16.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.544" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.542" endtime="20201029 12:44:16.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.550" level="INFO">VALUE: [3.7526999999995536e-05, 3.770799999999741e-05, 3.8333000000001505e-05, 3.786199999999962e-05, 3.817999999999877e-05, 3.772199999999698e-05, 3.815199999999963e-05, 3.8361000000000645e-05, 3.8194999999997814e-05, 3.7847000000000575e-05, 3.838800000000031e-05, 3.8194999999997814e-05, 3.8040999999995606e-05, 3.8347000000001075e-05, 3.7833000000001005e-05, 3.7680999999997744e-05, 3.747199999999673e-05, 3.7916999999998424e-05, 3.802799999999551e-05, 3.8041000000002545e-05, 3.832000000000141e-05, 3.791599999999895e-05, 3.8347000000001075e-05, 3.817999999999877e-05, 3.768000000000521e-05, 3.769399999999784e-05, 3.802800000000245e-05, 3.8361000000000645e-05, 3.751400000000238e-05, 3.751400000000238e-05, 3.7874999999999714e-05, 3.8347000000001075e-05, 3.7680999999997744e-05, 3.8583000000001755e-05, 3.851400000000338e-05, 3.801399999999594e-05, 3.8402999999999354e-05, 3.7888999999999284e-05, 3.8347000000001075e-05, 3.851400000000338e-05, 3.7680999999997744e-05, 3.813800000000006e-05, 3.750000000000281e-05, 3.7972999999996704e-05, 3.7847000000000575e-05, 3.834800000000055e-05, 3.751400000000238e-05, 3.749999999999587e-05, 3.783400000000048e-05, 3.775000000000306e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.546" endtime="20201029 12:44:16.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.535" endtime="20201029 12:44:16.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.562" endtime="20201029 12:44:16.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.558" endtime="20201029 12:44:16.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.555" endtime="20201029 12:44:16.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.074" endtime="20201029 12:44:16.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.073" endtime="20201029 12:44:16.587"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.609" endtime="20201029 12:44:16.626"></status>
</kw>
<msg timestamp="20201029 12:44:16.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.606" endtime="20201029 12:44:16.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.630" endtime="20201029 12:44:16.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.636" endtime="20201029 12:44:16.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.599" endtime="20201029 12:44:16.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.593" endtime="20201029 12:44:16.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.658" endtime="20201029 12:44:16.992"></status>
</kw>
<msg timestamp="20201029 12:44:16.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040402222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040440264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.655" endtime="20201029 12:44:17.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040402222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040440264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.002" endtime="20201029 12:44:17.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.020" endtime="20201029 12:44:17.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.648" endtime="20201029 12:44:17.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.644" endtime="20201029 12:44:17.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.037" level="INFO">${RESULT} = [{'diff': 3.804199999999508e-05}, {'diff': 3.813800000000006e-05}, {'diff': 3.854200000000252e-05}, {'diff': 3.801399999999594e-05}, {'diff': 3.8361000000000645e-05}, {'diff': 3.800000000000331e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:17.029" endtime="20201029 12:44:17.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.046" level="INFO">${ACCURACY} = {'diff': [3.804199999999508e-05, 3.813800000000006e-05, 3.854200000000252e-05, 3.801399999999594e-05, 3.8361000000000645e-05, 3.800000000000331e-05, 3.819399999999834e-05, 3.751400000000238e-05, 3.769...</msg>
<status status="PASS" starttime="20201029 12:44:17.039" endtime="20201029 12:44:17.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.057" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.055" endtime="20201029 12:44:17.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.062" level="INFO">VALUE: [3.804199999999508e-05, 3.813800000000006e-05, 3.854200000000252e-05, 3.801399999999594e-05, 3.8361000000000645e-05, 3.800000000000331e-05, 3.819399999999834e-05, 3.751400000000238e-05, 3.769399999999784e-05, 3.7527000000002475e-05, 3.8180999999998244e-05, 3.7874999999999714e-05, 3.8097000000000825e-05, 3.767999999999827e-05, 3.7458999999996634e-05, 3.7680999999997744e-05, 3.7861000000000145e-05, 3.751400000000238e-05, 3.802800000000245e-05, 3.768000000000521e-05, 3.817999999999877e-05, 3.799999999999637e-05, 3.8347000000001075e-05, 3.844400000000553e-05, 3.819399999999834e-05, 3.822200000000442e-05, 3.8347000000001075e-05, 3.819399999999834e-05, 3.8026999999996036e-05, 3.816600000000614e-05, 3.767999999999827e-05, 3.7554999999994676e-05, 3.752800000000195e-05, 3.8333000000001505e-05, 3.7888999999999284e-05, 3.8041000000002545e-05, 3.819399999999834e-05, 3.801399999999594e-05, 3.769399999999784e-05, 3.772199999999698e-05, 3.802800000000245e-05, 3.8347000000001075e-05, 3.8166999999998674e-05, 3.8527000000003475e-05, 3.7861000000000145e-05, 3.7861000000000145e-05, 3.7680999999997744e-05, 3.8027000000002975e-05, 3.8194999999997814e-05, 3.808400000000073e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.059" endtime="20201029 12:44:17.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.048" endtime="20201029 12:44:17.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.076" endtime="20201029 12:44:17.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.071" endtime="20201029 12:44:17.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.068" endtime="20201029 12:44:17.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.589" endtime="20201029 12:44:17.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.588" endtime="20201029 12:44:17.101"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.123" endtime="20201029 12:44:17.139"></status>
</kw>
<msg timestamp="20201029 12:44:17.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.120" endtime="20201029 12:44:17.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.143" endtime="20201029 12:44:17.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.149" endtime="20201029 12:44:17.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.113" endtime="20201029 12:44:17.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.107" endtime="20201029 12:44:17.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.172" endtime="20201029 12:44:17.506"></status>
</kw>
<msg timestamp="20201029 12:44:17.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038771569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038816903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.168" endtime="20201029 12:44:17.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038771569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038816903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.515" endtime="20201029 12:44:17.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.534" endtime="20201029 12:44:17.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.161" endtime="20201029 12:44:17.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.156" endtime="20201029 12:44:17.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.551" level="INFO">${RESULT} = [{'diff': 4.533400000000104e-05}, {'diff': 4.497199999999729e-05}, {'diff': 4.5361000000000706e-05}, {'diff': 4.5333000000001566e-05}, {'diff': 4.4445000000004065e-05}, {'diff': 4.497199999999729e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:17.542" endtime="20201029 12:44:17.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.561" level="INFO">${ACCURACY} = {'diff': [4.533400000000104e-05, 4.497199999999729e-05, 4.5361000000000706e-05, 4.5333000000001566e-05, 4.4445000000004065e-05, 4.497199999999729e-05, 4.5347000000001136e-05, 4.448599999999636e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:17.553" endtime="20201029 12:44:17.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.572" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.570" endtime="20201029 12:44:17.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.577" level="INFO">VALUE: [4.533400000000104e-05, 4.497199999999729e-05, 4.5361000000000706e-05, 4.5333000000001566e-05, 4.4445000000004065e-05, 4.497199999999729e-05, 4.5347000000001136e-05, 4.448599999999636e-05, 4.451400000000244e-05, 4.49860000000038e-05, 4.4667000000005175e-05, 4.45139999999955e-05, 4.469400000000484e-05, 4.4819000000001497e-05, 4.502700000000304e-05, 4.5402999999999416e-05, 4.4555000000001677e-05, 4.481999999999403e-05, 4.473600000000355e-05, 4.508400000000079e-05, 4.4666999999998236e-05, 4.4958999999997196e-05, 4.526400000000319e-05, 4.483400000000054e-05, 4.477800000000226e-05, 4.520799999999797e-05, 4.501400000000294e-05, 4.54860000000043e-05, 4.451400000000244e-05, 4.523599999999711e-05, 4.4959000000004135e-05, 4.551400000000344e-05, 4.53469999999942e-05, 4.4680999999997806e-05, 4.501400000000294e-05, 4.501400000000294e-05, 4.533400000000104e-05, 4.5361000000000706e-05, 4.4847000000000636e-05, 4.51939999999984e-05, 4.5347000000001136e-05, 4.5209000000004385e-05, 4.5361000000000706e-05, 4.4888999999999346e-05, 4.499999999999643e-05, 4.5180999999998306e-05, 4.482000000000097e-05, 4.5375000000000276e-05, 4.481999999999403e-05, 4.5375000000000276e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.574" endtime="20201029 12:44:17.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.563" endtime="20201029 12:44:17.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.590" endtime="20201029 12:44:17.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.586" endtime="20201029 12:44:17.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.583" endtime="20201029 12:44:17.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.103" endtime="20201029 12:44:17.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.102" endtime="20201029 12:44:17.615"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.637" endtime="20201029 12:44:17.654"></status>
</kw>
<msg timestamp="20201029 12:44:17.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.634" endtime="20201029 12:44:17.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.658" endtime="20201029 12:44:17.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.664" endtime="20201029 12:44:17.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.627" endtime="20201029 12:44:17.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.621" endtime="20201029 12:44:17.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.687" endtime="20201029 12:44:18.019"></status>
</kw>
<msg timestamp="20201029 12:44:18.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038911792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038960389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.683" endtime="20201029 12:44:18.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038911792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038960389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.029" endtime="20201029 12:44:18.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.047" endtime="20201029 12:44:18.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.676" endtime="20201029 12:44:18.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.672" endtime="20201029 12:44:18.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.064" level="INFO">${RESULT} = [{'diff': 4.859699999999745e-05}, {'diff': 4.8389000000002846e-05}, {'diff': 4.840200000000294e-05}, {'diff': 4.8361000000003707e-05}, {'diff': 4.840299999999548e-05}, {'diff': 4.887499999999684e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:18.055" endtime="20201029 12:44:18.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.079" level="INFO">${ACCURACY} = {'diff': [4.859699999999745e-05, 4.8389000000002846e-05, 4.840200000000294e-05, 4.8361000000003707e-05, 4.840299999999548e-05, 4.887499999999684e-05, 4.843000000000208e-05, 4.911099999999752e-05, 4.88...</msg>
<status status="PASS" starttime="20201029 12:44:18.066" endtime="20201029 12:44:18.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.090" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.088" endtime="20201029 12:44:18.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.095" level="INFO">VALUE: [4.859699999999745e-05, 4.8389000000002846e-05, 4.840200000000294e-05, 4.8361000000003707e-05, 4.840299999999548e-05, 4.887499999999684e-05, 4.843000000000208e-05, 4.911099999999752e-05, 4.886100000000421e-05, 4.855500000000568e-05, 4.875000000000018e-05, 4.926400000000025e-05, 4.859699999999745e-05, 4.872200000000104e-05, 4.893000000000258e-05, 4.931899999999906e-05, 4.8431000000001556e-05, 4.888899999999641e-05, 4.836099999999677e-05, 4.8417000000001986e-05, 4.9125000000004027e-05, 4.8387999999996434e-05, 4.900000000000043e-05, 4.844400000000165e-05, 4.877699999999985e-05, 4.931899999999906e-05, 4.925000000000068e-05, 4.905599999999871e-05, 4.866600000000276e-05, 4.900000000000043e-05, 4.859699999999745e-05, 4.868000000000233e-05, 4.926400000000025e-05, 4.915200000000369e-05, 4.913800000000412e-05, 4.849999999999993e-05, 4.915299999999623e-05, 4.8375000000003276e-05, 4.8917000000002486e-05, 4.91940000000024e-05, 4.9014e-05, 4.908399999999785e-05, 4.902799999999957e-05, 4.9181000000002306e-05, 4.904199999999914e-05, 4.831899999999806e-05, 4.883299999999813e-05, 4.905600000000565e-05, 4.904200000000608e-05, 4.925000000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.092" endtime="20201029 12:44:18.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.081" endtime="20201029 12:44:18.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.107" endtime="20201029 12:44:18.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.103" endtime="20201029 12:44:18.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.101" endtime="20201029 12:44:18.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.617" endtime="20201029 12:44:18.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.616" endtime="20201029 12:44:18.132"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.154" endtime="20201029 12:44:18.177"></status>
</kw>
<msg timestamp="20201029 12:44:18.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.151" endtime="20201029 12:44:18.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.181" endtime="20201029 12:44:18.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.197" endtime="20201029 12:44:18.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.144" endtime="20201029 12:44:18.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.138" endtime="20201029 12:44:18.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.228" endtime="20201029 12:44:18.566"></status>
</kw>
<msg timestamp="20201029 12:44:18.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038816208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038865778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.225" endtime="20201029 12:44:18.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038816208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038865778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.576" endtime="20201029 12:44:18.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.595" endtime="20201029 12:44:18.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.218" endtime="20201029 12:44:18.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.213" endtime="20201029 12:44:18.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.611" level="INFO">${RESULT} = [{'diff': 4.956999999999878e-05}, {'diff': 5.0195000000002876e-05}, {'diff': 4.952800000000007e-05}, {'diff': 4.981899999999956e-05}, {'diff': 5.005500000000024e-05}, {'diff': 5.027800000000082e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:18.603" endtime="20201029 12:44:18.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.621" level="INFO">${ACCURACY} = {'diff': [4.956999999999878e-05, 5.0195000000002876e-05, 4.952800000000007e-05, 4.981899999999956e-05, 5.005500000000024e-05, 5.027800000000082e-05, 4.9473000000001266e-05, 5.011100000000546e-05, 4.98...</msg>
<status status="PASS" starttime="20201029 12:44:18.614" endtime="20201029 12:44:18.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.631" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.629" endtime="20201029 12:44:18.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.637" level="INFO">VALUE: [4.956999999999878e-05, 5.0195000000002876e-05, 4.952800000000007e-05, 4.981899999999956e-05, 5.005500000000024e-05, 5.027800000000082e-05, 4.9473000000001266e-05, 5.011100000000546e-05, 4.988899999999741e-05, 5.012499999999809e-05, 4.9693999999995964e-05, 4.948600000000136e-05, 4.96940000000029e-05, 5.0193999999996464e-05, 5.0221999999995603e-05, 4.937499999999734e-05, 4.986099999999827e-05, 4.991699999999655e-05, 4.948600000000136e-05, 5.024999999999474e-05, 4.973600000000161e-05, 5.013899999999766e-05, 5.002800000000057e-05, 5.0167000000003736e-05, 5.013899999999766e-05, 4.950000000000093e-05, 4.93469999999982e-05, 4.956899999999931e-05, 4.956899999999931e-05, 4.950000000000093e-05, 5.0235999999995173e-05, 5.0195000000002876e-05, 5.002800000000057e-05, 5.016600000000426e-05, 4.9653000000003666e-05, 5.0221999999995603e-05, 5.030599999999996e-05, 4.9721999999995103e-05, 5.023600000000211e-05, 4.981999999999903e-05, 5.004200000000014e-05, 4.979199999999989e-05, 5.005500000000024e-05, 4.9625000000004527e-05, 5.00270000000011e-05, 5.029200000000039e-05, 4.959700000000539e-05, 4.988899999999741e-05, 4.93469999999982e-05, 4.95140000000005e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.634" endtime="20201029 12:44:18.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.622" endtime="20201029 12:44:18.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.649" endtime="20201029 12:44:18.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.645" endtime="20201029 12:44:18.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.642" endtime="20201029 12:44:18.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.134" endtime="20201029 12:44:18.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.133" endtime="20201029 12:44:18.674"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.696" endtime="20201029 12:44:18.717"></status>
</kw>
<msg timestamp="20201029 12:44:18.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.693" endtime="20201029 12:44:18.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.720" endtime="20201029 12:44:18.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.726" endtime="20201029 12:44:18.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.686" endtime="20201029 12:44:18.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.680" endtime="20201029 12:44:18.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.750" endtime="20201029 12:44:19.092"></status>
</kw>
<msg timestamp="20201029 12:44:19.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040383153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.746" endtime="20201029 12:44:19.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040383153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.101" endtime="20201029 12:44:19.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.120" endtime="20201029 12:44:19.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.739" endtime="20201029 12:44:19.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.735" endtime="20201029 12:44:19.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.137" level="INFO">${RESULT} = [{'diff': 5.03469999999992e-05}, {'diff': 5.0709000000002946e-05}, {'diff': 5.116600000000526e-05}, {'diff': 5.074999999999524e-05}, {'diff': 5.127800000000182e-05}, {'diff': 5.05140000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:19.128" endtime="20201029 12:44:19.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.146" level="INFO">${ACCURACY} = {'diff': [5.03469999999992e-05, 5.0709000000002946e-05, 5.116600000000526e-05, 5.074999999999524e-05, 5.127800000000182e-05, 5.05140000000015e-05, 5.068000000000433e-05, 5.058399999999935e-05, 5.03609...</msg>
<status status="PASS" starttime="20201029 12:44:19.139" endtime="20201029 12:44:19.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.157" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.155" endtime="20201029 12:44:19.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.162" level="INFO">VALUE: [5.03469999999992e-05, 5.0709000000002946e-05, 5.116600000000526e-05, 5.074999999999524e-05, 5.127800000000182e-05, 5.05140000000015e-05, 5.068000000000433e-05, 5.058399999999935e-05, 5.036099999999877e-05, 5.112499999999909e-05, 5.0735999999995673e-05, 5.1165999999998324e-05, 5.129200000000139e-05, 5.108300000000038e-05, 5.1249999999995743e-05, 5.115299999999823e-05, 5.084800000000611e-05, 5.113899999999866e-05, 5.08469999999997e-05, 5.077700000000185e-05, 5.129200000000139e-05, 5.061099999999902e-05, 5.11669999999978e-05, 5.036099999999877e-05, 5.1193999999997464e-05, 5.072200000000304e-05, 5.0403000000004416e-05, 5.059699999999945e-05, 5.080600000000046e-05, 5.10270000000021e-05, 5.101399999999506e-05, 5.0431000000003556e-05, 5.037500000000528e-05, 5.130499999999455e-05, 5.038899999999791e-05, 5.1137999999999184e-05, 5.102800000000157e-05, 5.073699999999515e-05, 5.104200000000114e-05, 5.03469999999992e-05, 5.0651999999998254e-05, 5.1223000000003016e-05, 5.0389000000004847e-05, 5.050000000000193e-05, 5.083300000000013e-05, 5.0709000000002946e-05, 5.055600000000021e-05, 5.063899999999816e-05, 5.106900000000081e-05, 5.052800000000107e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.159" endtime="20201029 12:44:19.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.148" endtime="20201029 12:44:19.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.176" endtime="20201029 12:44:19.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.171" endtime="20201029 12:44:19.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.168" endtime="20201029 12:44:19.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.676" endtime="20201029 12:44:19.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.675" endtime="20201029 12:44:19.201"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.223" endtime="20201029 12:44:19.241"></status>
</kw>
<msg timestamp="20201029 12:44:19.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.220" endtime="20201029 12:44:19.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.244" endtime="20201029 12:44:19.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.250" endtime="20201029 12:44:19.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.213" endtime="20201029 12:44:19.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.207" endtime="20201029 12:44:19.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.273" endtime="20201029 12:44:19.606"></status>
</kw>
<msg timestamp="20201029 12:44:19.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038866278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038917917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.270" endtime="20201029 12:44:19.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038866278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038917917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.616" endtime="20201029 12:44:19.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.635" endtime="20201029 12:44:19.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.263" endtime="20201029 12:44:19.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.258" endtime="20201029 12:44:19.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.652" level="INFO">${RESULT} = [{'diff': 5.16390000000061e-05}, {'diff': 5.143099999999762e-05}, {'diff': 5.176399999999581e-05}, {'diff': 5.204100000000267e-05}, {'diff': 5.180500000000199e-05}, {'diff': 5.229200000000239e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:19.643" endtime="20201029 12:44:19.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.662" level="INFO">${ACCURACY} = {'diff': [5.16390000000061e-05, 5.143099999999762e-05, 5.176399999999581e-05, 5.204100000000267e-05, 5.180500000000199e-05, 5.229200000000239e-05, 5.1721999999997104e-05, 5.183300000000113e-05, 5.1429...</msg>
<status status="PASS" starttime="20201029 12:44:19.654" endtime="20201029 12:44:19.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.673" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.671" endtime="20201029 12:44:19.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.678" level="INFO">VALUE: [5.16390000000061e-05, 5.143099999999762e-05, 5.176399999999581e-05, 5.204100000000267e-05, 5.180500000000199e-05, 5.229200000000239e-05, 5.1721999999997104e-05, 5.183300000000113e-05, 5.1429999999998144e-05, 5.165299999999873e-05, 5.1417000000004986e-05, 5.236200000000024e-05, 5.175000000000318e-05, 5.205600000000171e-05, 5.208299999999444e-05, 5.2193999999998464e-05, 5.162499999999959e-05, 5.187499999999984e-05, 5.212500000000009e-05, 5.138899999999891e-05, 5.1971999999997354e-05, 5.226400000000325e-05, 5.144400000000465e-05, 5.2165999999999324e-05, 5.233299999999469e-05, 5.1445000000004126e-05, 5.154099999999523e-05, 5.159799999999992e-05, 5.211100000000052e-05, 5.212500000000009e-05, 5.1943999999998214e-05, 5.1651999999999254e-05, 5.2014000000003e-05, 5.193099999999812e-05, 5.155600000000121e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.137499999999934e-05, 5.15140000000025e-05, 5.18340000000006e-05, 5.1707999999997534e-05, 5.1929999999998644e-05, 5.176299999999634e-05, 5.230600000000196e-05, 5.1415999999998574e-05, 5.223600000000411e-05, 5.225000000000368e-05, 5.218099999999837e-05, 5.1929999999998644e-05, 5.133300000000063e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.675" endtime="20201029 12:44:19.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.664" endtime="20201029 12:44:19.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.691" endtime="20201029 12:44:19.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.686" endtime="20201029 12:44:19.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.684" endtime="20201029 12:44:19.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.203" endtime="20201029 12:44:19.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.202" endtime="20201029 12:44:19.715"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.738" endtime="20201029 12:44:19.756"></status>
</kw>
<msg timestamp="20201029 12:44:19.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.734" endtime="20201029 12:44:19.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.759" endtime="20201029 12:44:19.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.765" endtime="20201029 12:44:19.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.727" endtime="20201029 12:44:19.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.722" endtime="20201029 12:44:19.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.788" endtime="20201029 12:44:20.122"></status>
</kw>
<msg timestamp="20201029 12:44:20.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0389445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038997458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:19.785" endtime="20201029 12:44:20.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0389445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038997458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:20.131" endtime="20201029 12:44:20.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.150" endtime="20201029 12:44:20.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.778" endtime="20201029 12:44:20.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.773" endtime="20201029 12:44:20.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.167" level="INFO">${RESULT} = [{'diff': 5.2957999999998784e-05}, {'diff': 5.330499999999655e-05}, {'diff': 5.284800000000117e-05}, {'diff': 5.2902000000000504e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.33340000000021e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:20.158" endtime="20201029 12:44:20.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.178" level="INFO">${ACCURACY} = {'diff': [5.2957999999998784e-05, 5.330499999999655e-05, 5.284800000000117e-05, 5.2902000000000504e-05, 5.265299999999973e-05, 5.33340000000021e-05, 5.243099999999862e-05, 5.311100000000152e-05, 5.281...</msg>
<status status="PASS" starttime="20201029 12:44:20.169" endtime="20201029 12:44:20.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.188" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.186" endtime="20201029 12:44:20.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.194" level="INFO">VALUE: [5.2957999999998784e-05, 5.330499999999655e-05, 5.284800000000117e-05, 5.2902000000000504e-05, 5.265299999999973e-05, 5.33340000000021e-05, 5.243099999999862e-05, 5.311100000000152e-05, 5.281900000000256e-05, 5.3235999999998174e-05, 5.241699999999905e-05, 5.2945000000005626e-05, 5.3207999999999034e-05, 5.3193999999999464e-05, 5.31669999999998e-05, 5.332000000000253e-05, 5.286100000000127e-05, 5.2945000000005626e-05, 5.283299999999519e-05, 5.302799999999663e-05, 5.2499999999996994e-05, 5.2471999999997854e-05, 5.302800000000357e-05, 5.268099999999887e-05, 5.2457999999998284e-05, 5.313900000000066e-05, 5.302800000000357e-05, 5.277700000000385e-05, 5.2513999999996563e-05, 5.290299999999998e-05, 5.3263999999997313e-05, 5.288900000000041e-05, 5.330500000000349e-05, 5.2943999999999214e-05, 5.275000000000418e-05, 5.2485999999997424e-05, 5.315300000000023e-05, 5.238899999999991e-05, 5.273600000000461e-05, 5.30419999999962e-05, 5.2695000000005376e-05, 5.256999999999484e-05, 5.2499999999996994e-05, 5.308300000000238e-05, 5.302699999999716e-05, 5.256900000000231e-05, 5.284799999999423e-05, 5.236100000000077e-05, 5.2999999999997494e-05, 5.331900000000306e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.191" endtime="20201029 12:44:20.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.179" endtime="20201029 12:44:20.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.210" endtime="20201029 12:44:20.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.206" endtime="20201029 12:44:20.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.204" endtime="20201029 12:44:20.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.717" endtime="20201029 12:44:20.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.716" endtime="20201029 12:44:20.235"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.258" endtime="20201029 12:44:20.275"></status>
</kw>
<msg timestamp="20201029 12:44:20.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.254" endtime="20201029 12:44:20.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.278" endtime="20201029 12:44:20.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.285" endtime="20201029 12:44:20.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.247" endtime="20201029 12:44:20.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.242" endtime="20201029 12:44:20.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.307" endtime="20201029 12:44:20.642"></status>
</kw>
<msg timestamp="20201029 12:44:20.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0389415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038995611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:20.304" endtime="20201029 12:44:20.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0389415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038995611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:20.652" endtime="20201029 12:44:20.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.671" endtime="20201029 12:44:20.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.297" endtime="20201029 12:44:20.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.293" endtime="20201029 12:44:20.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.688" level="INFO">${RESULT} = [{'diff': 5.411100000000252e-05}, {'diff': 5.355599999999627e-05}, {'diff': 5.38340000000026e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.4027999999997633e-05}, {'diff': 5.359699999999551e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:20.679" endtime="20201029 12:44:20.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.697" level="INFO">${ACCURACY} = {'diff': [5.411100000000252e-05, 5.355599999999627e-05, 5.38340000000026e-05, 5.4013999999998064e-05, 5.4027999999997633e-05, 5.359699999999551e-05, 5.362500000000159e-05, 5.359800000000192e-05, 5.411...</msg>
<status status="PASS" starttime="20201029 12:44:20.690" endtime="20201029 12:44:20.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.708" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.705" endtime="20201029 12:44:20.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.713" level="INFO">VALUE: [5.411100000000252e-05, 5.355599999999627e-05, 5.38340000000026e-05, 5.4013999999998064e-05, 5.4027999999997633e-05, 5.359699999999551e-05, 5.362500000000159e-05, 5.359800000000192e-05, 5.411100000000252e-05, 5.3957999999999784e-05, 5.3707999999999534e-05, 5.3985999999998924e-05, 5.345899999999876e-05, 5.338900000000091e-05, 5.4277999999997883e-05, 5.4193999999993525e-05, 5.409700000000295e-05, 5.425000000000568e-05, 5.34869999999979e-05, 5.431899999999712e-05, 5.430599999999702e-05, 5.3944000000000214e-05, 5.4194000000000464e-05, 5.336100000000177e-05, 5.3513999999997564e-05, 5.4291999999997453e-05, 5.3485999999998424e-05, 5.409700000000295e-05, 5.426400000000525e-05, 5.386100000000227e-05, 5.4014000000005e-05, 5.36670000000003e-05, 5.3944000000000214e-05, 5.377699999999791e-05, 5.338900000000091e-05, 5.3721999999999104e-05, 5.352800000000407e-05, 5.35549999999968e-05, 5.351299999999809e-05, 5.390299999999404e-05, 5.407000000000328e-05, 5.337500000000134e-05, 5.43340000000031e-05, 5.379199999999695e-05, 5.412500000000209e-05, 5.3763999999997814e-05, 5.3777999999997383e-05, 5.4249999999998744e-05, 5.411099999999558e-05, 5.354200000000364e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.710" endtime="20201029 12:44:20.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.699" endtime="20201029 12:44:20.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.725" endtime="20201029 12:44:20.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.721" endtime="20201029 12:44:20.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.718" endtime="20201029 12:44:20.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.237" endtime="20201029 12:44:20.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.236" endtime="20201029 12:44:20.750"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.772" endtime="20201029 12:44:20.792"></status>
</kw>
<msg timestamp="20201029 12:44:20.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.769" endtime="20201029 12:44:20.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.795" endtime="20201029 12:44:20.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.801" endtime="20201029 12:44:20.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.762" endtime="20201029 12:44:20.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.756" endtime="20201029 12:44:20.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.824" endtime="20201029 12:44:21.160"></status>
</kw>
<msg timestamp="20201029 12:44:21.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040344667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040399542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.821" endtime="20201029 12:44:21.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040344667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040399542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.169" endtime="20201029 12:44:21.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.188" endtime="20201029 12:44:21.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.814" endtime="20201029 12:44:21.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.809" endtime="20201029 12:44:21.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.205" level="INFO">${RESULT} = [{'diff': 5.48749999999959e-05}, {'diff': 5.469500000000044e-05}, {'diff': 5.443100000000062e-05}, {'diff': 5.486100000000327e-05}, {'diff': 5.527699999999941e-05}, {'diff': 5.4471999999999854e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:21.196" endtime="20201029 12:44:21.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.214" level="INFO">${ACCURACY} = {'diff': [5.48749999999959e-05, 5.469500000000044e-05, 5.443100000000062e-05, 5.486100000000327e-05, 5.527699999999941e-05, 5.4471999999999854e-05, 5.451299999999909e-05, 5.494500000000069e-05, 5.5013...</msg>
<status status="PASS" starttime="20201029 12:44:21.207" endtime="20201029 12:44:21.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.225" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.223" endtime="20201029 12:44:21.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.230" level="INFO">VALUE: [5.48749999999959e-05, 5.469500000000044e-05, 5.443100000000062e-05, 5.486100000000327e-05, 5.527699999999941e-05, 5.4471999999999854e-05, 5.451299999999909e-05, 5.494500000000069e-05, 5.5013999999999064e-05, 5.5222000000000604e-05, 5.4929999999994705e-05, 5.502699999999916e-05, 5.4499999999998994e-05, 5.5027999999998634e-05, 5.4930000000001644e-05, 5.5194000000001464e-05, 5.4694000000000964e-05, 5.490300000000198e-05, 5.436099999999583e-05, 5.48470000000037e-05, 5.48470000000037e-05, 5.4735999999999674e-05, 5.515300000000223e-05, 5.441700000000105e-05, 5.4749999999999244e-05, 5.4763999999998814e-05, 5.46670000000013e-05, 5.4471999999999854e-05, 5.4416000000001574e-05, 5.4402000000002004e-05, 5.505599999999777e-05, 5.486100000000327e-05, 5.5222000000000604e-05, 5.5013999999999064e-05, 5.523699999999965e-05, 5.5277999999998884e-05, 5.4958000000000784e-05, 5.4527999999998134e-05, 5.456899999999737e-05, 5.468099999999393e-05, 5.440300000000148e-05, 5.5166000000002324e-05, 5.469500000000044e-05, 5.441700000000105e-05, 5.526400000000625e-05, 5.4722000000000104e-05, 5.46670000000013e-05, 5.465300000000173e-05, 5.512499999999615e-05, 5.5027999999998634e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.227" endtime="20201029 12:44:21.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.216" endtime="20201029 12:44:21.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.244" endtime="20201029 12:44:21.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.238" endtime="20201029 12:44:21.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.236" endtime="20201029 12:44:21.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.752" endtime="20201029 12:44:21.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.751" endtime="20201029 12:44:21.269"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.292" endtime="20201029 12:44:21.309"></status>
</kw>
<msg timestamp="20201029 12:44:21.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.288" endtime="20201029 12:44:21.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.313" endtime="20201029 12:44:21.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.319" endtime="20201029 12:44:21.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.281" endtime="20201029 12:44:21.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.275" endtime="20201029 12:44:21.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.342" endtime="20201029 12:44:21.699"></status>
</kw>
<msg timestamp="20201029 12:44:21.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039404375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039460236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.338" endtime="20201029 12:44:21.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039404375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039460236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.709" endtime="20201029 12:44:21.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.728" endtime="20201029 12:44:21.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.331" endtime="20201029 12:44:21.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.327" endtime="20201029 12:44:21.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.745" level="INFO">${RESULT} = [{'diff': 5.586100000000427e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.6221999999994665e-05}, {'diff': 5.584800000000417e-05}, {'diff': 5.552699999999966e-05}, {'diff': 5.6165999999996385e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:21.736" endtime="20201029 12:44:21.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.756" level="INFO">${ACCURACY} = {'diff': [5.586100000000427e-05, 5.5458000000001284e-05, 5.6221999999994665e-05, 5.584800000000417e-05, 5.552699999999966e-05, 5.6165999999996385e-05, 5.622300000000108e-05, 5.5750000000000244e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:44:21.747" endtime="20201029 12:44:21.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.767" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.765" endtime="20201029 12:44:21.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.773" level="INFO">VALUE: [5.586100000000427e-05, 5.5458000000001284e-05, 5.6221999999994665e-05, 5.584800000000417e-05, 5.552699999999966e-05, 5.6165999999996385e-05, 5.622300000000108e-05, 5.5750000000000244e-05, 5.558299999999794e-05, 5.6264000000000314e-05, 5.631900000000606e-05, 5.53749999999964e-05, 5.608400000000485e-05, 5.581999999999809e-05, 5.58470000000047e-05, 5.6250000000000744e-05, 5.58619999999968e-05, 5.593100000000212e-05, 5.618100000000237e-05, 5.581899999999862e-05, 5.588900000000341e-05, 5.540300000000248e-05, 5.6014000000000064e-05, 5.6264000000000314e-05, 5.5679999999995455e-05, 5.6236000000001174e-05, 5.6000000000000494e-05, 5.6250000000000744e-05, 5.6027999999999634e-05, 5.612499999999715e-05, 5.543099999999468e-05, 5.541700000000205e-05, 5.56670000000023e-05, 5.581899999999862e-05, 5.554200000000564e-05, 5.606999999999834e-05, 5.538900000000291e-05, 5.579099999999948e-05, 5.5972000000001354e-05, 5.5694000000001964e-05, 5.609800000000442e-05, 5.5985999999993985e-05, 5.6194000000002464e-05, 5.562500000000359e-05, 5.5805999999998523e-05, 5.580600000000546e-05, 5.593099999999518e-05, 5.5499999999999994e-05, 5.536200000000324e-05, 5.58749999999969e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.769" endtime="20201029 12:44:21.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.758" endtime="20201029 12:44:21.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.785" endtime="20201029 12:44:21.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.781" endtime="20201029 12:44:21.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.778" endtime="20201029 12:44:21.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.271" endtime="20201029 12:44:21.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.270" endtime="20201029 12:44:21.811"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.834" endtime="20201029 12:44:21.854"></status>
</kw>
<msg timestamp="20201029 12:44:21.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.830" endtime="20201029 12:44:21.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.857" endtime="20201029 12:44:21.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.863" endtime="20201029 12:44:21.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.823" endtime="20201029 12:44:21.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.817" endtime="20201029 12:44:21.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.887" endtime="20201029 12:44:22.224"></status>
</kw>
<msg timestamp="20201029 12:44:22.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040145722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.884" endtime="20201029 12:44:22.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040145722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.234" endtime="20201029 12:44:22.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.253" endtime="20201029 12:44:22.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.876" endtime="20201029 12:44:22.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.872" endtime="20201029 12:44:22.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.269" level="INFO">${RESULT} = [{'diff': 5.663900000000416e-05}, {'diff': 5.688900000000441e-05}, {'diff': 5.640300000000348e-05}, {'diff': 5.683299999999919e-05}, {'diff': 5.6555999999999274e-05}, {'diff': 5.636099999999783e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:22.261" endtime="20201029 12:44:22.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.280" level="INFO">${ACCURACY} = {'diff': [5.663900000000416e-05, 5.688900000000441e-05, 5.640300000000348e-05, 5.683299999999919e-05, 5.6555999999999274e-05, 5.636099999999783e-05, 5.734699999999926e-05, 5.706899999999987e-05, 5.655...</msg>
<status status="PASS" starttime="20201029 12:44:22.271" endtime="20201029 12:44:22.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.291" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.289" endtime="20201029 12:44:22.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.297" level="INFO">VALUE: [5.663900000000416e-05, 5.688900000000441e-05, 5.640300000000348e-05, 5.683299999999919e-05, 5.6555999999999274e-05, 5.636099999999783e-05, 5.734699999999926e-05, 5.706899999999987e-05, 5.65549999999998e-05, 5.691700000000355e-05, 5.652700000000066e-05, 5.64870000000009e-05, 5.7069999999999343e-05, 5.63749999999974e-05, 5.68619999999978e-05, 5.711099999999858e-05, 5.694499999999575e-05, 5.645900000000176e-05, 5.669500000000244e-05, 5.6694000000002964e-05, 5.70550000000003e-05, 5.7193999999996525e-05, 5.733299999999969e-05, 5.727700000000141e-05, 5.713900000000466e-05, 5.647300000000133e-05, 5.713899999999772e-05, 5.718100000000337e-05, 5.694500000000269e-05, 5.7278000000000884e-05, 5.6569999999998843e-05, 5.70550000000003e-05, 5.733299999999969e-05, 5.6500000000000994e-05, 5.686099999999833e-05, 5.70550000000003e-05, 5.6500000000000994e-05, 5.65549999999998e-05, 5.7250000000001744e-05, 5.7221999999995665e-05, 5.6721999999995165e-05, 5.7249999999994805e-05, 5.6957999999995845e-05, 5.6444000000002714e-05, 5.6972000000002354e-05, 5.634699999999826e-05, 5.661099999999808e-05, 5.683299999999919e-05, 5.669500000000244e-05, 5.6943999999996275e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.294" endtime="20201029 12:44:22.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.282" endtime="20201029 12:44:22.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.309" endtime="20201029 12:44:22.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.305" endtime="20201029 12:44:22.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.302" endtime="20201029 12:44:22.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.813" endtime="20201029 12:44:22.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.811" endtime="20201029 12:44:22.334"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.357" endtime="20201029 12:44:22.374"></status>
</kw>
<msg timestamp="20201029 12:44:22.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.353" endtime="20201029 12:44:22.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.378" endtime="20201029 12:44:22.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.384" endtime="20201029 12:44:22.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.346" endtime="20201029 12:44:22.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.340" endtime="20201029 12:44:22.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.407" endtime="20201029 12:44:22.742"></status>
</kw>
<msg timestamp="20201029 12:44:22.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039231236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039289444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.404" endtime="20201029 12:44:22.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039231236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039289444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.751" endtime="20201029 12:44:22.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.770" endtime="20201029 12:44:22.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.397" endtime="20201029 12:44:22.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.392" endtime="20201029 12:44:22.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.787" level="INFO">${RESULT} = [{'diff': 5.8207999999997095e-05}, {'diff': 5.745900000000276e-05}, {'diff': 5.743099999999668e-05}, {'diff': 5.7500000000001994e-05}, {'diff': 5.819500000000394e-05}, {'diff': 5.7986000000002924e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:22.778" endtime="20201029 12:44:22.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.797" level="INFO">${ACCURACY} = {'diff': [5.8207999999997095e-05, 5.745900000000276e-05, 5.743099999999668e-05, 5.7500000000001994e-05, 5.819500000000394e-05, 5.7986000000002924e-05, 5.78749999999989e-05, 5.7471999999995915e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 12:44:22.789" endtime="20201029 12:44:22.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.808" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.805" endtime="20201029 12:44:22.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.813" level="INFO">VALUE: [5.8207999999997095e-05, 5.745900000000276e-05, 5.743099999999668e-05, 5.7500000000001994e-05, 5.819500000000394e-05, 5.7986000000002924e-05, 5.78749999999989e-05, 5.7471999999995915e-05, 5.765299999999779e-05, 5.8235999999996235e-05, 5.783300000000019e-05, 5.7471999999995915e-05, 5.73749999999984e-05, 5.8070000000000344e-05, 5.8165999999998386e-05, 5.743099999999668e-05, 5.7957999999996845e-05, 5.8250000000002744e-05, 5.761200000000549e-05, 5.761199999999855e-05, 5.8014000000002064e-05, 5.826300000000284e-05, 5.829100000000198e-05, 5.830499999999461e-05, 5.809700000000001e-05, 5.8193999999997525e-05, 5.8236000000003174e-05, 5.784699999999976e-05, 5.831900000000112e-05, 5.78749999999989e-05, 5.813899999999872e-05, 5.7999999999995555e-05, 5.754100000000123e-05, 5.7556000000000274e-05, 5.8165999999998386e-05, 5.815299999999829e-05, 5.770900000000301e-05, 5.8138000000006185e-05, 5.7528000000001134e-05, 5.7528000000001134e-05, 5.744499999999625e-05, 5.766699999999736e-05, 5.736100000000577e-05, 5.788899999999847e-05, 5.8151999999998816e-05, 5.791699999999761e-05, 5.7500000000001994e-05, 5.8264000000002314e-05, 5.804100000000173e-05, 5.7792000000000954e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.810" endtime="20201029 12:44:22.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.799" endtime="20201029 12:44:22.816"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.825" endtime="20201029 12:44:22.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.821" endtime="20201029 12:44:22.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.818" endtime="20201029 12:44:22.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.336" endtime="20201029 12:44:22.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.335" endtime="20201029 12:44:22.850"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.872" endtime="20201029 12:44:22.896"></status>
</kw>
<msg timestamp="20201029 12:44:22.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.869" endtime="20201029 12:44:22.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.899" endtime="20201029 12:44:22.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.906" endtime="20201029 12:44:22.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.862" endtime="20201029 12:44:22.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.856" endtime="20201029 12:44:22.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.928" endtime="20201029 12:44:23.263"></status>
</kw>
<msg timestamp="20201029 12:44:23.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044645083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044704069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.925" endtime="20201029 12:44:23.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044645083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044704069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.272" endtime="20201029 12:44:23.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.291" endtime="20201029 12:44:23.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.918" endtime="20201029 12:44:23.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.914" endtime="20201029 12:44:23.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.308" level="INFO">${RESULT} = [{'diff': 5.8985999999996985e-05}, {'diff': 5.863899999999922e-05}, {'diff': 5.872300000000358e-05}, {'diff': 5.895900000000426e-05}, {'diff': 5.841699999999811e-05}, {'diff': 5.9263999999996375e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:23.300" endtime="20201029 12:44:23.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.317" level="INFO">${ACCURACY} = {'diff': [5.8985999999996985e-05, 5.863899999999922e-05, 5.872300000000358e-05, 5.895900000000426e-05, 5.841699999999811e-05, 5.9263999999996375e-05, 5.858300000000094e-05, 5.845900000000376e-05, 5.83...</msg>
<status status="PASS" starttime="20201029 12:44:23.310" endtime="20201029 12:44:23.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.328" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.326" endtime="20201029 12:44:23.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.334" level="INFO">VALUE: [5.8985999999996985e-05, 5.863899999999922e-05, 5.872300000000358e-05, 5.895900000000426e-05, 5.841699999999811e-05, 5.9263999999996375e-05, 5.858300000000094e-05, 5.845900000000376e-05, 5.83619999999993e-05, 5.9179999999998956e-05, 5.8722000000004104e-05, 5.8887999999999996e-05, 5.9014000000003064e-05, 5.8749999999996305e-05, 5.8985999999996985e-05, 5.9000000000003494e-05, 5.840299999999854e-05, 5.8458000000004284e-05, 5.8750000000003244e-05, 5.8693999999998026e-05, 5.83749999999994e-05, 5.927700000000341e-05, 5.9334000000001164e-05, 5.8597999999999983e-05, 5.9070000000001344e-05, 5.86949999999975e-05, 5.8820000000001094e-05, 5.936099999999389e-05, 5.8500000000002994e-05, 5.8721999999997165e-05, 5.8792000000001954e-05, 5.8749999999996305e-05, 5.9249999999996805e-05, 5.9222000000004604e-05, 5.8915999999999136e-05, 5.9249999999996805e-05, 5.880500000000205e-05, 5.9056000000001774e-05, 5.8972000000004354e-05, 5.8401999999999066e-05, 5.8887999999999996e-05, 5.8999999999996555e-05, 5.83619999999993e-05, 5.8556000000001274e-05, 5.886100000000033e-05, 5.859700000000051e-05, 5.8985999999996985e-05, 5.918099999999843e-05, 5.934700000000126e-05, 5.8957999999997845e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.330" endtime="20201029 12:44:23.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.319" endtime="20201029 12:44:23.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.348" endtime="20201029 12:44:23.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.342" endtime="20201029 12:44:23.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.339" endtime="20201029 12:44:23.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.852" endtime="20201029 12:44:23.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.851" endtime="20201029 12:44:23.372"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.395" endtime="20201029 12:44:23.413"></status>
</kw>
<msg timestamp="20201029 12:44:23.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.391" endtime="20201029 12:44:23.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.416" endtime="20201029 12:44:23.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.422" endtime="20201029 12:44:23.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.384" endtime="20201029 12:44:23.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.379" endtime="20201029 12:44:23.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.445" endtime="20201029 12:44:23.779"></status>
</kw>
<msg timestamp="20201029 12:44:23.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039105417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039165417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.442" endtime="20201029 12:44:23.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039105417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039165417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.788" endtime="20201029 12:44:23.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.807" endtime="20201029 12:44:23.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.435" endtime="20201029 12:44:23.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.430" endtime="20201029 12:44:23.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.824" level="INFO">${RESULT} = [{'diff': 5.9999999999997555e-05}, {'diff': 5.98750000000009e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.99870000000044e-05}, {'diff': 5.9570000000001844e-05}, {'diff': 5.93750000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:23.816" endtime="20201029 12:44:23.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.835" level="INFO">${ACCURACY} = {'diff': [5.9999999999997555e-05, 5.98750000000009e-05, 5.93750000000004e-05, 5.99870000000044e-05, 5.9570000000001844e-05, 5.93750000000004e-05, 5.965299999999979e-05, 5.9791999999996015e-05, 6.02500...</msg>
<status status="PASS" starttime="20201029 12:44:23.826" endtime="20201029 12:44:23.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.846" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.843" endtime="20201029 12:44:23.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.851" level="INFO">VALUE: [5.9999999999997555e-05, 5.98750000000009e-05, 5.93750000000004e-05, 5.99870000000044e-05, 5.9570000000001844e-05, 5.93750000000004e-05, 5.965299999999979e-05, 5.9791999999996015e-05, 6.0250000000004744e-05, 6.0014000000004064e-05, 5.9665999999999886e-05, 5.936100000000083e-05, 5.952700000000366e-05, 5.961100000000108e-05, 5.991699999999961e-05, 5.963900000000022e-05, 6.031899999999618e-05, 5.9457999999998346e-05, 5.966699999999936e-05, 5.9472000000004854e-05, 6.0013999999997125e-05, 6.0236000000005174e-05, 5.9792000000002954e-05, 6.011100000000158e-05, 6.031899999999618e-05, 6.0013999999997125e-05, 5.986100000000133e-05, 6.009700000000201e-05, 6.016699999999986e-05, 5.990300000000004e-05, 5.983300000000219e-05, 6.020900000000551e-05, 5.981900000000262e-05, 5.9999999999997555e-05, 6.0207999999999096e-05, 5.9443999999998776e-05, 5.988900000000047e-05, 5.956900000000237e-05, 5.983299999999525e-05, 5.9985999999997985e-05, 5.9999999999997555e-05, 6.0263999999997375e-05, 6.016699999999986e-05, 6.0070000000002344e-05, 5.9749999999997305e-05, 6.0207999999999096e-05, 6.031899999999618e-05, 6.013900000000072e-05, 6.0138000000001246e-05, 5.9957999999998846e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.848" endtime="20201029 12:44:23.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.837" endtime="20201029 12:44:23.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.864" endtime="20201029 12:44:23.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.859" endtime="20201029 12:44:23.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.857" endtime="20201029 12:44:23.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.374" endtime="20201029 12:44:23.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.373" endtime="20201029 12:44:23.888"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.911" endtime="20201029 12:44:23.929"></status>
</kw>
<msg timestamp="20201029 12:44:23.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.908" endtime="20201029 12:44:23.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.932" endtime="20201029 12:44:23.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.938" endtime="20201029 12:44:23.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.901" endtime="20201029 12:44:23.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.895" endtime="20201029 12:44:23.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.961" endtime="20201029 12:44:24.296"></status>
</kw>
<msg timestamp="20201029 12:44:24.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039173444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.958" endtime="20201029 12:44:24.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039173444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.306" endtime="20201029 12:44:24.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.325" endtime="20201029 12:44:24.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.951" endtime="20201029 12:44:24.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.946" endtime="20201029 12:44:24.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.342" level="INFO">${RESULT} = [{'diff': 6.0777999999997445e-05}, {'diff': 6.0985999999998985e-05}, {'diff': 6.063900000000122e-05}, {'diff': 6.126400000000531e-05}, {'diff': 6.118000000000096e-05}, {'diff': 6.090300000000104e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:24.333" endtime="20201029 12:44:24.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.353" level="INFO">${ACCURACY} = {'diff': [6.0777999999997445e-05, 6.0985999999998985e-05, 6.063900000000122e-05, 6.126400000000531e-05, 6.118000000000096e-05, 6.090300000000104e-05, 6.061100000000208e-05, 6.129099999999804e-05, 6.10...</msg>
<status status="PASS" starttime="20201029 12:44:24.344" endtime="20201029 12:44:24.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.364" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.362" endtime="20201029 12:44:24.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.369" level="INFO">VALUE: [6.0777999999997445e-05, 6.0985999999998985e-05, 6.063900000000122e-05, 6.126400000000531e-05, 6.118000000000096e-05, 6.090300000000104e-05, 6.061100000000208e-05, 6.129099999999804e-05, 6.1013999999998125e-05, 6.118000000000096e-05, 6.117999999999402e-05, 6.084700000000276e-05, 6.129199999999752e-05, 6.0555999999996335e-05, 6.133300000000369e-05, 6.12220000000066e-05, 6.12499999999988e-05, 6.040300000000054e-05, 6.123599999999924e-05, 6.059699999999557e-05, 6.063900000000122e-05, 6.0805999999996585e-05, 6.0985999999998985e-05, 6.116699999999392e-05, 6.113900000000172e-05, 6.0763999999997875e-05, 6.088799999999506e-05, 6.115300000000129e-05, 6.065300000000079e-05, 6.0527999999997195e-05, 6.061100000000208e-05, 6.12080000000001e-05, 6.080500000000405e-05, 6.0694000000000026e-05, 6.0513999999997625e-05, 6.1027999999997695e-05, 6.03750000000014e-05, 6.1013999999998125e-05, 6.116600000000139e-05, 6.126399999999838e-05, 6.0749999999998305e-05, 6.0902000000001566e-05, 6.063900000000122e-05, 6.048699999999796e-05, 6.104199999999727e-05, 6.068099999999993e-05, 6.0749999999998305e-05, 6.098699999999846e-05, 6.044499999999925e-05, 6.036100000000183e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.366" endtime="20201029 12:44:24.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.355" endtime="20201029 12:44:24.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.381" endtime="20201029 12:44:24.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.377" endtime="20201029 12:44:24.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.375" endtime="20201029 12:44:24.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.891" endtime="20201029 12:44:24.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.889" endtime="20201029 12:44:24.406"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.430" endtime="20201029 12:44:24.448"></status>
</kw>
<msg timestamp="20201029 12:44:24.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.426" endtime="20201029 12:44:24.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.451" endtime="20201029 12:44:24.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.457" endtime="20201029 12:44:24.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.419" endtime="20201029 12:44:24.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.413" endtime="20201029 12:44:24.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.480" endtime="20201029 12:44:24.816"></status>
</kw>
<msg timestamp="20201029 12:44:24.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040194431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.477" endtime="20201029 12:44:24.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040194431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.826" endtime="20201029 12:44:24.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.844" endtime="20201029 12:44:24.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.470" endtime="20201029 12:44:24.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.465" endtime="20201029 12:44:24.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.862" level="INFO">${RESULT} = [{'diff': 6.208400000000391e-05}, {'diff': 6.186099999999639e-05}, {'diff': 6.17499999999993e-05}, {'diff': 6.199999999999956e-05}, {'diff': 6.15699999999969e-05}, {'diff': 6.165300000000179e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:24.853" endtime="20201029 12:44:24.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.871" level="INFO">${ACCURACY} = {'diff': [6.208400000000391e-05, 6.186099999999639e-05, 6.17499999999993e-05, 6.199999999999956e-05, 6.15699999999969e-05, 6.165300000000179e-05, 6.159700000000351e-05, 6.216700000000186e-05, 6.177799...</msg>
<status status="PASS" starttime="20201029 12:44:24.864" endtime="20201029 12:44:24.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.881" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.879" endtime="20201029 12:44:24.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.887" level="INFO">VALUE: [6.208400000000391e-05, 6.186099999999639e-05, 6.17499999999993e-05, 6.199999999999956e-05, 6.15699999999969e-05, 6.165300000000179e-05, 6.159700000000351e-05, 6.216700000000186e-05, 6.177799999999845e-05, 6.188899999999553e-05, 6.20279999999987e-05, 6.216700000000186e-05, 6.15420000000047e-05, 6.144400000000078e-05, 6.211100000000358e-05, 6.18750000000029e-05, 6.208300000000444e-05, 6.147199999999992e-05, 6.24029999999956e-05, 6.231900000000512e-05, 6.190200000000257e-05, 6.190300000000204e-05, 6.218000000000196e-05, 6.179199999999802e-05, 6.223600000000024e-05, 6.151399999999863e-05, 6.159800000000298e-05, 6.216699999999492e-05, 6.165300000000179e-05, 6.215300000000229e-05, 6.226399999999938e-05, 6.137499999999546e-05, 6.223600000000024e-05, 6.147199999999992e-05, 6.198599999999999e-05, 6.19029999999951e-05, 6.176399999999888e-05, 6.149999999999906e-05, 6.209699999999707e-05, 6.151399999999863e-05, 6.20420000000052e-05, 6.209699999999707e-05, 6.144400000000078e-05, 6.190300000000204e-05, 6.215300000000229e-05, 6.147199999999992e-05, 6.222300000000014e-05, 6.159700000000351e-05, 6.151399999999863e-05, 6.215300000000229e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.884" endtime="20201029 12:44:24.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.872" endtime="20201029 12:44:24.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.899" endtime="20201029 12:44:24.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.895" endtime="20201029 12:44:24.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.892" endtime="20201029 12:44:24.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.408" endtime="20201029 12:44:24.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.407" endtime="20201029 12:44:24.924"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.947" endtime="20201029 12:44:24.966"></status>
</kw>
<msg timestamp="20201029 12:44:24.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.943" endtime="20201029 12:44:24.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.970" endtime="20201029 12:44:24.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.976" endtime="20201029 12:44:24.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.936" endtime="20201029 12:44:24.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.931" endtime="20201029 12:44:24.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.999" endtime="20201029 12:44:25.358"></status>
</kw>
<msg timestamp="20201029 12:44:25.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040760917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040823389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.996" endtime="20201029 12:44:25.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040760917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040823389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.367" endtime="20201029 12:44:25.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.386" endtime="20201029 12:44:25.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.988" endtime="20201029 12:44:25.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.984" endtime="20201029 12:44:25.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.403" level="INFO">${RESULT} = [{'diff': 6.247200000000092e-05}, {'diff': 6.281899999999868e-05}, {'diff': 6.333299999999875e-05}, {'diff': 6.265300000000279e-05}, {'diff': 6.266700000000236e-05}, {'diff': 6.240300000000254e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.395" endtime="20201029 12:44:25.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.413" level="INFO">${ACCURACY} = {'diff': [6.247200000000092e-05, 6.281899999999868e-05, 6.333299999999875e-05, 6.265300000000279e-05, 6.266700000000236e-05, 6.240300000000254e-05, 6.25279999999992e-05, 6.313900000000372e-05, 6.29169...</msg>
<status status="PASS" starttime="20201029 12:44:25.405" endtime="20201029 12:44:25.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.423" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.421" endtime="20201029 12:44:25.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.429" level="INFO">VALUE: [6.247200000000092e-05, 6.281899999999868e-05, 6.333299999999875e-05, 6.265300000000279e-05, 6.266700000000236e-05, 6.240300000000254e-05, 6.25279999999992e-05, 6.313900000000372e-05, 6.291699999999567e-05, 6.316699999999592e-05, 6.315299999999635e-05, 6.333299999999875e-05, 6.330499999999961e-05, 6.247200000000092e-05, 6.306899999999893e-05, 6.24029999999956e-05, 6.279200000000595e-05, 6.256899999999843e-05, 6.306899999999893e-05, 6.265200000000332e-05, 6.237499999999646e-05, 6.301300000000065e-05, 6.241699999999517e-05, 6.28479999999973e-05, 6.24300000000022e-05, 6.316700000000286e-05, 6.262500000000365e-05, 6.305599999999884e-05, 6.29159999999962e-05, 6.281899999999868e-05, 6.298600000000099e-05, 6.288900000000347e-05, 6.27080000000016e-05, 6.318100000000243e-05, 6.305599999999884e-05, 6.291700000000261e-05, 6.244399999999484e-05, 6.315300000000329e-05, 6.242999999999527e-05, 6.322300000000114e-05, 6.316699999999592e-05, 6.294400000000228e-05, 6.255599999999834e-05, 6.251399999999963e-05, 6.323600000000124e-05, 6.266700000000236e-05, 6.234699999999732e-05, 6.281999999999816e-05, 6.272200000000117e-05, 6.240199999999613e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.426" endtime="20201029 12:44:25.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.414" endtime="20201029 12:44:25.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.447" endtime="20201029 12:44:25.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.441" endtime="20201029 12:44:25.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.439" endtime="20201029 12:44:25.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.926" endtime="20201029 12:44:25.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.925" endtime="20201029 12:44:25.472"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.495" endtime="20201029 12:44:25.515"></status>
</kw>
<msg timestamp="20201029 12:44:25.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.491" endtime="20201029 12:44:25.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.518" endtime="20201029 12:44:25.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.524" endtime="20201029 12:44:25.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.484" endtime="20201029 12:44:25.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.479" endtime="20201029 12:44:25.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.547" endtime="20201029 12:44:25.893"></status>
</kw>
<msg timestamp="20201029 12:44:25.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039249083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039312514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.544" endtime="20201029 12:44:25.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039249083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039312514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.902" endtime="20201029 12:44:25.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.921" endtime="20201029 12:44:25.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.537" endtime="20201029 12:44:25.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.532" endtime="20201029 12:44:25.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.937" level="INFO">${RESULT} = [{'diff': 6.343100000000268e-05}, {'diff': 6.344399999999584e-05}, {'diff': 6.40699999999994e-05}, {'diff': 6.37500000000013e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.411099999999864e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:25.929" endtime="20201029 12:44:25.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.948" level="INFO">${ACCURACY} = {'diff': [6.343100000000268e-05, 6.344399999999584e-05, 6.40699999999994e-05, 6.37500000000013e-05, 6.380500000000011e-05, 6.411099999999864e-05, 6.429200000000052e-05, 6.348600000000149e-05, 6.398600...</msg>
<status status="PASS" starttime="20201029 12:44:25.940" endtime="20201029 12:44:25.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.959" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.957" endtime="20201029 12:44:25.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.964" level="INFO">VALUE: [6.343100000000268e-05, 6.344399999999584e-05, 6.40699999999994e-05, 6.37500000000013e-05, 6.380500000000011e-05, 6.411099999999864e-05, 6.429200000000052e-05, 6.348600000000149e-05, 6.398600000000199e-05, 6.406899999999993e-05, 6.344400000000278e-05, 6.394399999999634e-05, 6.381899999999968e-05, 6.354199999999977e-05, 6.394400000000328e-05, 6.3582999999999e-05, 6.400000000000156e-05, 6.37080000000026e-05, 6.404200000000027e-05, 6.42080000000031e-05, 6.354199999999977e-05, 6.409699999999907e-05, 6.422199999999573e-05, 6.337499999999746e-05, 6.362499999999771e-05, 6.417999999999702e-05, 6.405500000000036e-05, 6.404100000000079e-05, 6.42500000000018e-05, 6.350000000000106e-05, 6.37500000000013e-05, 6.417999999999702e-05, 6.340300000000354e-05, 6.368000000000346e-05, 6.368000000000346e-05, 6.390200000000457e-05, 6.372300000000164e-05, 6.433299999999975e-05, 6.397200000000242e-05, 6.402700000000122e-05, 6.420799999999616e-05, 6.351400000000063e-05, 6.429200000000052e-05, 6.342999999999627e-05, 6.34159999999967e-05, 6.365299999999685e-05, 6.37080000000026e-05, 6.336099999999789e-05, 6.411099999999864e-05, 6.415299999999735e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.961" endtime="20201029 12:44:25.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.950" endtime="20201029 12:44:25.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.977" endtime="20201029 12:44:25.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.972" endtime="20201029 12:44:26.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.970" endtime="20201029 12:44:26.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.474" endtime="20201029 12:44:26.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.473" endtime="20201029 12:44:26.002"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.029" endtime="20201029 12:44:26.049"></status>
</kw>
<msg timestamp="20201029 12:44:26.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.024" endtime="20201029 12:44:26.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.052" endtime="20201029 12:44:26.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.058" endtime="20201029 12:44:26.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.015" endtime="20201029 12:44:26.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.008" endtime="20201029 12:44:26.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.081" endtime="20201029 12:44:26.428"></status>
</kw>
<msg timestamp="20201029 12:44:26.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043893639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043958597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.078" endtime="20201029 12:44:26.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043893639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043958597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.438" endtime="20201029 12:44:26.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.456" endtime="20201029 12:44:26.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.071" endtime="20201029 12:44:26.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.066" endtime="20201029 12:44:26.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.473" level="INFO">${RESULT} = [{'diff': 6.495800000000385e-05}, {'diff': 6.45280000000012e-05}, {'diff': 6.529200000000152e-05}, {'diff': 6.4583e-05}, {'diff': 6.444499999999631e-05}, {'diff': 6.47500000000023e-05}, {'diff': 6.498...</msg>
<status status="PASS" starttime="20201029 12:44:26.465" endtime="20201029 12:44:26.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.484" level="INFO">${ACCURACY} = {'diff': [6.495800000000385e-05, 6.45280000000012e-05, 6.529200000000152e-05, 6.4583e-05, 6.444499999999631e-05, 6.47500000000023e-05, 6.498600000000299e-05, 6.473600000000274e-05, 6.501400000000213e-...</msg>
<status status="PASS" starttime="20201029 12:44:26.475" endtime="20201029 12:44:26.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.495" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.493" endtime="20201029 12:44:26.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.501" level="INFO">VALUE: [6.495800000000385e-05, 6.45280000000012e-05, 6.529200000000152e-05, 6.4583e-05, 6.444499999999631e-05, 6.47500000000023e-05, 6.498600000000299e-05, 6.473600000000274e-05, 6.501400000000213e-05, 6.52500000000028e-05, 6.499999999999562e-05, 6.512500000000615e-05, 6.486100000000633e-05, 6.477800000000145e-05, 6.52359999999963e-05, 6.511099999999964e-05, 6.477800000000145e-05, 6.50830000000005e-05, 6.461099999999914e-05, 6.467999999999752e-05, 6.526400000000238e-05, 6.511199999999912e-05, 6.479199999999408e-05, 6.450000000000206e-05, 6.477800000000145e-05, 6.513899999999878e-05, 6.438899999999803e-05, 6.524999999999587e-05, 6.469499999999656e-05, 6.527699999999553e-05, 6.508399999999998e-05, 6.444400000000378e-05, 6.479100000000154e-05, 6.455600000000034e-05, 6.458399999999948e-05, 6.494500000000375e-05, 6.530600000000109e-05, 6.477800000000145e-05, 6.476400000000188e-05, 6.466699999999742e-05, 6.501400000000213e-05, 6.447300000000239e-05, 6.50700000000004e-05, 6.44029999999976e-05, 6.526399999999544e-05, 6.512499999999921e-05, 6.499999999999562e-05, 6.480600000000059e-05, 6.52500000000028e-05, 6.504200000000127e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.497" endtime="20201029 12:44:26.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.486" endtime="20201029 12:44:26.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.513" endtime="20201029 12:44:26.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.509" endtime="20201029 12:44:26.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.506" endtime="20201029 12:44:26.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.004" endtime="20201029 12:44:26.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.003" endtime="20201029 12:44:26.538"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.561" endtime="20201029 12:44:26.581"></status>
</kw>
<msg timestamp="20201029 12:44:26.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.557" endtime="20201029 12:44:26.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.584" endtime="20201029 12:44:26.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.590" endtime="20201029 12:44:26.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.550" endtime="20201029 12:44:26.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.545" endtime="20201029 12:44:26.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.614" endtime="20201029 12:44:26.962"></status>
</kw>
<msg timestamp="20201029 12:44:26.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039552694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039618264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.610" endtime="20201029 12:44:26.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039552694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039618264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.971" endtime="20201029 12:44:26.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.990" endtime="20201029 12:44:26.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.603" endtime="20201029 12:44:26.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.598" endtime="20201029 12:44:26.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.008" level="INFO">${RESULT} = [{'diff': 6.55700000000009e-05}, {'diff': 6.618100000000543e-05}, {'diff': 6.545800000000435e-05}, {'diff': 6.566699999999842e-05}, {'diff': 6.597300000000389e-05}, {'diff': 6.602799999999576e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:26.998" endtime="20201029 12:44:27.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.019" level="INFO">${ACCURACY} = {'diff': [6.55700000000009e-05, 6.618100000000543e-05, 6.545800000000435e-05, 6.566699999999842e-05, 6.597300000000389e-05, 6.602799999999576e-05, 6.590199999999963e-05, 6.615199999999988e-05, 6.54720...</msg>
<status status="PASS" starttime="20201029 12:44:27.010" endtime="20201029 12:44:27.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.032" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.029" endtime="20201029 12:44:27.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.038" level="INFO">VALUE: [6.55700000000009e-05, 6.618100000000543e-05, 6.545800000000435e-05, 6.566699999999842e-05, 6.597300000000389e-05, 6.602799999999576e-05, 6.590199999999963e-05, 6.615199999999988e-05, 6.547200000000392e-05, 6.630599999999515e-05, 6.597200000000442e-05, 6.618100000000543e-05, 6.601400000000313e-05, 6.623600000000424e-05, 6.586100000000039e-05, 6.633300000000175e-05, 6.551399999999569e-05, 6.579200000000202e-05, 6.548599999999655e-05, 6.562499999999971e-05, 6.55700000000009e-05, 6.633400000000123e-05, 6.540300000000554e-05, 6.60559999999949e-05, 6.534700000000032e-05, 6.587499999999996e-05, 6.569399999999809e-05, 6.609800000000055e-05, 6.586100000000039e-05, 6.57500000000033e-05, 6.540300000000554e-05, 6.594499999999781e-05, 6.624999999999687e-05, 6.623699999999677e-05, 6.555500000000186e-05, 6.549999999999612e-05, 6.555600000000134e-05, 6.581900000000168e-05, 6.548599999999655e-05, 6.588800000000006e-05, 6.551300000000315e-05, 6.606900000000193e-05, 6.619400000000553e-05, 6.566699999999842e-05, 6.62359999999973e-05, 6.605600000000184e-05, 6.605600000000184e-05, 6.556900000000143e-05, 6.57909999999956e-05, 6.584700000000082e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.035" endtime="20201029 12:44:27.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.021" endtime="20201029 12:44:27.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.051" endtime="20201029 12:44:27.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.046" endtime="20201029 12:44:27.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.044" endtime="20201029 12:44:27.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.540" endtime="20201029 12:44:27.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.539" endtime="20201029 12:44:27.076"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.098" endtime="20201029 12:44:27.120"></status>
</kw>
<msg timestamp="20201029 12:44:27.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.095" endtime="20201029 12:44:27.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.123" endtime="20201029 12:44:27.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.129" endtime="20201029 12:44:27.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.088" endtime="20201029 12:44:27.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.082" endtime="20201029 12:44:27.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.154" endtime="20201029 12:44:27.504"></status>
</kw>
<msg timestamp="20201029 12:44:27.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040781653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.150" endtime="20201029 12:44:27.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040781653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040848417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.514" endtime="20201029 12:44:27.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.532" endtime="20201029 12:44:27.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.143" endtime="20201029 12:44:27.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.138" endtime="20201029 12:44:27.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.549" level="INFO">${RESULT} = [{'diff': 6.676399999999694e-05}, {'diff': 6.716699999999992e-05}, {'diff': 6.719499999999906e-05}, {'diff': 6.704199999999633e-05}, {'diff': 6.65700000000019e-05}, {'diff': 6.716699999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:27.541" endtime="20201029 12:44:27.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.559" level="INFO">${ACCURACY} = {'diff': [6.676399999999694e-05, 6.716699999999992e-05, 6.719499999999906e-05, 6.704199999999633e-05, 6.65700000000019e-05, 6.716699999999992e-05, 6.672200000000517e-05, 6.649999999999712e-05, 6.65970...</msg>
<status status="PASS" starttime="20201029 12:44:27.551" endtime="20201029 12:44:27.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.570" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.567" endtime="20201029 12:44:27.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.575" level="INFO">VALUE: [6.676399999999694e-05, 6.716699999999992e-05, 6.719499999999906e-05, 6.704199999999633e-05, 6.65700000000019e-05, 6.716699999999992e-05, 6.672200000000517e-05, 6.649999999999712e-05, 6.659700000000157e-05, 6.686100000000139e-05, 6.67229999999977e-05, 6.69030000000001e-05, 6.726400000000438e-05, 6.676399999999694e-05, 6.674999999999737e-05, 6.704100000000379e-05, 6.705499999999642e-05, 6.655600000000234e-05, 6.686099999999445e-05, 6.719499999999906e-05, 6.677800000000345e-05, 6.645900000000482e-05, 6.652799999999626e-05, 6.66109999999942e-05, 6.698599999999805e-05, 6.726400000000438e-05, 6.706999999999547e-05, 6.731899999999624e-05, 6.636099999999395e-05, 6.706899999999599e-05, 6.694399999999934e-05, 6.665299999999985e-05, 6.701399999999719e-05, 6.729199999999658e-05, 6.640300000000654e-05, 6.718099999999949e-05, 6.661100000000114e-05, 6.713900000000078e-05, 6.730500000000361e-05, 6.687500000000096e-05, 6.711100000000164e-05, 6.670799999999866e-05, 6.654200000000277e-05, 6.70280000000037e-05, 6.680500000000311e-05, 6.67909999999966e-05, 6.642999999999927e-05, 6.718000000000002e-05, 6.654099999999635e-05, 6.654199999999583e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.572" endtime="20201029 12:44:27.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.561" endtime="20201029 12:44:27.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.589" endtime="20201029 12:44:27.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.583" endtime="20201029 12:44:27.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.580" endtime="20201029 12:44:27.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.078" endtime="20201029 12:44:27.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.077" endtime="20201029 12:44:27.614"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.636" endtime="20201029 12:44:27.656"></status>
</kw>
<msg timestamp="20201029 12:44:27.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.633" endtime="20201029 12:44:27.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.659" endtime="20201029 12:44:27.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.666" endtime="20201029 12:44:27.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.626" endtime="20201029 12:44:27.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.620" endtime="20201029 12:44:27.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.688" endtime="20201029 12:44:28.034"></status>
</kw>
<msg timestamp="20201029 12:44:28.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039084542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039152194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.685" endtime="20201029 12:44:28.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039084542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039152194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.043" endtime="20201029 12:44:28.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.062" endtime="20201029 12:44:28.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.678" endtime="20201029 12:44:28.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.673" endtime="20201029 12:44:28.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.078" level="INFO">${RESULT} = [{'diff': 6.765200000000138e-05}, {'diff': 6.836099999999595e-05}, {'diff': 6.813800000000231e-05}, {'diff': 6.830499999999767e-05}, {'diff': 6.816599999999451e-05}, {'diff': 6.815300000000135e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:28.070" endtime="20201029 12:44:28.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.093" level="INFO">${ACCURACY} = {'diff': [6.765200000000138e-05, 6.836099999999595e-05, 6.813800000000231e-05, 6.830499999999767e-05, 6.816599999999451e-05, 6.815300000000135e-05, 6.761100000000214e-05, 6.834699999999638e-05, 6.8138...</msg>
<status status="PASS" starttime="20201029 12:44:28.080" endtime="20201029 12:44:28.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.104" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.102" endtime="20201029 12:44:28.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.109" level="INFO">VALUE: [6.765200000000138e-05, 6.836099999999595e-05, 6.813800000000231e-05, 6.830499999999767e-05, 6.816599999999451e-05, 6.815300000000135e-05, 6.761100000000214e-05, 6.834699999999638e-05, 6.813899999999484e-05, 6.770799999999966e-05, 6.798599999999905e-05, 6.787500000000196e-05, 6.818000000000102e-05, 6.818000000000102e-05, 6.809800000000255e-05, 6.756900000000343e-05, 6.744499999999931e-05, 6.798699999999852e-05, 6.795899999999938e-05, 6.787500000000196e-05, 6.795899999999938e-05, 6.77359999999988e-05, 6.763900000000128e-05, 6.770899999999913e-05, 6.743000000000027e-05, 6.80830000000035e-05, 6.777799999999751e-05, 6.797199999999948e-05, 6.811100000000264e-05, 6.752699999999778e-05, 6.766600000000095e-05, 6.822199999999973e-05, 6.786100000000239e-05, 6.830599999999715e-05, 6.765200000000138e-05, 6.80979999999956e-05, 6.787500000000196e-05, 6.79030000000011e-05, 6.816600000000145e-05, 6.787500000000196e-05, 6.748599999999855e-05, 6.743099999999974e-05, 6.815299999999441e-05, 6.74160000000007e-05, 6.834699999999638e-05, 6.743000000000027e-05, 6.7583000000003e-05, 6.734700000000232e-05, 6.737500000000146e-05, 6.75559999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.106" endtime="20201029 12:44:28.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.095" endtime="20201029 12:44:28.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.122" endtime="20201029 12:44:28.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.117" endtime="20201029 12:44:28.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.115" endtime="20201029 12:44:28.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.616" endtime="20201029 12:44:28.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.615" endtime="20201029 12:44:28.147"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.170" endtime="20201029 12:44:28.188"></status>
</kw>
<msg timestamp="20201029 12:44:28.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.166" endtime="20201029 12:44:28.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.192" endtime="20201029 12:44:28.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.198" endtime="20201029 12:44:28.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.159" endtime="20201029 12:44:28.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.153" endtime="20201029 12:44:28.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.222" endtime="20201029 12:44:28.556"></status>
</kw>
<msg timestamp="20201029 12:44:28.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040135569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.219" endtime="20201029 12:44:28.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040135569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.566" endtime="20201029 12:44:28.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.585" endtime="20201029 12:44:28.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.212" endtime="20201029 12:44:28.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.207" endtime="20201029 12:44:28.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.602" level="INFO">${RESULT} = [{'diff': 6.886100000000339e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.87909999999986e-05}, {'diff': 6.869400000000109e-05}, {'diff': 6.844500000000031e-05}, {'diff': 6.869400000000109e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:28.593" endtime="20201029 12:44:28.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.613" level="INFO">${ACCURACY} = {'diff': [6.886100000000339e-05, 6.848599999999955e-05, 6.87909999999986e-05, 6.869400000000109e-05, 6.844500000000031e-05, 6.869400000000109e-05, 6.915300000000235e-05, 6.851399999999869e-05, 6.84999...</msg>
<status status="PASS" starttime="20201029 12:44:28.604" endtime="20201029 12:44:28.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.624" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.621" endtime="20201029 12:44:28.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.629" level="INFO">VALUE: [6.886100000000339e-05, 6.848599999999955e-05, 6.87909999999986e-05, 6.869400000000109e-05, 6.844500000000031e-05, 6.869400000000109e-05, 6.915300000000235e-05, 6.851399999999869e-05, 6.849999999999912e-05, 6.89030000000021e-05, 6.909699999999713e-05, 6.834699999999638e-05, 6.904200000000527e-05, 6.883299999999731e-05, 6.90700000000044e-05, 6.863900000000228e-05, 6.926399999999944e-05, 6.863899999999534e-05, 6.91109999999967e-05, 6.887500000000296e-05, 6.879199999999808e-05, 6.874999999999937e-05, 6.845899999999988e-05, 6.930599999999815e-05, 6.849999999999912e-05, 6.926299999999996e-05, 6.863900000000228e-05, 6.862499999999577e-05, 6.868099999999405e-05, 6.854200000000477e-05, 6.859699999999663e-05, 6.865200000000238e-05, 6.918100000000149e-05, 6.918000000000202e-05, 6.87909999999986e-05, 6.931899999999824e-05, 6.904199999999833e-05, 6.838899999999509e-05, 6.84030000000016e-05, 6.898699999999952e-05, 6.843100000000074e-05, 6.843100000000074e-05, 6.869500000000056e-05, 6.930599999999815e-05, 6.898600000000005e-05, 6.847300000000639e-05, 6.929199999999858e-05, 6.894400000000134e-05, 6.909700000000407e-05, 6.842999999999433e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.626" endtime="20201029 12:44:28.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.615" endtime="20201029 12:44:28.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.641" endtime="20201029 12:44:28.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.637" endtime="20201029 12:44:28.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.635" endtime="20201029 12:44:28.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.149" endtime="20201029 12:44:28.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.148" endtime="20201029 12:44:28.666"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.689" endtime="20201029 12:44:28.707"></status>
</kw>
<msg timestamp="20201029 12:44:28.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.685" endtime="20201029 12:44:28.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.711" endtime="20201029 12:44:28.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.717" endtime="20201029 12:44:28.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.678" endtime="20201029 12:44:28.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.673" endtime="20201029 12:44:28.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.740" endtime="20201029 12:44:29.077"></status>
</kw>
<msg timestamp="20201029 12:44:29.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038953611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039023, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:28.736" endtime="20201029 12:44:29.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038953611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039023, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:29.086" endtime="20201029 12:44:29.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.105" endtime="20201029 12:44:29.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.729" endtime="20201029 12:44:29.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.725" endtime="20201029 12:44:29.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.122" level="INFO">${RESULT} = [{'diff': 6.938900000000303e-05}, {'diff': 6.937500000000346e-05}, {'diff': 6.966700000000242e-05}, {'diff': 7.030599999999915e-05}, {'diff': 6.988899999999659e-05}, {'diff': 7.020900000000163e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.113" endtime="20201029 12:44:29.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.131" level="INFO">${ACCURACY} = {'diff': [6.938900000000303e-05, 6.937500000000346e-05, 6.966700000000242e-05, 7.030599999999915e-05, 6.988899999999659e-05, 7.020900000000163e-05, 6.945799999999447e-05, 6.954199999999883e-05, 7.0194...</msg>
<status status="PASS" starttime="20201029 12:44:29.124" endtime="20201029 12:44:29.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.142" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.140" endtime="20201029 12:44:29.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.147" level="INFO">VALUE: [6.938900000000303e-05, 6.937500000000346e-05, 6.966700000000242e-05, 7.030599999999915e-05, 6.988899999999659e-05, 7.020900000000163e-05, 6.945799999999447e-05, 6.954199999999883e-05, 7.019400000000259e-05, 6.997200000000148e-05, 7.000000000000062e-05, 6.968100000000199e-05, 7.009699999999813e-05, 6.956900000000543e-05, 7.022199999999479e-05, 7.008299999999856e-05, 6.969500000000156e-05, 7.019400000000259e-05, 7.02360000000013e-05, 6.997200000000148e-05, 7.000000000000062e-05, 6.970799999999472e-05, 7.004199999999933e-05, 6.981999999999822e-05, 6.976399999999994e-05, 6.987500000000396e-05, 6.991700000000267e-05, 7.000000000000062e-05, 6.975000000000037e-05, 6.97360000000008e-05, 6.943100000000174e-05, 6.97230000000007e-05, 7.026300000000096e-05, 6.991599999999626e-05, 6.988900000000353e-05, 7.020799999999522e-05, 7.008399999999804e-05, 6.965300000000285e-05, 6.979199999999908e-05, 7.016600000000345e-05, 7.029199999999958e-05, 6.950000000000012e-05, 6.995800000000191e-05, 7.018100000000249e-05, 7.011199999999718e-05, 7.019400000000259e-05, 7.027700000000053e-05, 7.019400000000259e-05, 6.959699999999763e-05, 6.951399999999969e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.144" endtime="20201029 12:44:29.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.133" endtime="20201029 12:44:29.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.159" endtime="20201029 12:44:29.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.155" endtime="20201029 12:44:29.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.153" endtime="20201029 12:44:29.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.668" endtime="20201029 12:44:29.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.667" endtime="20201029 12:44:29.184"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.207" endtime="20201029 12:44:29.228"></status>
</kw>
<msg timestamp="20201029 12:44:29.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.204" endtime="20201029 12:44:29.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.231" endtime="20201029 12:44:29.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.238" endtime="20201029 12:44:29.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.196" endtime="20201029 12:44:29.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.191" endtime="20201029 12:44:29.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.261" endtime="20201029 12:44:29.596"></status>
</kw>
<msg timestamp="20201029 12:44:29.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041279903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041351069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.258" endtime="20201029 12:44:29.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041279903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041351069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.606" endtime="20201029 12:44:29.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.625" endtime="20201029 12:44:29.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.251" endtime="20201029 12:44:29.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.246" endtime="20201029 12:44:29.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.642" level="INFO">${RESULT} = [{'diff': 7.116599999999751e-05}, {'diff': 7.10559999999999e-05}, {'diff': 7.054100000000035e-05}, {'diff': 7.059800000000505e-05}, {'diff': 7.090299999999716e-05}, {'diff': 7.084799999999836e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:29.633" endtime="20201029 12:44:29.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.651" level="INFO">${ACCURACY} = {'diff': [7.116599999999751e-05, 7.10559999999999e-05, 7.054100000000035e-05, 7.059800000000505e-05, 7.090299999999716e-05, 7.084799999999836e-05, 7.065300000000385e-05, 7.059699999999863e-05, 7.07910...</msg>
<status status="PASS" starttime="20201029 12:44:29.644" endtime="20201029 12:44:29.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.662" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.659" endtime="20201029 12:44:29.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.667" level="INFO">VALUE: [7.116599999999751e-05, 7.10559999999999e-05, 7.054100000000035e-05, 7.059800000000505e-05, 7.090299999999716e-05, 7.084799999999836e-05, 7.065300000000385e-05, 7.059699999999863e-05, 7.07910000000006e-05, 7.088899999999759e-05, 7.113899999999784e-05, 7.11109999999987e-05, 7.097300000000195e-05, 7.093100000000324e-05, 7.122200000000273e-05, 7.043100000000274e-05, 7.083399999999879e-05, 7.112499999999827e-05, 7.070899999999519e-05, 7.070900000000213e-05, 7.101400000000119e-05, 7.05559999999994e-05, 7.087499999999802e-05, 7.12910000000011e-05, 7.127800000000101e-05, 7.095800000000291e-05, 7.080500000000017e-05, 7.134699999999938e-05, 7.133299999999981e-05, 7.122199999999579e-05, 7.112499999999827e-05, 7.038899999999709e-05, 7.12910000000011e-05, 7.040299999999666e-05, 7.105500000000042e-05, 7.124999999999493e-05, 7.101400000000119e-05, 7.094400000000334e-05, 7.054100000000035e-05, 7.041699999999623e-05, 7.083299999999931e-05, 7.077799999999357e-05, 7.112499999999827e-05, 7.037499999999752e-05, 7.088799999999812e-05, 7.108299999999956e-05, 7.136099999999895e-05, 7.098599999999511e-05, 7.087499999999802e-05, 7.068000000000352e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.664" endtime="20201029 12:44:29.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.653" endtime="20201029 12:44:29.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.681" endtime="20201029 12:44:29.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.675" endtime="20201029 12:44:29.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.673" endtime="20201029 12:44:29.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.186" endtime="20201029 12:44:29.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.185" endtime="20201029 12:44:29.706"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.728" endtime="20201029 12:44:29.747"></status>
</kw>
<msg timestamp="20201029 12:44:29.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.725" endtime="20201029 12:44:29.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.750" endtime="20201029 12:44:29.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.757" endtime="20201029 12:44:29.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.718" endtime="20201029 12:44:29.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.712" endtime="20201029 12:44:29.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.780" endtime="20201029 12:44:30.120"></status>
</kw>
<msg timestamp="20201029 12:44:30.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039172069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039244208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.777" endtime="20201029 12:44:30.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039172069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039244208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.130" endtime="20201029 12:44:30.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.148" endtime="20201029 12:44:30.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.770" endtime="20201029 12:44:30.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.765" endtime="20201029 12:44:30.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.165" level="INFO">${RESULT} = [{'diff': 7.213900000000578e-05}, {'diff': 7.162499999999877e-05}, {'diff': 7.201399999999525e-05}, {'diff': 7.234700000000038e-05}, {'diff': 7.200000000000262e-05}, {'diff': 7.180600000000065e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:30.156" endtime="20201029 12:44:30.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.176" level="INFO">${ACCURACY} = {'diff': [7.213900000000578e-05, 7.162499999999877e-05, 7.201399999999525e-05, 7.234700000000038e-05, 7.200000000000262e-05, 7.180600000000065e-05, 7.14309999999968e-05, 7.22360000000033e-05, 7.150000...</msg>
<status status="PASS" starttime="20201029 12:44:30.167" endtime="20201029 12:44:30.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.187" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.184" endtime="20201029 12:44:30.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.192" level="INFO">VALUE: [7.213900000000578e-05, 7.162499999999877e-05, 7.201399999999525e-05, 7.234700000000038e-05, 7.200000000000262e-05, 7.180600000000065e-05, 7.14309999999968e-05, 7.22360000000033e-05, 7.150000000000212e-05, 7.154200000000083e-05, 7.147300000000245e-05, 7.184699999999988e-05, 7.237499999999952e-05, 7.183399999999979e-05, 7.159699999999963e-05, 7.154200000000083e-05, 7.195799999999697e-05, 7.227800000000201e-05, 7.151400000000169e-05, 7.154200000000083e-05, 7.211199999999918e-05, 7.172199999999629e-05, 7.136099999999895e-05, 7.181900000000074e-05, 7.183300000000031e-05, 7.17360000000028e-05, 7.184699999999988e-05, 7.148700000000202e-05, 7.215300000000535e-05, 7.17360000000028e-05, 7.205500000000142e-05, 7.167999999999758e-05, 7.14030000000046e-05, 7.177800000000151e-05, 7.212499999999927e-05, 7.22360000000033e-05, 7.158300000000006e-05, 7.227800000000201e-05, 7.202799999999482e-05, 7.149999999999518e-05, 7.170800000000366e-05, 7.148600000000255e-05, 7.170799999999672e-05, 7.22360000000033e-05, 7.165300000000485e-05, 7.186099999999945e-05, 7.200000000000262e-05, 7.212500000000621e-05, 7.143100000000374e-05, 7.194499999999687e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.189" endtime="20201029 12:44:30.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.178" endtime="20201029 12:44:30.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.204" endtime="20201029 12:44:30.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.200" endtime="20201029 12:44:30.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.198" endtime="20201029 12:44:30.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.708" endtime="20201029 12:44:30.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.707" endtime="20201029 12:44:30.229"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.252" endtime="20201029 12:44:30.271"></status>
</kw>
<msg timestamp="20201029 12:44:30.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.249" endtime="20201029 12:44:30.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.275" endtime="20201029 12:44:30.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.281" endtime="20201029 12:44:30.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.241" endtime="20201029 12:44:30.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.235" endtime="20201029 12:44:30.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.307" endtime="20201029 12:44:30.640"></status>
</kw>
<msg timestamp="20201029 12:44:30.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039854569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039926986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.303" endtime="20201029 12:44:30.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039854569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039926986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.650" endtime="20201029 12:44:30.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.668" endtime="20201029 12:44:30.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.296" endtime="20201029 12:44:30.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.292" endtime="20201029 12:44:30.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.685" level="INFO">${RESULT} = [{'diff': 7.241699999999823e-05}, {'diff': 7.332000000000172e-05}, {'diff': 7.307000000000147e-05}, {'diff': 7.258300000000106e-05}, {'diff': 7.323599999999736e-05}, {'diff': 7.308300000000156e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:30.676" endtime="20201029 12:44:30.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.696" level="INFO">${ACCURACY} = {'diff': [7.241699999999823e-05, 7.332000000000172e-05, 7.307000000000147e-05, 7.258300000000106e-05, 7.323599999999736e-05, 7.308300000000156e-05, 7.241599999999876e-05, 7.287500000000002e-05, 7.2471...</msg>
<status status="PASS" starttime="20201029 12:44:30.687" endtime="20201029 12:44:30.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.707" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.705" endtime="20201029 12:44:30.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.712" level="INFO">VALUE: [7.241699999999823e-05, 7.332000000000172e-05, 7.307000000000147e-05, 7.258300000000106e-05, 7.323599999999736e-05, 7.308300000000156e-05, 7.241599999999876e-05, 7.287500000000002e-05, 7.247199999999704e-05, 7.319400000000559e-05, 7.290299999999916e-05, 7.290299999999916e-05, 7.247200000000398e-05, 7.297199999999754e-05, 7.257000000000097e-05, 7.265299999999891e-05, 7.311200000000018e-05, 7.31110000000007e-05, 7.244400000000484e-05, 7.249999999999618e-05, 7.298599999999711e-05, 7.27910000000026e-05, 7.329200000000258e-05, 7.27360000000038e-05, 7.312500000000027e-05, 7.27910000000026e-05, 7.3069000000002e-05, 7.276300000000346e-05, 7.32910000000031e-05, 7.302799999999582e-05, 7.247199999999704e-05, 7.294499999999787e-05, 7.266599999999901e-05, 7.327800000000301e-05, 7.320799999999822e-05, 7.306899999999505e-05, 7.301299999999677e-05, 7.284700000000088e-05, 7.243100000000474e-05, 7.308400000000104e-05, 7.267999999999858e-05, 7.25560000000014e-05, 7.29030000000061e-05, 7.315299999999941e-05, 7.300000000000362e-05, 7.313899999999984e-05, 7.26110000000002e-05, 7.291699999999873e-05, 7.25690000000015e-05, 7.265299999999891e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.709" endtime="20201029 12:44:30.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.698" endtime="20201029 12:44:30.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.725" endtime="20201029 12:44:30.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.721" endtime="20201029 12:44:30.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.718" endtime="20201029 12:44:30.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.231" endtime="20201029 12:44:30.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.230" endtime="20201029 12:44:30.750"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.772" endtime="20201029 12:44:30.791"></status>
</kw>
<msg timestamp="20201029 12:44:30.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.769" endtime="20201029 12:44:30.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.794" endtime="20201029 12:44:30.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.800" endtime="20201029 12:44:30.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.762" endtime="20201029 12:44:30.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.756" endtime="20201029 12:44:30.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.824" endtime="20201029 12:44:31.160"></status>
</kw>
<msg timestamp="20201029 12:44:31.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039163556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039237778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.820" endtime="20201029 12:44:31.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039163556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039237778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.170" endtime="20201029 12:44:31.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.188" endtime="20201029 12:44:31.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.813" endtime="20201029 12:44:31.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.808" endtime="20201029 12:44:31.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.205" level="INFO">${RESULT} = [{'diff': 7.422199999999879e-05}, {'diff': 7.374999999999743e-05}, {'diff': 7.405499999999648e-05}, {'diff': 7.395799999999897e-05}, {'diff': 7.359700000000163e-05}, {'diff': 7.427799999999707e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:31.197" endtime="20201029 12:44:31.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.215" level="INFO">${ACCURACY} = {'diff': [7.422199999999879e-05, 7.374999999999743e-05, 7.405499999999648e-05, 7.395799999999897e-05, 7.359700000000163e-05, 7.427799999999707e-05, 7.413900000000084e-05, 7.395799999999897e-05, 7.4096...</msg>
<status status="PASS" starttime="20201029 12:44:31.208" endtime="20201029 12:44:31.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.226" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.223" endtime="20201029 12:44:31.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.231" level="INFO">VALUE: [7.422199999999879e-05, 7.374999999999743e-05, 7.405499999999648e-05, 7.395799999999897e-05, 7.359700000000163e-05, 7.427799999999707e-05, 7.413900000000084e-05, 7.395799999999897e-05, 7.40969999999952e-05, 7.419499999999912e-05, 7.36110000000012e-05, 7.368099999999905e-05, 7.362500000000077e-05, 7.354200000000283e-05, 7.348599999999761e-05, 7.388900000000059e-05, 7.34439999999989e-05, 7.391699999999973e-05, 7.337500000000052e-05, 7.404199999999639e-05, 7.424999999999793e-05, 7.433300000000281e-05, 7.3763999999997e-05, 7.362500000000077e-05, 7.359700000000163e-05, 7.351400000000369e-05, 7.368099999999905e-05, 7.349999999999718e-05, 7.338900000000009e-05, 7.401399999999725e-05, 7.413900000000084e-05, 7.430599999999621e-05, 7.352799999999632e-05, 7.34309999999988e-05, 7.345899999999794e-05, 7.386100000000145e-05, 7.357000000000197e-05, 7.352700000000378e-05, 7.433299999999587e-05, 7.424999999999793e-05, 7.367999999999958e-05, 7.359700000000163e-05, 7.419399999999965e-05, 7.358300000000206e-05, 7.345799999999847e-05, 7.379200000000308e-05, 7.376400000000394e-05, 7.388800000000112e-05, 7.338900000000009e-05, 7.395799999999897e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.228" endtime="20201029 12:44:31.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.217" endtime="20201029 12:44:31.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.243" endtime="20201029 12:44:31.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.239" endtime="20201029 12:44:31.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.237" endtime="20201029 12:44:31.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.752" endtime="20201029 12:44:31.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.751" endtime="20201029 12:44:31.268"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.292" endtime="20201029 12:44:31.312"></status>
</kw>
<msg timestamp="20201029 12:44:31.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.288" endtime="20201029 12:44:31.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.315" endtime="20201029 12:44:31.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.322" endtime="20201029 12:44:31.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.281" endtime="20201029 12:44:31.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.275" endtime="20201029 12:44:31.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.345" endtime="20201029 12:44:31.680"></status>
</kw>
<msg timestamp="20201029 12:44:31.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041648389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041722903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.342" endtime="20201029 12:44:31.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041648389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041722903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.689" endtime="20201029 12:44:31.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.708" endtime="20201029 12:44:31.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.335" endtime="20201029 12:44:31.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.330" endtime="20201029 12:44:31.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.725" level="INFO">${RESULT} = [{'diff': 7.451399999999775e-05}, {'diff': 7.476400000000494e-05}, {'diff': 7.486100000000245e-05}, {'diff': 7.473699999999833e-05}, {'diff': 7.51110000000027e-05}, {'diff': 7.494499999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:31.716" endtime="20201029 12:44:31.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.734" level="INFO">${ACCURACY} = {'diff': [7.451399999999775e-05, 7.476400000000494e-05, 7.486100000000245e-05, 7.473699999999833e-05, 7.51110000000027e-05, 7.494499999999987e-05, 7.507000000000347e-05, 7.497299999999901e-05, 7.52080...</msg>
<status status="PASS" starttime="20201029 12:44:31.727" endtime="20201029 12:44:31.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.745" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.743" endtime="20201029 12:44:31.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.750" level="INFO">VALUE: [7.451399999999775e-05, 7.476400000000494e-05, 7.486100000000245e-05, 7.473699999999833e-05, 7.51110000000027e-05, 7.494499999999987e-05, 7.507000000000347e-05, 7.497299999999901e-05, 7.520800000000022e-05, 7.502799999999782e-05, 7.469499999999962e-05, 7.512500000000227e-05, 7.519400000000065e-05, 7.475000000000537e-05, 7.53189999999973e-05, 7.451400000000469e-05, 7.508299999999662e-05, 7.519400000000065e-05, 7.479199999999714e-05, 7.447299999999851e-05, 7.495900000000638e-05, 7.54169999999943e-05, 7.513800000000237e-05, 7.46389999999944e-05, 7.438800000000162e-05, 7.454100000000435e-05, 7.518000000000108e-05, 7.465300000000091e-05, 7.440300000000066e-05, 7.497199999999954e-05, 7.527799999999807e-05, 7.458300000000306e-05, 7.452799999999732e-05, 7.525000000000587e-05, 7.466700000000048e-05, 7.511099999999576e-05, 7.50560000000039e-05, 7.484799999999542e-05, 7.468000000000058e-05, 7.52910000000051e-05, 7.469400000000015e-05, 7.51110000000027e-05, 7.451399999999775e-05, 7.51110000000027e-05, 7.469400000000015e-05, 7.522199999999979e-05, 7.441700000000023e-05, 7.438900000000109e-05, 7.452800000000426e-05, 7.524999999999893e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.747" endtime="20201029 12:44:31.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.736" endtime="20201029 12:44:31.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.764" endtime="20201029 12:44:31.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.758" endtime="20201029 12:44:31.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.756" endtime="20201029 12:44:31.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.270" endtime="20201029 12:44:31.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.269" endtime="20201029 12:44:31.789"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.812" endtime="20201029 12:44:31.830"></status>
</kw>
<msg timestamp="20201029 12:44:31.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.808" endtime="20201029 12:44:31.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.833" endtime="20201029 12:44:31.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.840" endtime="20201029 12:44:31.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.801" endtime="20201029 12:44:31.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.796" endtime="20201029 12:44:31.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.862" endtime="20201029 12:44:32.197"></status>
</kw>
<msg timestamp="20201029 12:44:32.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038898569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038974028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.859" endtime="20201029 12:44:32.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038898569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038974028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.206" endtime="20201029 12:44:32.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.225" endtime="20201029 12:44:32.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.852" endtime="20201029 12:44:32.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.847" endtime="20201029 12:44:32.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.242" level="INFO">${RESULT} = [{'diff': 7.545899999999994e-05}, {'diff': 7.608300000000456e-05}, {'diff': 7.565299999999497e-05}, {'diff': 7.59310000000013e-05}, {'diff': 7.633399999999735e-05}, {'diff': 7.586100000000345e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:32.233" endtime="20201029 12:44:32.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.253" level="INFO">${ACCURACY} = {'diff': [7.545899999999994e-05, 7.608300000000456e-05, 7.565299999999497e-05, 7.59310000000013e-05, 7.633399999999735e-05, 7.586100000000345e-05, 7.593000000000183e-05, 7.593000000000183e-05, 7.60830...</msg>
<status status="PASS" starttime="20201029 12:44:32.244" endtime="20201029 12:44:32.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.263" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.261" endtime="20201029 12:44:32.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.268" level="INFO">VALUE: [7.545899999999994e-05, 7.608300000000456e-05, 7.565299999999497e-05, 7.59310000000013e-05, 7.633399999999735e-05, 7.586100000000345e-05, 7.593000000000183e-05, 7.593000000000183e-05, 7.608300000000456e-05, 7.599999999999968e-05, 7.605599999999796e-05, 7.559800000000311e-05, 7.548699999999908e-05, 7.574999999999943e-05, 7.565300000000191e-05, 7.584800000000336e-05, 7.563900000000234e-05, 7.540300000000166e-05, 7.537499999999558e-05, 7.597200000000054e-05, 7.595800000000097e-05, 7.54310000000008e-05, 7.572200000000029e-05, 7.570800000000072e-05, 7.626300000000003e-05, 7.595800000000097e-05, 7.62639999999995e-05, 7.552800000000526e-05, 7.572299999999976e-05, 7.538799999999568e-05, 7.601399999999925e-05, 7.580499999999823e-05, 7.556999999999703e-05, 7.551399999999875e-05, 7.555499999999798e-05, 7.630600000000515e-05, 7.594500000000087e-05, 7.556899999999755e-05, 7.537500000000252e-05, 7.622200000000079e-05, 7.631999999999778e-05, 7.591600000000226e-05, 7.584699999999694e-05, 7.541600000000176e-05, 7.634700000000438e-05, 7.590299999999522e-05, 7.620800000000122e-05, 7.556899999999755e-05, 7.622200000000079e-05, 7.548599999999961e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.265" endtime="20201029 12:44:32.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.254" endtime="20201029 12:44:32.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.281" endtime="20201029 12:44:32.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.277" endtime="20201029 12:44:32.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.274" endtime="20201029 12:44:32.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.791" endtime="20201029 12:44:32.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.790" endtime="20201029 12:44:32.306"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.329" endtime="20201029 12:44:32.348"></status>
</kw>
<msg timestamp="20201029 12:44:32.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.326" endtime="20201029 12:44:32.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.352" endtime="20201029 12:44:32.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.358" endtime="20201029 12:44:32.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.318" endtime="20201029 12:44:32.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.312" endtime="20201029 12:44:32.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.382" endtime="20201029 12:44:32.715"></status>
</kw>
<msg timestamp="20201029 12:44:32.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040166639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.378" endtime="20201029 12:44:32.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040166639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.725" endtime="20201029 12:44:32.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.743" endtime="20201029 12:44:32.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.371" endtime="20201029 12:44:32.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.366" endtime="20201029 12:44:32.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.760" level="INFO">${RESULT} = [{'diff': 7.736099999999801e-05}, {'diff': 7.654200000000583e-05}, {'diff': 7.700000000000068e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.651400000000669e-05}, {'diff': 7.658400000000454e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:32.751" endtime="20201029 12:44:32.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.771" level="INFO">${ACCURACY} = {'diff': [7.736099999999801e-05, 7.654200000000583e-05, 7.700000000000068e-05, 7.675000000000043e-05, 7.651400000000669e-05, 7.658400000000454e-05, 7.690200000000369e-05, 7.645800000000147e-05, 7.6888...</msg>
<status status="PASS" starttime="20201029 12:44:32.762" endtime="20201029 12:44:32.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.782" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.780" endtime="20201029 12:44:32.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.787" level="INFO">VALUE: [7.736099999999801e-05, 7.654200000000583e-05, 7.700000000000068e-05, 7.675000000000043e-05, 7.651400000000669e-05, 7.658400000000454e-05, 7.690200000000369e-05, 7.645800000000147e-05, 7.688899999999665e-05, 7.659799999999717e-05, 7.698600000000111e-05, 7.651399999999975e-05, 7.648600000000061e-05, 7.694500000000187e-05, 7.708299999999862e-05, 7.683399999999785e-05, 7.643000000000233e-05, 7.647200000000104e-05, 7.688899999999665e-05, 7.69440000000024e-05, 7.686100000000445e-05, 7.718100000000255e-05, 7.668000000000258e-05, 7.68189999999988e-05, 7.712500000000427e-05, 7.654200000000583e-05, 7.736100000000495e-05, 7.67770000000001e-05, 7.683299999999837e-05, 7.713799999999743e-05, 7.698600000000111e-05, 7.638899999999615e-05, 7.684799999999742e-05, 7.709700000000513e-05, 7.718100000000255e-05, 7.679199999999914e-05, 7.656899999999855e-05, 7.720800000000222e-05, 7.641599999999582e-05, 7.650000000000018e-05, 7.673599999999392e-05, 7.719500000000212e-05, 7.640299999999572e-05, 7.650000000000018e-05, 7.715200000000394e-05, 7.712499999999733e-05, 7.670800000000172e-05, 7.64310000000018e-05, 7.702799999999982e-05, 7.709800000000461e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.784" endtime="20201029 12:44:32.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.773" endtime="20201029 12:44:32.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.800" endtime="20201029 12:44:32.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.796" endtime="20201029 12:44:32.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.793" endtime="20201029 12:44:32.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.308" endtime="20201029 12:44:32.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.307" endtime="20201029 12:44:32.825"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.847" endtime="20201029 12:44:32.866"></status>
</kw>
<msg timestamp="20201029 12:44:32.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.844" endtime="20201029 12:44:32.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.869" endtime="20201029 12:44:32.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.875" endtime="20201029 12:44:32.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.837" endtime="20201029 12:44:32.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.831" endtime="20201029 12:44:32.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.898" endtime="20201029 12:44:33.238"></status>
</kw>
<msg timestamp="20201029 12:44:33.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039011653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039089861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.895" endtime="20201029 12:44:33.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039011653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039089861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.248" endtime="20201029 12:44:33.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.266" endtime="20201029 12:44:33.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.888" endtime="20201029 12:44:33.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.883" endtime="20201029 12:44:33.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.283" level="INFO">${RESULT} = [{'diff': 7.820799999999628e-05}, {'diff': 7.747300000000151e-05}, {'diff': 7.816700000000398e-05}, {'diff': 7.836199999999849e-05}, {'diff': 7.791600000000426e-05}, {'diff': 7.813799999999843e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:33.275" endtime="20201029 12:44:33.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.293" level="INFO">${ACCURACY} = {'diff': [7.820799999999628e-05, 7.747300000000151e-05, 7.816700000000398e-05, 7.836199999999849e-05, 7.791600000000426e-05, 7.813799999999843e-05, 7.756899999999955e-05, 7.81389999999979e-05, 7.81519...</msg>
<status status="PASS" starttime="20201029 12:44:33.285" endtime="20201029 12:44:33.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.305" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.303" endtime="20201029 12:44:33.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.311" level="INFO">VALUE: [7.820799999999628e-05, 7.747300000000151e-05, 7.816700000000398e-05, 7.836199999999849e-05, 7.791600000000426e-05, 7.813799999999843e-05, 7.756899999999955e-05, 7.81389999999979e-05, 7.8151999999998e-05, 7.788899999999765e-05, 7.763900000000434e-05, 7.837499999999858e-05, 7.773600000000186e-05, 7.80969999999992e-05, 7.74440000000029e-05, 7.781999999999928e-05, 7.808299999999962e-05, 7.811199999999824e-05, 7.844399999999696e-05, 7.82770000000016e-05, 7.751400000000075e-05, 7.756899999999955e-05, 7.766700000000348e-05, 7.800000000000168e-05, 7.769499999999568e-05, 7.78189999999998e-05, 7.833399999999935e-05, 7.779200000000014e-05, 7.815299999999747e-05, 7.775000000000143e-05, 7.826300000000203e-05, 7.768099999999611e-05, 7.806900000000006e-05, 7.81389999999979e-05, 7.829200000000064e-05, 7.836199999999849e-05, 7.781999999999928e-05, 7.784699999999894e-05, 7.838899999999815e-05, 7.815300000000441e-05, 7.795900000000244e-05, 7.815300000000441e-05, 7.751400000000075e-05, 7.808299999999962e-05, 7.830600000000021e-05, 7.748600000000161e-05, 7.745900000000194e-05, 7.791600000000426e-05, 7.793099999999636e-05, 7.815300000000441e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.308" endtime="20201029 12:44:33.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.295" endtime="20201029 12:44:33.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.323" endtime="20201029 12:44:33.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.319" endtime="20201029 12:44:33.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.316" endtime="20201029 12:44:33.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.827" endtime="20201029 12:44:33.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.826" endtime="20201029 12:44:33.348"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.372" endtime="20201029 12:44:33.393"></status>
</kw>
<msg timestamp="20201029 12:44:33.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.368" endtime="20201029 12:44:33.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.396" endtime="20201029 12:44:33.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.402" endtime="20201029 12:44:33.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.361" endtime="20201029 12:44:33.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.355" endtime="20201029 12:44:33.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.425" endtime="20201029 12:44:33.760"></status>
</kw>
<msg timestamp="20201029 12:44:33.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042058639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042137361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.422" endtime="20201029 12:44:33.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042058639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042137361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.769" endtime="20201029 12:44:33.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.788" endtime="20201029 12:44:33.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.415" endtime="20201029 12:44:33.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.410" endtime="20201029 12:44:33.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.805" level="INFO">${RESULT} = [{'diff': 7.872199999999635e-05}, {'diff': 7.916699999999804e-05}, {'diff': 7.836099999999901e-05}, {'diff': 7.886099999999951e-05}, {'diff': 7.893099999999736e-05}, {'diff': 7.84310000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:33.796" endtime="20201029 12:44:33.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.814" level="INFO">${ACCURACY} = {'diff': [7.872199999999635e-05, 7.916699999999804e-05, 7.836099999999901e-05, 7.886099999999951e-05, 7.893099999999736e-05, 7.84310000000038e-05, 7.874999999999549e-05, 7.922199999999685e-05, 7.85139...</msg>
<status status="PASS" starttime="20201029 12:44:33.807" endtime="20201029 12:44:33.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.825" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.823" endtime="20201029 12:44:33.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.830" level="INFO">VALUE: [7.872199999999635e-05, 7.916699999999804e-05, 7.836099999999901e-05, 7.886099999999951e-05, 7.893099999999736e-05, 7.84310000000038e-05, 7.874999999999549e-05, 7.922199999999685e-05, 7.851399999999481e-05, 7.880600000000071e-05, 7.84440000000039e-05, 7.86389999999984e-05, 7.911099999999976e-05, 7.893099999999736e-05, 7.890299999999822e-05, 7.902799999999488e-05, 7.922200000000379e-05, 7.925000000000293e-05, 7.883399999999985e-05, 7.837499999999858e-05, 7.873599999999592e-05, 7.907000000000053e-05, 7.90840000000001e-05, 7.902800000000182e-05, 7.933300000000088e-05, 7.892999999999789e-05, 7.893099999999736e-05, 7.920899999999675e-05, 7.930500000000174e-05, 7.842999999999739e-05, 7.894499999999693e-05, 7.937499999999958e-05, 7.927699999999566e-05, 7.887499999999908e-05, 7.841700000000423e-05, 7.870900000000319e-05, 7.901399999999531e-05, 7.90970000000002e-05, 7.869399999999721e-05, 7.855600000000046e-05, 7.934700000000044e-05, 7.934700000000044e-05, 7.919500000000412e-05, 7.915299999999847e-05, 7.904199999999445e-05, 7.851399999999481e-05, 7.861099999999926e-05, 7.837499999999858e-05, 7.838899999999815e-05, 7.884799999999942e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.827" endtime="20201029 12:44:33.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.816" endtime="20201029 12:44:33.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.844" endtime="20201029 12:44:33.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.838" endtime="20201029 12:44:33.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.836" endtime="20201029 12:44:33.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.350" endtime="20201029 12:44:33.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.349" endtime="20201029 12:44:33.869"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.892" endtime="20201029 12:44:33.910"></status>
</kw>
<msg timestamp="20201029 12:44:33.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.888" endtime="20201029 12:44:33.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.914" endtime="20201029 12:44:33.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.920" endtime="20201029 12:44:33.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.881" endtime="20201029 12:44:33.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.876" endtime="20201029 12:44:33.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.943" endtime="20201029 12:44:34.277"></status>
</kw>
<msg timestamp="20201029 12:44:34.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039149611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039229, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:33.940" endtime="20201029 12:44:34.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039149611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039229, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:34.286" endtime="20201029 12:44:34.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.305" endtime="20201029 12:44:34.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.933" endtime="20201029 12:44:34.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.928" endtime="20201029 12:44:34.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.322" level="INFO">${RESULT} = [{'diff': 7.938899999999915e-05}, {'diff': 7.979200000000214e-05}, {'diff': 7.972299999999682e-05}, {'diff': 8.018100000000555e-05}, {'diff': 7.947300000000351e-05}, {'diff': 7.999999999999674e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:34.313" endtime="20201029 12:44:34.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.332" level="INFO">${ACCURACY} = {'diff': [7.938899999999915e-05, 7.979200000000214e-05, 7.972299999999682e-05, 8.018100000000555e-05, 7.947300000000351e-05, 7.999999999999674e-05, 7.967999999999864e-05, 7.988899999999965e-05, 7.9999...</msg>
<status status="PASS" starttime="20201029 12:44:34.324" endtime="20201029 12:44:34.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.343" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.341" endtime="20201029 12:44:34.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.348" level="INFO">VALUE: [7.938899999999915e-05, 7.979200000000214e-05, 7.972299999999682e-05, 8.018100000000555e-05, 7.947300000000351e-05, 7.999999999999674e-05, 7.967999999999864e-05, 7.988899999999965e-05, 7.999999999999674e-05, 8.007000000000153e-05, 8.034700000000145e-05, 8.002799999999588e-05, 7.957000000000103e-05, 7.98190000000018e-05, 7.992999999999889e-05, 7.98049999999953e-05, 8.022199999999785e-05, 8.006999999999459e-05, 8.024999999999699e-05, 7.943099999999786e-05, 7.990299999999922e-05, 7.961100000000026e-05, 7.998599999999717e-05, 8.044500000000537e-05, 7.998599999999717e-05, 7.972299999999682e-05, 8.027699999999666e-05, 8.000000000000368e-05, 7.957000000000103e-05, 7.96389999999994e-05, 8.029200000000264e-05, 8.020900000000469e-05, 7.938899999999915e-05, 7.956900000000156e-05, 7.998600000000411e-05, 7.943099999999786e-05, 7.99169999999988e-05, 7.954100000000242e-05, 7.975000000000343e-05, 8.012500000000033e-05, 8.005499999999555e-05, 7.99169999999988e-05, 8.001399999999631e-05, 7.998600000000411e-05, 7.969400000000515e-05, 7.948599999999667e-05, 8.023600000000436e-05, 7.962499999999983e-05, 7.970800000000472e-05, 8.022200000000479e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.345" endtime="20201029 12:44:34.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.334" endtime="20201029 12:44:34.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.361" endtime="20201029 12:44:34.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.356" endtime="20201029 12:44:34.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.354" endtime="20201029 12:44:34.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.871" endtime="20201029 12:44:34.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.870" endtime="20201029 12:44:34.386"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.409" endtime="20201029 12:44:34.428"></status>
</kw>
<msg timestamp="20201029 12:44:34.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.406" endtime="20201029 12:44:34.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.432" endtime="20201029 12:44:34.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.438" endtime="20201029 12:44:34.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.398" endtime="20201029 12:44:34.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.392" endtime="20201029 12:44:34.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.461" endtime="20201029 12:44:34.793"></status>
</kw>
<msg timestamp="20201029 12:44:34.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040120778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040201444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.458" endtime="20201029 12:44:34.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040120778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040201444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.802" endtime="20201029 12:44:34.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.821" endtime="20201029 12:44:34.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.451" endtime="20201029 12:44:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.446" endtime="20201029 12:44:34.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.838" level="INFO">${RESULT} = [{'diff': 8.066600000000007e-05}, {'diff': 8.061100000000126e-05}, {'diff': 8.073599999999792e-05}, {'diff': 8.101399999999731e-05}, {'diff': 8.113800000000143e-05}, {'diff': 8.070799999999878e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:34.829" endtime="20201029 12:44:34.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.849" level="INFO">${ACCURACY} = {'diff': [8.066600000000007e-05, 8.061100000000126e-05, 8.073599999999792e-05, 8.101399999999731e-05, 8.113800000000143e-05, 8.070799999999878e-05, 8.120899999999875e-05, 8.086099999999458e-05, 8.0791...</msg>
<status status="PASS" starttime="20201029 12:44:34.840" endtime="20201029 12:44:34.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.860" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.857" endtime="20201029 12:44:34.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.865" level="INFO">VALUE: [8.066600000000007e-05, 8.061100000000126e-05, 8.073599999999792e-05, 8.101399999999731e-05, 8.113800000000143e-05, 8.070799999999878e-05, 8.120899999999875e-05, 8.086099999999458e-05, 8.07919999999962e-05, 8.116700000000004e-05, 8.055500000000299e-05, 8.061100000000126e-05, 8.099999999999774e-05, 8.051399999999681e-05, 8.11390000000009e-05, 8.075000000000443e-05, 8.083399999999491e-05, 8.056900000000256e-05, 8.11390000000009e-05, 8.116599999999363e-05, 8.083300000000238e-05, 8.107000000000253e-05, 8.084700000000195e-05, 8.056900000000256e-05, 8.09719999999986e-05, 8.119499999999918e-05, 8.106899999999612e-05, 8.094399999999946e-05, 8.101399999999731e-05, 8.070799999999878e-05, 8.080600000000271e-05, 8.095799999999903e-05, 8.056900000000256e-05, 8.136100000000202e-05, 8.041599999999982e-05, 8.061100000000126e-05, 8.102799999999688e-05, 8.111100000000177e-05, 8.093099999999936e-05, 8.042999999999939e-05, 8.105499999999655e-05, 8.088900000000065e-05, 8.065299999999997e-05, 8.11390000000009e-05, 8.067999999999964e-05, 8.09719999999986e-05, 8.101399999999731e-05, 8.109699999999526e-05, 8.134700000000245e-05, 8.130599999999627e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.862" endtime="20201029 12:44:34.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.851" endtime="20201029 12:44:34.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.877" endtime="20201029 12:44:34.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.873" endtime="20201029 12:44:34.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.871" endtime="20201029 12:44:34.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.388" endtime="20201029 12:44:34.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.387" endtime="20201029 12:44:34.902"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.925" endtime="20201029 12:44:34.944"></status>
</kw>
<msg timestamp="20201029 12:44:34.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.921" endtime="20201029 12:44:34.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.947" endtime="20201029 12:44:34.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.953" endtime="20201029 12:44:34.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.914" endtime="20201029 12:44:34.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.908" endtime="20201029 12:44:34.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.976" endtime="20201029 12:44:35.313"></status>
</kw>
<msg timestamp="20201029 12:44:35.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039138653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.973" endtime="20201029 12:44:35.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039138653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.322" endtime="20201029 12:44:35.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.341" endtime="20201029 12:44:35.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.966" endtime="20201029 12:44:35.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.961" endtime="20201029 12:44:35.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.358" level="INFO">${RESULT} = [{'diff': 8.198599999999917e-05}, {'diff': 8.213800000000243e-05}, {'diff': 8.208299999999669e-05}, {'diff': 8.205600000000396e-05}, {'diff': 8.201399999999831e-05}, {'diff': 8.230500000000474e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:35.350" endtime="20201029 12:44:35.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.367" level="INFO">${ACCURACY} = {'diff': [8.198599999999917e-05, 8.213800000000243e-05, 8.208299999999669e-05, 8.205600000000396e-05, 8.201399999999831e-05, 8.230500000000474e-05, 8.22919999999977e-05, 8.16249999999949e-05, 8.211200...</msg>
<status status="PASS" starttime="20201029 12:44:35.360" endtime="20201029 12:44:35.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.378" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.376" endtime="20201029 12:44:35.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.384" level="INFO">VALUE: [8.198599999999917e-05, 8.213800000000243e-05, 8.208299999999669e-05, 8.205600000000396e-05, 8.201399999999831e-05, 8.230500000000474e-05, 8.22919999999977e-05, 8.16249999999949e-05, 8.211200000000224e-05, 8.179099999999773e-05, 8.19719999999996e-05, 8.215300000000147e-05, 8.198599999999917e-05, 8.224999999999899e-05, 8.14170000000003e-05, 8.14719999999991e-05, 8.161100000000227e-05, 8.17369999999984e-05, 8.199999999999874e-05, 8.212500000000234e-05, 8.21249999999954e-05, 8.181999999999634e-05, 8.144399999999996e-05, 8.158300000000313e-05, 8.226399999999856e-05, 8.19719999999996e-05, 8.216700000000104e-05, 8.202800000000482e-05, 8.207000000000353e-05, 8.201300000000578e-05, 8.19719999999996e-05, 8.176399999999806e-05, 8.229099999999823e-05, 8.193100000000036e-05, 8.157000000000303e-05, 8.19170000000008e-05, 8.233400000000335e-05, 8.233299999999694e-05, 8.180599999999677e-05, 8.21390000000019e-05, 8.137500000000158e-05, 8.216700000000104e-05, 8.183300000000338e-05, 8.219400000000071e-05, 8.215300000000147e-05, 8.148599999999867e-05, 8.202799999999788e-05, 8.141600000000082e-05, 8.19719999999996e-05, 8.198599999999917e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.381" endtime="20201029 12:44:35.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.369" endtime="20201029 12:44:35.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.397" endtime="20201029 12:44:35.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.392" endtime="20201029 12:44:35.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.389" endtime="20201029 12:44:35.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.904" endtime="20201029 12:44:35.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.903" endtime="20201029 12:44:35.422"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.446" endtime="20201029 12:44:35.467"></status>
</kw>
<msg timestamp="20201029 12:44:35.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.442" endtime="20201029 12:44:35.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.470" endtime="20201029 12:44:35.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.476" endtime="20201029 12:44:35.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.435" endtime="20201029 12:44:35.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.429" endtime="20201029 12:44:35.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.500" endtime="20201029 12:44:35.839"></status>
</kw>
<msg timestamp="20201029 12:44:35.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04209525, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:35.496" endtime="20201029 12:44:35.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04209525, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:35.848" endtime="20201029 12:44:35.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.867" endtime="20201029 12:44:35.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.489" endtime="20201029 12:44:35.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.485" endtime="20201029 12:44:35.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.884" level="INFO">${RESULT} = [{'diff': 8.274999999999949e-05}, {'diff': 8.240300000000172e-05}, {'diff': 8.305499999999855e-05}, {'diff': 8.301399999999931e-05}, {'diff': 8.257000000000403e-05}, {'diff': 8.305499999999855e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:35.875" endtime="20201029 12:44:35.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.893" level="INFO">${ACCURACY} = {'diff': [8.274999999999949e-05, 8.240300000000172e-05, 8.305499999999855e-05, 8.301399999999931e-05, 8.257000000000403e-05, 8.305499999999855e-05, 8.322200000000085e-05, 8.299999999999974e-05, 8.3403...</msg>
<status status="PASS" starttime="20201029 12:44:35.886" endtime="20201029 12:44:35.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.904" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.902" endtime="20201029 12:44:35.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.909" level="INFO">VALUE: [8.274999999999949e-05, 8.240300000000172e-05, 8.305499999999855e-05, 8.301399999999931e-05, 8.257000000000403e-05, 8.305499999999855e-05, 8.322200000000085e-05, 8.299999999999974e-05, 8.340300000000272e-05, 8.316700000000204e-05, 8.33469999999975e-05, 8.294500000000093e-05, 8.324999999999999e-05, 8.302799999999888e-05, 8.33049999999988e-05, 8.244500000000043e-05, 8.308299999999769e-05, 8.24720000000001e-05, 8.268099999999418e-05, 8.238900000000215e-05, 8.269400000000121e-05, 8.273599999999992e-05, 8.244500000000043e-05, 8.259699999999676e-05, 8.244500000000043e-05, 8.33049999999988e-05, 8.318000000000214e-05, 8.31390000000029e-05, 8.261099999999633e-05, 8.276399999999906e-05, 8.275000000000643e-05, 8.244399999999402e-05, 8.272200000000035e-05, 8.238899999999522e-05, 8.277800000000557e-05, 8.251399999999881e-05, 8.322300000000032e-05, 8.330500000000574e-05, 8.29720000000006e-05, 8.280599999999777e-05, 8.279200000000514e-05, 8.333400000000435e-05, 8.298600000000017e-05, 8.244400000000096e-05, 8.313899999999597e-05, 8.2764000000006e-05, 8.252799999999838e-05, 8.320799999999434e-05, 8.274999999999949e-05, 8.30970000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.906" endtime="20201029 12:44:35.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.895" endtime="20201029 12:44:35.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.927" endtime="20201029 12:44:35.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.922" endtime="20201029 12:44:35.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.919" endtime="20201029 12:44:35.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.424" endtime="20201029 12:44:35.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.423" endtime="20201029 12:44:35.952"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.975" endtime="20201029 12:44:35.994"></status>
</kw>
<msg timestamp="20201029 12:44:35.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.971" endtime="20201029 12:44:35.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.997" endtime="20201029 12:44:36.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.004" endtime="20201029 12:44:36.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.964" endtime="20201029 12:44:36.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.958" endtime="20201029 12:44:36.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.027" endtime="20201029 12:44:36.362"></status>
</kw>
<msg timestamp="20201029 12:44:36.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039006319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039090181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.023" endtime="20201029 12:44:36.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039006319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039090181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.372" endtime="20201029 12:44:36.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.390" endtime="20201029 12:44:36.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.016" endtime="20201029 12:44:36.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.012" endtime="20201029 12:44:36.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.407" level="INFO">${RESULT} = [{'diff': 8.386200000000399e-05}, {'diff': 8.39590000000015e-05}, {'diff': 8.387500000000409e-05}, {'diff': 8.3944999999995e-05}, {'diff': 8.376300000000059e-05}, {'diff': 8.343100000000186e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:44:36.399" endtime="20201029 12:44:36.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.418" level="INFO">${ACCURACY} = {'diff': [8.386200000000399e-05, 8.39590000000015e-05, 8.387500000000409e-05, 8.3944999999995e-05, 8.376300000000059e-05, 8.343100000000186e-05, 8.36799999999957e-05, 8.350000000000024e-05, 8.34860000...</msg>
<status status="PASS" starttime="20201029 12:44:36.409" endtime="20201029 12:44:36.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.429" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.427" endtime="20201029 12:44:36.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.434" level="INFO">VALUE: [8.386200000000399e-05, 8.39590000000015e-05, 8.387500000000409e-05, 8.3944999999995e-05, 8.376300000000059e-05, 8.343100000000186e-05, 8.36799999999957e-05, 8.350000000000024e-05, 8.348600000000067e-05, 8.377799999999963e-05, 8.39720000000016e-05, 8.354199999999895e-05, 8.436099999999808e-05, 8.408399999999816e-05, 8.427800000000013e-05, 8.343099999999493e-05, 8.34170000000023e-05, 8.377799999999963e-05, 8.415300000000348e-05, 8.416700000000304e-05, 8.415300000000348e-05, 8.34999999999933e-05, 8.36249999999969e-05, 8.436199999999755e-05, 8.415300000000348e-05, 8.437500000000459e-05, 8.39720000000016e-05, 8.41249999999974e-05, 8.437499999999765e-05, 8.365300000000297e-05, 8.422200000000185e-05, 8.3846999999998e-05, 8.384700000000495e-05, 8.395800000000203e-05, 8.376400000000006e-05, 8.437500000000459e-05, 8.395899999999457e-05, 8.359699999999776e-05, 8.401400000000031e-05, 8.422200000000185e-05, 8.368099999999518e-05, 8.402799999999988e-05, 8.426400000000056e-05, 8.397300000000107e-05, 8.34720000000011e-05, 8.393000000000289e-05, 8.36249999999969e-05, 8.40129999999939e-05, 8.368100000000211e-05, 8.384800000000442e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.431" endtime="20201029 12:44:36.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.420" endtime="20201029 12:44:36.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.447" endtime="20201029 12:44:36.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.442" endtime="20201029 12:44:36.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.440" endtime="20201029 12:44:36.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.954" endtime="20201029 12:44:36.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.953" endtime="20201029 12:44:36.472"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.495" endtime="20201029 12:44:36.515"></status>
</kw>
<msg timestamp="20201029 12:44:36.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.492" endtime="20201029 12:44:36.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.518" endtime="20201029 12:44:36.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.524" endtime="20201029 12:44:36.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.485" endtime="20201029 12:44:36.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.478" endtime="20201029 12:44:36.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.547" endtime="20201029 12:44:36.880"></status>
</kw>
<msg timestamp="20201029 12:44:36.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040870833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040956083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.544" endtime="20201029 12:44:36.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040870833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040956083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.890" endtime="20201029 12:44:36.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.908" endtime="20201029 12:44:36.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.537" endtime="20201029 12:44:36.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.533" endtime="20201029 12:44:36.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.925" level="INFO">${RESULT} = [{'diff': 8.524999999999505e-05}, {'diff': 8.530600000000027e-05}, {'diff': 8.526399999999462e-05}, {'diff': 8.506900000000012e-05}, {'diff': 8.518099999999668e-05}, {'diff': 8.501400000000131e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:36.916" endtime="20201029 12:44:36.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.936" level="INFO">${ACCURACY} = {'diff': [8.524999999999505e-05, 8.530600000000027e-05, 8.526399999999462e-05, 8.506900000000012e-05, 8.518099999999668e-05, 8.501400000000131e-05, 8.505500000000055e-05, 8.531999999999984e-05, 8.4764...</msg>
<status status="PASS" starttime="20201029 12:44:36.927" endtime="20201029 12:44:36.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.947" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.945" endtime="20201029 12:44:36.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.952" level="INFO">VALUE: [8.524999999999505e-05, 8.530600000000027e-05, 8.526399999999462e-05, 8.506900000000012e-05, 8.518099999999668e-05, 8.501400000000131e-05, 8.505500000000055e-05, 8.531999999999984e-05, 8.476400000000106e-05, 8.488899999999772e-05, 8.533299999999994e-05, 8.509699999999926e-05, 8.447199999999516e-05, 8.508299999999969e-05, 8.504100000000098e-05, 8.493099999999643e-05, 8.47920000000002e-05, 8.51249999999984e-05, 8.47920000000002e-05, 8.531900000000037e-05, 8.46249999999979e-05, 8.451400000000081e-05, 8.456899999999962e-05, 8.487500000000509e-05, 8.520799999999634e-05, 8.455599999999952e-05, 8.459699999999876e-05, 8.505600000000002e-05, 8.472300000000182e-05, 8.505500000000055e-05, 8.47920000000002e-05, 8.459799999999823e-05, 8.45970000000057e-05, 8.470800000000278e-05, 8.4944999999996e-05, 8.466599999999713e-05, 8.443100000000286e-05, 8.538799999999874e-05, 8.469500000000268e-05, 8.477800000000063e-05, 8.450000000000124e-05, 8.451400000000081e-05, 8.451300000000134e-05, 8.442999999999645e-05, 8.526400000000156e-05, 8.463899999999747e-05, 8.508299999999969e-05, 8.520900000000275e-05, 8.52920000000007e-05, 8.468000000000364e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.949" endtime="20201029 12:44:36.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.938" endtime="20201029 12:44:36.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.964" endtime="20201029 12:44:36.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.960" endtime="20201029 12:44:36.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.958" endtime="20201029 12:44:36.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.474" endtime="20201029 12:44:36.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.473" endtime="20201029 12:44:36.990"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.012" endtime="20201029 12:44:37.032"></status>
</kw>
<msg timestamp="20201029 12:44:37.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.009" endtime="20201029 12:44:37.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.035" endtime="20201029 12:44:37.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.041" endtime="20201029 12:44:37.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.002" endtime="20201029 12:44:37.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.996" endtime="20201029 12:44:37.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.064" endtime="20201029 12:44:37.402"></status>
</kw>
<msg timestamp="20201029 12:44:37.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039799597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039885069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.061" endtime="20201029 12:44:37.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039799597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039885069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.411" endtime="20201029 12:44:37.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.430" endtime="20201029 12:44:37.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.054" endtime="20201029 12:44:37.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.049" endtime="20201029 12:44:37.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.447" level="INFO">${RESULT} = [{'diff': 8.54720000000031e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.555499999999411e-05}, {'diff': 8.643099999999793e-05}, {'diff': 8.569399999999727e-05}, {'diff': 8.554100000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:37.438" endtime="20201029 12:44:37.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.456" level="INFO">${ACCURACY} = {'diff': [8.54720000000031e-05, 8.636100000000008e-05, 8.555499999999411e-05, 8.643099999999793e-05, 8.569399999999727e-05, 8.554100000000148e-05, 8.623600000000342e-05, 8.536099999999908e-05, 8.54450...</msg>
<status status="PASS" starttime="20201029 12:44:37.449" endtime="20201029 12:44:37.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.467" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.465" endtime="20201029 12:44:37.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.472" level="INFO">VALUE: [8.54720000000031e-05, 8.636100000000008e-05, 8.555499999999411e-05, 8.643099999999793e-05, 8.569399999999727e-05, 8.554100000000148e-05, 8.623600000000342e-05, 8.536099999999908e-05, 8.544500000000343e-05, 8.56249999999989e-05, 8.637499999999965e-05, 8.588799999999924e-05, 8.565199999999856e-05, 8.57920000000012e-05, 8.598600000000317e-05, 8.538899999999822e-05, 8.550000000000224e-05, 8.633300000000094e-05, 8.556900000000062e-05, 8.565299999999804e-05, 8.637499999999965e-05, 8.551399999999487e-05, 8.54720000000031e-05, 8.554100000000148e-05, 8.591599999999838e-05, 8.540200000000525e-05, 8.558399999999966e-05, 8.587499999999915e-05, 8.550000000000224e-05, 8.554100000000148e-05, 8.574999999999555e-05, 8.57920000000012e-05, 8.593100000000437e-05, 8.583300000000044e-05, 8.538899999999822e-05, 8.632000000000084e-05, 8.619499999999725e-05, 8.636100000000008e-05, 8.611099999999983e-05, 8.544400000000396e-05, 8.573600000000292e-05, 8.61249999999994e-05, 8.607000000000059e-05, 8.551400000000181e-05, 8.554200000000095e-05, 8.570900000000325e-05, 8.558300000000019e-05, 8.63199999999939e-05, 8.600000000000274e-05, 8.561200000000574e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.469" endtime="20201029 12:44:37.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.458" endtime="20201029 12:44:37.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.485" endtime="20201029 12:44:37.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.480" endtime="20201029 12:44:37.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.478" endtime="20201029 12:44:37.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.992" endtime="20201029 12:44:37.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.991" endtime="20201029 12:44:37.510"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.533" endtime="20201029 12:44:37.555"></status>
</kw>
<msg timestamp="20201029 12:44:37.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.530" endtime="20201029 12:44:37.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.558" endtime="20201029 12:44:37.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.564" endtime="20201029 12:44:37.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.522" endtime="20201029 12:44:37.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.516" endtime="20201029 12:44:37.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.587" endtime="20201029 12:44:37.920"></status>
</kw>
<msg timestamp="20201029 12:44:37.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042369986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042457042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.584" endtime="20201029 12:44:37.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042369986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042457042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.930" endtime="20201029 12:44:37.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.948" endtime="20201029 12:44:37.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.577" endtime="20201029 12:44:37.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.572" endtime="20201029 12:44:37.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.965" level="INFO">${RESULT} = [{'diff': 8.705600000000202e-05}, {'diff': 8.679099999999579e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.709700000000126e-05}, {'diff': 8.640199999999931e-05}, {'diff': 8.68050000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:37.957" endtime="20201029 12:44:37.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.975" level="INFO">${ACCURACY} = {'diff': [8.705600000000202e-05, 8.679099999999579e-05, 8.713899999999997e-05, 8.709700000000126e-05, 8.640199999999931e-05, 8.68050000000023e-05, 8.66390000000064e-05, 8.669400000000521e-05, 8.644499...</msg>
<status status="PASS" starttime="20201029 12:44:37.967" endtime="20201029 12:44:37.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.985" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.983" endtime="20201029 12:44:37.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.991" level="INFO">VALUE: [8.705600000000202e-05, 8.679099999999579e-05, 8.713899999999997e-05, 8.709700000000126e-05, 8.640199999999931e-05, 8.68050000000023e-05, 8.66390000000064e-05, 8.669400000000521e-05, 8.64449999999975e-05, 8.68050000000023e-05, 8.683300000000144e-05, 8.648600000000367e-05, 8.68329999999945e-05, 8.64449999999975e-05, 8.715299999999954e-05, 8.672199999999741e-05, 8.652800000000238e-05, 8.674999999999655e-05, 8.730599999999533e-05, 8.672199999999741e-05, 8.719499999999825e-05, 8.719399999999877e-05, 8.687500000000015e-05, 8.731899999999543e-05, 8.655600000000152e-05, 8.66249999999999e-05, 8.705600000000202e-05, 8.658399999999372e-05, 8.713899999999997e-05, 8.682000000000134e-05, 8.640299999999879e-05, 8.652700000000291e-05, 8.663899999999947e-05, 8.733399999999447e-05, 8.7332999999995e-05, 8.700000000000374e-05, 8.719399999999877e-05, 8.687500000000015e-05, 8.652800000000238e-05, 8.677799999999569e-05, 8.738900000000022e-05, 8.644399999999802e-05, 8.642999999999845e-05, 8.709700000000126e-05, 8.73050000000028e-05, 8.670900000000425e-05, 8.691699999999886e-05, 8.718099999999868e-05, 8.690300000000623e-05, 8.669399999999827e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.988" endtime="20201029 12:44:37.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.976" endtime="20201029 12:44:37.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.009" endtime="20201029 12:44:38.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.999" endtime="20201029 12:44:38.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.997" endtime="20201029 12:44:38.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.512" endtime="20201029 12:44:38.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.511" endtime="20201029 12:44:38.034"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.056" endtime="20201029 12:44:38.076"></status>
</kw>
<msg timestamp="20201029 12:44:38.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.053" endtime="20201029 12:44:38.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.079" endtime="20201029 12:44:38.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.085" endtime="20201029 12:44:38.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.046" endtime="20201029 12:44:38.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.041" endtime="20201029 12:44:38.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.108" endtime="20201029 12:44:38.442"></status>
</kw>
<msg timestamp="20201029 12:44:38.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038909042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038997153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.105" endtime="20201029 12:44:38.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038909042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038997153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.452" endtime="20201029 12:44:38.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.470" endtime="20201029 12:44:38.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.098" endtime="20201029 12:44:38.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.093" endtime="20201029 12:44:38.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.487" level="INFO">${RESULT} = [{'diff': 8.811100000000183e-05}, {'diff': 8.800000000000474e-05}, {'diff': 8.826399999999762e-05}, {'diff': 8.745799999999859e-05}, {'diff': 8.752800000000338e-05}, {'diff': 8.730600000000227e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:38.478" endtime="20201029 12:44:38.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.498" level="INFO">${ACCURACY} = {'diff': [8.811100000000183e-05, 8.800000000000474e-05, 8.826399999999762e-05, 8.745799999999859e-05, 8.752800000000338e-05, 8.730600000000227e-05, 8.815199999999412e-05, 8.809700000000226e-05, 8.8167...</msg>
<status status="PASS" starttime="20201029 12:44:38.489" endtime="20201029 12:44:38.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.509" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.506" endtime="20201029 12:44:38.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.514" level="INFO">VALUE: [8.811100000000183e-05, 8.800000000000474e-05, 8.826399999999762e-05, 8.745799999999859e-05, 8.752800000000338e-05, 8.730600000000227e-05, 8.815199999999412e-05, 8.809700000000226e-05, 8.81670000000001e-05, 8.774999999999755e-05, 8.788900000000072e-05, 8.748599999999773e-05, 8.779100000000373e-05, 8.758299999999525e-05, 8.780599999999583e-05, 8.824999999999805e-05, 8.765300000000004e-05, 8.822299999999839e-05, 8.804199999999651e-05, 8.740200000000031e-05, 8.74720000000051e-05, 8.740299999999979e-05, 8.750000000000424e-05, 8.740299999999979e-05, 8.784799999999454e-05, 8.763900000000047e-05, 8.754200000000295e-05, 8.824999999999805e-05, 8.759700000000176e-05, 8.76669999999996e-05, 8.791600000000038e-05, 8.74999999999973e-05, 8.759700000000176e-05, 8.773599999999798e-05, 8.830499999999686e-05, 8.792999999999995e-05, 8.768099999999918e-05, 8.741699999999936e-05, 8.822199999999891e-05, 8.806999999999565e-05, 8.754199999999601e-05, 8.811100000000183e-05, 8.74999999999973e-05, 8.802700000000441e-05, 8.805600000000302e-05, 8.747300000000457e-05, 8.765300000000004e-05, 8.822199999999891e-05, 8.745899999999807e-05, 8.805499999999661e-05]</msg>
<status status="PASS" starttime="20201029 12:44:38.511" endtime="20201029 12:44:38.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.500" endtime="20201029 12:44:38.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.526" endtime="20201029 12:44:38.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.522" endtime="20201029 12:44:38.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.520" endtime="20201029 12:44:38.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.036" endtime="20201029 12:44:38.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.035" endtime="20201029 12:44:38.551"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.575" endtime="20201029 12:44:38.594"></status>
</kw>
<msg timestamp="20201029 12:44:38.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.571" endtime="20201029 12:44:38.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.598" endtime="20201029 12:44:38.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.604" endtime="20201029 12:44:38.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.564" endtime="20201029 12:44:38.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.558" endtime="20201029 12:44:38.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.627" endtime="20201029 12:44:38.960"></status>
</kw>
<msg timestamp="20201029 12:44:38.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040834611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.624" endtime="20201029 12:44:38.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040834611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.969" endtime="20201029 12:44:38.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.988" endtime="20201029 12:44:38.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.617" endtime="20201029 12:44:38.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.612" endtime="20201029 12:44:38.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.005" level="INFO">${RESULT} = [{'diff': 8.895800000000009e-05}, {'diff': 8.922199999999991e-05}, {'diff': 8.888900000000172e-05}, {'diff': 8.905600000000402e-05}, {'diff': 8.906899999999718e-05}, {'diff': 8.924999999999905e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:38.996" endtime="20201029 12:44:39.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.016" level="INFO">${ACCURACY} = {'diff': [8.895800000000009e-05, 8.922199999999991e-05, 8.888900000000172e-05, 8.905600000000402e-05, 8.906899999999718e-05, 8.924999999999905e-05, 8.874999999999855e-05, 8.923599999999948e-05, 8.9152...</msg>
<status status="PASS" starttime="20201029 12:44:39.007" endtime="20201029 12:44:39.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.027" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.025" endtime="20201029 12:44:39.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.032" level="INFO">VALUE: [8.895800000000009e-05, 8.922199999999991e-05, 8.888900000000172e-05, 8.905600000000402e-05, 8.906899999999718e-05, 8.924999999999905e-05, 8.874999999999855e-05, 8.923599999999948e-05, 8.91529999999946e-05, 8.887500000000215e-05, 8.898599999999923e-05, 8.932000000000384e-05, 8.858399999999572e-05, 8.902799999999794e-05, 8.880600000000377e-05, 8.88199999999964e-05, 8.881899999999693e-05, 8.912499999999546e-05, 8.865300000000104e-05, 8.858300000000319e-05, 8.84449999999995e-05, 8.847299999999864e-05, 8.916600000000163e-05, 8.926399999999862e-05, 8.91250000000024e-05, 8.872199999999941e-05, 8.891700000000086e-05, 8.920899999999982e-05, 8.847199999999916e-05, 8.91670000000011e-05, 8.865300000000104e-05, 8.841700000000036e-05, 8.895800000000009e-05, 8.8945e-05, 8.930499999999786e-05, 8.919500000000025e-05, 8.886100000000258e-05, 8.924999999999905e-05, 8.913800000000249e-05, 8.847199999999916e-05, 8.891700000000086e-05, 8.913799999999555e-05, 8.9332999999997e-05, 8.869400000000027e-05, 8.891700000000086e-05, 8.913900000000197e-05, 8.873699999999846e-05, 8.877699999999822e-05, 8.893000000000095e-05, 8.930499999999786e-05]</msg>
<status status="PASS" starttime="20201029 12:44:39.029" endtime="20201029 12:44:39.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.018" endtime="20201029 12:44:39.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.045" endtime="20201029 12:44:39.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.041" endtime="20201029 12:44:39.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.038" endtime="20201029 12:44:39.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.554" endtime="20201029 12:44:39.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.552" endtime="20201029 12:44:39.070"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.093" endtime="20201029 12:44:39.112"></status>
</kw>
<msg timestamp="20201029 12:44:39.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.089" endtime="20201029 12:44:39.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.115" endtime="20201029 12:44:39.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.121" endtime="20201029 12:44:39.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.082" endtime="20201029 12:44:39.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.076" endtime="20201029 12:44:39.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.144" endtime="20201029 12:44:39.487"></status>
</kw>
<msg timestamp="20201029 12:44:39.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039385292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.141" endtime="20201029 12:44:39.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039385292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.497" endtime="20201029 12:44:39.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.515" endtime="20201029 12:44:39.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.134" endtime="20201029 12:44:39.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.129" endtime="20201029 12:44:39.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.532" level="INFO">${RESULT} = [{'diff': 9.013899999999603e-05}, {'diff': 9.034700000000451e-05}, {'diff': 8.991700000000186e-05}, {'diff': 8.951399999999887e-05}, {'diff': 8.995800000000109e-05}, {'diff': 9.029099999999929e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:39.524" endtime="20201029 12:44:39.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.542" level="INFO">${ACCURACY} = {'diff': [9.013899999999603e-05, 9.034700000000451e-05, 8.991700000000186e-05, 8.951399999999887e-05, 8.995800000000109e-05, 9.029099999999929e-05, 8.961099999999639e-05, 9.033399999999747e-05, 9.0222...</msg>
<status status="PASS" starttime="20201029 12:44:39.534" endtime="20201029 12:44:39.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.552" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.550" endtime="20201029 12:44:39.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.558" level="INFO">VALUE: [9.013899999999603e-05, 9.034700000000451e-05, 8.991700000000186e-05, 8.951399999999887e-05, 8.995800000000109e-05, 9.029099999999929e-05, 8.961099999999639e-05, 9.033399999999747e-05, 9.022200000000091e-05, 8.934700000000351e-05, 8.997200000000066e-05, 8.984700000000401e-05, 8.977799999999869e-05, 9.002799999999894e-05, 8.969399999999433e-05, 8.998600000000023e-05, 8.947299999999964e-05, 9.02079999999944e-05, 8.990299999999535e-05, 8.968100000000118e-05, 9.001399999999937e-05, 8.979199999999826e-05, 9.029199999999876e-05, 9.005599999999808e-05, 9.004099999999904e-05, 9.022299999999345e-05, 8.963900000000247e-05, 8.94999999999993e-05, 8.995800000000109e-05, 8.99999999999998e-05, 8.956999999999715e-05, 8.973599999999998e-05, 8.938900000000222e-05, 8.941600000000188e-05, 9.017999999999526e-05, 8.979099999999879e-05, 8.941700000000136e-05, 8.973599999999998e-05, 9.005600000000502e-05, 9.001399999999937e-05, 9.03199999999979e-05, 8.952800000000538e-05, 8.976399999999912e-05, 8.96659999999952e-05, 8.983399999999697e-05, 9.019400000000177e-05, 8.986100000000358e-05, 8.951399999999887e-05, 8.96250000000029e-05, 8.969500000000075e-05]</msg>
<status status="PASS" starttime="20201029 12:44:39.555" endtime="20201029 12:44:39.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.544" endtime="20201029 12:44:39.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.570" endtime="20201029 12:44:39.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.566" endtime="20201029 12:44:39.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.563" endtime="20201029 12:44:39.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.072" endtime="20201029 12:44:39.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.071" endtime="20201029 12:44:39.596"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.619" endtime="20201029 12:44:39.642"></status>
</kw>
<msg timestamp="20201029 12:44:39.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.616" endtime="20201029 12:44:39.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.645" endtime="20201029 12:44:39.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.651" endtime="20201029 12:44:39.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.608" endtime="20201029 12:44:39.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.602" endtime="20201029 12:44:39.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.674" endtime="20201029 12:44:40.020"></status>
</kw>
<msg timestamp="20201029 12:44:40.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042398542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042489042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.671" endtime="20201029 12:44:40.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042398542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042489042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.030" endtime="20201029 12:44:40.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.048" endtime="20201029 12:44:40.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.664" endtime="20201029 12:44:40.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.659" endtime="20201029 12:44:40.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.065" level="INFO">${RESULT} = [{'diff': 9.05000000000003e-05}, {'diff': 9.113899999999703e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.045900000000107e-05}, {'diff': 9.091600000000338e-05}, {'diff': 9.051399999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:40.057" endtime="20201029 12:44:40.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.074" level="INFO">${ACCURACY} = {'diff': [9.05000000000003e-05, 9.113899999999703e-05, 9.075000000000055e-05, 9.045900000000107e-05, 9.091600000000338e-05, 9.051399999999987e-05, 9.056899999999868e-05, 9.069500000000175e-05, 9.08050...</msg>
<status status="PASS" starttime="20201029 12:44:40.067" endtime="20201029 12:44:40.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.085" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.083" endtime="20201029 12:44:40.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.090" level="INFO">VALUE: [9.05000000000003e-05, 9.113899999999703e-05, 9.075000000000055e-05, 9.045900000000107e-05, 9.091600000000338e-05, 9.051399999999987e-05, 9.056899999999868e-05, 9.069500000000175e-05, 9.08050000000063e-05, 9.079199999999926e-05, 9.134799999999804e-05, 9.111099999999789e-05, 9.079099999999979e-05, 9.095800000000209e-05, 9.097300000000114e-05, 9.061099999999739e-05, 9.083300000000544e-05, 9.130599999999933e-05, 9.129100000000029e-05, 9.06670000000026e-05, 9.06670000000026e-05, 9.138900000000422e-05, 9.052799999999944e-05, 9.127800000000019e-05, 9.040199999999637e-05, 9.097200000000166e-05, 9.093099999999549e-05, 9.067999999999576e-05, 9.059700000000476e-05, 9.054199999999901e-05, 9.06800000000027e-05, 9.06800000000027e-05, 9.070800000000184e-05, 9.048600000000073e-05, 9.056900000000562e-05, 9.047200000000116e-05, 9.120800000000234e-05, 9.10000000000008e-05, 9.038900000000322e-05, 9.031900000000537e-05, 9.084699999999807e-05, 9.088900000000372e-05, 9.106899999999918e-05, 9.045799999999465e-05, 9.102700000000047e-05, 9.113899999999703e-05, 9.095799999999515e-05, 9.113900000000397e-05, 9.061100000000433e-05, 9.111099999999789e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.087" endtime="20201029 12:44:40.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.076" endtime="20201029 12:44:40.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.104" endtime="20201029 12:44:40.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.099" endtime="20201029 12:44:40.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.096" endtime="20201029 12:44:40.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.598" endtime="20201029 12:44:40.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.596" endtime="20201029 12:44:40.129"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.152" endtime="20201029 12:44:40.173"></status>
</kw>
<msg timestamp="20201029 12:44:40.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.148" endtime="20201029 12:44:40.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.176" endtime="20201029 12:44:40.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.182" endtime="20201029 12:44:40.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.141" endtime="20201029 12:44:40.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.136" endtime="20201029 12:44:40.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.205" endtime="20201029 12:44:40.538"></status>
</kw>
<msg timestamp="20201029 12:44:40.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039153028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039245361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.202" endtime="20201029 12:44:40.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039153028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039245361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.547" endtime="20201029 12:44:40.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.565" endtime="20201029 12:44:40.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.195" endtime="20201029 12:44:40.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.190" endtime="20201029 12:44:40.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.583" level="INFO">${RESULT} = [{'diff': 9.2333e-05}, {'diff': 9.145899999999513e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.226400000000162e-05}, {'diff': 9.238899999999828e-05}, {'diff': 9.14859999999948e-05}, {'diff': 9.18...</msg>
<status status="PASS" starttime="20201029 12:44:40.574" endtime="20201029 12:44:40.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.593" level="INFO">${ACCURACY} = {'diff': [9.2333e-05, 9.145899999999513e-05, 9.161099999999839e-05, 9.226400000000162e-05, 9.238899999999828e-05, 9.14859999999948e-05, 9.183399999999897e-05, 9.216699999999717e-05, 9.176299999999471e...</msg>
<status status="PASS" starttime="20201029 12:44:40.585" endtime="20201029 12:44:40.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.604" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.602" endtime="20201029 12:44:40.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.609" level="INFO">VALUE: [9.2333e-05, 9.145899999999513e-05, 9.161099999999839e-05, 9.226400000000162e-05, 9.238899999999828e-05, 9.14859999999948e-05, 9.183399999999897e-05, 9.216699999999717e-05, 9.176299999999471e-05, 9.236099999999914e-05, 9.236099999999914e-05, 9.195799999999615e-05, 9.179200000000026e-05, 9.141700000000336e-05, 9.174999999999461e-05, 9.230500000000086e-05, 9.216699999999717e-05, 9.15000000000013e-05, 9.14450000000025e-05, 9.2333e-05, 9.149999999999436e-05, 9.190299999999735e-05, 9.219400000000377e-05, 9.155500000000011e-05, 9.16800000000037e-05, 9.184699999999907e-05, 9.181899999999993e-05, 9.19870000000017e-05, 9.194399999999658e-05, 9.161099999999839e-05, 9.209700000000626e-05, 9.225000000000205e-05, 9.184699999999907e-05, 9.173600000000198e-05, 9.158300000000619e-05, 9.213899999999803e-05, 9.22079999999964e-05, 9.154200000000001e-05, 9.176400000000112e-05, 9.226400000000162e-05, 9.193099999999649e-05, 9.209699999999932e-05, 9.211099999999889e-05, 9.155599999999958e-05, 9.16529999999971e-05, 9.18199999999994e-05, 9.188899999999778e-05, 9.159800000000523e-05, 9.230600000000033e-05, 9.186199999999811e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.606" endtime="20201029 12:44:40.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.595" endtime="20201029 12:44:40.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.622" endtime="20201029 12:44:40.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.617" endtime="20201029 12:44:40.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.615" endtime="20201029 12:44:40.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.131" endtime="20201029 12:44:40.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.130" endtime="20201029 12:44:40.647"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.670" endtime="20201029 12:44:40.690"></status>
</kw>
<msg timestamp="20201029 12:44:40.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.667" endtime="20201029 12:44:40.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.693" endtime="20201029 12:44:40.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.699" endtime="20201029 12:44:40.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.660" endtime="20201029 12:44:40.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.654" endtime="20201029 12:44:40.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.722" endtime="20201029 12:44:41.053"></status>
</kw>
<msg timestamp="20201029 12:44:41.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039803889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039896694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.719" endtime="20201029 12:44:41.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039803889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039896694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.063" endtime="20201029 12:44:41.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.081" endtime="20201029 12:44:41.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.712" endtime="20201029 12:44:41.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.707" endtime="20201029 12:44:41.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.098" level="INFO">${RESULT} = [{'diff': 9.280500000000136e-05}, {'diff': 9.29859999999963e-05}, {'diff': 9.247199999999622e-05}, {'diff': 9.275000000000255e-05}, {'diff': 9.304199999999457e-05}, {'diff': 9.334700000000057e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:41.090" endtime="20201029 12:44:41.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.109" level="INFO">${ACCURACY} = {'diff': [9.280500000000136e-05, 9.29859999999963e-05, 9.247199999999622e-05, 9.275000000000255e-05, 9.304199999999457e-05, 9.334700000000057e-05, 9.318099999999774e-05, 9.247199999999622e-05, 9.26810...</msg>
<status status="PASS" starttime="20201029 12:44:41.100" endtime="20201029 12:44:41.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.120" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.118" endtime="20201029 12:44:41.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.125" level="INFO">VALUE: [9.280500000000136e-05, 9.29859999999963e-05, 9.247199999999622e-05, 9.275000000000255e-05, 9.304199999999457e-05, 9.334700000000057e-05, 9.318099999999774e-05, 9.247199999999622e-05, 9.268100000000418e-05, 9.252700000000197e-05, 9.270800000000384e-05, 9.337499999999971e-05, 9.272200000000341e-05, 9.281900000000093e-05, 9.301399999999543e-05, 9.27079999999969e-05, 9.318099999999774e-05, 9.322200000000391e-05, 9.315300000000554e-05, 9.320900000000382e-05, 9.262499999999896e-05, 9.326400000000262e-05, 9.336100000000014e-05, 9.245900000000307e-05, 9.25000000000023e-05, 9.286099999999964e-05, 9.270800000000384e-05, 9.287499999999921e-05, 9.30000000000028e-05, 9.255500000000111e-05, 9.291699999999792e-05, 9.254199999999407e-05, 9.263899999999853e-05, 9.305599999999414e-05, 9.276400000000212e-05, 9.276400000000212e-05, 9.293099999999749e-05, 9.287499999999921e-05, 9.323599999999654e-05, 9.337500000000665e-05, 9.24450000000035e-05, 9.240299999999785e-05, 9.327800000000219e-05, 9.316699999999817e-05, 9.290299999999835e-05, 9.255600000000058e-05, 9.247200000000316e-05, 9.305500000000161e-05, 9.309700000000032e-05, 9.237499999999871e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.122" endtime="20201029 12:44:41.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.111" endtime="20201029 12:44:41.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.143" endtime="20201029 12:44:41.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.138" endtime="20201029 12:44:41.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.136" endtime="20201029 12:44:41.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.650" endtime="20201029 12:44:41.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.648" endtime="20201029 12:44:41.168"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.190" endtime="20201029 12:44:41.210"></status>
</kw>
<msg timestamp="20201029 12:44:41.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.187" endtime="20201029 12:44:41.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.213" endtime="20201029 12:44:41.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.219" endtime="20201029 12:44:41.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.180" endtime="20201029 12:44:41.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.174" endtime="20201029 12:44:41.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.242" endtime="20201029 12:44:41.578"></status>
</kw>
<msg timestamp="20201029 12:44:41.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039114236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.239" endtime="20201029 12:44:41.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039114236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.588" endtime="20201029 12:44:41.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.606" endtime="20201029 12:44:41.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.232" endtime="20201029 12:44:41.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.227" endtime="20201029 12:44:41.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.623" level="INFO">${RESULT} = [{'diff': 9.38200000000014e-05}, {'diff': 9.376399999999618e-05}, {'diff': 9.423599999999754e-05}, {'diff': 9.384700000000107e-05}, {'diff': 9.386100000000064e-05}, {'diff': 9.39859999999973e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:41.614" endtime="20201029 12:44:41.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.632" level="INFO">${ACCURACY} = {'diff': [9.38200000000014e-05, 9.376399999999618e-05, 9.423599999999754e-05, 9.384700000000107e-05, 9.386100000000064e-05, 9.39859999999973e-05, 9.39729999999972e-05, 9.413900000000003e-05, 9.4320000...</msg>
<status status="PASS" starttime="20201029 12:44:41.625" endtime="20201029 12:44:41.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.643" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.641" endtime="20201029 12:44:41.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.648" level="INFO">VALUE: [9.38200000000014e-05, 9.376399999999618e-05, 9.423599999999754e-05, 9.384700000000107e-05, 9.386100000000064e-05, 9.39859999999973e-05, 9.39729999999972e-05, 9.413900000000003e-05, 9.43200000000019e-05, 9.362499999999996e-05, 9.35279999999955e-05, 9.440299999999985e-05, 9.342999999999851e-05, 9.424999999999711e-05, 9.41529999999996e-05, 9.408300000000175e-05, 9.387500000000021e-05, 9.407000000000165e-05, 9.387500000000021e-05, 9.352800000000244e-05, 9.422199999999797e-05, 9.349999999999636e-05, 9.361199999999986e-05, 9.404200000000251e-05, 9.355600000000158e-05, 9.422199999999797e-05, 9.377800000000269e-05, 9.359700000000082e-05, 9.38059999999949e-05, 9.422200000000491e-05, 9.352800000000244e-05, 9.341699999999842e-05, 9.377699999999628e-05, 9.369399999999833e-05, 9.398600000000423e-05, 9.354200000000201e-05, 9.416700000000611e-05, 9.4027999999996e-05, 9.433299999999506e-05, 9.354200000000201e-05, 9.423699999999702e-05, 9.379100000000279e-05, 9.431900000000243e-05, 9.341700000000536e-05, 9.345899999999713e-05, 9.356900000000168e-05, 9.417999999999926e-05, 9.351400000000287e-05, 9.437500000000071e-05, 9.40000000000038e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.645" endtime="20201029 12:44:41.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.634" endtime="20201029 12:44:41.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.662" endtime="20201029 12:44:41.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.657" endtime="20201029 12:44:41.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.654" endtime="20201029 12:44:41.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.170" endtime="20201029 12:44:41.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.169" endtime="20201029 12:44:41.687"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.709" endtime="20201029 12:44:41.731"></status>
</kw>
<msg timestamp="20201029 12:44:41.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.706" endtime="20201029 12:44:41.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.734" endtime="20201029 12:44:41.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.740" endtime="20201029 12:44:41.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.699" endtime="20201029 12:44:41.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.693" endtime="20201029 12:44:41.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.763" endtime="20201029 12:44:42.096"></status>
</kw>
<msg timestamp="20201029 12:44:42.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040919028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041013917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.760" endtime="20201029 12:44:42.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040919028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041013917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.106" endtime="20201029 12:44:42.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.124" endtime="20201029 12:44:42.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.753" endtime="20201029 12:44:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.748" endtime="20201029 12:44:42.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.141" level="INFO">${RESULT} = [{'diff': 9.488899999999384e-05}, {'diff': 9.486200000000111e-05}, {'diff': 9.475000000000455e-05}, {'diff': 9.472199999999847e-05}, {'diff': 9.472299999999795e-05}, {'diff': 9.479199999999632e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:42.133" endtime="20201029 12:44:42.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.151" level="INFO">${ACCURACY} = {'diff': [9.488899999999384e-05, 9.486200000000111e-05, 9.475000000000455e-05, 9.472199999999847e-05, 9.472299999999795e-05, 9.479199999999632e-05, 9.530499999999692e-05, 9.50000000000048e-05, 9.48059...</msg>
<status status="PASS" starttime="20201029 12:44:42.143" endtime="20201029 12:44:42.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.161" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.159" endtime="20201029 12:44:42.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.166" level="INFO">VALUE: [9.488899999999384e-05, 9.486200000000111e-05, 9.475000000000455e-05, 9.472199999999847e-05, 9.472299999999795e-05, 9.479199999999632e-05, 9.530499999999692e-05, 9.50000000000048e-05, 9.48059999999959e-05, 9.438900000000028e-05, 9.491699999999992e-05, 9.519399999999983e-05, 9.473599999999804e-05, 9.504199999999657e-05, 9.473600000000498e-05, 9.493099999999949e-05, 9.461099999999445e-05, 9.452700000000397e-05, 9.491600000000044e-05, 9.48330000000025e-05, 9.512500000000146e-05, 9.501399999999743e-05, 9.443099999999899e-05, 9.508400000000222e-05, 9.51660000000007e-05, 9.511100000000189e-05, 9.524999999999811e-05, 9.443099999999899e-05, 9.508399999999528e-05, 9.447300000000464e-05, 9.511100000000189e-05, 9.477699999999728e-05, 9.536100000000214e-05, 9.479199999999632e-05, 9.477800000000369e-05, 9.469400000000627e-05, 9.474999999999761e-05, 9.508400000000222e-05, 9.502699999999753e-05, 9.454200000000301e-05, 9.467999999999976e-05, 9.516700000000017e-05, 9.498699999999777e-05, 9.44859999999978e-05, 9.444399999999908e-05, 9.5333000000003e-05, 9.5027999999997e-05, 9.483399999999503e-05, 9.454100000000354e-05, 9.518099999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.163" endtime="20201029 12:44:42.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.152" endtime="20201029 12:44:42.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.180" endtime="20201029 12:44:42.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.175" endtime="20201029 12:44:42.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.172" endtime="20201029 12:44:42.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.689" endtime="20201029 12:44:42.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.688" endtime="20201029 12:44:42.205"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.229" endtime="20201029 12:44:42.253"></status>
</kw>
<msg timestamp="20201029 12:44:42.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.224" endtime="20201029 12:44:42.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.258" endtime="20201029 12:44:42.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.266" endtime="20201029 12:44:42.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.217" endtime="20201029 12:44:42.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.212" endtime="20201029 12:44:42.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.293" endtime="20201029 12:44:42.642"></status>
</kw>
<msg timestamp="20201029 12:44:42.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041346139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041442208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.289" endtime="20201029 12:44:42.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041346139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041442208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.652" endtime="20201029 12:44:42.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.671" endtime="20201029 12:44:42.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.282" endtime="20201029 12:44:42.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.277" endtime="20201029 12:44:42.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.695" level="INFO">${RESULT} = [{'diff': 9.606900000000418e-05}, {'diff': 9.644500000000056e-05}, {'diff': 9.584699999999613e-05}, {'diff': 9.590300000000135e-05}, {'diff': 9.563900000000153e-05}, {'diff': 9.598600000000623e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:42.680" endtime="20201029 12:44:42.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.706" level="INFO">${ACCURACY} = {'diff': [9.606900000000418e-05, 9.644500000000056e-05, 9.584699999999613e-05, 9.590300000000135e-05, 9.563900000000153e-05, 9.598600000000623e-05, 9.634700000000357e-05, 9.555499999999717e-05, 9.5513...</msg>
<status status="PASS" starttime="20201029 12:44:42.697" endtime="20201029 12:44:42.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.717" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.715" endtime="20201029 12:44:42.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.723" level="INFO">VALUE: [9.606900000000418e-05, 9.644500000000056e-05, 9.584699999999613e-05, 9.590300000000135e-05, 9.563900000000153e-05, 9.598600000000623e-05, 9.634700000000357e-05, 9.555499999999717e-05, 9.551399999999793e-05, 9.534700000000257e-05, 9.619500000000031e-05, 9.562500000000196e-05, 9.551399999999793e-05, 9.605600000000408e-05, 9.61530000000016e-05, 9.554199999999707e-05, 9.561099999999545e-05, 9.569499999999981e-05, 9.615200000000212e-05, 9.629199999999782e-05, 9.62080000000004e-05, 9.625000000000605e-05, 9.568100000000024e-05, 9.558400000000272e-05, 9.595800000000015e-05, 9.545899999999913e-05, 9.61530000000016e-05, 9.637500000000271e-05, 9.619400000000083e-05, 9.630500000000486e-05, 9.568100000000024e-05, 9.577800000000469e-05, 9.557000000000315e-05, 9.573600000000598e-05, 9.590300000000135e-05, 9.618000000000126e-05, 9.555499999999717e-05, 9.558300000000325e-05, 9.538900000000128e-05, 9.608300000000375e-05, 9.597199999999972e-05, 9.594400000000058e-05, 9.577699999999828e-05, 9.62080000000004e-05, 9.584699999999613e-05, 9.587500000000221e-05, 9.559700000000282e-05, 9.549999999999836e-05, 9.609799999999585e-05, 9.627799999999825e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.720" endtime="20201029 12:44:42.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.708" endtime="20201029 12:44:42.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.735" endtime="20201029 12:44:42.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.731" endtime="20201029 12:44:42.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.728" endtime="20201029 12:44:42.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.207" endtime="20201029 12:44:42.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.206" endtime="20201029 12:44:42.760"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.782" endtime="20201029 12:44:42.802"></status>
</kw>
<msg timestamp="20201029 12:44:42.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.779" endtime="20201029 12:44:42.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.805" endtime="20201029 12:44:42.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.812" endtime="20201029 12:44:42.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.772" endtime="20201029 12:44:42.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.766" endtime="20201029 12:44:42.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.834" endtime="20201029 12:44:43.168"></status>
</kw>
<msg timestamp="20201029 12:44:43.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03890575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039003139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:42.831" endtime="20201029 12:44:43.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03890575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039003139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:43.178" endtime="20201029 12:44:43.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.196" endtime="20201029 12:44:43.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.824" endtime="20201029 12:44:43.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.819" endtime="20201029 12:44:43.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.213" level="INFO">${RESULT} = [{'diff': 9.738899999999634e-05}, {'diff': 9.71809999999948e-05}, {'diff': 9.731899999999849e-05}, {'diff': 9.652699999999903e-05}, {'diff': 9.702800000000594e-05}, {'diff': 9.693100000000149e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:43.205" endtime="20201029 12:44:43.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.228" level="INFO">${ACCURACY} = {'diff': [9.738899999999634e-05, 9.71809999999948e-05, 9.731899999999849e-05, 9.652699999999903e-05, 9.702800000000594e-05, 9.693100000000149e-05, 9.649999999999936e-05, 9.701399999999943e-05, 9.70829...</msg>
<status status="PASS" starttime="20201029 12:44:43.216" endtime="20201029 12:44:43.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.239" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.237" endtime="20201029 12:44:43.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.245" level="INFO">VALUE: [9.738899999999634e-05, 9.71809999999948e-05, 9.731899999999849e-05, 9.652699999999903e-05, 9.702800000000594e-05, 9.693100000000149e-05, 9.649999999999936e-05, 9.701399999999943e-05, 9.708299999999781e-05, 9.662500000000296e-05, 9.684700000000407e-05, 9.673699999999952e-05, 9.694399999999465e-05, 9.701399999999943e-05, 9.731899999999849e-05, 9.651399999999893e-05, 9.701399999999943e-05, 9.662500000000296e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.673600000000004e-05, 9.690300000000235e-05, 9.647200000000022e-05, 9.715299999999566e-05, 9.690200000000287e-05, 9.731999999999796e-05, 9.674999999999961e-05, 9.655599999999764e-05, 9.731999999999796e-05, 9.648699999999927e-05, 9.70409999999991e-05, 9.702699999999953e-05, 9.657000000000415e-05, 9.677699999999928e-05, 9.727799999999925e-05, 9.729099999999935e-05, 9.681899999999799e-05, 9.679199999999832e-05, 9.669500000000081e-05, 9.699999999999986e-05, 9.640200000000237e-05, 9.723600000000054e-05, 9.643000000000151e-05, 9.677799999999875e-05, 9.684699999999713e-05, 9.70409999999991e-05, 9.726399999999968e-05, 9.72080000000014e-05, 9.69860000000003e-05, 9.713900000000303e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.242" endtime="20201029 12:44:43.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.230" endtime="20201029 12:44:43.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.257" endtime="20201029 12:44:43.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.253" endtime="20201029 12:44:43.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.250" endtime="20201029 12:44:43.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.762" endtime="20201029 12:44:43.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.761" endtime="20201029 12:44:43.282"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.304" endtime="20201029 12:44:43.324"></status>
</kw>
<msg timestamp="20201029 12:44:43.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.301" endtime="20201029 12:44:43.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.327" endtime="20201029 12:44:43.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.334" endtime="20201029 12:44:43.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.294" endtime="20201029 12:44:43.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.288" endtime="20201029 12:44:43.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.357" endtime="20201029 12:44:43.693"></status>
</kw>
<msg timestamp="20201029 12:44:43.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039068236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039165667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.354" endtime="20201029 12:44:43.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039068236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039165667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.703" endtime="20201029 12:44:43.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.721" endtime="20201029 12:44:43.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.346" endtime="20201029 12:44:43.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.342" endtime="20201029 12:44:43.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.739" level="INFO">${RESULT} = [{'diff': 9.743100000000199e-05}, {'diff': 9.765299999999616e-05}, {'diff': 9.837500000000471e-05}, {'diff': 9.77080000000019e-05}, {'diff': 9.744500000000156e-05}, {'diff': 9.775000000000061e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:43.730" endtime="20201029 12:44:43.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.749" level="INFO">${ACCURACY} = {'diff': [9.743100000000199e-05, 9.765299999999616e-05, 9.837500000000471e-05, 9.77080000000019e-05, 9.744500000000156e-05, 9.775000000000061e-05, 9.761100000000439e-05, 9.775000000000061e-05, 9.82780...</msg>
<status status="PASS" starttime="20201029 12:44:43.741" endtime="20201029 12:44:43.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.760" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.758" endtime="20201029 12:44:43.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.766" level="INFO">VALUE: [9.743100000000199e-05, 9.765299999999616e-05, 9.837500000000471e-05, 9.77080000000019e-05, 9.744500000000156e-05, 9.775000000000061e-05, 9.761100000000439e-05, 9.775000000000061e-05, 9.827800000000025e-05, 9.825000000000111e-05, 9.822299999999451e-05, 9.79860000000013e-05, 9.763899999999659e-05, 9.800000000000086e-05, 9.744399999999515e-05, 9.831900000000643e-05, 9.747199999999429e-05, 9.822299999999451e-05, 9.794400000000258e-05, 9.790300000000335e-05, 9.763900000000353e-05, 9.804199999999957e-05, 9.770899999999444e-05, 9.831899999999949e-05, 9.825000000000111e-05, 9.786100000000464e-05, 9.767999999999583e-05, 9.763899999999659e-05, 9.829199999999982e-05, 9.801400000000043e-05, 9.755499999999917e-05, 9.781900000000593e-05, 9.750000000000036e-05, 9.813899999999709e-05, 9.78479999999976e-05, 9.756899999999874e-05, 9.809700000000532e-05, 9.772200000000147e-05, 9.791700000000292e-05, 9.805499999999967e-05, 9.812499999999752e-05, 9.773600000000104e-05, 9.765299999999616e-05, 9.83059999999994e-05, 9.769400000000233e-05, 9.744399999999515e-05, 9.840199999999744e-05, 9.820900000000188e-05, 9.819499999999537e-05, 9.750000000000036e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.762" endtime="20201029 12:44:43.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.751" endtime="20201029 12:44:43.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.778" endtime="20201029 12:44:43.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.774" endtime="20201029 12:44:43.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.771" endtime="20201029 12:44:43.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.284" endtime="20201029 12:44:43.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.283" endtime="20201029 12:44:43.803"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.825" endtime="20201029 12:44:43.846"></status>
</kw>
<msg timestamp="20201029 12:44:43.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.822" endtime="20201029 12:44:43.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.850" endtime="20201029 12:44:43.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.856" endtime="20201029 12:44:43.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.815" endtime="20201029 12:44:43.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.809" endtime="20201029 12:44:43.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.879" endtime="20201029 12:44:44.223"></status>
</kw>
<msg timestamp="20201029 12:44:44.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040626764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.876" endtime="20201029 12:44:44.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040626764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.233" endtime="20201029 12:44:44.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.252" endtime="20201029 12:44:44.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.869" endtime="20201029 12:44:44.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.864" endtime="20201029 12:44:44.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.269" level="INFO">${RESULT} = [{'diff': 9.899999999999493e-05}, {'diff': 9.904200000000057e-05}, {'diff': 9.841700000000342e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.869400000000333e-05}, {'diff': 9.911099999999895e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:44.260" endtime="20201029 12:44:44.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.278" level="INFO">${ACCURACY} = {'diff': [9.899999999999493e-05, 9.904200000000057e-05, 9.841700000000342e-05, 9.911099999999895e-05, 9.869400000000333e-05, 9.911099999999895e-05, 9.888900000000478e-05, 9.863899999999759e-05, 9.9346...</msg>
<status status="PASS" starttime="20201029 12:44:44.271" endtime="20201029 12:44:44.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.290" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.287" endtime="20201029 12:44:44.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.296" level="INFO">VALUE: [9.899999999999493e-05, 9.904200000000057e-05, 9.841700000000342e-05, 9.911099999999895e-05, 9.869400000000333e-05, 9.911099999999895e-05, 9.888900000000478e-05, 9.863899999999759e-05, 9.934699999999963e-05, 9.89860000000023e-05, 9.841600000000394e-05, 9.916699999999723e-05, 9.895899999999569e-05, 9.894500000000306e-05, 9.89860000000023e-05, 9.84860000000018e-05, 9.895799999999622e-05, 9.859799999999835e-05, 9.855500000000017e-05, 9.888899999999784e-05, 9.926299999999527e-05, 9.926399999999475e-05, 9.933300000000006e-05, 9.855500000000017e-05, 9.855599999999964e-05, 9.927700000000178e-05, 9.877700000000128e-05, 9.873600000000204e-05, 9.930500000000092e-05, 9.85280000000005e-05, 9.909799999999885e-05, 9.920799999999647e-05, 9.940300000000485e-05, 9.943000000000451e-05, 9.884699999999913e-05, 9.855500000000017e-05, 9.879200000000032e-05, 9.88609999999987e-05, 9.913899999999809e-05, 9.940199999999844e-05, 9.924999999999518e-05, 9.911099999999895e-05, 9.873700000000152e-05, 9.918100000000374e-05, 9.897200000000272e-05, 9.862499999999802e-05, 9.845799999999572e-05, 9.872199999999554e-05, 9.916699999999723e-05, 9.872199999999554e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.293" endtime="20201029 12:44:44.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.280" endtime="20201029 12:44:44.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.310" endtime="20201029 12:44:44.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.304" endtime="20201029 12:44:44.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.302" endtime="20201029 12:44:44.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.805" endtime="20201029 12:44:44.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.804" endtime="20201029 12:44:44.335"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.358" endtime="20201029 12:44:44.377"></status>
</kw>
<msg timestamp="20201029 12:44:44.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.354" endtime="20201029 12:44:44.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.381" endtime="20201029 12:44:44.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.387" endtime="20201029 12:44:44.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.347" endtime="20201029 12:44:44.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.342" endtime="20201029 12:44:44.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.410" endtime="20201029 12:44:44.744"></status>
</kw>
<msg timestamp="20201029 12:44:44.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039011958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.407" endtime="20201029 12:44:44.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039011958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.753" endtime="20201029 12:44:44.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.772" endtime="20201029 12:44:44.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.400" endtime="20201029 12:44:44.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.395" endtime="20201029 12:44:44.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.790" level="INFO">${RESULT} = [{'diff': 0.00010022300000000345}, {'diff': 9.947200000000322e-05}, {'diff': 9.954200000000107e-05}, {'diff': 9.979200000000132e-05}, {'diff': 0.00010031899999999455}, {'diff': 0.00010029200000000182}...</msg>
<status status="PASS" starttime="20201029 12:44:44.781" endtime="20201029 12:44:44.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.801" level="INFO">${ACCURACY} = {'diff': [0.00010022300000000345, 9.947200000000322e-05, 9.954200000000107e-05, 9.979200000000132e-05, 0.00010031899999999455, 0.00010029200000000182, 9.958300000000031e-05, 9.94730000000027e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 12:44:44.793" endtime="20201029 12:44:44.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.812" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.810" endtime="20201029 12:44:44.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.817" level="INFO">VALUE: [0.00010022300000000345, 9.947200000000322e-05, 9.954200000000107e-05, 9.979200000000132e-05, 0.00010031899999999455, 0.00010029200000000182, 9.958300000000031e-05, 9.94730000000027e-05, 0.00010022200000000397, 0.00010001400000000243, 9.980499999999448e-05, 9.98609999999997e-05, 9.988799999999937e-05, 0.00010009699999999344, 0.00010033300000000106, 9.969500000000381e-05, 9.952799999999457e-05, 0.00010006900000000124, 9.961099999999945e-05, 0.00010033300000000106, 9.975000000000261e-05, 9.962500000000596e-05, 9.943100000000399e-05, 9.96530000000051e-05, 0.00010016599999999876, 0.0001000139999999955, 0.0001003060000000014, 0.00010018100000000474, 0.000100028000000002, 9.9415999999998e-05, 9.954200000000107e-05, 0.00010009700000000038, 9.944500000000356e-05, 0.00010016699999999823, 0.00010033400000000053, 9.975000000000261e-05, 0.00010016699999999823, 9.981999999999353e-05, 9.961199999999892e-05, 9.961099999999945e-05, 9.965199999999869e-05, 0.00010027800000000225, 9.955500000000117e-05, 9.937499999999877e-05, 9.962499999999902e-05, 9.994400000000458e-05, 0.00010019499999999737, 9.956900000000074e-05, 9.975000000000261e-05, 9.966599999999826e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.814" endtime="20201029 12:44:44.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.803" endtime="20201029 12:44:44.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.830" endtime="20201029 12:44:44.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.825" endtime="20201029 12:44:44.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.823" endtime="20201029 12:44:44.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.337" endtime="20201029 12:44:44.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.336" endtime="20201029 12:44:44.855"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.877" endtime="20201029 12:44:44.897"></status>
</kw>
<msg timestamp="20201029 12:44:44.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.874" endtime="20201029 12:44:44.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.900" endtime="20201029 12:44:44.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.906" endtime="20201029 12:44:44.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.867" endtime="20201029 12:44:44.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.861" endtime="20201029 12:44:44.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.929" endtime="20201029 12:44:45.260"></status>
</kw>
<msg timestamp="20201029 12:44:45.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038931931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039032333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.926" endtime="20201029 12:44:45.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038931931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039032333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.270" endtime="20201029 12:44:45.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.288" endtime="20201029 12:44:45.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.919" endtime="20201029 12:44:45.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.914" endtime="20201029 12:44:45.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.304" level="INFO">${RESULT} = [{'diff': 0.00010040199999999944}, {'diff': 0.00010052799999999557}, {'diff': 0.00010061199999999992}, {'diff': 0.00010131899999999555}, {'diff': 0.0001010559999999952}, {'diff': 0.0001006940000000053...</msg>
<status status="PASS" starttime="20201029 12:44:45.296" endtime="20201029 12:44:45.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.315" level="INFO">${ACCURACY} = {'diff': [0.00010040199999999944, 0.00010052799999999557, 0.00010061199999999992, 0.00010131899999999555, 0.0001010559999999952, 0.00010069400000000533, 0.0001007359999999971, 0.00010112500000000052, ...</msg>
<status status="PASS" starttime="20201029 12:44:45.306" endtime="20201029 12:44:45.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.326" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.324" endtime="20201029 12:44:45.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.331" level="INFO">VALUE: [0.00010040199999999944, 0.00010052799999999557, 0.00010061199999999992, 0.00010131899999999555, 0.0001010559999999952, 0.00010069400000000533, 0.0001007359999999971, 0.00010112500000000052, 0.00010137500000000077, 0.00010094499999999812, 0.00010111100000000095, 0.0001008610000000007, 0.00010065199999999969, 0.00010109699999999444, 0.000101028000000003, 0.00010101400000000343, 0.0001010139999999965, 0.00010112500000000052, 0.0001012359999999976, 0.0001013610000000012, 0.00010116699999999923, 0.00010117999999999933, 0.00010088899999999984, 0.0001012080000000054, 0.00010070900000000438, 0.00010044499999999762, 0.00010061100000000045, 0.00010127800000000325, 0.00010126400000000368, 0.00010082000000000146, 0.00010117999999999933, 0.00010056900000000174, 0.00010136099999999426, 0.00010109700000000138, 0.00010127799999999632, 0.00010097199999999779, 0.00010048599999999686, 0.00010097200000000472, 0.000101028000000003, 0.00010083400000000103, 0.00010111100000000095, 0.00010142999999999958, 0.00010094499999999812, 0.0001010410000000031, 0.00010043099999999805, 0.00010055600000000164, 0.0001012359999999976, 0.00010112500000000052, 0.00010074999999999668, 0.0001007359999999971]</msg>
<status status="PASS" starttime="20201029 12:44:45.328" endtime="20201029 12:44:45.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.317" endtime="20201029 12:44:45.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.346" endtime="20201029 12:44:45.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.341" endtime="20201029 12:44:45.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.338" endtime="20201029 12:44:45.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.857" endtime="20201029 12:44:45.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.855" endtime="20201029 12:44:45.371"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.394" endtime="20201029 12:44:45.414"></status>
</kw>
<msg timestamp="20201029 12:44:45.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.390" endtime="20201029 12:44:45.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.417" endtime="20201029 12:44:45.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.423" endtime="20201029 12:44:45.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.383" endtime="20201029 12:44:45.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.377" endtime="20201029 12:44:45.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.446" endtime="20201029 12:44:45.780"></status>
</kw>
<msg timestamp="20201029 12:44:45.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039032069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039133847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.443" endtime="20201029 12:44:45.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039032069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039133847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.789" endtime="20201029 12:44:45.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.808" endtime="20201029 12:44:45.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.436" endtime="20201029 12:44:45.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.431" endtime="20201029 12:44:45.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.825" level="INFO">${RESULT} = [{'diff': 0.00010177799999999682}, {'diff': 0.00010197199999999879}, {'diff': 0.00010205500000000367}, {'diff': 0.00010191699999999998}, {'diff': 0.0001015280000000035}, {'diff': 0.0001020970000000023...</msg>
<status status="PASS" starttime="20201029 12:44:45.816" endtime="20201029 12:44:45.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.834" level="INFO">${ACCURACY} = {'diff': [0.00010177799999999682, 0.00010197199999999879, 0.00010205500000000367, 0.00010191699999999998, 0.0001015280000000035, 0.00010209700000000238, 0.00010144499999999862, 0.00010154199999999614,...</msg>
<status status="PASS" starttime="20201029 12:44:45.827" endtime="20201029 12:44:45.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.845" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.843" endtime="20201029 12:44:45.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.851" level="INFO">VALUE: [0.00010177799999999682, 0.00010197199999999879, 0.00010205500000000367, 0.00010191699999999998, 0.0001015280000000035, 0.00010209700000000238, 0.00010144499999999862, 0.00010154199999999614, 0.00010145799999999872, 0.00010242999999999364, 0.00010236099999999526, 0.0001020689999999963, 0.00010173600000000504, 0.00010147299999999776, 0.00010213900000000109, 0.00010229199999999689, 0.00010224999999999818, 0.00010172199999999854, 0.00010194499999999912, 0.00010155499999999623, 0.00010222199999999904, 0.00010212500000000152, 0.00010206900000000324, 0.00010199999999999793, 0.00010187500000000127, 0.00010172199999999854, 0.00010142999999999958, 0.00010211099999999501, 0.00010237499999999483, 0.00010224999999999818, 0.00010226399999999775, 0.0001016939999999994, 0.0001018060000000029, 0.0001021939999999999, 0.00010213900000000109, 0.00010184700000000213, 0.00010215300000000066, 0.00010222299999999851, 0.0001023610000000022, 0.00010234700000000263, 0.00010229199999999689, 0.0001023060000000034, 0.0001016939999999994, 0.00010194499999999912, 0.00010222199999999904, 0.00010150000000000436, 0.00010183299999999562, 0.00010222199999999904, 0.00010222199999999904, 0.00010199999999999793]</msg>
<status status="PASS" starttime="20201029 12:44:45.847" endtime="20201029 12:44:45.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.836" endtime="20201029 12:44:45.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.863" endtime="20201029 12:44:45.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.859" endtime="20201029 12:44:45.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.856" endtime="20201029 12:44:45.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.373" endtime="20201029 12:44:45.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.372" endtime="20201029 12:44:45.888"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.910" endtime="20201029 12:44:45.932"></status>
</kw>
<msg timestamp="20201029 12:44:45.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.907" endtime="20201029 12:44:45.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.935" endtime="20201029 12:44:45.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.941" endtime="20201029 12:44:45.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.900" endtime="20201029 12:44:45.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.894" endtime="20201029 12:44:45.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.964" endtime="20201029 12:44:46.298"></status>
</kw>
<msg timestamp="20201029 12:44:46.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040545069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040647611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.961" endtime="20201029 12:44:46.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040545069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040647611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.307" endtime="20201029 12:44:46.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.325" endtime="20201029 12:44:46.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.954" endtime="20201029 12:44:46.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.949" endtime="20201029 12:44:46.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.342" level="INFO">${RESULT} = [{'diff': 0.00010254199999999714}, {'diff': 0.00010255499999999723}, {'diff': 0.00010312500000000252}, {'diff': 0.00010337499999999583}, {'diff': 0.00010288800000000237}, {'diff': 0.000103082999999996...</msg>
<status status="PASS" starttime="20201029 12:44:46.333" endtime="20201029 12:44:46.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.351" level="INFO">${ACCURACY} = {'diff': [0.00010254199999999714, 0.00010255499999999723, 0.00010312500000000252, 0.00010337499999999583, 0.00010288800000000237, 0.00010308299999999687, 0.00010329099999999841, 0.0001033339999999966,...</msg>
<status status="PASS" starttime="20201029 12:44:46.344" endtime="20201029 12:44:46.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.361" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.359" endtime="20201029 12:44:46.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.367" level="INFO">VALUE: [0.00010254199999999714, 0.00010255499999999723, 0.00010312500000000252, 0.00010337499999999583, 0.00010288800000000237, 0.00010308299999999687, 0.00010329099999999841, 0.0001033339999999966, 0.00010322299999999951, 0.00010244499999999962, 0.00010340300000000191, 0.00010336200000000267, 0.00010279200000000432, 0.00010293000000000108, 0.00010252799999999757, 0.00010337500000000277, 0.00010309699999999644, 0.00010308300000000381, 0.00010338900000000234, 0.000103028000000005, 0.00010291699999999404, 0.00010293000000000108, 0.00010294500000000012, 0.00010340300000000191, 0.00010248599999999886, 0.00010240200000000144, 0.00010241700000000048, 0.0001030689999999973, 0.00010315300000000166, 0.00010301299999999902, 0.0001027359999999991, 0.00010299999999999893, 0.00010337500000000277, 0.00010241700000000048, 0.00010248599999999886, 0.00010270899999999944, 0.00010276400000000518, 0.00010262499999999508, 0.00010319399999999396, 0.00010304099999999816, 0.00010309699999999644, 0.00010272199999999954, 0.00010257000000000321, 0.00010261100000000245, 0.00010338799999999593, 0.00010322200000000004, 0.00010324999999999918, 0.00010280500000000442, 0.00010327800000000525, 0.00010252699999999809]</msg>
<status status="PASS" starttime="20201029 12:44:46.364" endtime="20201029 12:44:46.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.352" endtime="20201029 12:44:46.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.440" endtime="20201029 12:44:46.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.434" endtime="20201029 12:44:46.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.432" endtime="20201029 12:44:46.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.890" endtime="20201029 12:44:46.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.889" endtime="20201029 12:44:46.465"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.487" endtime="20201029 12:44:46.507"></status>
</kw>
<msg timestamp="20201029 12:44:46.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.484" endtime="20201029 12:44:46.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.511" endtime="20201029 12:44:46.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.517" endtime="20201029 12:44:46.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.477" endtime="20201029 12:44:46.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.471" endtime="20201029 12:44:46.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.540" endtime="20201029 12:44:46.874"></status>
</kw>
<msg timestamp="20201029 12:44:46.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039091194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039195028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.537" endtime="20201029 12:44:46.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039091194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039195028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.883" endtime="20201029 12:44:46.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.901" endtime="20201029 12:44:46.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.530" endtime="20201029 12:44:46.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.525" endtime="20201029 12:44:46.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.918" level="INFO">${RESULT} = [{'diff': 0.0001038339999999971}, {'diff': 0.0001038889999999959}, {'diff': 0.00010413900000000309}, {'diff': 0.00010418099999999486}, {'diff': 0.00010387500000000327}, {'diff': 0.00010386099999999676...</msg>
<status status="PASS" starttime="20201029 12:44:46.909" endtime="20201029 12:44:46.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.928" level="INFO">${ACCURACY} = {'diff': [0.0001038339999999971, 0.0001038889999999959, 0.00010413900000000309, 0.00010418099999999486, 0.00010387500000000327, 0.00010386099999999676, 0.00010393100000000155, 0.00010402799999999907, ...</msg>
<status status="PASS" starttime="20201029 12:44:46.920" endtime="20201029 12:44:46.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.939" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.937" endtime="20201029 12:44:46.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.944" level="INFO">VALUE: [0.0001038339999999971, 0.0001038889999999959, 0.00010413900000000309, 0.00010418099999999486, 0.00010387500000000327, 0.00010386099999999676, 0.00010393100000000155, 0.00010402799999999907, 0.00010362500000000302, 0.00010438800000000387, 0.00010406999999999778, 0.00010377799999999882, 0.0001038610000000037, 0.00010354199999999814, 0.00010401400000000643, 0.0001035410000000056, 0.00010426399999999975, 0.00010374999999999968, 0.00010362499999999608, 0.00010366599999999532, 0.00010408299999999787, 0.00010381999999999753, 0.00010416700000000223, 0.0001036810000000013, 0.00010382000000000446, 0.00010388900000000284, 0.00010437499999999683, 0.0001042360000000006, 0.00010345800000000072, 0.00010413899999999615, 0.00010376399999999925, 0.0001040139999999995, 0.00010398600000000036, 0.00010426399999999975, 0.00010398600000000036, 0.00010380499999999848, 0.00010425000000000018, 0.00010383299999999762, 0.00010352799999999857, 0.00010348599999999986, 0.00010384700000000413, 0.00010426300000000027, 0.00010358399999999685, 0.00010365300000000216, 0.00010380500000000542, 0.00010393000000000208, 0.00010391699999999504, 0.0001035280000000055, 0.00010388900000000284, 0.00010429199999999889]</msg>
<status status="PASS" starttime="20201029 12:44:46.941" endtime="20201029 12:44:46.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.930" endtime="20201029 12:44:46.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.957" endtime="20201029 12:44:46.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.952" endtime="20201029 12:44:46.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.950" endtime="20201029 12:44:46.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.467" endtime="20201029 12:44:46.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.466" endtime="20201029 12:44:46.981"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.004" endtime="20201029 12:44:47.024"></status>
</kw>
<msg timestamp="20201029 12:44:47.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.001" endtime="20201029 12:44:47.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.027" endtime="20201029 12:44:47.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.033" endtime="20201029 12:44:47.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.993" endtime="20201029 12:44:47.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.988" endtime="20201029 12:44:47.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.056" endtime="20201029 12:44:47.390"></status>
</kw>
<msg timestamp="20201029 12:44:47.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039096861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039202167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.053" endtime="20201029 12:44:47.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039096861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039202167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.399" endtime="20201029 12:44:47.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.417" endtime="20201029 12:44:47.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.046" endtime="20201029 12:44:47.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.041" endtime="20201029 12:44:47.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.433" level="INFO">${RESULT} = [{'diff': 0.0001053060000000064}, {'diff': 0.00010463900000000359}, {'diff': 0.00010541699999999654}, {'diff': 0.0001053889999999974}, {'diff': 0.00010534699999999869}, {'diff': 0.00010479199999999939...</msg>
<status status="PASS" starttime="20201029 12:44:47.425" endtime="20201029 12:44:47.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.444" level="INFO">${ACCURACY} = {'diff': [0.0001053060000000064, 0.00010463900000000359, 0.00010541699999999654, 0.0001053889999999974, 0.00010534699999999869, 0.00010479199999999939, 0.00010487499999999733, 0.00010487499999999733, ...</msg>
<status status="PASS" starttime="20201029 12:44:47.435" endtime="20201029 12:44:47.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.455" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.453" endtime="20201029 12:44:47.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.460" level="INFO">VALUE: [0.0001053060000000064, 0.00010463900000000359, 0.00010541699999999654, 0.0001053889999999974, 0.00010534699999999869, 0.00010479199999999939, 0.00010487499999999733, 0.00010487499999999733, 0.00010452799999999957, 0.00010472200000000154, 0.00010463900000000359, 0.00010508399999999835, 0.00010447200000000129, 0.00010445899999999425, 0.00010452700000000009, 0.00010456999999999828, 0.00010534699999999869, 0.00010462499999999708, 0.00010477799999999982, 0.00010512499999999758, 0.00010525000000000118, 0.00010466700000000273, 0.00010511099999999801, 0.00010504199999999964, 0.00010508399999999835, 0.00010487499999999733, 0.00010475000000000068, 0.00010441699999999554, 0.00010491700000000298, 0.00010508399999999835, 0.00010487499999999733, 0.00010531999999999903, 0.00010529100000000041, 0.00010525000000000118, 0.00010477799999999982, 0.0001051940000000029, 0.00010452799999999957, 0.00010441700000000248, 0.00010497200000000179, 0.00010472300000000101, 0.00010536099999999826, 0.00010444400000000215, 0.00010520800000000247, 0.00010515299999999672, 0.0001050140000000005, 0.00010526400000000075, 0.00010502700000000059, 0.00010483299999999862, 0.00010522300000000151, 0.0001045689999999988]</msg>
<status status="PASS" starttime="20201029 12:44:47.457" endtime="20201029 12:44:47.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.446" endtime="20201029 12:44:47.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.472" endtime="20201029 12:44:47.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.468" endtime="20201029 12:44:47.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.466" endtime="20201029 12:44:47.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.983" endtime="20201029 12:44:47.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.982" endtime="20201029 12:44:47.497"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.520" endtime="20201029 12:44:47.540"></status>
</kw>
<msg timestamp="20201029 12:44:47.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.516" endtime="20201029 12:44:47.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.543" endtime="20201029 12:44:47.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.549" endtime="20201029 12:44:47.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.509" endtime="20201029 12:44:47.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.504" endtime="20201029 12:44:47.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.572" endtime="20201029 12:44:47.907"></status>
</kw>
<msg timestamp="20201029 12:44:47.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039073111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039178583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.569" endtime="20201029 12:44:47.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039073111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039178583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.916" endtime="20201029 12:44:47.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.935" endtime="20201029 12:44:47.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.562" endtime="20201029 12:44:47.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.557" endtime="20201029 12:44:47.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.952" level="INFO">${RESULT} = [{'diff': 0.00010547200000000229}, {'diff': 0.00010611099999999901}, {'diff': 0.00010549999999999449}, {'diff': 0.00010570900000000244}, {'diff': 0.00010633300000000012}, {'diff': 0.000105528000000000...</msg>
<status status="PASS" starttime="20201029 12:44:47.943" endtime="20201029 12:44:47.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.961" level="INFO">${ACCURACY} = {'diff': [0.00010547200000000229, 0.00010611099999999901, 0.00010549999999999449, 0.00010570900000000244, 0.00010633300000000012, 0.00010552800000000057, 0.00010566699999999679, 0.00010583400000000603...</msg>
<status status="PASS" starttime="20201029 12:44:47.954" endtime="20201029 12:44:47.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.971" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.969" endtime="20201029 12:44:47.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.977" level="INFO">VALUE: [0.00010547200000000229, 0.00010611099999999901, 0.00010549999999999449, 0.00010570900000000244, 0.00010633300000000012, 0.00010552800000000057, 0.00010566699999999679, 0.00010583400000000603, 0.00010587500000000527, 0.00010613899999999815, 0.00010554100000000066, 0.00010633300000000012, 0.00010608399999999935, 0.00010604200000000064, 0.00010552800000000057, 0.00010631900000000055, 0.0001060560000000002, 0.00010601300000000202, 0.00010579100000000091, 0.00010619500000000337, 0.00010615299999999772, 0.00010624999999999524, 0.00010615299999999772, 0.00010536099999999826, 0.000105514000000001, 0.00010608299999999987, 0.00010575000000000168, 0.00010637499999999883, 0.00010547199999999535, 0.00010629100000000141, 0.00010577799999999388, 0.00010602800000000107, 0.00010605500000000073, 0.00010583299999999962, 0.00010577800000000082, 0.0001057089999999955, 0.0001060419999999937, 0.00010557000000000621, 0.00010634699999999969, 0.00010581999999999953, 0.00010579200000000039, 0.0001060140000000015, 0.00010561099999999851, 0.00010598700000000183, 0.00010576400000000125, 0.00010599999999999499, 0.00010563899999999765, 0.00010543099999999611, 0.00010630600000000046, 0.00010543000000000358]</msg>
<status status="PASS" starttime="20201029 12:44:47.974" endtime="20201029 12:44:47.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.962" endtime="20201029 12:44:47.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.989" endtime="20201029 12:44:48.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.985" endtime="20201029 12:44:48.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.982" endtime="20201029 12:44:48.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.499" endtime="20201029 12:44:48.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.498" endtime="20201029 12:44:48.014"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.036" endtime="20201029 12:44:48.062"></status>
</kw>
<msg timestamp="20201029 12:44:48.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.033" endtime="20201029 12:44:48.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.065" endtime="20201029 12:44:48.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.072" endtime="20201029 12:44:48.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.026" endtime="20201029 12:44:48.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.020" endtime="20201029 12:44:48.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.095" endtime="20201029 12:44:48.428"></status>
</kw>
<msg timestamp="20201029 12:44:48.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044658306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044764958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.091" endtime="20201029 12:44:48.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044658306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044764958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.438" endtime="20201029 12:44:48.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.456" endtime="20201029 12:44:48.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.084" endtime="20201029 12:44:48.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.080" endtime="20201029 12:44:48.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.473" level="INFO">${RESULT} = [{'diff': 0.00010665199999999875}, {'diff': 0.00010705599999999427}, {'diff': 0.00010657000000000028}, {'diff': 0.00010720799999999753}, {'diff': 0.00010687499999999933}, {'diff': 0.000107250000000003...</msg>
<status status="PASS" starttime="20201029 12:44:48.464" endtime="20201029 12:44:48.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:48.482" level="INFO">${ACCURACY} = {'diff': [0.00010665199999999875, 0.00010705599999999427, 0.00010657000000000028, 0.00010720799999999753, 0.00010687499999999933, 0.00010725000000000318, 0.00010708300000000087, 0.00010681900000000105...</msg>
<status status="PASS" starttime="20201029 12:44:48.475" endtime="20201029 12:44:48.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.492" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:48.490" endtime="20201029 12:44:48.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.497" level="INFO">VALUE: [0.00010665199999999875, 0.00010705599999999427, 0.00010657000000000028, 0.00010720799999999753, 0.00010687499999999933, 0.00010725000000000318, 0.00010708300000000087, 0.00010681900000000105, 0.00010712499999999958, 0.00010695800000000422, 0.00010682000000000053, 0.00010662500000000602, 0.00010712499999999958, 0.00010705500000000173, 0.00010723599999999667, 0.00010652700000000209, 0.0001068889999999989, 0.00010644399999999721, 0.00010637499999999883, 0.00010644400000000415, 0.00010676400000000225, 0.00010713900000000609, 0.00010680500000000148, 0.00010683299999999368, 0.00010730600000000146, 0.00010684700000000019, 0.00010648699999999539, 0.00010712499999999958, 0.00010691699999999804, 0.0001072360000000036, 0.00010680499999999454, 0.0001065690000000008, 0.00010733300000000112, 0.00010734800000000017, 0.0001071940000000049, 0.00010720900000000394, 0.00010663899999999865, 0.00010713899999999915, 0.00010651399999999506, 0.00010647299999999582, 0.00010694399999999771, 0.00010659799999999942, 0.00010718099999999786, 0.00010663799999999918, 0.00010665299999999822, 0.00010682000000000053, 0.00010648599999999592, 0.00010712499999999958, 0.00010641699999999754, 0.00010731900000000155]</msg>
<status status="PASS" starttime="20201029 12:44:48.494" endtime="20201029 12:44:48.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.483" endtime="20201029 12:44:48.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:48.511" endtime="20201029 12:44:48.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.505" endtime="20201029 12:44:48.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.503" endtime="20201029 12:44:48.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.016" endtime="20201029 12:44:48.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.015" endtime="20201029 12:44:48.536"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.558" endtime="20201029 12:44:48.579"></status>
</kw>
<msg timestamp="20201029 12:44:48.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.555" endtime="20201029 12:44:48.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.582" endtime="20201029 12:44:48.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.588" endtime="20201029 12:44:48.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.548" endtime="20201029 12:44:48.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.542" endtime="20201029 12:44:48.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.611" endtime="20201029 12:44:48.946"></status>
</kw>
<msg timestamp="20201029 12:44:48.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038935097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.608" endtime="20201029 12:44:48.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038935097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.955" endtime="20201029 12:44:48.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.973" endtime="20201029 12:44:48.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.601" endtime="20201029 12:44:48.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.596" endtime="20201029 12:44:48.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.990" level="INFO">${RESULT} = [{'diff': 0.00010762500000000008}, {'diff': 0.00010816699999999929}, {'diff': 0.00010784699999999425}, {'diff': 0.00010817999999999939}, {'diff': 0.00010743099999999811}, {'diff': 0.000108027999999996...</msg>
<status status="PASS" starttime="20201029 12:44:48.981" endtime="20201029 12:44:48.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.000" level="INFO">${ACCURACY} = {'diff': [0.00010762500000000008, 0.00010816699999999929, 0.00010784699999999425, 0.00010817999999999939, 0.00010743099999999811, 0.00010802799999999613, 0.00010787500000000033, 0.00010809700000000144...</msg>
<status status="PASS" starttime="20201029 12:44:48.992" endtime="20201029 12:44:49.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.011" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.009" endtime="20201029 12:44:49.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.016" level="INFO">VALUE: [0.00010762500000000008, 0.00010816699999999929, 0.00010784699999999425, 0.00010817999999999939, 0.00010743099999999811, 0.00010802799999999613, 0.00010787500000000033, 0.00010809700000000144, 0.00010749999999999649, 0.00010780499999999554, 0.00010745799999999778, 0.00010792999999999914, 0.00010812500000000058, 0.00010816599999999982, 0.00010766699999999879, 0.0001083890000000004, 0.00010762500000000008, 0.00010812500000000058, 0.00010826400000000375, 0.00010758299999999443, 0.00010779199999999545, 0.00010749999999999649, 0.00010841600000000007, 0.00010816700000000623, 0.00010769399999999846, 0.00010804099999999622, 0.00010748699999999639, 0.0001078889999999999, 0.00010748600000000386, 0.00010795899999999775, 0.00010820800000000547, 0.00010798599999999742, 0.00010840299999999997, 0.00010756899999999486, 0.00010770800000000497, 0.00010765300000000616, 0.00010802800000000307, 0.00010747300000000376, 0.0001082360000000046, 0.00010765199999999975, 0.00010770799999999803, 0.0001080690000000023, 0.00010808400000000135, 0.0001082219999999981, 0.00010762500000000008, 0.00010837500000000083, 0.00010740299999999897, 0.00010838899999999346, 0.00010794500000000512, 0.00010744499999999768]</msg>
<status status="PASS" starttime="20201029 12:44:49.014" endtime="20201029 12:44:49.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.002" endtime="20201029 12:44:49.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.029" endtime="20201029 12:44:49.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.025" endtime="20201029 12:44:49.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.022" endtime="20201029 12:44:49.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.538" endtime="20201029 12:44:49.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.537" endtime="20201029 12:44:49.054"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.076" endtime="20201029 12:44:49.096"></status>
</kw>
<msg timestamp="20201029 12:44:49.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.073" endtime="20201029 12:44:49.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.099" endtime="20201029 12:44:49.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.106" endtime="20201029 12:44:49.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.066" endtime="20201029 12:44:49.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.060" endtime="20201029 12:44:49.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.129" endtime="20201029 12:44:49.461"></status>
</kw>
<msg timestamp="20201029 12:44:49.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038875986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038984528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.125" endtime="20201029 12:44:49.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038875986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038984528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.471" endtime="20201029 12:44:49.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.489" endtime="20201029 12:44:49.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.118" endtime="20201029 12:44:49.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.114" endtime="20201029 12:44:49.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.505" level="INFO">${RESULT} = [{'diff': 0.0001085419999999962}, {'diff': 0.00010845799999999878}, {'diff': 0.00010872299999999807}, {'diff': 0.00010852799999999663}, {'diff': 0.00010842999999999964}, {'diff': 0.0001089859999999984...</msg>
<status status="PASS" starttime="20201029 12:44:49.497" endtime="20201029 12:44:49.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.516" level="INFO">${ACCURACY} = {'diff': [0.0001085419999999962, 0.00010845799999999878, 0.00010872299999999807, 0.00010852799999999663, 0.00010842999999999964, 0.00010898599999999842, 0.0001092219999999991, 0.0001087089999999985, 0...</msg>
<status status="PASS" starttime="20201029 12:44:49.507" endtime="20201029 12:44:49.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.527" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.525" endtime="20201029 12:44:49.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.532" level="INFO">VALUE: [0.0001085419999999962, 0.00010845799999999878, 0.00010872299999999807, 0.00010852799999999663, 0.00010842999999999964, 0.00010898599999999842, 0.0001092219999999991, 0.0001087089999999985, 0.0001088890000000009, 0.00010863900000000065, 0.00010875000000000468, 0.00010873599999999817, 0.00010847200000000529, 0.00010901399999999756, 0.00010884700000000219, 0.00010850000000000443, 0.00010887499999999439, 0.00010872299999999807, 0.00010861100000000151, 0.0001088890000000009, 0.0001087089999999985, 0.00010915199999999431, 0.00010918099999999986, 0.00010850000000000443, 0.00010930499999999704, 0.0001090560000000032, 0.00010947199999999935, 0.00010932000000000303, 0.00010877799999999688, 0.00010937500000000183, 0.00010916700000000029, 0.00010920799999999953, 0.00010873700000000458, 0.00010936100000000226, 0.00010908300000000287, 0.00010916700000000029, 0.00010915200000000125, 0.00010911100000000201, 0.00010931900000000355, 0.00010913900000000115, 0.00010893099999999961, 0.00010854200000000314, 0.00010907000000000278, 0.0001088890000000009, 0.00010902699999999765, 0.0001085690000000028, 0.00010919399999999996, 0.00010913900000000115, 0.00010854200000000314, 0.00010906999999999584]</msg>
<status status="PASS" starttime="20201029 12:44:49.529" endtime="20201029 12:44:49.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.518" endtime="20201029 12:44:49.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.544" endtime="20201029 12:44:49.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.540" endtime="20201029 12:44:49.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.538" endtime="20201029 12:44:49.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.056" endtime="20201029 12:44:49.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.055" endtime="20201029 12:44:49.569"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.592" endtime="20201029 12:44:49.612"></status>
</kw>
<msg timestamp="20201029 12:44:49.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.588" endtime="20201029 12:44:49.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.615" endtime="20201029 12:44:49.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.621" endtime="20201029 12:44:49.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.581" endtime="20201029 12:44:49.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.576" endtime="20201029 12:44:49.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.644" endtime="20201029 12:44:49.979"></status>
</kw>
<msg timestamp="20201029 12:44:49.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038870431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038980167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.641" endtime="20201029 12:44:49.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038870431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038980167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.989" endtime="20201029 12:44:50.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.007" endtime="20201029 12:44:50.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.634" endtime="20201029 12:44:50.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.629" endtime="20201029 12:44:50.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.024" level="INFO">${RESULT} = [{'diff': 0.0001097360000000061}, {'diff': 0.00010986099999999582}, {'diff': 0.00011037499999999589}, {'diff': 0.00010998599999999942}, {'diff': 0.00010963900000000165}, {'diff': 0.0001101379999999957...</msg>
<status status="PASS" starttime="20201029 12:44:50.015" endtime="20201029 12:44:50.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.033" level="INFO">${ACCURACY} = {'diff': [0.0001097360000000061, 0.00010986099999999582, 0.00011037499999999589, 0.00010998599999999942, 0.00010963900000000165, 0.00011013799999999574, 0.0001095690000000038, 0.00010969499999999993, ...</msg>
<status status="PASS" starttime="20201029 12:44:50.026" endtime="20201029 12:44:50.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.044" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.042" endtime="20201029 12:44:50.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.049" level="INFO">VALUE: [0.0001097360000000061, 0.00010986099999999582, 0.00011037499999999589, 0.00010998599999999942, 0.00010963900000000165, 0.00011013799999999574, 0.0001095690000000038, 0.00010969499999999993, 0.00010959700000000294, 0.0001100549999999978, 0.00010991600000000157, 0.00010943000000000064, 0.00011031999999999709, 0.00011043100000000111, 0.00011022299999999957, 0.00011007000000000378, 0.00011030499999999804, 0.00011038899999999546, 0.00011027799999999838, 0.00011036099999999632, 0.00011001399999999856, 0.00010973599999999917, 0.00010949999999999849, 0.00010973599999999917, 0.0001100140000000055, 0.00011018000000000139, 0.00010993100000000061, 0.00010995800000000028, 0.00010963900000000165, 0.00010986100000000276, 0.00010969499999999993, 0.00011018099999999392, 0.00011036100000000326, 0.00010983299999999668, 0.00010947299999999882, 0.00011026400000000575, 0.00011034800000000317, 0.0001102220000000001, 0.00010948700000000533, 0.00010986099999999582, 0.00010950000000000543, 0.00010959700000000294, 0.0001100969999999965, 0.00010999999999999899, 0.00011030499999999804, 0.00011032000000000403, 0.00010945799999999978, 0.00011037500000000283, 0.00010983300000000362, 0.00010947299999999882]</msg>
<status status="PASS" starttime="20201029 12:44:50.046" endtime="20201029 12:44:50.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.035" endtime="20201029 12:44:50.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.061" endtime="20201029 12:44:50.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.057" endtime="20201029 12:44:50.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.055" endtime="20201029 12:44:50.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.571" endtime="20201029 12:44:50.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.570" endtime="20201029 12:44:50.086"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.108" endtime="20201029 12:44:50.130"></status>
</kw>
<msg timestamp="20201029 12:44:50.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.105" endtime="20201029 12:44:50.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.134" endtime="20201029 12:44:50.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.140" endtime="20201029 12:44:50.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.098" endtime="20201029 12:44:50.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.092" endtime="20201029 12:44:50.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.163" endtime="20201029 12:44:50.503"></status>
</kw>
<msg timestamp="20201029 12:44:50.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040556375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.160" endtime="20201029 12:44:50.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040445278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040556375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.512" endtime="20201029 12:44:50.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.530" endtime="20201029 12:44:50.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.152" endtime="20201029 12:44:50.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.148" endtime="20201029 12:44:50.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.547" level="INFO">${RESULT} = [{'diff': 0.0001110969999999975}, {'diff': 0.00011068099999999442}, {'diff': 0.00011061100000000351}, {'diff': 0.00011111099999999707}, {'diff': 0.0001108340000000041}, {'diff': 0.00011077799999999888...</msg>
<status status="PASS" starttime="20201029 12:44:50.538" endtime="20201029 12:44:50.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.556" level="INFO">${ACCURACY} = {'diff': [0.0001110969999999975, 0.00011068099999999442, 0.00011061100000000351, 0.00011111099999999707, 0.0001108340000000041, 0.00011077799999999888, 0.00011056899999999786, 0.00011049999999999949, ...</msg>
<status status="PASS" starttime="20201029 12:44:50.549" endtime="20201029 12:44:50.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.566" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.564" endtime="20201029 12:44:50.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.572" level="INFO">VALUE: [0.0001110969999999975, 0.00011068099999999442, 0.00011061100000000351, 0.00011111099999999707, 0.0001108340000000041, 0.00011077799999999888, 0.00011056899999999786, 0.00011049999999999949, 0.00011066700000000179, 0.00011052799999999863, 0.00011095800000000128, 0.00011080599999999802, 0.00011118100000000186, 0.00011129199999999895, 0.00011130599999999852, 0.0001113890000000034, 0.00011131899999999861, 0.00011112499999999664, 0.00011069500000000093, 0.00011045800000000078, 0.00011111100000000401, 0.00011102799999999913, 0.00011098699999999989, 0.00011044400000000121, 0.00011129199999999895, 0.00011108300000000487, 0.00011082000000000453, 0.00011069400000000146, 0.00011068100000000136, 0.00011087500000000333, 0.00011056999999999734, 0.00011108299999999793, 0.00011080499999999854, 0.00011105599999999827, 0.00011129099999999947, 0.00011063899999999571, 0.00011113900000000315, 0.00011113900000000315, 0.00011113900000000315, 0.00011047200000000035, 0.0001113340000000046, 0.00011106899999999836, 0.00011059800000000342, 0.00011138899999999646, 0.00011111099999999707, 0.00011052799999999863, 0.00011083299999999768, 0.0001114169999999956, 0.00011073600000000017, 0.00011048599999999992]</msg>
<status status="PASS" starttime="20201029 12:44:50.569" endtime="20201029 12:44:50.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.557" endtime="20201029 12:44:50.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.585" endtime="20201029 12:44:50.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.580" endtime="20201029 12:44:50.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.577" endtime="20201029 12:44:50.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.088" endtime="20201029 12:44:50.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.087" endtime="20201029 12:44:50.610"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.633" endtime="20201029 12:44:50.653"></status>
</kw>
<msg timestamp="20201029 12:44:50.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.629" endtime="20201029 12:44:50.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.656" endtime="20201029 12:44:50.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.663" endtime="20201029 12:44:50.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.622" endtime="20201029 12:44:50.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.617" endtime="20201029 12:44:50.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.686" endtime="20201029 12:44:51.020"></status>
</kw>
<msg timestamp="20201029 12:44:51.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038965375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039076944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.683" endtime="20201029 12:44:51.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038965375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039076944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.029" endtime="20201029 12:44:51.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.047" endtime="20201029 12:44:51.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.675" endtime="20201029 12:44:51.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.671" endtime="20201029 12:44:51.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.064" level="INFO">${RESULT} = [{'diff': 0.0001115690000000058}, {'diff': 0.00011194400000000271}, {'diff': 0.00011166599999999638}, {'diff': 0.00011226400000000081}, {'diff': 0.00011151400000000006}, {'diff': 0.0001118189999999991...</msg>
<status status="PASS" starttime="20201029 12:44:51.055" endtime="20201029 12:44:51.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.074" level="INFO">${ACCURACY} = {'diff': [0.0001115690000000058, 0.00011194400000000271, 0.00011166599999999638, 0.00011226400000000081, 0.00011151400000000006, 0.00011181899999999911, 0.00011158399999999791, 0.00011184700000000519,...</msg>
<status status="PASS" starttime="20201029 12:44:51.066" endtime="20201029 12:44:51.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.085" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.083" endtime="20201029 12:44:51.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.090" level="INFO">VALUE: [0.0001115690000000058, 0.00011194400000000271, 0.00011166599999999638, 0.00011226400000000081, 0.00011151400000000006, 0.00011181899999999911, 0.00011158399999999791, 0.00011184700000000519, 0.00011162500000000408, 0.00011163899999999671, 0.00011169400000000246, 0.00011216700000000329, 0.00011181899999999911, 0.00011183300000000562, 0.00011226400000000081, 0.00011205599999999927, 0.00011165299999999628, 0.00011218000000000339, 0.0001123749999999979, 0.00011211099999999807, 0.00011163899999999671, 0.00011186099999999782, 0.00011219399999999602, 0.00011172300000000107, 0.00011237500000000483, 0.00011234699999999875, 0.00011184699999999825, 0.0001120969999999985, 0.00011211099999999807, 0.00011188899999999696, 0.0001120419999999997, 0.00011186099999999782, 0.00011243000000000364, 0.00011236099999999832, 0.00011201300000000108, 0.00011173600000000117, 0.00011220800000000253, 0.00011141700000000254, 0.00011158299999999843, 0.00011193099999999567, 0.00011181899999999911, 0.00011148600000000092, 0.00011161099999999757, 0.00011226400000000081, 0.0001115419999999992, 0.0001120690000000063, 0.0001120549999999998, 0.00011148700000000039, 0.00011205599999999927, 0.00011208399999999841]</msg>
<status status="PASS" starttime="20201029 12:44:51.087" endtime="20201029 12:44:51.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.076" endtime="20201029 12:44:51.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.102" endtime="20201029 12:44:51.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.098" endtime="20201029 12:44:51.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.096" endtime="20201029 12:44:51.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.612" endtime="20201029 12:44:51.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.611" endtime="20201029 12:44:51.127"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.150" endtime="20201029 12:44:51.170"></status>
</kw>
<msg timestamp="20201029 12:44:51.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.146" endtime="20201029 12:44:51.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.173" endtime="20201029 12:44:51.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.180" endtime="20201029 12:44:51.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.139" endtime="20201029 12:44:51.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.134" endtime="20201029 12:44:51.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.203" endtime="20201029 12:44:51.538"></status>
</kw>
<msg timestamp="20201029 12:44:51.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038871708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038985, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:51.199" endtime="20201029 12:44:51.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038871708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038985, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:51.548" endtime="20201029 12:44:51.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.565" endtime="20201029 12:44:51.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.192" endtime="20201029 12:44:51.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.187" endtime="20201029 12:44:51.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.582" level="INFO">${RESULT} = [{'diff': 0.00011329200000000095}, {'diff': 0.00011297199999999591}, {'diff': 0.00011313799999999874}, {'diff': 0.00011255599999999977}, {'diff': 0.00011333300000000018}, {'diff': 0.000113346999999999...</msg>
<status status="PASS" starttime="20201029 12:44:51.574" endtime="20201029 12:44:51.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.593" level="INFO">${ACCURACY} = {'diff': [0.00011329200000000095, 0.00011297199999999591, 0.00011313799999999874, 0.00011255599999999977, 0.00011333300000000018, 0.00011334699999999975, 0.00011245799999999584, 0.00011294500000000318...</msg>
<status status="PASS" starttime="20201029 12:44:51.584" endtime="20201029 12:44:51.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.604" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.602" endtime="20201029 12:44:51.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.609" level="INFO">VALUE: [0.00011329200000000095, 0.00011297199999999591, 0.00011313799999999874, 0.00011255599999999977, 0.00011333300000000018, 0.00011334699999999975, 0.00011245799999999584, 0.00011294500000000318, 0.00011316700000000429, 0.00011334699999999975, 0.00011256899999999986, 0.00011295800000000328, 0.00011323700000000214, 0.00011286099999999882, 0.00011329199999999401, 0.00011262500000000508, 0.00011295900000000275, 0.00011261099999999857, 0.00011254100000000072, 0.00011305600000000027, 0.00011305600000000027, 0.00011308299999999993, 0.00011256899999999986, 0.0001125420000000002, 0.00011311099999999907, 0.0001130550000000008, 0.00011277800000000088, 0.00011318100000000386, 0.0001130969999999995, 0.00011251400000000106, 0.00011340199999999856, 0.00011265300000000422, 0.00011284699999999925, 0.00011306999999999984, 0.0001130969999999995, 0.00011261100000000551, 0.00011318099999999692, 0.00011300000000000199, 0.00011313899999999821, 0.00011340299999999803, 0.00011315299999999778, 0.00011279200000000045, 0.00011341700000000454, 0.00011243100000000311, 0.00011305600000000027, 0.0001129299999999972, 0.00011252800000000063, 0.00011267999999999695, 0.00011320800000000353, 0.00011288899999999796]</msg>
<status status="PASS" starttime="20201029 12:44:51.606" endtime="20201029 12:44:51.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.595" endtime="20201029 12:44:51.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.622" endtime="20201029 12:44:51.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.617" endtime="20201029 12:44:51.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.615" endtime="20201029 12:44:51.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.129" endtime="20201029 12:44:51.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.128" endtime="20201029 12:44:51.646"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.669" endtime="20201029 12:44:51.689"></status>
</kw>
<msg timestamp="20201029 12:44:51.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.665" endtime="20201029 12:44:51.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.693" endtime="20201029 12:44:51.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.699" endtime="20201029 12:44:51.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.658" endtime="20201029 12:44:51.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.653" endtime="20201029 12:44:51.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.722" endtime="20201029 12:44:52.058"></status>
</kw>
<msg timestamp="20201029 12:44:52.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038882903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038996569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.718" endtime="20201029 12:44:52.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038882903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038996569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.067" endtime="20201029 12:44:52.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.085" endtime="20201029 12:44:52.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.711" endtime="20201029 12:44:52.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.707" endtime="20201029 12:44:52.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.102" level="INFO">${RESULT} = [{'diff': 0.00011366599999999838}, {'diff': 0.00011391700000000504}, {'diff': 0.00011431900000000161}, {'diff': 0.00011356900000000086}, {'diff': 0.0001144299999999987}, {'diff': 0.0001135840000000068...</msg>
<status status="PASS" starttime="20201029 12:44:52.094" endtime="20201029 12:44:52.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.111" level="INFO">${ACCURACY} = {'diff': [0.00011366599999999838, 0.00011391700000000504, 0.00011431900000000161, 0.00011356900000000086, 0.0001144299999999987, 0.00011358400000000685, 0.00011433300000000118, 0.00011447200000000435,...</msg>
<status status="PASS" starttime="20201029 12:44:52.104" endtime="20201029 12:44:52.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.122" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.120" endtime="20201029 12:44:52.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.127" level="INFO">VALUE: [0.00011366599999999838, 0.00011391700000000504, 0.00011431900000000161, 0.00011356900000000086, 0.0001144299999999987, 0.00011358400000000685, 0.00011433300000000118, 0.00011447200000000435, 0.00011390299999999853, 0.00011373600000000317, 0.00011347199999999641, 0.00011369500000000393, 0.00011363900000000565, 0.00011377800000000188, 0.00011387500000000633, 0.00011436100000000032, 0.00011411199999999955, 0.00011436100000000032, 0.00011422199999999716, 0.00011430600000000152, 0.00011358300000000043, 0.00011376400000000231, 0.00011351400000000206, 0.00011431900000000161, 0.00011363899999999871, 0.00011391599999999863, 0.00011386099999999982, 0.00011419399999999802, 0.00011407000000000084, 0.00011354100000000172, 0.00011362499999999914, 0.00011415300000000572, 0.00011412499999999964, 0.00011358300000000043, 0.00011355600000000077, 0.00011438899999999946, 0.00011381899999999417, 0.00011365199999999881, 0.00011413899999999921, 0.00011434700000000075, 0.00011402799999999519, 0.00011413899999999921, 0.00011429200000000195, 0.00011341599999999813, 0.000113597, 0.00011362500000000608, 0.00011438899999999946, 0.00011412499999999964, 0.0001143749999999999, 0.00011431900000000161]</msg>
<status status="PASS" starttime="20201029 12:44:52.124" endtime="20201029 12:44:52.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.113" endtime="20201029 12:44:52.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.139" endtime="20201029 12:44:52.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.135" endtime="20201029 12:44:52.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.133" endtime="20201029 12:44:52.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.648" endtime="20201029 12:44:52.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.647" endtime="20201029 12:44:52.164"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.187" endtime="20201029 12:44:52.209"></status>
</kw>
<msg timestamp="20201029 12:44:52.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.183" endtime="20201029 12:44:52.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.212" endtime="20201029 12:44:52.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.218" endtime="20201029 12:44:52.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.176" endtime="20201029 12:44:52.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.171" endtime="20201029 12:44:52.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.241" endtime="20201029 12:44:52.574"></status>
</kw>
<msg timestamp="20201029 12:44:52.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040635, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:52.238" endtime="20201029 12:44:52.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040635, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:52.584" endtime="20201029 12:44:52.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.602" endtime="20201029 12:44:52.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.231" endtime="20201029 12:44:52.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.226" endtime="20201029 12:44:52.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.619" level="INFO">${RESULT} = [{'diff': 0.00011472199999999766}, {'diff': 0.00011457000000000134}, {'diff': 0.00011463899999999971}, {'diff': 0.00011458300000000143}, {'diff': 0.0001153750000000009}, {'diff': 0.0001151529999999997...</msg>
<status status="PASS" starttime="20201029 12:44:52.610" endtime="20201029 12:44:52.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.628" level="INFO">${ACCURACY} = {'diff': [0.00011472199999999766, 0.00011457000000000134, 0.00011463899999999971, 0.00011458300000000143, 0.0001153750000000009, 0.00011515299999999978, 0.0001145550000000023, 0.00011444400000000521, ...</msg>
<status status="PASS" starttime="20201029 12:44:52.621" endtime="20201029 12:44:52.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.638" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.636" endtime="20201029 12:44:52.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.643" level="INFO">VALUE: [0.00011472199999999766, 0.00011457000000000134, 0.00011463899999999971, 0.00011458300000000143, 0.0001153750000000009, 0.00011515299999999978, 0.0001145550000000023, 0.00011444400000000521, 0.00011533400000000166, 0.00011498600000000442, 0.00011494500000000518, 0.00011473600000000417, 0.0001153049999999961, 0.00011525000000000424, 0.00011454099999999579, 0.00011449999999999655, 0.00011538900000000046, 0.00011501299999999715, 0.00011457000000000134, 0.00011502800000000313, 0.00011538900000000046, 0.00011443099999999817, 0.00011533400000000166, 0.0001150420000000027, 0.00011523600000000467, 0.00011444399999999827, 0.00011540300000000003, 0.00011543099999999917, 0.00011472199999999766, 0.00011516699999999935, 0.00011511100000000107, 0.00011512500000000064, 0.00011444399999999827, 0.00011531899999999567, 0.00011484700000000125, 0.00011452799999999569, 0.00011509800000000098, 0.00011495800000000528, 0.00011493099999999867, 0.00011529200000000295, 0.00011519399999999902, 0.00011493099999999867, 0.00011504099999999629, 0.00011455600000000177, 0.0001152770000000039, 0.00011443099999999817, 0.00011527799999999644, 0.0001148750000000004, 0.00011466699999999885, 0.00011515299999999978]</msg>
<status status="PASS" starttime="20201029 12:44:52.641" endtime="20201029 12:44:52.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.629" endtime="20201029 12:44:52.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.657" endtime="20201029 12:44:52.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.651" endtime="20201029 12:44:52.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.649" endtime="20201029 12:44:52.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.166" endtime="20201029 12:44:52.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.165" endtime="20201029 12:44:52.682"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.704" endtime="20201029 12:44:52.725"></status>
</kw>
<msg timestamp="20201029 12:44:52.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.701" endtime="20201029 12:44:52.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.728" endtime="20201029 12:44:52.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.734" endtime="20201029 12:44:52.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.694" endtime="20201029 12:44:52.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.688" endtime="20201029 12:44:52.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.757" endtime="20201029 12:44:53.091"></status>
</kw>
<msg timestamp="20201029 12:44:53.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038811278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038926875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.754" endtime="20201029 12:44:53.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038811278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038926875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.101" endtime="20201029 12:44:53.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.118" endtime="20201029 12:44:53.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.747" endtime="20201029 12:44:53.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.742" endtime="20201029 12:44:53.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.135" level="INFO">${RESULT} = [{'diff': 0.000115597000000002}, {'diff': 0.00011549999999999755}, {'diff': 0.00011563900000000071}, {'diff': 0.00011634700000000275}, {'diff': 0.00011563900000000071}, {'diff': 0.00011627800000000438...</msg>
<status status="PASS" starttime="20201029 12:44:53.127" endtime="20201029 12:44:53.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:53.150" level="INFO">${ACCURACY} = {'diff': [0.000115597000000002, 0.00011549999999999755, 0.00011563900000000071, 0.00011634700000000275, 0.00011563900000000071, 0.00011627800000000438, 0.0001157499999999978, 0.00011613900000000121, 0...</msg>
<status status="PASS" starttime="20201029 12:44:53.137" endtime="20201029 12:44:53.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.161" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:53.158" endtime="20201029 12:44:53.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.166" level="INFO">VALUE: [0.000115597000000002, 0.00011549999999999755, 0.00011563900000000071, 0.00011634700000000275, 0.00011563900000000071, 0.00011627800000000438, 0.0001157499999999978, 0.00011613900000000121, 0.00011602800000000413, 0.00011563900000000071, 0.0001162499999999983, 0.0001159300000000002, 0.00011548599999999798, 0.00011613899999999427, 0.00011630599999999658, 0.00011640300000000103, 0.00011548599999999798, 0.00011606899999999643, 0.00011540300000000003, 0.00011582000000000259, 0.00011543099999999917, 0.00011562500000000114, 0.00011569399999999952, 0.00011559699999999506, 0.00011583400000000216, 0.00011579100000000397, 0.00011631999999999615, 0.00011636100000000232, 0.00011634700000000275, 0.00011626400000000481, 0.00011586100000000182, 0.00011594499999999924, 0.00011590300000000053, 0.00011594399999999977, 0.00011601399999999762, 0.00011605600000000327, 0.00011572199999999866, 0.0001160420000000037, 0.00011616700000000035, 0.00011608300000000293, 0.00011631900000000361, 0.00011599999999999805, 0.0001160420000000037, 0.00011631899999999668, 0.00011600000000000499, 0.00011622199999999916, 0.00011601399999999762, 0.0001155550000000033, 0.0001160970000000025, 0.00011537499999999395]</msg>
<status status="PASS" starttime="20201029 12:44:53.163" endtime="20201029 12:44:53.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.152" endtime="20201029 12:44:53.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.178" endtime="20201029 12:44:53.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.174" endtime="20201029 12:44:53.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.171" endtime="20201029 12:44:53.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.684" endtime="20201029 12:44:53.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.683" endtime="20201029 12:44:53.203"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.225" endtime="20201029 12:44:53.246"></status>
</kw>
<msg timestamp="20201029 12:44:53.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.222" endtime="20201029 12:44:53.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.249" endtime="20201029 12:44:53.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.255" endtime="20201029 12:44:53.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.215" endtime="20201029 12:44:53.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.209" endtime="20201029 12:44:53.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.278" endtime="20201029 12:44:53.612"></status>
</kw>
<msg timestamp="20201029 12:44:53.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038788778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038906056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.275" endtime="20201029 12:44:53.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038788778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038906056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.621" endtime="20201029 12:44:53.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.639" endtime="20201029 12:44:53.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.268" endtime="20201029 12:44:53.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.263" endtime="20201029 12:44:53.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.656" level="INFO">${RESULT} = [{'diff': 0.00011727799999999844}, {'diff': 0.00011687499999999545}, {'diff': 0.00011720800000000059}, {'diff': 0.00011645799999999984}, {'diff': 0.00011729200000000495}, {'diff': 0.000117346999999996...</msg>
<status status="PASS" starttime="20201029 12:44:53.648" endtime="20201029 12:44:53.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:53.667" level="INFO">${ACCURACY} = {'diff': [0.00011727799999999844, 0.00011687499999999545, 0.00011720800000000059, 0.00011645799999999984, 0.00011729200000000495, 0.00011734699999999681, 0.00011659699999999606, 0.00011722200000000016...</msg>
<status status="PASS" starttime="20201029 12:44:53.658" endtime="20201029 12:44:53.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.678" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:53.676" endtime="20201029 12:44:53.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.683" level="INFO">VALUE: [0.00011727799999999844, 0.00011687499999999545, 0.00011720800000000059, 0.00011645799999999984, 0.00011729200000000495, 0.00011734699999999681, 0.00011659699999999606, 0.00011722200000000016, 0.0001167499999999988, 0.00011720900000000006, 0.00011690300000000153, 0.00011713800000000274, 0.00011699999999999905, 0.00011740300000000203, 0.00011715300000000178, 0.00011655499999999736, 0.00011723599999999973, 0.000116597000000003, 0.0001171379999999958, 0.00011738900000000246, 0.00011734800000000323, 0.00011744400000000127, 0.0001167499999999988, 0.00011690199999999512, 0.00011741600000000213, 0.00011687499999999545, 0.00011711099999999613, 0.00011651400000000506, 0.0001166249999999952, 0.00011719500000000049, 0.00011693100000000067, 0.00011661099999999563, 0.00011640199999999462, 0.00011705599999999733, 0.00011683300000000368, 0.00011670799999999315, 0.00011705499999999786, 0.00011727799999999844, 0.000117082999999997, 0.00011673599999999923, 0.000117082999999997, 0.00011648599999999898, 0.00011654199999999726, 0.00011719400000000102, 0.00011655599999999683, 0.00011679199999999751, 0.00011688900000000196, 0.0001168750000000024, 0.00011647199999999941, 0.00011732000000000409]</msg>
<status status="PASS" starttime="20201029 12:44:53.680" endtime="20201029 12:44:53.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.669" endtime="20201029 12:44:53.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.695" endtime="20201029 12:44:53.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.691" endtime="20201029 12:44:53.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.689" endtime="20201029 12:44:53.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.205" endtime="20201029 12:44:53.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.204" endtime="20201029 12:44:53.720"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.742" endtime="20201029 12:44:53.763"></status>
</kw>
<msg timestamp="20201029 12:44:53.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.739" endtime="20201029 12:44:53.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.766" endtime="20201029 12:44:53.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.772" endtime="20201029 12:44:53.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.732" endtime="20201029 12:44:53.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.726" endtime="20201029 12:44:53.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.795" endtime="20201029 12:44:54.130"></status>
</kw>
<msg timestamp="20201029 12:44:54.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038749722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038868167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.792" endtime="20201029 12:44:54.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038749722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038868167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.139" endtime="20201029 12:44:54.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.157" endtime="20201029 12:44:54.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.785" endtime="20201029 12:44:54.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.780" endtime="20201029 12:44:54.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.174" level="INFO">${RESULT} = [{'diff': 0.00011844500000000174}, {'diff': 0.00011749999999999955}, {'diff': 0.00011805499999999886}, {'diff': 0.00011776399999999937}, {'diff': 0.00011788899999999602}, {'diff': 0.000117819999999997...</msg>
<status status="PASS" starttime="20201029 12:44:54.166" endtime="20201029 12:44:54.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.184" level="INFO">${ACCURACY} = {'diff': [0.00011844500000000174, 0.00011749999999999955, 0.00011805499999999886, 0.00011776399999999937, 0.00011788899999999602, 0.00011781999999999765, 0.00011816699999999541, 0.00011748699999999945...</msg>
<status status="PASS" starttime="20201029 12:44:54.177" endtime="20201029 12:44:54.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.194" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.192" endtime="20201029 12:44:54.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.199" level="INFO">VALUE: [0.00011844500000000174, 0.00011749999999999955, 0.00011805499999999886, 0.00011776399999999937, 0.00011788899999999602, 0.00011781999999999765, 0.00011816699999999541, 0.00011748699999999945, 0.0001183750000000039, 0.00011829099999999954, 0.00011802799999999919, 0.00011744400000000127, 0.00011781899999999818, 0.00011797200000000091, 0.00011749999999999955, 0.0001183049999999991, 0.00011797200000000091, 0.00011751399999999912, 0.00011838800000000399, 0.0001173750000000029, 0.00011768000000000195, 0.0001177369999999997, 0.00011819400000000202, 0.00011779099999999904, 0.00011780500000000554, 0.00011786099999999688, 0.00011823600000000073, 0.00011763899999999577, 0.0001177629999999999, 0.00011750000000000649, 0.00011806899999999843, 0.00011749999999999955, 0.00011805499999999886, 0.00011779200000000545, 0.00011806900000000536, 0.00011809800000000398, 0.00011800000000000005, 0.00011749999999999955, 0.00011776400000000631, 0.00011754199999999826, 0.0001183750000000039, 0.00011787499999999645, 0.00011798600000000048, 0.00011795900000000081, 0.00011758300000000443, 0.00011837499999999695, 0.00011833400000000466, 0.0001179300000000022, 0.0001177499999999998, 0.00011756900000000486]</msg>
<status status="PASS" starttime="20201029 12:44:54.196" endtime="20201029 12:44:54.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.185" endtime="20201029 12:44:54.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.212" endtime="20201029 12:44:54.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.207" endtime="20201029 12:44:54.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.205" endtime="20201029 12:44:54.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.722" endtime="20201029 12:44:54.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.721" endtime="20201029 12:44:54.237"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.259" endtime="20201029 12:44:54.281"></status>
</kw>
<msg timestamp="20201029 12:44:54.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.256" endtime="20201029 12:44:54.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.285" endtime="20201029 12:44:54.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.291" endtime="20201029 12:44:54.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.248" endtime="20201029 12:44:54.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.243" endtime="20201029 12:44:54.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.314" endtime="20201029 12:44:54.651"></status>
</kw>
<msg timestamp="20201029 12:44:54.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04050975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040629069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:54.310" endtime="20201029 12:44:54.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04050975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040629069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:54.660" endtime="20201029 12:44:54.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.678" endtime="20201029 12:44:54.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.303" endtime="20201029 12:44:54.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.299" endtime="20201029 12:44:54.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.695" level="INFO">${RESULT} = [{'diff': 0.00011931899999999968}, {'diff': 0.00011905599999999933}, {'diff': 0.00011906899999999943}, {'diff': 0.00011904100000000029}, {'diff': 0.0001184170000000026}, {'diff': 0.0001189310000000026...</msg>
<status status="PASS" starttime="20201029 12:44:54.686" endtime="20201029 12:44:54.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.704" level="INFO">${ACCURACY} = {'diff': [0.00011931899999999968, 0.00011905599999999933, 0.00011906899999999943, 0.00011904100000000029, 0.0001184170000000026, 0.00011893100000000267, 0.0001193750000000049, 0.00011872200000000166, ...</msg>
<status status="PASS" starttime="20201029 12:44:54.697" endtime="20201029 12:44:54.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.714" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.712" endtime="20201029 12:44:54.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.720" level="INFO">VALUE: [0.00011931899999999968, 0.00011905599999999933, 0.00011906899999999943, 0.00011904100000000029, 0.0001184170000000026, 0.00011893100000000267, 0.0001193750000000049, 0.00011872200000000166, 0.00011898599999999454, 0.00011851400000000012, 0.00011923600000000173, 0.000118597000000005, 0.000118695000000002, 0.00011840300000000303, 0.00011938900000000446, 0.00011926400000000087, 0.00011847300000000088, 0.00011937499999999795, 0.00011877700000000047, 0.00011877799999999994, 0.00011922200000000216, 0.00011861199999999711, 0.00011851400000000012, 0.00011913899999999727, 0.00011938900000000446, 0.00011863900000000371, 0.00011915300000000378, 0.00011883299999999875, 0.00011902800000000019, 0.0001184300000000027, 0.0001188750000000044, 0.0001191249999999977, 0.00011897200000000191, 0.00011931999999999915, 0.00011906899999999943, 0.00011920800000000259, 0.0001192500000000013, 0.00011918099999999598, 0.00011924999999999436, 0.00011852700000000022, 0.00011894399999999583, 0.00011852799999999969, 0.00011916700000000335, 0.00011936099999999839, 0.00011866600000000338, 0.0001185829999999985, 0.00011940199999999762, 0.00011912500000000464, 0.00011851300000000065, 0.00011894400000000277]</msg>
<status status="PASS" starttime="20201029 12:44:54.717" endtime="20201029 12:44:54.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.705" endtime="20201029 12:44:54.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.733" endtime="20201029 12:44:54.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.728" endtime="20201029 12:44:54.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.725" endtime="20201029 12:44:54.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.239" endtime="20201029 12:44:54.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.237" endtime="20201029 12:44:54.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.053" endtime="20201029 12:44:54.759"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:01.918" endtime="20201029 12:44:54.760" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.777" endtime="20201029 12:44:54.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.773" endtime="20201029 12:44:54.800"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.833" endtime="20201029 12:44:54.850"></status>
</kw>
<msg timestamp="20201029 12:44:54.852" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.829" endtime="20201029 12:44:54.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.854" endtime="20201029 12:44:54.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.864" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:54.860" endtime="20201029 12:44:54.865"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:54.822" endtime="20201029 12:44:54.867"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:54.816" endtime="20201029 12:44:54.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.813" endtime="20201029 12:44:54.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:54.877" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:54.875" endtime="20201029 12:44:54.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.871" endtime="20201029 12:44:54.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.812" endtime="20201029 12:44:54.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.810" endtime="20201029 12:44:54.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.880" endtime="20201029 12:44:54.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.806" endtime="20201029 12:44:54.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.802" endtime="20201029 12:44:54.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.771" endtime="20201029 12:44:54.887"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.913" endtime="20201029 12:44:54.930"></status>
</kw>
<msg timestamp="20201029 12:44:54.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.910" endtime="20201029 12:44:54.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.933" endtime="20201029 12:44:54.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.940" endtime="20201029 12:44:54.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.901" endtime="20201029 12:44:54.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.895" endtime="20201029 12:44:54.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.963" endtime="20201029 12:44:55.318"></status>
</kw>
<msg timestamp="20201029 12:44:55.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128335236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1283565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:54.960" endtime="20201029 12:44:55.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128335236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1283565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:55.327" endtime="20201029 12:44:55.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.346" endtime="20201029 12:44:55.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.953" endtime="20201029 12:44:55.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.948" endtime="20201029 12:44:55.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.363" level="INFO">${RESULT} = [{'diff': 2.1264000000020822e-05}, {'diff': 2.1750000000014813e-05}, {'diff': 2.1930000000003336e-05}, {'diff': 2.18610000000119e-05}, {'diff': 2.1236000000007804e-05}, {'diff': 2.1084000000004544e-05...</msg>
<status status="PASS" starttime="20201029 12:44:55.354" endtime="20201029 12:44:55.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.372" level="INFO">${ACCURACY} = {'diff': [2.1264000000020822e-05, 2.1750000000014813e-05, 2.1930000000003336e-05, 2.18610000000119e-05, 2.1236000000007804e-05, 2.1084000000004544e-05, 2.1583999999991166e-05, 2.1070000000011913e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:55.365" endtime="20201029 12:44:55.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.383" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.381" endtime="20201029 12:44:55.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.390" level="INFO">VALUE: [2.1264000000020822e-05, 2.1750000000014813e-05, 2.1930000000003336e-05, 2.18610000000119e-05, 2.1236000000007804e-05, 2.1084000000004544e-05, 2.1583999999991166e-05, 2.1070000000011913e-05, 2.1680000000023902e-05, 2.1582999999991692e-05, 2.1582999999991692e-05, 2.143099999998843e-05, 2.1582999999991692e-05, 2.191700000001018e-05, 2.1735999999994426e-05, 2.0902000000017074e-05, 2.1319999999991346e-05, 2.1583999999991166e-05, 2.1569999999998535e-05, 2.1236000000007804e-05, 2.0916999999981423e-05, 2.1722000000001795e-05, 2.123599999998005e-05, 2.1236000000007804e-05, 2.1735999999994426e-05, 2.1236000000007804e-05, 2.1596999999984323e-05, 2.1583999999991166e-05, 2.1415999999996327e-05, 2.14169999999958e-05, 2.1736000000022182e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.1430000000016713e-05, 2.1916999999982423e-05, 2.161100000000471e-05, 2.1223000000014647e-05, 2.1375000000017907e-05, 2.1097999999997175e-05, 2.1791999999992706e-05, 2.1902999999989792e-05, 2.1402999999975414e-05, 2.1263999999993066e-05, 2.108300000000507e-05, 2.188899999999716e-05, 2.140300000000317e-05, 2.108300000000507e-05, 2.1250000000000435e-05, 2.188899999999716e-05, 2.1902000000018074e-05]</msg>
<status status="PASS" starttime="20201029 12:44:55.387" endtime="20201029 12:44:55.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.374" endtime="20201029 12:44:55.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.401" endtime="20201029 12:44:55.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.397" endtime="20201029 12:44:55.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.395" endtime="20201029 12:44:55.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.891" endtime="20201029 12:44:55.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.890" endtime="20201029 12:44:55.427"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.449" endtime="20201029 12:44:55.467"></status>
</kw>
<msg timestamp="20201029 12:44:55.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.446" endtime="20201029 12:44:55.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.470" endtime="20201029 12:44:55.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.476" endtime="20201029 12:44:55.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.439" endtime="20201029 12:44:55.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.433" endtime="20201029 12:44:55.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.499" endtime="20201029 12:44:55.845"></status>
</kw>
<msg timestamp="20201029 12:44:55.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040478903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.496" endtime="20201029 12:44:55.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040478903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.854" endtime="20201029 12:44:55.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.873" endtime="20201029 12:44:55.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.489" endtime="20201029 12:44:55.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.484" endtime="20201029 12:44:55.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.890" level="INFO">${RESULT} = [{'diff': 2.1458000000001975e-05}, {'diff': 2.1083999999997605e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.1083999999997605e-05}, {'diff': 2.1250000000000435e-...</msg>
<status status="PASS" starttime="20201029 12:44:55.881" endtime="20201029 12:44:55.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.901" level="INFO">${ACCURACY} = {'diff': [2.1458000000001975e-05, 2.1083999999997605e-05, 2.1750000000000935e-05, 2.1250000000000435e-05, 2.1083999999997605e-05, 2.1250000000000435e-05, 2.1236000000000865e-05, 2.1250000000000435e-05...</msg>
<status status="PASS" starttime="20201029 12:44:55.892" endtime="20201029 12:44:55.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.912" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.909" endtime="20201029 12:44:55.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.917" level="INFO">VALUE: [2.1458000000001975e-05, 2.1083999999997605e-05, 2.1750000000000935e-05, 2.1250000000000435e-05, 2.1083999999997605e-05, 2.1250000000000435e-05, 2.1236000000000865e-05, 2.1250000000000435e-05, 2.10969999999977e-05, 2.111099999999727e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.129099999999967e-05, 2.144500000000188e-05, 2.1750000000000935e-05, 2.1916000000003766e-05, 2.1764000000000505e-05, 2.19169999999963e-05, 2.108299999999813e-05, 2.1722000000001795e-05, 2.109700000000464e-05, 2.113899999999641e-05, 2.1250000000000435e-05, 2.158299999999863e-05, 2.158300000000557e-05, 2.1569999999998535e-05, 2.158299999999863e-05, 2.140299999999623e-05, 2.1249999999993496e-05, 2.158299999999863e-05, 2.1236000000000865e-05, 2.104099999999942e-05, 2.19169999999963e-05, 2.1041999999998895e-05, 2.1402000000003696e-05, 2.158299999999863e-05, 2.126300000000053e-05, 2.1250000000000435e-05, 2.1750000000000935e-05, 2.140300000000317e-05, 2.1056000000005404e-05, 2.1915999999996827e-05, 2.1055999999998465e-05, 2.1555999999998965e-05, 2.130499999999924e-05, 2.1584000000005044e-05, 2.187499999999759e-05, 2.1555999999998965e-05, 2.19169999999963e-05, 2.108299999999813e-05]</msg>
<status status="PASS" starttime="20201029 12:44:55.914" endtime="20201029 12:44:55.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.903" endtime="20201029 12:44:55.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.928" endtime="20201029 12:44:55.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.924" endtime="20201029 12:44:55.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.922" endtime="20201029 12:44:55.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.429" endtime="20201029 12:44:55.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.427" endtime="20201029 12:44:55.954"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.977" endtime="20201029 12:44:55.993"></status>
</kw>
<msg timestamp="20201029 12:44:55.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.973" endtime="20201029 12:44:55.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.996" endtime="20201029 12:44:56.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.003" endtime="20201029 12:44:56.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.966" endtime="20201029 12:44:56.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.960" endtime="20201029 12:44:56.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.026" endtime="20201029 12:44:56.363"></status>
</kw>
<msg timestamp="20201029 12:44:56.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040039028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.022" endtime="20201029 12:44:56.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040039028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.373" endtime="20201029 12:44:56.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.392" endtime="20201029 12:44:56.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.015" endtime="20201029 12:44:56.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.011" endtime="20201029 12:44:56.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.410" level="INFO">${RESULT} = [{'diff': 2.188899999999716e-05}, {'diff': 2.1262999999993593e-05}, {'diff': 2.1429999999995897e-05}, {'diff': 2.136100000000446e-05}, {'diff': 2.187500000000453e-05}, {'diff': 2.1972000000002045e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:56.401" endtime="20201029 12:44:56.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.421" level="INFO">${ACCURACY} = {'diff': [2.188899999999716e-05, 2.1262999999993593e-05, 2.1429999999995897e-05, 2.136100000000446e-05, 2.187500000000453e-05, 2.1972000000002045e-05, 2.1069999999998035e-05, 2.1750000000000935e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:56.412" endtime="20201029 12:44:56.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.432" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.430" endtime="20201029 12:44:56.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.438" level="INFO">VALUE: [2.188899999999716e-05, 2.1262999999993593e-05, 2.1429999999995897e-05, 2.136100000000446e-05, 2.187500000000453e-05, 2.1972000000002045e-05, 2.1069999999998035e-05, 2.1750000000000935e-05, 2.1250000000000435e-05, 2.190299999999673e-05, 2.158299999999863e-05, 2.190300000000367e-05, 2.091700000000224e-05, 2.1583999999998105e-05, 2.1055999999998465e-05, 2.1415999999996327e-05, 2.1250000000000435e-05, 2.140299999999623e-05, 2.1305999999998715e-05, 2.1291999999999145e-05, 2.19169999999963e-05, 2.1569999999998535e-05, 2.1736000000001365e-05, 2.108299999999813e-05, 2.1084000000004544e-05, 2.1750000000000935e-05, 2.188899999999716e-05, 2.1652000000003946e-05, 2.140299999999623e-05, 2.1736000000001365e-05, 2.140299999999623e-05, 2.1778000000000075e-05, 2.1013999999999755e-05, 2.091700000000224e-05, 2.1708000000002226e-05, 2.158299999999863e-05, 2.106899999999856e-05, 2.1236000000000865e-05, 2.1055999999998465e-05, 2.08890000000031e-05, 2.163900000000385e-05, 2.1916000000003766e-05, 2.109700000000464e-05, 2.161100000000471e-05, 2.1943999999995967e-05, 2.173700000000084e-05, 2.190300000000367e-05, 2.1750000000000935e-05, 2.158299999999863e-05, 2.1056000000005404e-05]</msg>
<status status="PASS" starttime="20201029 12:44:56.434" endtime="20201029 12:44:56.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.423" endtime="20201029 12:44:56.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.449" endtime="20201029 12:44:56.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.445" endtime="20201029 12:44:56.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.443" endtime="20201029 12:44:56.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.956" endtime="20201029 12:44:56.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.954" endtime="20201029 12:44:56.475"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.498" endtime="20201029 12:44:56.513"></status>
</kw>
<msg timestamp="20201029 12:44:56.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.494" endtime="20201029 12:44:56.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.516" endtime="20201029 12:44:56.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.522" endtime="20201029 12:44:56.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.487" endtime="20201029 12:44:56.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.481" endtime="20201029 12:44:56.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.546" endtime="20201029 12:44:56.885"></status>
</kw>
<msg timestamp="20201029 12:44:56.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040172694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040194611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.542" endtime="20201029 12:44:56.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040172694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040194611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.895" endtime="20201029 12:44:56.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.914" endtime="20201029 12:44:56.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.535" endtime="20201029 12:44:56.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.530" endtime="20201029 12:44:56.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.931" level="INFO">${RESULT} = [{'diff': 2.19169999999963e-05}, {'diff': 2.1236000000000865e-05}, {'diff': 2.15969999999982e-05}, {'diff': 2.1249999999993496e-05}, {'diff': 2.140299999999623e-05}, {'diff': 2.105499999999899e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:56.922" endtime="20201029 12:44:56.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.941" level="INFO">${ACCURACY} = {'diff': [2.19169999999963e-05, 2.1236000000000865e-05, 2.15969999999982e-05, 2.1249999999993496e-05, 2.140299999999623e-05, 2.105499999999899e-05, 2.1764000000000505e-05, 2.1736000000001365e-05, 2.12...</msg>
<status status="PASS" starttime="20201029 12:44:56.933" endtime="20201029 12:44:56.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.952" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.949" endtime="20201029 12:44:56.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.957" level="INFO">VALUE: [2.19169999999963e-05, 2.1236000000000865e-05, 2.15969999999982e-05, 2.1249999999993496e-05, 2.140299999999623e-05, 2.105499999999899e-05, 2.1764000000000505e-05, 2.1736000000001365e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.1055999999998465e-05, 2.15969999999982e-05, 2.141700000000274e-05, 2.193100000000281e-05, 2.1750000000000935e-05, 2.140299999999623e-05, 2.158299999999863e-05, 2.1236000000000865e-05, 2.1250000000000435e-05, 2.1957999999995537e-05, 2.1264000000000005e-05, 2.191700000000324e-05, 2.190299999999673e-05, 2.1070000000004974e-05, 2.106899999999856e-05, 2.190299999999673e-05, 2.193100000000281e-05, 2.1208000000001725e-05, 2.1764000000000505e-05, 2.1929999999996397e-05, 2.1707999999995287e-05, 2.106899999999856e-05, 2.1250000000000435e-05, 2.1584000000005044e-05, 2.108299999999813e-05, 2.188899999999716e-05, 2.1736000000001365e-05, 2.190300000000367e-05, 2.140300000000317e-05, 2.1778000000000075e-05, 2.1250000000000435e-05, 2.1916000000003766e-05, 2.14169999999958e-05, 2.1348000000004363e-05, 2.173700000000084e-05, 2.1887999999997687e-05, 2.190299999999673e-05, 2.1264000000000005e-05, 2.17369999999939e-05, 2.1083999999997605e-05]</msg>
<status status="PASS" starttime="20201029 12:44:56.954" endtime="20201029 12:44:57.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.942" endtime="20201029 12:44:57.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.025" endtime="20201029 12:44:57.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.021" endtime="20201029 12:44:57.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.018" endtime="20201029 12:44:57.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.477" endtime="20201029 12:44:57.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.476" endtime="20201029 12:44:57.050"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.073" endtime="20201029 12:44:57.090"></status>
</kw>
<msg timestamp="20201029 12:44:57.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.070" endtime="20201029 12:44:57.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.093" endtime="20201029 12:44:57.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.099" endtime="20201029 12:44:57.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.062" endtime="20201029 12:44:57.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.057" endtime="20201029 12:44:57.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.123" endtime="20201029 12:44:57.461"></status>
</kw>
<msg timestamp="20201029 12:44:57.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041306792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041327889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.119" endtime="20201029 12:44:57.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041306792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041327889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.470" endtime="20201029 12:44:57.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.488" endtime="20201029 12:44:57.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.112" endtime="20201029 12:44:57.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.107" endtime="20201029 12:44:57.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.505" level="INFO">${RESULT} = [{'diff': 2.10969999999977e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.14169999999958e-05}, {'diff': 2.159700000000514e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.1597999999997675e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:57.497" endtime="20201029 12:44:57.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.515" level="INFO">${ACCURACY} = {'diff': [2.10969999999977e-05, 2.1250000000000435e-05, 2.14169999999958e-05, 2.159700000000514e-05, 2.10969999999977e-05, 2.1597999999997675e-05, 2.1458000000001975e-05, 2.112500000000378e-05, 2.1041...</msg>
<status status="PASS" starttime="20201029 12:44:57.507" endtime="20201029 12:44:57.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.525" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.523" endtime="20201029 12:44:57.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.531" level="INFO">VALUE: [2.10969999999977e-05, 2.1250000000000435e-05, 2.14169999999958e-05, 2.159700000000514e-05, 2.10969999999977e-05, 2.1597999999997675e-05, 2.1458000000001975e-05, 2.112500000000378e-05, 2.1041999999998895e-05, 2.108299999999813e-05, 2.191700000000324e-05, 2.1083999999997605e-05, 2.1250000000000435e-05, 2.109700000000464e-05, 2.1915999999996827e-05, 2.1264000000000005e-05, 2.1943999999995967e-05, 2.143100000000231e-05, 2.1736000000001365e-05, 2.1764000000000505e-05, 2.1236000000000865e-05, 2.1764000000000505e-05, 2.1527999999999825e-05, 2.1069999999998035e-05, 2.1250000000000435e-05, 2.1069999999998035e-05, 2.163900000000385e-05, 2.1944000000002906e-05, 2.091700000000224e-05, 2.1847999999997925e-05, 2.136099999999752e-05, 2.111100000000421e-05, 2.141700000000274e-05, 2.1750000000000935e-05, 2.1250000000000435e-05, 2.115299999999598e-05, 2.1750000000000935e-05, 2.1848000000004864e-05, 2.140299999999623e-05, 2.108299999999813e-05, 2.193100000000281e-05, 2.1584000000005044e-05, 2.138899999999666e-05, 2.1958000000002476e-05, 2.112499999999684e-05, 2.1277999999999575e-05, 2.108299999999813e-05, 2.1944000000002906e-05, 2.1583999999998105e-05, 2.1583999999998105e-05]</msg>
<status status="PASS" starttime="20201029 12:44:57.528" endtime="20201029 12:44:57.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.516" endtime="20201029 12:44:57.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.544" endtime="20201029 12:44:57.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.539" endtime="20201029 12:44:57.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.536" endtime="20201029 12:44:57.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.052" endtime="20201029 12:44:57.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.051" endtime="20201029 12:44:57.569"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.592" endtime="20201029 12:44:57.607"></status>
</kw>
<msg timestamp="20201029 12:44:57.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.588" endtime="20201029 12:44:57.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.610" endtime="20201029 12:44:57.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.616" endtime="20201029 12:44:57.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.581" endtime="20201029 12:44:57.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.576" endtime="20201029 12:44:57.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.639" endtime="20201029 12:44:57.971"></status>
</kw>
<msg timestamp="20201029 12:44:57.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039152056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039172944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.636" endtime="20201029 12:44:57.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039152056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039172944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.981" endtime="20201029 12:44:57.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.000" endtime="20201029 12:44:58.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.629" endtime="20201029 12:44:58.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.624" endtime="20201029 12:44:58.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.017" level="INFO">${RESULT} = [{'diff': 2.0888000000003626e-05}, {'diff': 2.156899999999906e-05}, {'diff': 2.190300000000367e-05}, {'diff': 2.10690000000055e-05}, {'diff': 2.1443999999995467e-05}, {'diff': 2.1569999999998535e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:58.008" endtime="20201029 12:44:58.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.032" level="INFO">${ACCURACY} = {'diff': [2.0888000000003626e-05, 2.156899999999906e-05, 2.190300000000367e-05, 2.10690000000055e-05, 2.1443999999995467e-05, 2.1569999999998535e-05, 2.0916000000002766e-05, 2.1221999999994356e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:58.019" endtime="20201029 12:44:58.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.042" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.040" endtime="20201029 12:44:58.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.048" level="INFO">VALUE: [2.0888000000003626e-05, 2.156899999999906e-05, 2.190300000000367e-05, 2.10690000000055e-05, 2.1443999999995467e-05, 2.1569999999998535e-05, 2.0916000000002766e-05, 2.1221999999994356e-05, 2.087499999999659e-05, 2.10969999999977e-05, 2.1764000000000505e-05, 2.179100000000017e-05, 2.1929999999996397e-05, 2.105499999999899e-05, 2.1736000000001365e-05, 2.1750000000000935e-05, 2.1722000000001795e-05, 2.1250000000000435e-05, 2.1415999999996327e-05, 2.190299999999673e-05, 2.1083999999997605e-05, 2.12770000000001e-05, 2.1901999999997257e-05, 2.1764000000000505e-05, 2.161099999999777e-05, 2.1584000000005044e-05, 2.19169999999963e-05, 2.159700000000514e-05, 2.144500000000188e-05, 2.10969999999977e-05, 2.1222000000001295e-05, 2.1070000000004974e-05, 2.1569999999998535e-05, 2.156899999999906e-05, 2.145900000000145e-05, 2.090300000000267e-05, 2.1583999999998105e-05, 2.191700000000324e-05, 2.190300000000367e-05, 2.140300000000317e-05, 2.1514000000000255e-05, 2.1430000000002836e-05, 2.1569000000006e-05, 2.10969999999977e-05, 2.1555999999998965e-05, 2.190299999999673e-05, 2.172300000000127e-05, 2.1902000000004196e-05, 2.193100000000281e-05, 2.1764000000000505e-05]</msg>
<status status="PASS" starttime="20201029 12:44:58.045" endtime="20201029 12:44:58.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.033" endtime="20201029 12:44:58.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.060" endtime="20201029 12:44:58.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.056" endtime="20201029 12:44:58.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.053" endtime="20201029 12:44:58.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.571" endtime="20201029 12:44:58.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.570" endtime="20201029 12:44:58.085"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.107" endtime="20201029 12:44:58.122"></status>
</kw>
<msg timestamp="20201029 12:44:58.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.104" endtime="20201029 12:44:58.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.125" endtime="20201029 12:44:58.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.131" endtime="20201029 12:44:58.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.097" endtime="20201029 12:44:58.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.091" endtime="20201029 12:44:58.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.154" endtime="20201029 12:44:58.488"></status>
</kw>
<msg timestamp="20201029 12:44:58.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038815931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038837653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.151" endtime="20201029 12:44:58.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038815931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038837653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.498" endtime="20201029 12:44:58.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.516" endtime="20201029 12:44:58.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.144" endtime="20201029 12:44:58.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.139" endtime="20201029 12:44:58.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.533" level="INFO">${RESULT} = [{'diff': 2.1722000000001795e-05}, {'diff': 2.140300000000317e-05}, {'diff': 2.190300000000367e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.13890000000036e-05}, {'diff': 2.159700000000514e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:58.524" endtime="20201029 12:44:58.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.544" level="INFO">${ACCURACY} = {'diff': [2.1722000000001795e-05, 2.140300000000317e-05, 2.190300000000367e-05, 2.1750000000000935e-05, 2.13890000000036e-05, 2.159700000000514e-05, 2.10690000000055e-05, 2.19169999999963e-05, 2.14029...</msg>
<status status="PASS" starttime="20201029 12:44:58.535" endtime="20201029 12:44:58.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.555" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.553" endtime="20201029 12:44:58.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.560" level="INFO">VALUE: [2.1722000000001795e-05, 2.140300000000317e-05, 2.190300000000367e-05, 2.1750000000000935e-05, 2.13890000000036e-05, 2.159700000000514e-05, 2.10690000000055e-05, 2.19169999999963e-05, 2.140299999999623e-05, 2.1250000000000435e-05, 2.108299999999813e-05, 2.105499999999899e-05, 2.195900000000195e-05, 2.19169999999963e-05, 2.1721999999994857e-05, 2.19169999999963e-05, 2.108300000000507e-05, 2.1250000000000435e-05, 2.1708000000002226e-05, 2.158299999999863e-05, 2.180499999999974e-05, 2.115299999999598e-05, 2.137499999999709e-05, 2.1264000000000005e-05, 2.1236000000000865e-05, 2.158299999999863e-05, 2.17090000000017e-05, 2.1750000000000935e-05, 2.105499999999899e-05, 2.1597999999997675e-05, 2.1749999999993996e-05, 2.119500000000163e-05, 2.1764000000000505e-05, 2.111100000000421e-05, 2.134699999999795e-05, 2.1735999999994426e-05, 2.15969999999982e-05, 2.1597999999997675e-05, 2.1070000000004974e-05, 2.1597999999997675e-05, 2.1264000000000005e-05, 2.158299999999863e-05, 2.1458000000001975e-05, 2.143100000000231e-05, 2.141700000000274e-05, 2.1250000000000435e-05, 2.2014000000000755e-05, 2.108300000000507e-05, 2.1264000000000005e-05, 2.12770000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:44:58.557" endtime="20201029 12:44:58.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.546" endtime="20201029 12:44:58.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.572" endtime="20201029 12:44:58.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.568" endtime="20201029 12:44:58.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.566" endtime="20201029 12:44:58.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.087" endtime="20201029 12:44:58.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.086" endtime="20201029 12:44:58.597"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.619" endtime="20201029 12:44:58.635"></status>
</kw>
<msg timestamp="20201029 12:44:58.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.616" endtime="20201029 12:44:58.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.638" endtime="20201029 12:44:58.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.644" endtime="20201029 12:44:58.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.609" endtime="20201029 12:44:58.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.604" endtime="20201029 12:44:58.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.667" endtime="20201029 12:44:59.003"></status>
</kw>
<msg timestamp="20201029 12:44:59.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038953125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038981861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.664" endtime="20201029 12:44:59.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038953125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038981861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.013" endtime="20201029 12:44:59.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.031" endtime="20201029 12:44:59.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.657" endtime="20201029 12:44:59.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.652" endtime="20201029 12:44:59.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.048" level="INFO">${RESULT} = [{'diff': 2.8736000000001427e-05}, {'diff': 2.8736000000001427e-05}, {'diff': 2.8069999999998096e-05}, {'diff': 2.8735999999994488e-05}, {'diff': 2.863900000000391e-05}, {'diff': 2.8749999999994058e-0...</msg>
<status status="PASS" starttime="20201029 12:44:59.039" endtime="20201029 12:44:59.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.058" level="INFO">${ACCURACY} = {'diff': [2.8736000000001427e-05, 2.8736000000001427e-05, 2.8069999999998096e-05, 2.8735999999994488e-05, 2.863900000000391e-05, 2.8749999999994058e-05, 2.8735999999994488e-05, 2.8236000000000927e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:59.050" endtime="20201029 12:44:59.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.068" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.066" endtime="20201029 12:44:59.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.074" level="INFO">VALUE: [2.8736000000001427e-05, 2.8736000000001427e-05, 2.8069999999998096e-05, 2.8735999999994488e-05, 2.863900000000391e-05, 2.8749999999994058e-05, 2.8735999999994488e-05, 2.8236000000000927e-05, 2.8568999999999123e-05, 2.8068999999998623e-05, 2.82370000000004e-05, 2.8902999999996792e-05, 2.8040999999999483e-05, 2.840300000000323e-05, 2.8055999999998527e-05, 2.8514000000000317e-05, 2.8374999999997152e-05, 2.811100000000427e-05, 2.893100000000287e-05, 2.8040999999999483e-05, 2.8569999999998597e-05, 2.8444999999995002e-05, 2.8180000000002647e-05, 2.8750000000000997e-05, 2.8902999999996792e-05, 2.89170000000033e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8555999999999027e-05, 2.8944999999995502e-05, 2.8000000000000247e-05, 2.890300000000373e-05, 2.8236000000000927e-05, 2.8764000000000567e-05, 2.8110999999997333e-05, 2.8263000000000593e-05, 2.8736000000001427e-05, 2.8250000000000497e-05, 2.8416000000003327e-05, 2.822300000000083e-05, 2.838900000000366e-05, 2.8082999999998193e-05, 2.8555999999999027e-05, 2.8610999999997833e-05, 2.841599999999639e-05, 2.8068999999998623e-05, 2.8569000000006062e-05, 2.8902999999996792e-05, 2.894399999999603e-05, 2.84170000000028e-05]</msg>
<status status="PASS" starttime="20201029 12:44:59.071" endtime="20201029 12:44:59.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.060" endtime="20201029 12:44:59.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.086" endtime="20201029 12:44:59.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.082" endtime="20201029 12:44:59.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.079" endtime="20201029 12:44:59.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.599" endtime="20201029 12:44:59.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.598" endtime="20201029 12:44:59.111"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.133" endtime="20201029 12:44:59.150"></status>
</kw>
<msg timestamp="20201029 12:44:59.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.130" endtime="20201029 12:44:59.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.153" endtime="20201029 12:44:59.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.159" endtime="20201029 12:44:59.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.123" endtime="20201029 12:44:59.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.117" endtime="20201029 12:44:59.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.182" endtime="20201029 12:44:59.516"></status>
</kw>
<msg timestamp="20201029 12:44:59.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040261611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040290222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.179" endtime="20201029 12:44:59.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040261611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040290222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.526" endtime="20201029 12:44:59.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.544" endtime="20201029 12:44:59.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.172" endtime="20201029 12:44:59.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.167" endtime="20201029 12:44:59.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.561" level="INFO">${RESULT} = [{'diff': 2.8610999999997833e-05}, {'diff': 2.888799999999775e-05}, {'diff': 2.8568999999999123e-05}, {'diff': 2.890199999999732e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.8554999999999553e-05...</msg>
<status status="PASS" starttime="20201029 12:44:59.553" endtime="20201029 12:44:59.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.571" level="INFO">${ACCURACY} = {'diff': [2.8610999999997833e-05, 2.888799999999775e-05, 2.8568999999999123e-05, 2.890199999999732e-05, 2.8750000000000997e-05, 2.8554999999999553e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:59.564" endtime="20201029 12:44:59.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.581" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.579" endtime="20201029 12:44:59.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.587" level="INFO">VALUE: [2.8610999999997833e-05, 2.888799999999775e-05, 2.8568999999999123e-05, 2.890199999999732e-05, 2.8750000000000997e-05, 2.8554999999999553e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.8041999999998957e-05, 2.8054999999999053e-05, 2.840300000000323e-05, 2.8083999999997666e-05, 2.8236000000000927e-05, 2.8388999999996722e-05, 2.84170000000028e-05, 2.8916999999996362e-05, 2.8346999999998013e-05, 2.8291000000006672e-05, 2.8388999999996722e-05, 2.8346999999998013e-05, 2.8374999999997152e-05, 2.840199999999682e-05, 2.8972000000002107e-05, 2.8736000000001427e-05, 2.8722000000001857e-05, 2.8236000000000927e-05, 2.89170000000033e-05, 2.888900000000416e-05, 2.8888999999997222e-05, 2.8041999999998957e-05, 2.8402999999996292e-05, 2.8082999999998193e-05, 2.8054999999999053e-05, 2.8944000000002967e-05, 2.8554999999999553e-05, 2.8236000000000927e-05, 2.8736000000001427e-05, 2.8583999999998166e-05, 2.8736000000001427e-05, 2.8055999999998527e-05, 2.840300000000323e-05, 2.8069999999998096e-05, 2.8888999999997222e-05, 2.8069999999998096e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8346999999998013e-05, 2.822300000000083e-05, 2.8888999999997222e-05]</msg>
<status status="PASS" starttime="20201029 12:44:59.584" endtime="20201029 12:44:59.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.572" endtime="20201029 12:44:59.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.601" endtime="20201029 12:44:59.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.595" endtime="20201029 12:44:59.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.593" endtime="20201029 12:44:59.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.113" endtime="20201029 12:44:59.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.112" endtime="20201029 12:44:59.626"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.648" endtime="20201029 12:44:59.663"></status>
</kw>
<msg timestamp="20201029 12:44:59.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.645" endtime="20201029 12:44:59.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.666" endtime="20201029 12:44:59.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.673" endtime="20201029 12:44:59.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.637" endtime="20201029 12:44:59.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.632" endtime="20201029 12:44:59.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.696" endtime="20201029 12:45:00.082"></status>
</kw>
<msg timestamp="20201029 12:45:00.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039025681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039054042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.692" endtime="20201029 12:45:00.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039025681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039054042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.096" endtime="20201029 12:45:00.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.132" endtime="20201029 12:45:00.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.685" endtime="20201029 12:45:00.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.681" endtime="20201029 12:45:00.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.165" level="INFO">${RESULT} = [{'diff': 2.8360999999997583e-05}, {'diff': 2.892999999999646e-05}, {'diff': 2.8055999999998527e-05}, {'diff': 2.8084000000004605e-05}, {'diff': 2.8570000000005535e-05}, {'diff': 2.8402999999996292e-0...</msg>
<status status="PASS" starttime="20201029 12:45:00.150" endtime="20201029 12:45:00.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.178" level="INFO">${ACCURACY} = {'diff': [2.8360999999997583e-05, 2.892999999999646e-05, 2.8055999999998527e-05, 2.8084000000004605e-05, 2.8570000000005535e-05, 2.8402999999996292e-05, 2.8736000000001427e-05, 2.8027999999999387e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:00.167" endtime="20201029 12:45:00.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.190" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.188" endtime="20201029 12:45:00.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.196" level="INFO">VALUE: [2.8360999999997583e-05, 2.892999999999646e-05, 2.8055999999998527e-05, 2.8084000000004605e-05, 2.8570000000005535e-05, 2.8402999999996292e-05, 2.8736000000001427e-05, 2.8027999999999387e-05, 2.8888999999997222e-05, 2.89579999999956e-05, 2.8708999999994822e-05, 2.8069999999998096e-05, 2.8638999999996972e-05, 2.84579999999951e-05, 2.8070000000005035e-05, 2.8569999999998597e-05, 2.85970000000052e-05, 2.8916999999996362e-05, 2.890300000000373e-05, 2.8568999999999123e-05, 2.843100000000237e-05, 2.8569999999998597e-05, 2.8458999999994572e-05, 2.8069999999998096e-05, 2.8902999999996792e-05, 2.890300000000373e-05, 2.8638999999996972e-05, 2.891599999999689e-05, 2.8722000000001857e-05, 2.8040999999999483e-05, 2.8582999999998693e-05, 2.8902999999996792e-05, 2.808300000000513e-05, 2.8568999999999123e-05, 2.895900000000201e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.89170000000033e-05, 2.8402999999996292e-05, 2.840300000000323e-05, 2.8818999999999373e-05, 2.8416000000003327e-05, 2.8026999999999913e-05, 2.8082999999998193e-05, 2.8082999999998193e-05, 2.8569999999998597e-05, 2.8527999999999887e-05, 2.8374999999997152e-05, 2.87370000000009e-05, 2.8124999999996902e-05]</msg>
<status status="PASS" starttime="20201029 12:45:00.193" endtime="20201029 12:45:00.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.181" endtime="20201029 12:45:00.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.208" endtime="20201029 12:45:00.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.204" endtime="20201029 12:45:00.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.202" endtime="20201029 12:45:00.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.628" endtime="20201029 12:45:00.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.626" endtime="20201029 12:45:00.233"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.255" endtime="20201029 12:45:00.271"></status>
</kw>
<msg timestamp="20201029 12:45:00.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.252" endtime="20201029 12:45:00.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.274" endtime="20201029 12:45:00.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.280" endtime="20201029 12:45:00.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.245" endtime="20201029 12:45:00.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.239" endtime="20201029 12:45:00.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.304" endtime="20201029 12:45:00.640"></status>
</kw>
<msg timestamp="20201029 12:45:00.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039034069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039062306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.301" endtime="20201029 12:45:00.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039034069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039062306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.650" endtime="20201029 12:45:00.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.668" endtime="20201029 12:45:00.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.293" endtime="20201029 12:45:00.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.288" endtime="20201029 12:45:00.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.685" level="INFO">${RESULT} = [{'diff': 2.82370000000004e-05}, {'diff': 2.8736000000001427e-05}, {'diff': 2.8402999999996292e-05}, {'diff': 2.8070000000005035e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.8068999999998623e-05...</msg>
<status status="PASS" starttime="20201029 12:45:00.676" endtime="20201029 12:45:00.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.696" level="INFO">${ACCURACY} = {'diff': [2.82370000000004e-05, 2.8736000000001427e-05, 2.8402999999996292e-05, 2.8070000000005035e-05, 2.8750000000000997e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.8888999999997222e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:00.687" endtime="20201029 12:45:00.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.707" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.705" endtime="20201029 12:45:00.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.712" level="INFO">VALUE: [2.82370000000004e-05, 2.8736000000001427e-05, 2.8402999999996292e-05, 2.8070000000005035e-05, 2.8750000000000997e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.8888999999997222e-05, 2.8236000000000927e-05, 2.8583999999998166e-05, 2.8582999999998693e-05, 2.8736000000001427e-05, 2.858300000000563e-05, 2.8569999999998597e-05, 2.838900000000366e-05, 2.8236000000000927e-05, 2.8069999999998096e-05, 2.8068999999998623e-05, 2.8555999999999027e-05, 2.8041999999998957e-05, 2.8222000000001357e-05, 2.8582999999998693e-05, 2.8652999999996542e-05, 2.813900000000341e-05, 2.7986000000000677e-05, 2.8236000000000927e-05, 2.8416000000003327e-05, 2.8554999999999553e-05, 2.8069000000005562e-05, 2.8402999999996292e-05, 2.808300000000513e-05, 2.8596999999998263e-05, 2.8250000000000497e-05, 2.840300000000323e-05, 2.8569999999998597e-05, 2.8556000000005966e-05, 2.8569999999998597e-05, 2.8596999999998263e-05, 2.8764000000000567e-05, 2.8902999999996792e-05, 2.8708000000002287e-05, 2.8584000000005105e-05, 2.8388000000004188e-05, 2.8069999999998096e-05, 2.9000000000001247e-05, 2.8250000000000497e-05, 2.8263000000000593e-05, 2.8568999999999123e-05, 2.8902000000004258e-05, 2.8804999999999803e-05]</msg>
<status status="PASS" starttime="20201029 12:45:00.709" endtime="20201029 12:45:00.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.698" endtime="20201029 12:45:00.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.725" endtime="20201029 12:45:00.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.720" endtime="20201029 12:45:00.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.718" endtime="20201029 12:45:00.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.235" endtime="20201029 12:45:00.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.234" endtime="20201029 12:45:00.749"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.772" endtime="20201029 12:45:00.787"></status>
</kw>
<msg timestamp="20201029 12:45:00.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.768" endtime="20201029 12:45:00.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.790" endtime="20201029 12:45:00.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.797" endtime="20201029 12:45:00.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.761" endtime="20201029 12:45:00.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.756" endtime="20201029 12:45:00.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.819" endtime="20201029 12:45:01.154"></status>
</kw>
<msg timestamp="20201029 12:45:01.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039041806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039070042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.816" endtime="20201029 12:45:01.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039041806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039070042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.163" endtime="20201029 12:45:01.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.182" endtime="20201029 12:45:01.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.809" endtime="20201029 12:45:01.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.805" endtime="20201029 12:45:01.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.199" level="INFO">${RESULT} = [{'diff': 2.8236000000000927e-05}, {'diff': 2.8722000000001857e-05}, {'diff': 2.8054999999999053e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.840300000000323e-05}, {'diff': 2.8805999999999277e-0...</msg>
<status status="PASS" starttime="20201029 12:45:01.190" endtime="20201029 12:45:01.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.208" level="INFO">${ACCURACY} = {'diff': [2.8236000000000927e-05, 2.8722000000001857e-05, 2.8054999999999053e-05, 2.8750000000000997e-05, 2.840300000000323e-05, 2.8805999999999277e-05, 2.8736000000001427e-05, 2.8236000000000927e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:01.201" endtime="20201029 12:45:01.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.219" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.217" endtime="20201029 12:45:01.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.224" level="INFO">VALUE: [2.8236000000000927e-05, 2.8722000000001857e-05, 2.8054999999999053e-05, 2.8750000000000997e-05, 2.840300000000323e-05, 2.8805999999999277e-05, 2.8736000000001427e-05, 2.8236000000000927e-05, 2.8402999999996292e-05, 2.8569999999998597e-05, 2.890300000000373e-05, 2.89170000000033e-05, 2.837500000000409e-05, 2.8569999999998597e-05, 2.8236000000000927e-05, 2.89170000000033e-05, 2.8096999999997763e-05, 2.84170000000028e-05, 2.8068999999998623e-05, 2.8069999999998096e-05, 2.8582999999998693e-05, 2.8541999999999457e-05, 2.8902999999996792e-05, 2.8250000000000497e-05, 2.813900000000341e-05, 2.8070000000005035e-05, 2.840300000000323e-05, 2.8736000000001427e-05, 2.8388999999996722e-05, 2.8736000000001427e-05, 2.8750000000000997e-05, 2.8069999999998096e-05, 2.8070000000005035e-05, 2.89170000000033e-05, 2.8041999999998957e-05, 2.8068999999998623e-05, 2.8249999999993558e-05, 2.8388999999996722e-05, 2.8722000000001857e-05, 2.8847999999997986e-05, 2.8902000000004258e-05, 2.8582999999998693e-05, 2.8236000000000927e-05, 2.8402000000003758e-05, 2.8582999999998693e-05, 2.8721999999994918e-05, 2.8388999999996722e-05, 2.8750000000000997e-05, 2.8736000000001427e-05, 2.837500000000409e-05]</msg>
<status status="PASS" starttime="20201029 12:45:01.221" endtime="20201029 12:45:01.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.210" endtime="20201029 12:45:01.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.237" endtime="20201029 12:45:01.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.232" endtime="20201029 12:45:01.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.230" endtime="20201029 12:45:01.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.752" endtime="20201029 12:45:01.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.750" endtime="20201029 12:45:01.262"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.284" endtime="20201029 12:45:01.301"></status>
</kw>
<msg timestamp="20201029 12:45:01.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.281" endtime="20201029 12:45:01.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.304" endtime="20201029 12:45:01.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.310" endtime="20201029 12:45:01.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.274" endtime="20201029 12:45:01.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.268" endtime="20201029 12:45:01.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.334" endtime="20201029 12:45:01.686"></status>
</kw>
<msg timestamp="20201029 12:45:01.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040671694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040700097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.330" endtime="20201029 12:45:01.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040671694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040700097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.696" endtime="20201029 12:45:01.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.714" endtime="20201029 12:45:01.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.323" endtime="20201029 12:45:01.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.318" endtime="20201029 12:45:01.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.731" level="INFO">${RESULT} = [{'diff': 2.8402999999996292e-05}, {'diff': 2.8082999999998193e-05}, {'diff': 2.8013999999999817e-05}, {'diff': 2.8054999999999053e-05}, {'diff': 2.8249999999993558e-05}, {'diff': 2.8902999999996792e-...</msg>
<status status="PASS" starttime="20201029 12:45:01.723" endtime="20201029 12:45:01.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.741" level="INFO">${ACCURACY} = {'diff': [2.8402999999996292e-05, 2.8082999999998193e-05, 2.8013999999999817e-05, 2.8054999999999053e-05, 2.8249999999993558e-05, 2.8902999999996792e-05, 2.8902999999996792e-05, 2.8736000000001427e-05...</msg>
<status status="PASS" starttime="20201029 12:45:01.733" endtime="20201029 12:45:01.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.751" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.749" endtime="20201029 12:45:01.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.757" level="INFO">VALUE: [2.8402999999996292e-05, 2.8082999999998193e-05, 2.8013999999999817e-05, 2.8054999999999053e-05, 2.8249999999993558e-05, 2.8902999999996792e-05, 2.8902999999996792e-05, 2.8736000000001427e-05, 2.840300000000323e-05, 2.8138999999996472e-05, 2.8222000000001357e-05, 2.858300000000563e-05, 2.8569999999998597e-05, 2.8388999999996722e-05, 2.8236000000000927e-05, 2.8069999999998096e-05, 2.8250000000000497e-05, 2.8888999999997222e-05, 2.8221999999994418e-05, 2.8722000000001857e-05, 2.8736000000001427e-05, 2.8735999999994488e-05, 2.8040999999999483e-05, 2.8722000000001857e-05, 2.8069999999998096e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.8000000000000247e-05, 2.8236000000000927e-05, 2.8721999999994918e-05, 2.89170000000033e-05, 2.8110999999997333e-05, 2.8222000000001357e-05, 2.8541999999999457e-05, 2.8068999999998623e-05, 2.8208000000001787e-05, 2.8554999999999553e-05, 2.8222000000001357e-05, 2.8374999999997152e-05, 2.8110999999997333e-05, 2.8040999999999483e-05, 2.8040999999999483e-05, 2.836100000000452e-05, 2.8070000000005035e-05, 2.8791999999999707e-05, 2.8736000000001427e-05, 2.8902999999996792e-05, 2.818100000000212e-05, 2.8736000000001427e-05, 2.844500000000194e-05]</msg>
<status status="PASS" starttime="20201029 12:45:01.754" endtime="20201029 12:45:01.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.742" endtime="20201029 12:45:01.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.770" endtime="20201029 12:45:01.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.765" endtime="20201029 12:45:01.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.762" endtime="20201029 12:45:01.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.264" endtime="20201029 12:45:01.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.263" endtime="20201029 12:45:01.796"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.818" endtime="20201029 12:45:01.834"></status>
</kw>
<msg timestamp="20201029 12:45:01.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.815" endtime="20201029 12:45:01.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.837" endtime="20201029 12:45:01.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.843" endtime="20201029 12:45:01.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.808" endtime="20201029 12:45:01.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.802" endtime="20201029 12:45:01.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.866" endtime="20201029 12:45:02.201"></status>
</kw>
<msg timestamp="20201029 12:45:02.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039677167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039706056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.863" endtime="20201029 12:45:02.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039677167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039706056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.210" endtime="20201029 12:45:02.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.228" endtime="20201029 12:45:02.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.856" endtime="20201029 12:45:02.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.851" endtime="20201029 12:45:02.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.245" level="INFO">${RESULT} = [{'diff': 2.888900000000416e-05}, {'diff': 2.888900000000416e-05}, {'diff': 2.8068999999998623e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.822300000000083e-05}, {'diff': 2.8555999999999027e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:02.237" endtime="20201029 12:45:02.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.256" level="INFO">${ACCURACY} = {'diff': [2.888900000000416e-05, 2.888900000000416e-05, 2.8068999999998623e-05, 2.8222000000001357e-05, 2.822300000000083e-05, 2.8555999999999027e-05, 2.822300000000083e-05, 2.8736000000001427e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:45:02.247" endtime="20201029 12:45:02.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.267" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.265" endtime="20201029 12:45:02.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.272" level="INFO">VALUE: [2.888900000000416e-05, 2.888900000000416e-05, 2.8068999999998623e-05, 2.8222000000001357e-05, 2.822300000000083e-05, 2.8555999999999027e-05, 2.822300000000083e-05, 2.8736000000001427e-05, 2.8041999999998957e-05, 2.8222000000001357e-05, 2.8874999999997653e-05, 2.838900000000366e-05, 2.8736000000001427e-05, 2.8054999999999053e-05, 2.8569000000006062e-05, 2.8554999999999553e-05, 2.8068999999998623e-05, 2.8902999999996792e-05, 2.858300000000563e-05, 2.8110999999997333e-05, 2.8236000000000927e-05, 2.888900000000416e-05, 2.8402999999996292e-05, 2.8722999999994392e-05, 2.8402000000003758e-05, 2.8124999999996902e-05, 2.8846999999998513e-05, 2.8290999999999733e-05, 2.8416999999995862e-05, 2.8568999999999123e-05, 2.8569999999998597e-05, 2.8430999999995432e-05, 2.8250000000000497e-05, 2.866700000000305e-05, 2.8514000000000317e-05, 2.8860999999998083e-05, 2.818100000000212e-05, 2.808300000000513e-05, 2.840300000000323e-05, 2.8582999999998693e-05, 2.858300000000563e-05, 2.8277999999999637e-05, 2.8222000000001357e-05, 2.8222999999993892e-05, 2.8166000000003077e-05, 2.8916999999996362e-05, 2.890300000000373e-05, 2.8055999999998527e-05, 2.87370000000009e-05, 2.822300000000083e-05]</msg>
<status status="PASS" starttime="20201029 12:45:02.269" endtime="20201029 12:45:02.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.258" endtime="20201029 12:45:02.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.308" endtime="20201029 12:45:02.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.304" endtime="20201029 12:45:02.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.302" endtime="20201029 12:45:02.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.798" endtime="20201029 12:45:02.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.797" endtime="20201029 12:45:02.333"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.356" endtime="20201029 12:45:02.372"></status>
</kw>
<msg timestamp="20201029 12:45:02.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.352" endtime="20201029 12:45:02.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.375" endtime="20201029 12:45:02.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.382" endtime="20201029 12:45:02.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.345" endtime="20201029 12:45:02.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.340" endtime="20201029 12:45:02.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.406" endtime="20201029 12:45:02.743"></status>
</kw>
<msg timestamp="20201029 12:45:02.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039357972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039393181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.402" endtime="20201029 12:45:02.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039357972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039393181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.753" endtime="20201029 12:45:02.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.772" endtime="20201029 12:45:02.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.395" endtime="20201029 12:45:02.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.390" endtime="20201029 12:45:02.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.789" level="INFO">${RESULT} = [{'diff': 3.520900000000132e-05}, {'diff': 3.5902999999996854e-05}, {'diff': 3.5888999999997284e-05}, {'diff': 3.570900000000182e-05}, {'diff': 3.50700000000051e-05}, {'diff': 3.5666999999996174e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:02.780" endtime="20201029 12:45:02.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.800" level="INFO">${ACCURACY} = {'diff': [3.520900000000132e-05, 3.5902999999996854e-05, 3.5888999999997284e-05, 3.570900000000182e-05, 3.50700000000051e-05, 3.5666999999996174e-05, 3.556999999999866e-05, 3.555599999999909e-05, 3.50...</msg>
<status status="PASS" starttime="20201029 12:45:02.791" endtime="20201029 12:45:02.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.811" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.809" endtime="20201029 12:45:02.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.816" level="INFO">VALUE: [3.520900000000132e-05, 3.5902999999996854e-05, 3.5888999999997284e-05, 3.570900000000182e-05, 3.50700000000051e-05, 3.5666999999996174e-05, 3.556999999999866e-05, 3.555599999999909e-05, 3.505600000000553e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.5860999999998144e-05, 3.538900000000372e-05, 3.555599999999909e-05, 3.5416999999995924e-05, 3.575000000000106e-05, 3.588900000000422e-05, 3.5332999999998504e-05, 3.572300000000139e-05, 3.590199999999738e-05, 3.555600000000603e-05, 3.519500000000175e-05, 3.5360999999997644e-05, 3.505599999999859e-05, 3.5040999999999545e-05, 3.5222999999993954e-05, 3.591599999999695e-05, 3.5874999999997714e-05, 3.5374999999997214e-05, 3.5568999999999185e-05, 3.520900000000132e-05, 3.5388999999996784e-05, 3.575000000000106e-05, 3.5388999999996784e-05, 3.588900000000422e-05, 3.537500000000415e-05, 3.538799999999731e-05, 3.523700000000046e-05, 3.5874999999997714e-05, 3.5138999999996534e-05, 3.523600000000099e-05, 3.505599999999859e-05, 3.5736999999994024e-05, 3.573600000000149e-05, 3.538900000000372e-05, 3.520800000000185e-05, 3.505599999999859e-05, 3.5874999999997714e-05, 3.538800000000425e-05, 3.522200000000142e-05]</msg>
<status status="PASS" starttime="20201029 12:45:02.813" endtime="20201029 12:45:02.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.802" endtime="20201029 12:45:02.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.829" endtime="20201029 12:45:02.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.825" endtime="20201029 12:45:02.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.822" endtime="20201029 12:45:02.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.335" endtime="20201029 12:45:02.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.334" endtime="20201029 12:45:02.854"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.877" endtime="20201029 12:45:02.892"></status>
</kw>
<msg timestamp="20201029 12:45:02.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.873" endtime="20201029 12:45:02.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.896" endtime="20201029 12:45:02.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.902" endtime="20201029 12:45:02.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.866" endtime="20201029 12:45:02.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.860" endtime="20201029 12:45:02.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.925" endtime="20201029 12:45:03.269"></status>
</kw>
<msg timestamp="20201029 12:45:03.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039676, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039711903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:02.922" endtime="20201029 12:45:03.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039676, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039711903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:03.279" endtime="20201029 12:45:03.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.298" endtime="20201029 12:45:03.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.915" endtime="20201029 12:45:03.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.910" endtime="20201029 12:45:03.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.315" level="INFO">${RESULT} = [{'diff': 3.5902999999996854e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.5832999999999005e-05}, {'diff': 3.498600000000074e-05}, {'diff': 3.570900000000182e-05}, {'diff': 3.538900000000372e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:03.306" endtime="20201029 12:45:03.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.324" level="INFO">${ACCURACY} = {'diff': [3.5902999999996854e-05, 3.526400000000013e-05, 3.5832999999999005e-05, 3.498600000000074e-05, 3.570900000000182e-05, 3.538900000000372e-05, 3.537500000000415e-05, 3.505599999999859e-05, 3.55...</msg>
<status status="PASS" starttime="20201029 12:45:03.317" endtime="20201029 12:45:03.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.335" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.333" endtime="20201029 12:45:03.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.341" level="INFO">VALUE: [3.5902999999996854e-05, 3.526400000000013e-05, 3.5832999999999005e-05, 3.498600000000074e-05, 3.570900000000182e-05, 3.538900000000372e-05, 3.537500000000415e-05, 3.505599999999859e-05, 3.55700000000056e-05, 3.556999999999866e-05, 3.568100000000268e-05, 3.604200000000002e-05, 3.538900000000372e-05, 3.5902999999996854e-05, 3.5388999999996784e-05, 3.523600000000099e-05, 3.5568999999999185e-05, 3.5402999999996354e-05, 3.586100000000508e-05, 3.5541000000000045e-05, 3.5888999999997284e-05, 3.5874999999997714e-05, 3.5568999999999185e-05, 3.573599999999455e-05, 3.5568999999999185e-05, 3.525000000000056e-05, 3.575000000000106e-05, 3.5138999999996534e-05, 3.573600000000149e-05, 3.576400000000063e-05, 3.5888999999997284e-05, 3.5096999999997824e-05, 3.5068999999998685e-05, 3.5554999999999615e-05, 3.572199999999498e-05, 3.5888999999997284e-05, 3.5388999999996784e-05, 3.5708999999994884e-05, 3.504199999999902e-05, 3.511100000000433e-05, 3.523599999999405e-05, 3.540300000000329e-05, 3.538900000000372e-05, 3.575000000000106e-05, 3.591700000000336e-05, 3.5054999999999115e-05, 3.569500000000225e-05, 3.572200000000192e-05, 3.5360999999997644e-05, 3.505599999999859e-05]</msg>
<status status="PASS" starttime="20201029 12:45:03.337" endtime="20201029 12:45:03.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.326" endtime="20201029 12:45:03.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.353" endtime="20201029 12:45:03.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.349" endtime="20201029 12:45:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.346" endtime="20201029 12:45:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.856" endtime="20201029 12:45:03.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.855" endtime="20201029 12:45:03.378"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.404" endtime="20201029 12:45:03.422"></status>
</kw>
<msg timestamp="20201029 12:45:03.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.399" endtime="20201029 12:45:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.426" endtime="20201029 12:45:03.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.433" endtime="20201029 12:45:03.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.390" endtime="20201029 12:45:03.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.385" endtime="20201029 12:45:03.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.462" endtime="20201029 12:45:03.851"></status>
</kw>
<msg timestamp="20201029 12:45:03.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045194764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0452305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:03.457" endtime="20201029 12:45:03.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045194764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0452305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:03.860" endtime="20201029 12:45:03.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.879" endtime="20201029 12:45:03.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.447" endtime="20201029 12:45:03.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.441" endtime="20201029 12:45:03.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.897" level="INFO">${RESULT} = [{'diff': 3.573600000000149e-05}, {'diff': 3.5568999999999185e-05}, {'diff': 3.558399999999823e-05}, {'diff': 3.523599999999405e-05}, {'diff': 3.5040999999999545e-05}, {'diff': 3.5554999999999615e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:03.888" endtime="20201029 12:45:03.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.907" level="INFO">${ACCURACY} = {'diff': [3.573600000000149e-05, 3.5568999999999185e-05, 3.558399999999823e-05, 3.523599999999405e-05, 3.5040999999999545e-05, 3.5554999999999615e-05, 3.5388999999996784e-05, 3.5568999999999185e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:45:03.899" endtime="20201029 12:45:03.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.918" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.915" endtime="20201029 12:45:03.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.923" level="INFO">VALUE: [3.573600000000149e-05, 3.5568999999999185e-05, 3.558399999999823e-05, 3.523599999999405e-05, 3.5040999999999545e-05, 3.5554999999999615e-05, 3.5388999999996784e-05, 3.5568999999999185e-05, 3.5888999999997284e-05, 3.522200000000142e-05, 3.555600000000603e-05, 3.522200000000142e-05, 3.588799999999781e-05, 3.522200000000142e-05, 3.588799999999781e-05, 3.506999999999816e-05, 3.590300000000379e-05, 3.5416999999995924e-05, 3.5888999999997284e-05, 3.572199999999498e-05, 3.5874999999997714e-05, 3.501399999999988e-05, 3.538900000000372e-05, 3.575000000000106e-05, 3.505599999999859e-05, 3.522200000000142e-05, 3.523600000000099e-05, 3.590200000000432e-05, 3.519400000000228e-05, 3.541599999999645e-05, 3.5888999999997284e-05, 3.5360999999997644e-05, 3.523600000000099e-05, 3.570799999999541e-05, 3.572200000000192e-05, 3.5208999999994384e-05, 3.5082999999998254e-05, 3.554199999999952e-05, 3.5568999999999185e-05, 3.5040999999999545e-05, 3.505599999999859e-05, 3.556999999999866e-05, 3.523600000000099e-05, 3.587500000000465e-05, 3.551400000000038e-05, 3.5402999999996354e-05, 3.516700000000261e-05, 3.504200000000596e-05, 3.5388999999996784e-05, 3.551400000000038e-05]</msg>
<status status="PASS" starttime="20201029 12:45:03.920" endtime="20201029 12:45:03.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.909" endtime="20201029 12:45:03.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.937" endtime="20201029 12:45:03.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.932" endtime="20201029 12:45:03.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.929" endtime="20201029 12:45:03.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.380" endtime="20201029 12:45:03.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.379" endtime="20201029 12:45:03.963"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.986" endtime="20201029 12:45:04.004"></status>
</kw>
<msg timestamp="20201029 12:45:04.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.982" endtime="20201029 12:45:04.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.008" endtime="20201029 12:45:04.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.014" endtime="20201029 12:45:04.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.975" endtime="20201029 12:45:04.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.969" endtime="20201029 12:45:04.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.037" endtime="20201029 12:45:04.389"></status>
</kw>
<msg timestamp="20201029 12:45:04.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040335653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040370958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.034" endtime="20201029 12:45:04.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040335653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040370958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.401" endtime="20201029 12:45:04.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.423" endtime="20201029 12:45:04.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.027" endtime="20201029 12:45:04.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.022" endtime="20201029 12:45:04.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.445" level="INFO">${RESULT} = [{'diff': 3.5304999999999365e-05}, {'diff': 3.573600000000149e-05}, {'diff': 3.504199999999902e-05}, {'diff': 3.5916999999996424e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.5068999999998685e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:04.435" endtime="20201029 12:45:04.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.457" level="INFO">${ACCURACY} = {'diff': [3.5304999999999365e-05, 3.573600000000149e-05, 3.504199999999902e-05, 3.5916999999996424e-05, 3.501399999999988e-05, 3.5068999999998685e-05, 3.588900000000422e-05, 3.540300000000329e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 12:45:04.448" endtime="20201029 12:45:04.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.468" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.466" endtime="20201029 12:45:04.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.474" level="INFO">VALUE: [3.5304999999999365e-05, 3.573600000000149e-05, 3.504199999999902e-05, 3.5916999999996424e-05, 3.501399999999988e-05, 3.5068999999998685e-05, 3.588900000000422e-05, 3.540300000000329e-05, 3.5040999999999545e-05, 3.5332999999998504e-05, 3.534700000000501e-05, 3.5082999999998254e-05, 3.555600000000603e-05, 3.597199999999523e-05, 3.525000000000056e-05, 3.506999999999816e-05, 3.522199999999448e-05, 3.5416999999995924e-05, 3.5388999999996784e-05, 3.544399999999559e-05, 3.5888999999997284e-05, 3.602800000000045e-05, 3.505599999999859e-05, 3.523600000000099e-05, 3.5888999999997284e-05, 3.506999999999816e-05, 3.590300000000379e-05, 3.504199999999902e-05, 3.522199999999448e-05, 3.5888999999997284e-05, 3.508300000000519e-05, 3.5569000000006123e-05, 3.572200000000192e-05, 3.552799999999995e-05, 3.572200000000192e-05, 3.56250000000044e-05, 3.575000000000106e-05, 3.524999999999362e-05, 3.5902999999996854e-05, 3.541700000000286e-05, 3.505599999999859e-05, 3.523599999999405e-05, 3.590300000000379e-05, 3.590199999999738e-05, 3.523600000000099e-05, 3.590200000000432e-05, 3.522199999999448e-05, 3.590300000000379e-05, 3.570800000000235e-05, 3.590300000000379e-05]</msg>
<status status="PASS" starttime="20201029 12:45:04.471" endtime="20201029 12:45:04.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.459" endtime="20201029 12:45:04.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.487" endtime="20201029 12:45:04.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.482" endtime="20201029 12:45:04.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.480" endtime="20201029 12:45:04.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.965" endtime="20201029 12:45:04.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.964" endtime="20201029 12:45:04.512"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.535" endtime="20201029 12:45:04.551"></status>
</kw>
<msg timestamp="20201029 12:45:04.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.531" endtime="20201029 12:45:04.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.554" endtime="20201029 12:45:04.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.561" endtime="20201029 12:45:04.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.524" endtime="20201029 12:45:04.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.518" endtime="20201029 12:45:04.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.586" endtime="20201029 12:45:04.923"></status>
</kw>
<msg timestamp="20201029 12:45:04.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040104486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040139875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.583" endtime="20201029 12:45:04.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040104486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040139875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.932" endtime="20201029 12:45:04.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.951" endtime="20201029 12:45:04.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.575" endtime="20201029 12:45:04.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.571" endtime="20201029 12:45:04.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.969" level="INFO">${RESULT} = [{'diff': 3.5388999999996784e-05}, {'diff': 3.534799999999755e-05}, {'diff': 3.522300000000089e-05}, {'diff': 3.599999999999437e-05}, {'diff': 3.548600000000124e-05}, {'diff': 3.555599999999909e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:04.959" endtime="20201029 12:45:04.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.981" level="INFO">${ACCURACY} = {'diff': [3.5388999999996784e-05, 3.534799999999755e-05, 3.522300000000089e-05, 3.599999999999437e-05, 3.548600000000124e-05, 3.555599999999909e-05, 3.591600000000389e-05, 3.522199999999448e-05, 3.556...</msg>
<status status="PASS" starttime="20201029 12:45:04.972" endtime="20201029 12:45:04.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.992" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.990" endtime="20201029 12:45:04.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.997" level="INFO">VALUE: [3.5388999999996784e-05, 3.534799999999755e-05, 3.522300000000089e-05, 3.599999999999437e-05, 3.548600000000124e-05, 3.555599999999909e-05, 3.591600000000389e-05, 3.522199999999448e-05, 3.5568999999999185e-05, 3.5902999999996854e-05, 3.5874999999997714e-05, 3.570800000000235e-05, 3.5874999999997714e-05, 3.5374999999997214e-05, 3.572199999999498e-05, 3.5388999999996784e-05, 3.5568999999999185e-05, 3.555599999999909e-05, 3.5388999999996784e-05, 3.522200000000142e-05, 3.522200000000142e-05, 3.522200000000142e-05, 3.5568999999999185e-05, 3.5054999999999115e-05, 3.5860999999998144e-05, 3.605599999999959e-05, 3.558399999999823e-05, 3.505599999999859e-05, 3.5040999999999545e-05, 3.5445000000002e-05, 3.520800000000185e-05, 3.520800000000185e-05, 3.538799999999731e-05, 3.5902999999996854e-05, 3.5388999999996784e-05, 3.5874999999997714e-05, 3.500000000000031e-05, 3.548600000000124e-05, 3.555599999999909e-05, 3.55700000000056e-05, 3.536100000000458e-05, 3.573600000000149e-05, 3.550000000000081e-05, 3.537500000000415e-05, 3.5554999999999615e-05, 3.572200000000192e-05, 3.595900000000207e-05, 3.505599999999859e-05, 3.591700000000336e-05, 3.573600000000149e-05]</msg>
<status status="PASS" starttime="20201029 12:45:04.994" endtime="20201029 12:45:04.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.983" endtime="20201029 12:45:05.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.010" endtime="20201029 12:45:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.006" endtime="20201029 12:45:05.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.003" endtime="20201029 12:45:05.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.514" endtime="20201029 12:45:05.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.513" endtime="20201029 12:45:05.035"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.058" endtime="20201029 12:45:05.074"></status>
</kw>
<msg timestamp="20201029 12:45:05.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.054" endtime="20201029 12:45:05.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.077" endtime="20201029 12:45:05.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.083" endtime="20201029 12:45:05.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.047" endtime="20201029 12:45:05.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.041" endtime="20201029 12:45:05.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.107" endtime="20201029 12:45:05.447"></status>
</kw>
<msg timestamp="20201029 12:45:05.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039857458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039892861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.103" endtime="20201029 12:45:05.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039857458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039892861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.457" endtime="20201029 12:45:05.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.476" endtime="20201029 12:45:05.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.096" endtime="20201029 12:45:05.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.091" endtime="20201029 12:45:05.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.494" level="INFO">${RESULT} = [{'diff': 3.540300000000329e-05}, {'diff': 3.520800000000185e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.537500000000415e-05}, {'diff': 3.5554999999999615e-05}, {'diff': 3.5888999999997284e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:05.485" endtime="20201029 12:45:05.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:05.504" level="INFO">${ACCURACY} = {'diff': [3.540300000000329e-05, 3.520800000000185e-05, 3.555599999999909e-05, 3.537500000000415e-05, 3.5554999999999615e-05, 3.5888999999997284e-05, 3.520799999999491e-05, 3.552799999999995e-05, 3.53...</msg>
<status status="PASS" starttime="20201029 12:45:05.496" endtime="20201029 12:45:05.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.515" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:45:05.513" endtime="20201029 12:45:05.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.521" level="INFO">VALUE: [3.540300000000329e-05, 3.520800000000185e-05, 3.555599999999909e-05, 3.537500000000415e-05, 3.5554999999999615e-05, 3.5888999999997284e-05, 3.520799999999491e-05, 3.552799999999995e-05, 3.534700000000501e-05, 3.604200000000002e-05, 3.5902999999996854e-05, 3.573600000000149e-05, 3.572200000000192e-05, 3.588900000000422e-05, 3.5888999999997284e-05, 3.5582999999998755e-05, 3.5068999999998685e-05, 3.5541000000000045e-05, 3.605599999999959e-05, 3.522200000000142e-05, 3.554199999999952e-05, 3.5068999999998685e-05, 3.5360999999997644e-05, 3.566700000000311e-05, 3.5568999999999185e-05, 3.5541000000000045e-05, 3.59450000000025e-05, 3.5388999999996784e-05, 3.555599999999909e-05, 3.5374999999997214e-05, 3.573600000000149e-05, 3.523600000000099e-05, 3.572200000000192e-05, 3.5554999999999615e-05, 3.555599999999909e-05, 3.542999999999602e-05, 3.522300000000089e-05, 3.575000000000106e-05, 3.555599999999909e-05, 3.591700000000336e-05, 3.569500000000225e-05, 3.550000000000081e-05, 3.587500000000465e-05, 3.5846999999998574e-05, 3.5402999999996354e-05, 3.5040999999999545e-05, 3.522300000000089e-05, 3.5402999999996354e-05, 3.554200000000646e-05, 3.5208999999994384e-05]</msg>
<status status="PASS" starttime="20201029 12:45:05.517" endtime="20201029 12:45:05.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.506" endtime="20201029 12:45:05.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.536" endtime="20201029 12:45:05.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.531" endtime="20201029 12:45:05.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.528" endtime="20201029 12:45:05.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.037" endtime="20201029 12:45:05.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.036" endtime="20201029 12:45:05.563"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.589" endtime="20201029 12:45:05.606"></status>
</kw>
<msg timestamp="20201029 12:45:05.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.586" endtime="20201029 12:45:05.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.610" endtime="20201029 12:45:05.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.616" endtime="20201029 12:45:05.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.578" endtime="20201029 12:45:05.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.571" endtime="20201029 12:45:05.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.640" endtime="20201029 12:45:05.978"></status>
</kw>
<msg timestamp="20201029 12:45:05.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046033875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046069625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.636" endtime="20201029 12:45:05.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046033875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046069625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.988" endtime="20201029 12:45:06.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.006" endtime="20201029 12:45:06.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.629" endtime="20201029 12:45:06.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.624" endtime="20201029 12:45:06.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.024" level="INFO">${RESULT} = [{'diff': 3.575000000000106e-05}, {'diff': 3.569400000000278e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.531999999999841e-05}, {'diff': 3.536199999999712e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:06.015" endtime="20201029 12:45:06.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:06.033" level="INFO">${ACCURACY} = {'diff': [3.575000000000106e-05, 3.569400000000278e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.531999999999841e-05, 3.536199999999712e-05, 3.502799999999945e-05, 3.572200000000192e-05, 3.5777...</msg>
<status status="PASS" starttime="20201029 12:45:06.026" endtime="20201029 12:45:06.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.044" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:45:06.042" endtime="20201029 12:45:06.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.049" level="INFO">VALUE: [3.575000000000106e-05, 3.569400000000278e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.531999999999841e-05, 3.536199999999712e-05, 3.502799999999945e-05, 3.572200000000192e-05, 3.5777000000000725e-05, 3.572200000000192e-05, 3.520800000000185e-05, 3.590300000000379e-05, 3.5388999999996784e-05, 3.556999999999866e-05, 3.519500000000175e-05, 3.591700000000336e-05, 3.5930999999995994e-05, 3.497200000000117e-05, 3.506999999999816e-05, 3.505599999999859e-05, 3.569500000000225e-05, 3.522200000000142e-05, 3.5888999999997284e-05, 3.520799999999491e-05, 3.556999999999866e-05, 3.572200000000192e-05, 3.506999999999816e-05, 3.554199999999952e-05, 3.569399999999584e-05, 3.5888999999997284e-05, 3.568100000000268e-05, 3.604200000000002e-05, 3.5860999999998144e-05, 3.552799999999995e-05, 3.555599999999909e-05, 3.608400000000567e-05, 3.513900000000347e-05, 3.538900000000372e-05, 3.5874999999997714e-05, 3.5860999999998144e-05, 3.543000000000296e-05, 3.604200000000002e-05, 3.523600000000099e-05, 3.554199999999952e-05, 3.529199999999927e-05, 3.522200000000142e-05, 3.5040999999999545e-05, 3.5888999999997284e-05, 3.572300000000139e-05, 3.504200000000596e-05]</msg>
<status status="PASS" starttime="20201029 12:45:06.046" endtime="20201029 12:45:06.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.035" endtime="20201029 12:45:06.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.063" endtime="20201029 12:45:06.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.057" endtime="20201029 12:45:06.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.055" endtime="20201029 12:45:06.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.566" endtime="20201029 12:45:06.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.564" endtime="20201029 12:45:06.088"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.111" endtime="20201029 12:45:06.127"></status>
</kw>
<msg timestamp="20201029 12:45:06.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.108" endtime="20201029 12:45:06.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.131" endtime="20201029 12:45:06.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.137" endtime="20201029 12:45:06.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.100" endtime="20201029 12:45:06.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.095" endtime="20201029 12:45:06.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.160" endtime="20201029 12:45:06.498"></status>
</kw>
<msg timestamp="20201029 12:45:06.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039677306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039719667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.157" endtime="20201029 12:45:06.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039677306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039719667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.507" endtime="20201029 12:45:06.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.526" endtime="20201029 12:45:06.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.150" endtime="20201029 12:45:06.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.145" endtime="20201029 12:45:06.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.544" level="INFO">${RESULT} = [{'diff': 4.2360999999997706e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.2541000000000107e-05}, {'diff': 4.2888999999997346e-05}, {'diff': 4.223600000000105e-05}, {'diff': 4.2389000000003785e-05...</msg>
<status status="PASS" starttime="20201029 12:45:06.535" endtime="20201029 12:45:06.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:06.554" level="INFO">${ACCURACY} = {'diff': [4.2360999999997706e-05, 4.254199999999958e-05, 4.2541000000000107e-05, 4.2888999999997346e-05, 4.223600000000105e-05, 4.2389000000003785e-05, 4.254199999999958e-05, 4.270800000000241e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:45:06.546" endtime="20201029 12:45:06.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.565" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:45:06.563" endtime="20201029 12:45:06.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.571" level="INFO">VALUE: [4.2360999999997706e-05, 4.254199999999958e-05, 4.2541000000000107e-05, 4.2888999999997346e-05, 4.223600000000105e-05, 4.2389000000003785e-05, 4.254199999999958e-05, 4.270800000000241e-05, 4.250000000000087e-05, 4.2388999999996846e-05, 4.2875000000004715e-05, 4.255599999999915e-05, 4.2389000000003785e-05, 4.220800000000191e-05, 4.292999999999658e-05, 4.2832999999999066e-05, 4.2541000000000107e-05, 4.2027000000000037e-05, 4.2389000000003785e-05, 4.2874999999997776e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.222200000000148e-05, 4.273600000000155e-05, 4.288800000000481e-05, 4.2402999999996416e-05, 4.205599999999865e-05, 4.2375000000004215e-05, 4.2681000000002745e-05, 4.270799999999547e-05, 4.220800000000191e-05, 4.251300000000097e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.201399999999994e-05, 4.220799999999497e-05, 4.219400000000234e-05, 4.302700000000104e-05, 4.254199999999958e-05, 4.2694999999995376e-05, 4.220800000000191e-05, 4.2403000000003355e-05, 4.252800000000001e-05, 4.2374999999997276e-05, 4.2361000000004645e-05, 4.2874999999997776e-05, 4.2347000000005075e-05, 4.270800000000241e-05, 4.2846999999998636e-05, 4.2374999999997276e-05]</msg>
<status status="PASS" starttime="20201029 12:45:06.567" endtime="20201029 12:45:06.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.556" endtime="20201029 12:45:06.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.583" endtime="20201029 12:45:06.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.579" endtime="20201029 12:45:06.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.576" endtime="20201029 12:45:06.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.090" endtime="20201029 12:45:06.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.089" endtime="20201029 12:45:06.608"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.630" endtime="20201029 12:45:06.646"></status>
</kw>
<msg timestamp="20201029 12:45:06.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.627" endtime="20201029 12:45:06.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.650" endtime="20201029 12:45:06.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.656" endtime="20201029 12:45:06.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.620" endtime="20201029 12:45:06.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.614" endtime="20201029 12:45:06.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.679" endtime="20201029 12:45:07.024"></status>
</kw>
<msg timestamp="20201029 12:45:07.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039347333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039389903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.676" endtime="20201029 12:45:07.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039347333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039389903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.033" endtime="20201029 12:45:07.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.052" endtime="20201029 12:45:07.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.669" endtime="20201029 12:45:07.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.664" endtime="20201029 12:45:07.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:07.069" level="INFO">${RESULT} = [{'diff': 4.256999999999872e-05}, {'diff': 4.2818999999999496e-05}, {'diff': 4.2389000000003785e-05}, {'diff': 4.2332999999998566e-05}, {'diff': 4.26939999999959e-05}, {'diff': 4.241599999999651e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:07.060" endtime="20201029 12:45:07.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:07.080" level="INFO">${ACCURACY} = {'diff': [4.256999999999872e-05, 4.2818999999999496e-05, 4.2389000000003785e-05, 4.2332999999998566e-05, 4.26939999999959e-05, 4.241599999999651e-05, 4.267999999999633e-05, 4.2374999999997276e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 12:45:07.071" endtime="20201029 12:45:07.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.091" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:45:07.089" endtime="20201029 12:45:07.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.097" level="INFO">VALUE: [4.256999999999872e-05, 4.2818999999999496e-05, 4.2389000000003785e-05, 4.2332999999998566e-05, 4.26939999999959e-05, 4.241599999999651e-05, 4.267999999999633e-05, 4.2374999999997276e-05, 4.302800000000051e-05, 4.2861000000005145e-05, 4.2194999999994875e-05, 4.270799999999547e-05, 4.222200000000148e-05, 4.222200000000148e-05, 4.2444999999995126e-05, 4.2167000000002675e-05, 4.286200000000462e-05, 4.2375000000004215e-05, 4.2277000000000287e-05, 4.252800000000001e-05, 4.2209000000001384e-05, 4.254199999999958e-05, 4.255599999999915e-05, 4.2445000000002064e-05, 4.202800000000645e-05, 4.223600000000105e-05, 4.302800000000051e-05, 4.3041000000000607e-05, 4.301400000000094e-05, 4.275000000000112e-05, 4.2861000000005145e-05, 4.2860999999998206e-05, 4.200000000000037e-05, 4.255599999999915e-05, 4.2709000000001884e-05, 4.277700000000079e-05, 4.2375000000004215e-05, 4.21939999999954e-05, 4.223600000000105e-05, 4.2054999999999176e-05, 4.2375000000004215e-05, 4.219400000000234e-05, 4.2209000000001384e-05, 4.251400000000044e-05, 4.2375000000004215e-05, 4.2360999999997706e-05, 4.2541000000000107e-05, 4.2860999999998206e-05, 4.2360999999997706e-05, 4.272200000000198e-05]</msg>
<status status="PASS" starttime="20201029 12:45:07.094" endtime="20201029 12:45:07.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.082" endtime="20201029 12:45:07.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:07.109" endtime="20201029 12:45:07.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.105" endtime="20201029 12:45:07.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.103" endtime="20201029 12:45:07.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.610" endtime="20201029 12:45:07.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.609" endtime="20201029 12:45:07.134"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.157" endtime="20201029 12:45:07.173"></status>
</kw>
<msg timestamp="20201029 12:45:07.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.154" endtime="20201029 12:45:07.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.177" endtime="20201029 12:45:07.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.183" endtime="20201029 12:45:07.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.146" endtime="20201029 12:45:07.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.141" endtime="20201029 12:45:07.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.206" endtime="20201029 12:45:07.545"></status>
</kw>
<msg timestamp="20201029 12:45:07.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039536361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039578708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.203" endtime="20201029 12:45:07.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039536361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039578708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.555" endtime="20201029 12:45:07.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.576" endtime="20201029 12:45:07.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.196" endtime="20201029 12:45:07.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.191" endtime="20201029 12:45:07.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:07.593" level="INFO">${RESULT} = [{'diff': 4.2346999999998136e-05}, {'diff': 4.2860999999998206e-05}, {'diff': 4.270800000000241e-05}, {'diff': 4.2847000000005575e-05}, {'diff': 4.270799999999547e-05}, {'diff': 4.269400000000284e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:07.584" endtime="20201029 12:45:07.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:07.602" level="INFO">${ACCURACY} = {'diff': [4.2346999999998136e-05, 4.2860999999998206e-05, 4.270800000000241e-05, 4.2847000000005575e-05, 4.270799999999547e-05, 4.269400000000284e-05, 4.2874999999997776e-05, 4.220799999999497e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:45:07.595" endtime="20201029 12:45:07.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.613" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:45:07.611" endtime="20201029 12:45:07.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.619" level="INFO">VALUE: [4.2346999999998136e-05, 4.2860999999998206e-05, 4.270800000000241e-05, 4.2847000000005575e-05, 4.270799999999547e-05, 4.269400000000284e-05, 4.2874999999997776e-05, 4.220799999999497e-05, 4.284800000000505e-05, 4.234800000000455e-05, 4.205599999999865e-05, 4.2194999999994875e-05, 4.275000000000112e-05, 4.2388999999996846e-05, 4.2181000000002244e-05, 4.2874999999997776e-05, 4.2360999999997706e-05, 4.2861000000005145e-05, 4.273600000000155e-05, 4.226300000000072e-05, 4.2903000000003855e-05, 4.275000000000112e-05, 4.219400000000234e-05, 4.277800000000026e-05, 4.2638999999997096e-05, 4.218000000000277e-05, 4.250000000000087e-05, 4.2374999999997276e-05, 4.2861000000005145e-05, 4.2375000000004215e-05, 4.202799999999951e-05, 4.218000000000277e-05, 4.2861000000005145e-05, 4.2346999999998136e-05, 4.2861000000005145e-05, 4.272200000000198e-05, 4.255599999999915e-05, 4.252800000000001e-05, 4.2027000000000037e-05, 4.2054999999999176e-05, 4.2332999999998566e-05, 4.252800000000001e-05, 4.2360999999997706e-05, 4.2361000000004645e-05, 4.200000000000037e-05, 4.254199999999958e-05, 4.2347000000005075e-05, 4.251400000000044e-05, 4.279199999999983e-05, 4.219400000000234e-05]</msg>
<status status="PASS" starttime="20201029 12:45:07.616" endtime="20201029 12:45:07.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.604" endtime="20201029 12:45:07.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:07.632" endtime="20201029 12:45:07.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.627" endtime="20201029 12:45:07.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.625" endtime="20201029 12:45:07.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.136" endtime="20201029 12:45:07.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.135" endtime="20201029 12:45:07.657"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.680" endtime="20201029 12:45:07.697"></status>
</kw>
<msg timestamp="20201029 12:45:07.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.676" endtime="20201029 12:45:07.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.701" endtime="20201029 12:45:07.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.707" endtime="20201029 12:45:07.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.669" endtime="20201029 12:45:07.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.663" endtime="20201029 12:45:07.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.730" endtime="20201029 12:45:08.069"></status>
</kw>
<msg timestamp="20201029 12:45:08.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041393486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041435694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.727" endtime="20201029 12:45:08.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041393486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041435694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.078" endtime="20201029 12:45:08.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.097" endtime="20201029 12:45:08.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.720" endtime="20201029 12:45:08.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.715" endtime="20201029 12:45:08.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.114" level="INFO">${RESULT} = [{'diff': 4.220800000000191e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.2389000000003785e-05}, {'diff': 4.222200000000148e-05}, {'diff': 4.2402999999996416e-05}, {'diff': 4.273600000000155e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:08.105" endtime="20201029 12:45:08.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:08.123" level="INFO">${ACCURACY} = {'diff': [4.220800000000191e-05, 4.204199999999908e-05, 4.2389000000003785e-05, 4.222200000000148e-05, 4.2402999999996416e-05, 4.273600000000155e-05, 4.226400000000019e-05, 4.254199999999958e-05, 4.24...</msg>
<status status="PASS" starttime="20201029 12:45:08.116" endtime="20201029 12:45:08.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.134" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:45:08.132" endtime="20201029 12:45:08.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.139" level="INFO">VALUE: [4.220800000000191e-05, 4.204199999999908e-05, 4.2389000000003785e-05, 4.222200000000148e-05, 4.2402999999996416e-05, 4.273600000000155e-05, 4.226400000000019e-05, 4.254199999999958e-05, 4.240200000000388e-05, 4.2388999999996846e-05, 4.255599999999915e-05, 4.276300000000122e-05, 4.226400000000019e-05, 4.2860999999998206e-05, 4.222200000000148e-05, 4.222200000000148e-05, 4.272200000000198e-05, 4.2888999999997346e-05, 4.256999999999872e-05, 4.3068999999999746e-05, 4.2139000000003535e-05, 4.207000000000516e-05, 4.2054999999999176e-05, 4.204199999999908e-05, 4.223599999999411e-05, 4.251400000000044e-05, 4.240199999999694e-05, 4.225000000000062e-05, 4.2361000000004645e-05, 4.222200000000148e-05, 4.226400000000019e-05, 4.272200000000198e-05, 4.2082999999998316e-05, 4.2860999999998206e-05, 4.269400000000284e-05, 4.220800000000191e-05, 4.200000000000037e-05, 4.2889000000004285e-05, 4.272200000000198e-05, 4.252800000000001e-05, 4.202799999999951e-05, 4.2625000000004465e-05, 4.2541000000000107e-05, 4.288799999999787e-05, 4.288799999999787e-05, 4.204199999999908e-05, 4.284799999999811e-05, 4.270800000000241e-05, 4.223600000000105e-05, 4.2374999999997276e-05]</msg>
<status status="PASS" starttime="20201029 12:45:08.136" endtime="20201029 12:45:08.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.125" endtime="20201029 12:45:08.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.157" endtime="20201029 12:45:08.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.147" endtime="20201029 12:45:08.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.145" endtime="20201029 12:45:08.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.659" endtime="20201029 12:45:08.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.658" endtime="20201029 12:45:08.182"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.204" endtime="20201029 12:45:08.221"></status>
</kw>
<msg timestamp="20201029 12:45:08.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.201" endtime="20201029 12:45:08.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.224" endtime="20201029 12:45:08.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.230" endtime="20201029 12:45:08.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.194" endtime="20201029 12:45:08.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.188" endtime="20201029 12:45:08.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.253" endtime="20201029 12:45:08.612"></status>
</kw>
<msg timestamp="20201029 12:45:08.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039016389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039059278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.250" endtime="20201029 12:45:08.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039016389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039059278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.622" endtime="20201029 12:45:08.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.640" endtime="20201029 12:45:08.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.243" endtime="20201029 12:45:08.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.238" endtime="20201029 12:45:08.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.658" level="INFO">${RESULT} = [{'diff': 4.2889000000004285e-05}, {'diff': 4.2541000000000107e-05}, {'diff': 4.2416999999995986e-05}, {'diff': 4.252800000000001e-05}, {'diff': 4.2709000000001884e-05}, {'diff': 4.250000000000087e-05...</msg>
<status status="PASS" starttime="20201029 12:45:08.649" endtime="20201029 12:45:08.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:08.669" level="INFO">${ACCURACY} = {'diff': [4.2889000000004285e-05, 4.2541000000000107e-05, 4.2416999999995986e-05, 4.252800000000001e-05, 4.2709000000001884e-05, 4.250000000000087e-05, 4.254199999999958e-05, 4.226400000000019e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:45:08.660" endtime="20201029 12:45:08.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.680" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:45:08.677" endtime="20201029 12:45:08.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.685" level="INFO">VALUE: [4.2889000000004285e-05, 4.2541000000000107e-05, 4.2416999999995986e-05, 4.252800000000001e-05, 4.2709000000001884e-05, 4.250000000000087e-05, 4.254199999999958e-05, 4.226400000000019e-05, 4.2209000000001384e-05, 4.2694999999995376e-05, 4.2639000000004035e-05, 4.2695000000002314e-05, 4.234799999999761e-05, 4.205599999999865e-05, 4.252800000000001e-05, 4.252800000000001e-05, 4.2541000000000107e-05, 4.204199999999908e-05, 4.2361000000004645e-05, 4.2860999999998206e-05, 4.2888999999997346e-05, 4.230600000000584e-05, 4.252800000000001e-05, 4.273600000000155e-05, 4.2945000000002564e-05, 4.220800000000191e-05, 4.272199999999504e-05, 4.2360999999997706e-05, 4.2180999999995306e-05, 4.2375000000004215e-05, 4.2889000000004285e-05, 4.2860999999998206e-05, 4.245800000000216e-05, 4.254199999999958e-05, 4.2318999999998996e-05, 4.2054999999999176e-05, 4.2054999999999176e-05, 4.305600000000659e-05, 4.2277000000000287e-05, 4.238800000000431e-05, 4.2375000000004215e-05, 4.254199999999958e-05, 4.270800000000241e-05, 4.290199999999744e-05, 4.225000000000062e-05, 4.270800000000241e-05, 4.272200000000198e-05, 4.2374999999997276e-05, 4.304200000000008e-05, 4.2375000000004215e-05]</msg>
<status status="PASS" starttime="20201029 12:45:08.682" endtime="20201029 12:45:08.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.671" endtime="20201029 12:45:08.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.698" endtime="20201029 12:45:08.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.693" endtime="20201029 12:45:08.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.691" endtime="20201029 12:45:08.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.184" endtime="20201029 12:45:08.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.183" endtime="20201029 12:45:08.723"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.745" endtime="20201029 12:45:08.761"></status>
</kw>
<msg timestamp="20201029 12:45:08.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.742" endtime="20201029 12:45:08.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.766" endtime="20201029 12:45:08.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.772" endtime="20201029 12:45:08.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.735" endtime="20201029 12:45:08.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.729" endtime="20201029 12:45:08.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.795" endtime="20201029 12:45:09.134"></status>
</kw>
<msg timestamp="20201029 12:45:09.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039517972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039560667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.792" endtime="20201029 12:45:09.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039517972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039560667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.143" endtime="20201029 12:45:09.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.162" endtime="20201029 12:45:09.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.785" endtime="20201029 12:45:09.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.780" endtime="20201029 12:45:09.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.179" level="INFO">${RESULT} = [{'diff': 4.2695000000002314e-05}, {'diff': 4.222200000000148e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.205599999999865e-05}, {'diff': 4.249999999999393e-05}, {'diff': 4.272200000000198e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:09.170" endtime="20201029 12:45:09.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:09.190" level="INFO">${ACCURACY} = {'diff': [4.2695000000002314e-05, 4.222200000000148e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.249999999999393e-05, 4.272200000000198e-05, 4.2846999999998636e-05, 4.2709000000001884e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 12:45:09.181" endtime="20201029 12:45:09.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.201" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:45:09.198" endtime="20201029 12:45:09.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.206" level="INFO">VALUE: [4.2695000000002314e-05, 4.222200000000148e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.249999999999393e-05, 4.272200000000198e-05, 4.2846999999998636e-05, 4.2709000000001884e-05, 4.2374999999997276e-05, 4.2152999999996166e-05, 4.204200000000602e-05, 4.269400000000284e-05, 4.270800000000241e-05, 4.269400000000284e-05, 4.256999999999872e-05, 4.2861000000005145e-05, 4.222200000000148e-05, 4.26939999999959e-05, 4.2027000000000037e-05, 4.254199999999958e-05, 4.2360999999997706e-05, 4.251400000000044e-05, 4.291600000000395e-05, 4.2361000000004645e-05, 4.216599999999626e-05, 4.202799999999951e-05, 4.2040999999999606e-05, 4.2860999999998206e-05, 4.2541000000000107e-05, 4.26939999999959e-05, 4.2987000000001274e-05, 4.273599999999461e-05, 4.2374999999997276e-05, 4.2374999999997276e-05, 4.2040999999999606e-05, 4.202800000000645e-05, 4.270799999999547e-05, 4.222200000000148e-05, 4.270800000000241e-05, 4.2375000000004215e-05, 4.3068999999999746e-05, 4.276400000000069e-05, 4.2554999999999676e-05, 4.270800000000241e-05, 4.223599999999411e-05, 4.2209000000001384e-05, 4.291599999999701e-05, 4.2694999999995376e-05, 4.2860999999998206e-05, 4.220800000000191e-05]</msg>
<status status="PASS" starttime="20201029 12:45:09.203" endtime="20201029 12:45:09.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.192" endtime="20201029 12:45:09.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.218" endtime="20201029 12:45:09.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.214" endtime="20201029 12:45:09.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.212" endtime="20201029 12:45:09.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.725" endtime="20201029 12:45:09.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.723" endtime="20201029 12:45:09.243"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.265" endtime="20201029 12:45:09.281"></status>
</kw>
<msg timestamp="20201029 12:45:09.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.262" endtime="20201029 12:45:09.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.285" endtime="20201029 12:45:09.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.291" endtime="20201029 12:45:09.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.255" endtime="20201029 12:45:09.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.249" endtime="20201029 12:45:09.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.314" endtime="20201029 12:45:09.650"></status>
</kw>
<msg timestamp="20201029 12:45:09.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038847125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038889486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.310" endtime="20201029 12:45:09.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038847125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038889486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.659" endtime="20201029 12:45:09.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.678" endtime="20201029 12:45:09.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.303" endtime="20201029 12:45:09.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.299" endtime="20201029 12:45:09.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.695" level="INFO">${RESULT} = [{'diff': 4.2360999999997706e-05}, {'diff': 4.2902999999996916e-05}, {'diff': 4.2681000000002745e-05}, {'diff': 4.2832999999999066e-05}, {'diff': 4.267999999999633e-05}, {'diff': 4.293000000000352e-05...</msg>
<status status="PASS" starttime="20201029 12:45:09.686" endtime="20201029 12:45:09.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:09.704" level="INFO">${ACCURACY} = {'diff': [4.2360999999997706e-05, 4.2902999999996916e-05, 4.2681000000002745e-05, 4.2832999999999066e-05, 4.267999999999633e-05, 4.293000000000352e-05, 4.2860999999998206e-05, 4.217999999999583e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:45:09.697" endtime="20201029 12:45:09.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.715" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:45:09.713" endtime="20201029 12:45:09.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.720" level="INFO">VALUE: [4.2360999999997706e-05, 4.2902999999996916e-05, 4.2681000000002745e-05, 4.2832999999999066e-05, 4.267999999999633e-05, 4.293000000000352e-05, 4.2860999999998206e-05, 4.217999999999583e-05, 4.2360999999997706e-05, 4.2360999999997706e-05, 4.225000000000062e-05, 4.2139000000003535e-05, 4.21660000000032e-05, 4.2695000000002314e-05, 4.2846999999998636e-05, 4.2388999999996846e-05, 4.286199999999768e-05, 4.2459000000001634e-05, 4.2389000000003785e-05, 4.254199999999958e-05, 4.26939999999959e-05, 4.255599999999915e-05, 4.2388999999996846e-05, 4.2874999999997776e-05, 4.249999999999393e-05, 4.2097000000004825e-05, 4.206999999999822e-05, 4.2861000000005145e-05, 4.2402999999996416e-05, 4.204199999999908e-05, 4.301400000000094e-05, 4.270799999999547e-05, 4.270800000000241e-05, 4.2361000000004645e-05, 4.2319000000005935e-05, 4.2040999999999606e-05, 4.270799999999547e-05, 4.254199999999958e-05, 4.236200000000412e-05, 4.304200000000008e-05, 4.252800000000001e-05, 4.294399999999615e-05, 4.2695000000002314e-05, 4.2611000000004895e-05, 4.2389000000003785e-05, 4.2861000000005145e-05, 4.270799999999547e-05, 4.19860000000008e-05, 4.2208999999994445e-05, 4.2888999999997346e-05]</msg>
<status status="PASS" starttime="20201029 12:45:09.717" endtime="20201029 12:45:09.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.706" endtime="20201029 12:45:09.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.733" endtime="20201029 12:45:09.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.728" endtime="20201029 12:45:09.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.726" endtime="20201029 12:45:09.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.245" endtime="20201029 12:45:09.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.244" endtime="20201029 12:45:09.758"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.780" endtime="20201029 12:45:09.800"></status>
</kw>
<msg timestamp="20201029 12:45:09.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.777" endtime="20201029 12:45:09.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.803" endtime="20201029 12:45:09.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.809" endtime="20201029 12:45:09.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.770" endtime="20201029 12:45:09.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.764" endtime="20201029 12:45:09.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.832" endtime="20201029 12:45:10.178"></status>
</kw>
<msg timestamp="20201029 12:45:10.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041121847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04117175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:09.829" endtime="20201029 12:45:10.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041121847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04117175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:10.188" endtime="20201029 12:45:10.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.206" endtime="20201029 12:45:10.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.822" endtime="20201029 12:45:10.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.817" endtime="20201029 12:45:10.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:10.223" level="INFO">${RESULT} = [{'diff': 4.990299999999698e-05}, {'diff': 4.937499999999734e-05}, {'diff': 4.936099999999777e-05}, {'diff': 4.937499999999734e-05}, {'diff': 4.9709000000001946e-05}, {'diff': 4.986099999999827e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:10.215" endtime="20201029 12:45:10.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:10.233" level="INFO">${ACCURACY} = {'diff': [4.990299999999698e-05, 4.937499999999734e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.9709000000001946e-05, 4.986099999999827e-05, 4.987499999999784e-05, 4.9179999999995894e-05, 4.99...</msg>
<status status="PASS" starttime="20201029 12:45:10.225" endtime="20201029 12:45:10.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.243" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:45:10.241" endtime="20201029 12:45:10.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.249" level="INFO">VALUE: [4.990299999999698e-05, 4.937499999999734e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.9709000000001946e-05, 4.986099999999827e-05, 4.987499999999784e-05, 4.9179999999995894e-05, 4.990299999999698e-05, 4.9403000000003416e-05, 4.923600000000111e-05, 4.936099999999777e-05, 4.9209000000001446e-05, 5.00419999999932e-05, 4.954199999999964e-05, 4.987499999999784e-05, 4.902799999999957e-05, 4.922200000000154e-05, 4.930499999999949e-05, 4.950000000000093e-05, 4.954100000000017e-05, 4.90270000000001e-05, 4.904200000000608e-05, 4.922200000000154e-05, 4.9389000000003846e-05, 4.956899999999931e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.9887999999997934e-05, 4.9237000000000586e-05, 4.936099999999777e-05, 4.920800000000197e-05, 5.002800000000057e-05, 4.987500000000478e-05, 4.95270000000006e-05, 4.936100000000471e-05, 4.988899999999741e-05, 4.91940000000024e-05, 4.938899999999691e-05, 4.923600000000111e-05, 4.959699999999845e-05, 5.005599999999971e-05, 4.986100000000521e-05, 4.9693999999995964e-05, 4.955499999999974e-05, 4.95270000000006e-05, 4.91940000000024e-05, 4.986100000000521e-05, 4.970800000000247e-05, 4.981899999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:45:10.246" endtime="20201029 12:45:10.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.234" endtime="20201029 12:45:10.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:10.262" endtime="20201029 12:45:10.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.257" endtime="20201029 12:45:10.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.254" endtime="20201029 12:45:10.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.760" endtime="20201029 12:45:10.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.759" endtime="20201029 12:45:10.288"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.310" endtime="20201029 12:45:10.330"></status>
</kw>
<msg timestamp="20201029 12:45:10.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.307" endtime="20201029 12:45:10.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.333" endtime="20201029 12:45:10.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.339" endtime="20201029 12:45:10.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.300" endtime="20201029 12:45:10.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.294" endtime="20201029 12:45:10.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.367" endtime="20201029 12:45:10.714"></status>
</kw>
<msg timestamp="20201029 12:45:10.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039500611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:10.359" endtime="20201029 12:45:10.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039500611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:10.723" endtime="20201029 12:45:10.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.743" endtime="20201029 12:45:10.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.352" endtime="20201029 12:45:10.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.347" endtime="20201029 12:45:10.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:10.760" level="INFO">${RESULT} = [{'diff': 8.961099999999639e-05}, {'diff': 8.99999999999998e-05}, {'diff': 8.987499999999621e-05}, {'diff': 8.980499999999836e-05}, {'diff': 8.991600000000238e-05}, {'diff': 8.9945000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:45:10.751" endtime="20201029 12:45:10.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:10.771" level="INFO">${ACCURACY} = {'diff': [8.961099999999639e-05, 8.99999999999998e-05, 8.987499999999621e-05, 8.980499999999836e-05, 8.991600000000238e-05, 8.9945000000001e-05, 8.926399999999862e-05, 8.951399999999887e-05, 8.9958000...</msg>
<status status="PASS" starttime="20201029 12:45:10.762" endtime="20201029 12:45:10.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.782" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:45:10.780" endtime="20201029 12:45:10.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.788" level="INFO">VALUE: [8.961099999999639e-05, 8.99999999999998e-05, 8.987499999999621e-05, 8.980499999999836e-05, 8.991600000000238e-05, 8.9945000000001e-05, 8.926399999999862e-05, 8.951399999999887e-05, 8.995800000000109e-05, 9.01670000000021e-05, 8.979199999999826e-05, 8.995799999999415e-05, 8.9332999999997e-05, 8.954200000000495e-05, 8.977800000000563e-05, 8.981899999999793e-05, 9.009700000000426e-05, 9.019400000000177e-05, 9.019400000000177e-05, 8.962499999999596e-05, 8.998600000000023e-05, 8.934700000000351e-05, 9.020800000000134e-05, 9.019400000000177e-05, 8.938900000000222e-05, 8.938900000000222e-05, 8.927799999999819e-05, 8.937500000000265e-05, 9.020800000000134e-05, 8.96659999999952e-05, 8.937500000000265e-05, 9.005499999999861e-05, 8.981899999999793e-05, 8.938900000000222e-05, 8.96250000000029e-05, 9.027799999999919e-05, 8.93050000000048e-05, 9.022200000000091e-05, 8.963900000000247e-05, 8.96250000000029e-05, 8.986099999999664e-05, 9.008300000000469e-05, 9.020900000000082e-05, 8.941600000000188e-05, 8.987500000000315e-05, 8.951399999999887e-05, 9.002799999999894e-05, 9.002799999999894e-05, 8.943100000000093e-05, 8.968100000000118e-05]</msg>
<status status="PASS" starttime="20201029 12:45:10.784" endtime="20201029 12:45:10.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.773" endtime="20201029 12:45:10.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:10.800" endtime="20201029 12:45:10.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.796" endtime="20201029 12:45:10.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.793" endtime="20201029 12:45:10.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.290" endtime="20201029 12:45:10.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.288" endtime="20201029 12:45:10.826"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.849" endtime="20201029 12:45:10.870"></status>
</kw>
<msg timestamp="20201029 12:45:10.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.845" endtime="20201029 12:45:10.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.873" endtime="20201029 12:45:10.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.879" endtime="20201029 12:45:10.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.838" endtime="20201029 12:45:10.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.832" endtime="20201029 12:45:10.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.903" endtime="20201029 12:45:11.250"></status>
</kw>
<msg timestamp="20201029 12:45:11.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040646236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.900" endtime="20201029 12:45:11.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040646236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.259" endtime="20201029 12:45:11.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.278" endtime="20201029 12:45:11.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.892" endtime="20201029 12:45:11.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.887" endtime="20201029 12:45:11.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.295" level="INFO">${RESULT} = [{'diff': 9.056900000000562e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.01670000000021e-05}, {'diff': 9.026399999999962e-05}, {'diff': 9.080600000000577e-05}, {'diff': 9.105599999999908e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:11.286" endtime="20201029 12:45:11.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:11.307" level="INFO">${ACCURACY} = {'diff': [9.056900000000562e-05, 9.023600000000048e-05, 9.01670000000021e-05, 9.026399999999962e-05, 9.080600000000577e-05, 9.105599999999908e-05, 9.030599999999833e-05, 9.041699999999542e-05, 9.06249...</msg>
<status status="PASS" starttime="20201029 12:45:11.298" endtime="20201029 12:45:11.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.318" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:45:11.316" endtime="20201029 12:45:11.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.323" level="INFO">VALUE: [9.056900000000562e-05, 9.023600000000048e-05, 9.01670000000021e-05, 9.026399999999962e-05, 9.080600000000577e-05, 9.105599999999908e-05, 9.030599999999833e-05, 9.041699999999542e-05, 9.062499999999696e-05, 9.111099999999789e-05, 9.080499999999936e-05, 9.086099999999764e-05, 9.058300000000519e-05, 9.113899999999703e-05, 9.018100000000168e-05, 9.092999999999601e-05, 9.081900000000587e-05, 9.105499999999961e-05, 9.109699999999832e-05, 9.040299999999585e-05, 9.048600000000073e-05, 9.068100000000218e-05, 9.037500000000365e-05, 9.113900000000397e-05, 9.101399999999343e-05, 9.029199999999876e-05, 9.030599999999833e-05, 9.022200000000091e-05, 9.105599999999908e-05, 9.0945000000002e-05, 9.101400000000037e-05, 9.040199999999637e-05, 9.042999999999551e-05, 9.104199999999951e-05, 9.041700000000236e-05, 9.034799999999704e-05, 9.01670000000021e-05, 9.05130000000004e-05, 9.072200000000141e-05, 9.086099999999764e-05, 9.088900000000372e-05, 9.055600000000552e-05, 9.06529999999961e-05, 9.013900000000297e-05, 9.109699999999832e-05, 9.056899999999868e-05, 9.06659999999962e-05, 9.06800000000027e-05, 9.075000000000055e-05, 9.109699999999832e-05]</msg>
<status status="PASS" starttime="20201029 12:45:11.320" endtime="20201029 12:45:11.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.309" endtime="20201029 12:45:11.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:11.336" endtime="20201029 12:45:11.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.332" endtime="20201029 12:45:11.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.329" endtime="20201029 12:45:11.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.828" endtime="20201029 12:45:11.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.827" endtime="20201029 12:45:11.361"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.384" endtime="20201029 12:45:11.405"></status>
</kw>
<msg timestamp="20201029 12:45:11.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.381" endtime="20201029 12:45:11.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.409" endtime="20201029 12:45:11.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.415" endtime="20201029 12:45:11.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.374" endtime="20201029 12:45:11.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.368" endtime="20201029 12:45:11.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.439" endtime="20201029 12:45:11.790"></status>
</kw>
<msg timestamp="20201029 12:45:11.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040328903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.435" endtime="20201029 12:45:11.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040328903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.799" endtime="20201029 12:45:11.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.817" endtime="20201029 12:45:11.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.428" endtime="20201029 12:45:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.423" endtime="20201029 12:45:11.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.835" level="INFO">${RESULT} = [{'diff': 9.161099999999839e-05}, {'diff': 9.147199999999522e-05}, {'diff': 9.193099999999649e-05}, {'diff': 9.154200000000001e-05}, {'diff': 9.137499999999771e-05}, {'diff': 9.119400000000277e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:11.826" endtime="20201029 12:45:11.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:11.844" level="INFO">${ACCURACY} = {'diff': [9.161099999999839e-05, 9.147199999999522e-05, 9.193099999999649e-05, 9.154200000000001e-05, 9.137499999999771e-05, 9.119400000000277e-05, 9.155599999999958e-05, 9.13199999999989e-05, 9.17079...</msg>
<status status="PASS" starttime="20201029 12:45:11.837" endtime="20201029 12:45:11.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.855" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:45:11.852" endtime="20201029 12:45:11.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.860" level="INFO">VALUE: [9.161099999999839e-05, 9.147199999999522e-05, 9.193099999999649e-05, 9.154200000000001e-05, 9.137499999999771e-05, 9.119400000000277e-05, 9.155599999999958e-05, 9.13199999999989e-05, 9.17079999999959e-05, 9.211099999999889e-05, 9.168099999999624e-05, 9.123600000000148e-05, 9.138899999999728e-05, 9.212499999999846e-05, 9.184699999999907e-05, 9.168100000000318e-05, 9.120800000000234e-05, 9.16800000000037e-05, 9.186099999999864e-05, 9.166699999999667e-05, 9.212499999999846e-05, 9.199999999999486e-05, 9.201400000000137e-05, 9.161099999999839e-05, 9.198600000000223e-05, 9.119500000000225e-05, 9.161199999999786e-05, 9.188899999999778e-05, 9.156999999999915e-05, 9.188900000000472e-05, 9.122300000000139e-05, 9.127800000000019e-05, 9.197199999999572e-05, 9.140300000000379e-05, 9.123600000000148e-05, 9.149999999999436e-05, 9.15000000000013e-05, 9.13199999999989e-05, 9.172199999999547e-05, 9.147200000000216e-05, 9.155500000000011e-05, 9.147200000000216e-05, 9.173600000000198e-05, 9.14729999999947e-05, 9.15000000000013e-05, 9.180599999999983e-05, 9.18199999999994e-05, 9.151400000000087e-05, 9.180599999999983e-05, 9.134799999999804e-05]</msg>
<status status="PASS" starttime="20201029 12:45:11.857" endtime="20201029 12:45:11.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.846" endtime="20201029 12:45:11.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:11.872" endtime="20201029 12:45:11.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.868" endtime="20201029 12:45:11.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.866" endtime="20201029 12:45:11.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.363" endtime="20201029 12:45:11.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.362" endtime="20201029 12:45:11.897"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.920" endtime="20201029 12:45:11.942"></status>
</kw>
<msg timestamp="20201029 12:45:11.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.916" endtime="20201029 12:45:11.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.945" endtime="20201029 12:45:11.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.951" endtime="20201029 12:45:11.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.909" endtime="20201029 12:45:11.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.904" endtime="20201029 12:45:11.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.974" endtime="20201029 12:45:12.321"></status>
</kw>
<msg timestamp="20201029 12:45:12.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040878681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040971181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.971" endtime="20201029 12:45:12.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040878681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040971181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.331" endtime="20201029 12:45:12.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.349" endtime="20201029 12:45:12.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.964" endtime="20201029 12:45:12.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.959" endtime="20201029 12:45:12.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:12.366" level="INFO">${RESULT} = [{'diff': 9.25000000000023e-05}, {'diff': 9.247200000000316e-05}, {'diff': 9.241699999999742e-05}, {'diff': 9.297199999999672e-05}, {'diff': 9.308400000000022e-05}, {'diff': 9.309799999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:12.357" endtime="20201029 12:45:12.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:12.375" level="INFO">${ACCURACY} = {'diff': [9.25000000000023e-05, 9.247200000000316e-05, 9.241699999999742e-05, 9.297199999999672e-05, 9.308400000000022e-05, 9.309799999999979e-05, 9.225000000000205e-05, 9.299999999999586e-05, 9.22780...</msg>
<status status="PASS" starttime="20201029 12:45:12.368" endtime="20201029 12:45:12.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.386" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:45:12.384" endtime="20201029 12:45:12.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.391" level="INFO">VALUE: [9.25000000000023e-05, 9.247200000000316e-05, 9.241699999999742e-05, 9.297199999999672e-05, 9.308400000000022e-05, 9.309799999999979e-05, 9.225000000000205e-05, 9.299999999999586e-05, 9.227800000000119e-05, 9.241700000000436e-05, 9.274999999999561e-05, 9.251399999999493e-05, 9.238899999999828e-05, 9.227800000000119e-05, 9.309700000000032e-05, 9.31529999999986e-05, 9.243099999999699e-05, 9.25279999999945e-05, 9.242999999999751e-05, 9.25000000000023e-05, 9.281900000000093e-05, 9.312499999999946e-05, 9.301399999999543e-05, 9.26529999999981e-05, 9.290299999999835e-05, 9.252800000000144e-05, 9.236099999999914e-05, 9.319399999999783e-05, 9.318099999999774e-05, 9.238900000000522e-05, 9.276400000000212e-05, 9.258399999999972e-05, 9.226399999999468e-05, 9.240199999999837e-05, 9.223600000000248e-05, 9.302800000000194e-05, 9.32079999999974e-05, 9.262499999999896e-05, 9.309700000000032e-05, 9.230500000000086e-05, 9.294499999999706e-05, 9.308400000000022e-05, 9.241700000000436e-05, 9.269399999999733e-05, 9.220800000000334e-05, 9.312499999999946e-05, 9.2333e-05, 9.219399999999683e-05, 9.223600000000248e-05, 9.25000000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:45:12.388" endtime="20201029 12:45:12.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.377" endtime="20201029 12:45:12.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:12.405" endtime="20201029 12:45:12.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.400" endtime="20201029 12:45:12.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.397" endtime="20201029 12:45:12.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.900" endtime="20201029 12:45:12.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.898" endtime="20201029 12:45:12.431"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.456" endtime="20201029 12:45:12.476"></status>
</kw>
<msg timestamp="20201029 12:45:12.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.452" endtime="20201029 12:45:12.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.479" endtime="20201029 12:45:12.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.486" endtime="20201029 12:45:12.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.445" endtime="20201029 12:45:12.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.439" endtime="20201029 12:45:12.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.509" endtime="20201029 12:45:12.863"></status>
</kw>
<msg timestamp="20201029 12:45:12.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042341125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.506" endtime="20201029 12:45:12.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042341125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.872" endtime="20201029 12:45:12.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.891" endtime="20201029 12:45:12.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.498" endtime="20201029 12:45:12.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.494" endtime="20201029 12:45:12.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:12.908" level="INFO">${RESULT} = [{'diff': 9.325000000000305e-05}, {'diff': 9.417999999999926e-05}, {'diff': 9.365300000000604e-05}, {'diff': 9.373700000000346e-05}, {'diff': 9.341599999999894e-05}, {'diff': 9.37079999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:12.899" endtime="20201029 12:45:12.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:12.918" level="INFO">${ACCURACY} = {'diff': [9.325000000000305e-05, 9.417999999999926e-05, 9.365300000000604e-05, 9.373700000000346e-05, 9.341599999999894e-05, 9.37079999999979e-05, 9.336100000000014e-05, 9.340299999999885e-05, 9.37359...</msg>
<status status="PASS" starttime="20201029 12:45:12.910" endtime="20201029 12:45:12.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.929" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:45:12.927" endtime="20201029 12:45:12.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.934" level="INFO">VALUE: [9.325000000000305e-05, 9.417999999999926e-05, 9.365300000000604e-05, 9.373700000000346e-05, 9.341599999999894e-05, 9.37079999999979e-05, 9.336100000000014e-05, 9.340299999999885e-05, 9.373599999999704e-05, 9.404100000000304e-05, 9.361100000000039e-05, 9.344499999999756e-05, 9.415300000000654e-05, 9.372199999999747e-05, 9.354100000000254e-05, 9.354100000000254e-05, 9.367999999999876e-05, 9.326400000000262e-05, 9.337499999999971e-05, 9.345799999999765e-05, 9.373599999999704e-05, 9.33200000000009e-05, 9.362499999999996e-05, 9.365300000000604e-05, 9.419399999999883e-05, 9.388899999999978e-05, 9.41529999999996e-05, 9.367999999999876e-05, 9.354100000000254e-05, 9.405600000000208e-05, 9.369499999999781e-05, 9.391599999999944e-05, 9.331900000000143e-05, 9.409699999999438e-05, 9.355600000000158e-05, 9.352800000000244e-05, 9.411100000000089e-05, 9.386100000000064e-05, 9.33200000000009e-05, 9.376399999999618e-05, 9.363899999999953e-05, 9.407000000000165e-05, 9.397199999999772e-05, 9.42079999999984e-05, 9.379200000000226e-05, 9.326399999999568e-05, 9.366699999999867e-05, 9.424999999999711e-05, 9.393099999999849e-05, 9.362499999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:45:12.931" endtime="20201029 12:45:12.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.920" endtime="20201029 12:45:12.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:12.952" endtime="20201029 12:45:12.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.948" endtime="20201029 12:45:12.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.945" endtime="20201029 12:45:12.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.434" endtime="20201029 12:45:12.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.433" endtime="20201029 12:45:12.977"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.000" endtime="20201029 12:45:13.021"></status>
</kw>
<msg timestamp="20201029 12:45:13.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.997" endtime="20201029 12:45:13.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.024" endtime="20201029 12:45:13.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.030" endtime="20201029 12:45:13.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.990" endtime="20201029 12:45:13.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.984" endtime="20201029 12:45:13.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.054" endtime="20201029 12:45:13.401"></status>
</kw>
<msg timestamp="20201029 12:45:13.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040074833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040170125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.050" endtime="20201029 12:45:13.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040074833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040170125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.411" endtime="20201029 12:45:13.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.429" endtime="20201029 12:45:13.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.043" endtime="20201029 12:45:13.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.038" endtime="20201029 12:45:13.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.446" level="INFO">${RESULT} = [{'diff': 9.529200000000376e-05}, {'diff': 9.477800000000369e-05}, {'diff': 9.447199999999822e-05}, {'diff': 9.53609999999952e-05}, {'diff': 9.456900000000268e-05}, {'diff': 9.469499999999881e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:13.438" endtime="20201029 12:45:13.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:13.461" level="INFO">${ACCURACY} = {'diff': [9.529200000000376e-05, 9.477800000000369e-05, 9.447199999999822e-05, 9.53609999999952e-05, 9.456900000000268e-05, 9.469499999999881e-05, 9.58609999999957e-05, 9.50000000000048e-05, 9.5250000...</msg>
<status status="PASS" starttime="20201029 12:45:13.448" endtime="20201029 12:45:13.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.472" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:45:13.470" endtime="20201029 12:45:13.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.477" level="INFO">VALUE: [9.529200000000376e-05, 9.477800000000369e-05, 9.447199999999822e-05, 9.53609999999952e-05, 9.456900000000268e-05, 9.469499999999881e-05, 9.58609999999957e-05, 9.50000000000048e-05, 9.525000000000505e-05, 9.491699999999992e-05, 9.538900000000128e-05, 9.466699999999967e-05, 9.558400000000272e-05, 9.505500000000361e-05, 9.574999999999861e-05, 9.513900000000103e-05, 9.526399999999768e-05, 9.523700000000496e-05, 9.555499999999717e-05, 9.504200000000351e-05, 9.476400000000412e-05, 9.44729999999977e-05, 9.463900000000053e-05, 9.491699999999992e-05, 9.448600000000473e-05, 9.442999999999951e-05, 9.592999999999408e-05, 9.605600000000408e-05, 9.476399999999718e-05, 9.543099999999999e-05, 9.533400000000247e-05, 9.462500000000096e-05, 9.588900000000178e-05, 9.479199999999632e-05, 9.523599999999854e-05, 9.488900000000078e-05, 9.555600000000358e-05, 9.430600000000233e-05, 9.497300000000514e-05, 9.520800000000634e-05, 9.588900000000178e-05, 9.608300000000375e-05, 9.447200000000516e-05, 9.583399999999603e-05, 9.459700000000182e-05, 9.57079999999999e-05, 9.508399999999528e-05, 9.554199999999707e-05, 9.451399999999693e-05, 9.452800000000344e-05]</msg>
<status status="PASS" starttime="20201029 12:45:13.474" endtime="20201029 12:45:13.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.463" endtime="20201029 12:45:13.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:13.490" endtime="20201029 12:45:13.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.485" endtime="20201029 12:45:13.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.483" endtime="20201029 12:45:13.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.980" endtime="20201029 12:45:13.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.978" endtime="20201029 12:45:13.515"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.537" endtime="20201029 12:45:13.558"></status>
</kw>
<msg timestamp="20201029 12:45:13.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.534" endtime="20201029 12:45:13.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.561" endtime="20201029 12:45:13.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.567" endtime="20201029 12:45:13.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.527" endtime="20201029 12:45:13.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.521" endtime="20201029 12:45:13.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.591" endtime="20201029 12:45:13.936"></status>
</kw>
<msg timestamp="20201029 12:45:13.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039499153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039595667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.587" endtime="20201029 12:45:13.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039499153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039595667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.945" endtime="20201029 12:45:13.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.964" endtime="20201029 12:45:13.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.580" endtime="20201029 12:45:13.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.575" endtime="20201029 12:45:13.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.981" level="INFO">${RESULT} = [{'diff': 9.651399999999893e-05}, {'diff': 9.673600000000004e-05}, {'diff': 9.618100000000074e-05}, {'diff': 9.655600000000458e-05}, {'diff': 9.679200000000526e-05}, {'diff': 9.648699999999927e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:13.972" endtime="20201029 12:45:13.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:13.991" level="INFO">${ACCURACY} = {'diff': [9.651399999999893e-05, 9.673600000000004e-05, 9.618100000000074e-05, 9.655600000000458e-05, 9.679200000000526e-05, 9.648699999999927e-05, 9.623599999999954e-05, 9.623700000000596e-05, 9.6999...</msg>
<status status="PASS" starttime="20201029 12:45:13.983" endtime="20201029 12:45:13.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.001" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:45:13.999" endtime="20201029 12:45:14.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.007" level="INFO">VALUE: [9.651399999999893e-05, 9.673600000000004e-05, 9.618100000000074e-05, 9.655600000000458e-05, 9.679200000000526e-05, 9.648699999999927e-05, 9.623599999999954e-05, 9.623700000000596e-05, 9.699999999999986e-05, 9.568100000000024e-05, 9.616700000000117e-05, 9.618000000000126e-05, 9.624999999999911e-05, 9.636100000000314e-05, 9.709699999999738e-05, 9.694399999999465e-05, 9.654199999999807e-05, 9.569500000000675e-05, 9.618100000000074e-05, 9.708399999999728e-05, 9.615199999999519e-05, 9.708299999999781e-05, 9.683299999999756e-05, 9.7027999999999e-05, 9.636100000000314e-05, 9.634700000000357e-05, 9.623599999999954e-05, 9.61530000000016e-05, 9.624999999999911e-05, 9.63609999999962e-05, 9.615199999999519e-05, 9.647200000000022e-05, 9.624999999999911e-05, 9.63059999999974e-05, 9.604199999999757e-05, 9.713899999999609e-05, 9.605599999999714e-05, 9.626399999999868e-05, 9.673600000000004e-05, 9.693000000000201e-05, 9.638900000000228e-05, 9.574999999999861e-05, 9.644400000000108e-05, 9.622199999999997e-05, 9.69860000000003e-05, 9.611099999999595e-05, 9.568100000000024e-05, 9.62080000000004e-05, 9.701399999999943e-05, 9.686100000000364e-05]</msg>
<status status="PASS" starttime="20201029 12:45:14.004" endtime="20201029 12:45:14.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.992" endtime="20201029 12:45:14.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:14.019" endtime="20201029 12:45:14.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.015" endtime="20201029 12:45:14.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.012" endtime="20201029 12:45:14.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.517" endtime="20201029 12:45:14.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.516" endtime="20201029 12:45:14.044"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.066" endtime="20201029 12:45:14.086"></status>
</kw>
<msg timestamp="20201029 12:45:14.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.063" endtime="20201029 12:45:14.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.090" endtime="20201029 12:45:14.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.096" endtime="20201029 12:45:14.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.056" endtime="20201029 12:45:14.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.050" endtime="20201029 12:45:14.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.119" endtime="20201029 12:45:14.453"></status>
</kw>
<msg timestamp="20201029 12:45:14.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040485903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040583528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.116" endtime="20201029 12:45:14.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040485903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040583528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.462" endtime="20201029 12:45:14.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.481" endtime="20201029 12:45:14.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.109" endtime="20201029 12:45:14.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.104" endtime="20201029 12:45:14.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:14.498" level="INFO">${RESULT} = [{'diff': 9.762500000000396e-05}, {'diff': 9.790200000000387e-05}, {'diff': 9.797200000000172e-05}, {'diff': 9.725000000000011e-05}, {'diff': 9.805499999999967e-05}, {'diff': 9.744500000000156e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:14.489" endtime="20201029 12:45:14.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:14.507" level="INFO">${ACCURACY} = {'diff': [9.762500000000396e-05, 9.790200000000387e-05, 9.797200000000172e-05, 9.725000000000011e-05, 9.805499999999967e-05, 9.744500000000156e-05, 9.801400000000043e-05, 9.75279999999995e-05, 9.73610...</msg>
<status status="PASS" starttime="20201029 12:45:14.500" endtime="20201029 12:45:14.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.518" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:45:14.516" endtime="20201029 12:45:14.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.523" level="INFO">VALUE: [9.762500000000396e-05, 9.790200000000387e-05, 9.797200000000172e-05, 9.725000000000011e-05, 9.805499999999967e-05, 9.744500000000156e-05, 9.801400000000043e-05, 9.75279999999995e-05, 9.736100000000414e-05, 9.79730000000012e-05, 9.776400000000018e-05, 9.723600000000054e-05, 9.773600000000104e-05, 9.798599999999436e-05, 9.740200000000337e-05, 9.791600000000344e-05, 9.788899999999684e-05, 9.813899999999709e-05, 9.790200000000387e-05, 9.805599999999914e-05, 9.734699999999763e-05, 9.743000000000251e-05, 9.772200000000147e-05, 9.731899999999849e-05, 9.76809999999953e-05, 9.756999999999821e-05, 9.815299999999666e-05, 9.754199999999907e-05, 9.805499999999967e-05, 9.725000000000011e-05, 9.779199999999932e-05, 9.777799999999975e-05, 9.738900000000328e-05, 9.784699999999813e-05, 9.726399999999968e-05, 9.759699999999788e-05, 9.727799999999925e-05, 9.76530000000031e-05, 9.812499999999752e-05, 9.745800000000165e-05, 9.805499999999967e-05, 9.794400000000258e-05, 9.71660000000027e-05, 9.80410000000001e-05, 9.745800000000165e-05, 9.775000000000061e-05, 9.727799999999925e-05, 9.743000000000251e-05, 9.795899999999469e-05, 9.791600000000344e-05]</msg>
<status status="PASS" starttime="20201029 12:45:14.520" endtime="20201029 12:45:14.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.509" endtime="20201029 12:45:14.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:14.537" endtime="20201029 12:45:14.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.531" endtime="20201029 12:45:14.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.529" endtime="20201029 12:45:14.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.046" endtime="20201029 12:45:14.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.045" endtime="20201029 12:45:14.562"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.585" endtime="20201029 12:45:14.604"></status>
</kw>
<msg timestamp="20201029 12:45:14.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.581" endtime="20201029 12:45:14.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.607" endtime="20201029 12:45:14.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.613" endtime="20201029 12:45:14.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.574" endtime="20201029 12:45:14.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.569" endtime="20201029 12:45:14.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.636" endtime="20201029 12:45:14.970"></status>
</kw>
<msg timestamp="20201029 12:45:14.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039413917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039512778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.633" endtime="20201029 12:45:14.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039413917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039512778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.980" endtime="20201029 12:45:14.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.998" endtime="20201029 12:45:15.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.626" endtime="20201029 12:45:15.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.621" endtime="20201029 12:45:15.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.015" level="INFO">${RESULT} = [{'diff': 9.88609999999987e-05}, {'diff': 9.855599999999964e-05}, {'diff': 9.916599999999776e-05}, {'diff': 9.888899999999784e-05}, {'diff': 9.872200000000247e-05}, {'diff': 9.913900000000503e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:15.007" endtime="20201029 12:45:15.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:15.026" level="INFO">${ACCURACY} = {'diff': [9.88609999999987e-05, 9.855599999999964e-05, 9.916599999999776e-05, 9.888899999999784e-05, 9.872200000000247e-05, 9.913900000000503e-05, 9.826400000000068e-05, 9.837499999999777e-05, 9.86659...</msg>
<status status="PASS" starttime="20201029 12:45:15.017" endtime="20201029 12:45:15.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.037" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:45:15.034" endtime="20201029 12:45:15.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.042" level="INFO">VALUE: [9.88609999999987e-05, 9.855599999999964e-05, 9.916599999999776e-05, 9.888899999999784e-05, 9.872200000000247e-05, 9.913900000000503e-05, 9.826400000000068e-05, 9.837499999999777e-05, 9.866599999999726e-05, 9.9028000000001e-05, 9.854099999999366e-05, 9.883299999999956e-05, 9.887500000000521e-05, 9.875000000000161e-05, 9.81530000000036e-05, 9.916699999999723e-05, 9.884700000000607e-05, 9.858399999999878e-05, 9.848599999999486e-05, 9.865299999999716e-05, 9.840300000000385e-05, 9.905600000000014e-05, 9.920799999999647e-05, 9.915299999999766e-05, 9.861100000000539e-05, 9.883399999999903e-05, 9.861099999999845e-05, 9.911099999999895e-05, 9.890299999999741e-05, 9.826400000000068e-05, 9.833399999999853e-05, 9.872199999999554e-05, 9.826400000000068e-05, 9.856899999999974e-05, 9.827700000000078e-05, 9.891699999999698e-05, 9.901400000000143e-05, 9.827800000000025e-05, 9.834700000000557e-05, 9.831999999999896e-05, 9.880500000000042e-05, 9.904200000000057e-05, 9.847200000000222e-05, 9.890299999999741e-05, 9.913899999999809e-05, 9.904099999999416e-05, 9.881899999999999e-05, 9.859700000000582e-05, 9.840299999999691e-05, 9.847299999999476e-05]</msg>
<status status="PASS" starttime="20201029 12:45:15.039" endtime="20201029 12:45:15.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.028" endtime="20201029 12:45:15.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:15.055" endtime="20201029 12:45:15.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.050" endtime="20201029 12:45:15.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.048" endtime="20201029 12:45:15.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.564" endtime="20201029 12:45:15.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.563" endtime="20201029 12:45:15.079"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.102" endtime="20201029 12:45:15.121"></status>
</kw>
<msg timestamp="20201029 12:45:15.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.098" endtime="20201029 12:45:15.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.124" endtime="20201029 12:45:15.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.130" endtime="20201029 12:45:15.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.091" endtime="20201029 12:45:15.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.086" endtime="20201029 12:45:15.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.153" endtime="20201029 12:45:15.500"></status>
</kw>
<msg timestamp="20201029 12:45:15.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039277389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039377444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.150" endtime="20201029 12:45:15.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039277389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039377444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.509" endtime="20201029 12:45:15.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.527" endtime="20201029 12:45:15.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.143" endtime="20201029 12:45:15.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.138" endtime="20201029 12:45:15.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.544" level="INFO">${RESULT} = [{'diff': 0.00010005499999999473}, {'diff': 9.99159999999985e-05}, {'diff': 0.00010000000000000286}, {'diff': 0.0001000139999999955}, {'diff': 9.947299999999576e-05}, {'diff': 9.941700000000442e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:15.536" endtime="20201029 12:45:15.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:15.555" level="INFO">${ACCURACY} = {'diff': [0.00010005499999999473, 9.99159999999985e-05, 0.00010000000000000286, 0.0001000139999999955, 9.947299999999576e-05, 9.941700000000442e-05, 9.99860000000033e-05, 9.954200000000107e-05, 9.9860...</msg>
<status status="PASS" starttime="20201029 12:45:15.546" endtime="20201029 12:45:15.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.566" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:45:15.564" endtime="20201029 12:45:15.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.572" level="INFO">VALUE: [0.00010005499999999473, 9.99159999999985e-05, 0.00010000000000000286, 0.0001000139999999955, 9.947299999999576e-05, 9.941700000000442e-05, 9.99860000000033e-05, 9.954200000000107e-05, 9.98609999999997e-05, 9.923700000000202e-05, 9.923600000000254e-05, 0.00010001400000000243, 9.958300000000031e-05, 0.00010012499999999952, 0.00010006900000000124, 9.976399999999525e-05, 9.949999999999543e-05, 0.00010000000000000286, 9.968000000000476e-05, 0.00010011099999999995, 9.965299999999816e-05, 9.933300000000006e-05, 0.00010011099999999995, 9.994399999999765e-05, 0.00010008400000000028, 9.96530000000051e-05, 9.998599999999636e-05, 0.000100028000000002, 9.954200000000107e-05, 9.969400000000433e-05, 9.962499999999902e-05, 9.947200000000322e-05, 9.979100000000185e-05, 9.933400000000647e-05, 9.977800000000175e-05, 9.988899999999884e-05, 9.987499999999927e-05, 9.940300000000485e-05, 9.942999999999758e-05, 9.990299999999841e-05, 9.968100000000424e-05, 9.966700000000467e-05, 9.977700000000228e-05, 9.933300000000006e-05, 9.929200000000082e-05, 9.995900000000363e-05, 0.0001001809999999978, 9.973600000000304e-05, 9.968100000000424e-05, 9.969500000000381e-05]</msg>
<status status="PASS" starttime="20201029 12:45:15.569" endtime="20201029 12:45:15.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.557" endtime="20201029 12:45:15.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:15.584" endtime="20201029 12:45:15.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.580" endtime="20201029 12:45:15.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.577" endtime="20201029 12:45:15.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.081" endtime="20201029 12:45:15.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.080" endtime="20201029 12:45:15.609"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.631" endtime="20201029 12:45:15.650"></status>
</kw>
<msg timestamp="20201029 12:45:15.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.628" endtime="20201029 12:45:15.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.653" endtime="20201029 12:45:15.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.660" endtime="20201029 12:45:15.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.621" endtime="20201029 12:45:15.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.615" endtime="20201029 12:45:15.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.683" endtime="20201029 12:45:16.019"></status>
</kw>
<msg timestamp="20201029 12:45:16.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039227375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039328375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.679" endtime="20201029 12:45:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039227375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039328375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.028" endtime="20201029 12:45:16.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.046" endtime="20201029 12:45:16.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.672" endtime="20201029 12:45:16.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.667" endtime="20201029 12:45:16.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.063" level="INFO">${RESULT} = [{'diff': 0.00010099999999999693}, {'diff': 0.00010066599999999926}, {'diff': 0.0001007359999999971}, {'diff': 0.00010116599999999976}, {'diff': 0.00010022200000000397}, {'diff': 0.0001002360000000035...</msg>
<status status="PASS" starttime="20201029 12:45:16.055" endtime="20201029 12:45:16.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:16.072" level="INFO">${ACCURACY} = {'diff': [0.00010099999999999693, 0.00010066599999999926, 0.0001007359999999971, 0.00010116599999999976, 0.00010022200000000397, 0.00010023600000000354, 0.00010024999999999618, 0.0001008480000000006, ...</msg>
<status status="PASS" starttime="20201029 12:45:16.065" endtime="20201029 12:45:16.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.083" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:45:16.081" endtime="20201029 12:45:16.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.088" level="INFO">VALUE: [0.00010099999999999693, 0.00010066599999999926, 0.0001007359999999971, 0.00010116599999999976, 0.00010022200000000397, 0.00010023600000000354, 0.00010024999999999618, 0.0001008480000000006, 0.0001008060000000019, 0.00010045900000000413, 0.00010105500000000267, 0.00010104199999999564, 0.000100513999999996, 0.00010106900000000224, 0.00010038899999999934, 0.00010098599999999736, 0.00010090299999999941, 0.00010038899999999934, 0.00010080499999999548, 0.00010075000000000361, 0.00010106999999999478, 0.0001007359999999971, 0.00010040299999999891, 0.00010022200000000397, 0.00010040200000000638, 0.00010094399999999865, 0.00010070900000000438, 0.00010049999999999643, 0.00010034700000000063, 0.00010026400000000268, 0.0001006660000000062, 0.00010109700000000138, 0.00010044400000000508, 0.00010075000000000361, 0.0001002359999999966, 0.00010063899999999959, 0.00010093099999999855, 0.000101028000000003, 0.00010029199999999489, 0.0001003480000000001, 0.00010037499999999977, 0.00010030500000000192, 0.00010092999999999908, 0.00010029199999999489, 0.00010102799999999607, 0.00010062500000000002, 0.000100415999999999, 0.00010038899999999934, 0.00010058400000000078, 0.00010112500000000052]</msg>
<status status="PASS" starttime="20201029 12:45:16.085" endtime="20201029 12:45:16.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.074" endtime="20201029 12:45:16.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.101" endtime="20201029 12:45:16.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.096" endtime="20201029 12:45:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.094" endtime="20201029 12:45:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.611" endtime="20201029 12:45:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.610" endtime="20201029 12:45:16.126"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.148" endtime="20201029 12:45:16.169"></status>
</kw>
<msg timestamp="20201029 12:45:16.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.145" endtime="20201029 12:45:16.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.172" endtime="20201029 12:45:16.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.178" endtime="20201029 12:45:16.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.138" endtime="20201029 12:45:16.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.132" endtime="20201029 12:45:16.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.202" endtime="20201029 12:45:16.538"></status>
</kw>
<msg timestamp="20201029 12:45:16.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041150569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041252319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.198" endtime="20201029 12:45:16.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041150569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041252319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.547" endtime="20201029 12:45:16.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.565" endtime="20201029 12:45:16.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.191" endtime="20201029 12:45:16.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.186" endtime="20201029 12:45:16.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.582" level="INFO">${RESULT} = [{'diff': 0.00010175000000000461}, {'diff': 0.00010174999999999768}, {'diff': 0.00010147200000000522}, {'diff': 0.00010155600000000264}, {'diff': 0.00010201299999999802}, {'diff': 0.000102028000000004...</msg>
<status status="PASS" starttime="20201029 12:45:16.573" endtime="20201029 12:45:16.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:16.591" level="INFO">${ACCURACY} = {'diff': [0.00010175000000000461, 0.00010174999999999768, 0.00010147200000000522, 0.00010155600000000264, 0.00010201299999999802, 0.000102028000000004, 0.0001022359999999986, 0.00010205499999999673, 0...</msg>
<status status="PASS" starttime="20201029 12:45:16.584" endtime="20201029 12:45:16.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.602" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:45:16.600" endtime="20201029 12:45:16.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.607" level="INFO">VALUE: [0.00010175000000000461, 0.00010174999999999768, 0.00010147200000000522, 0.00010155600000000264, 0.00010201299999999802, 0.000102028000000004, 0.0001022359999999986, 0.00010205499999999673, 0.00010143099999999905, 0.00010215300000000066, 0.00010204200000000357, 0.00010117999999999933, 0.00010184699999999519, 0.00010198700000000477, 0.00010205600000000314, 0.00010180499999999648, 0.0001013610000000012, 0.00010138900000000034, 0.0001016939999999994, 0.00010211099999999501, 0.0001018610000000017, 0.00010149999999999743, 0.00010134700000000163, 0.00010159700000000188, 0.00010177800000000375, 0.00010191699999999998, 0.00010126399999999675, 0.0001017359999999981, 0.00010127800000000325, 0.0001015689999999958, 0.00010216700000000023, 0.00010177799999999682, 0.00010187499999999433, 0.00010143099999999905, 0.00010156900000000274, 0.0001013060000000024, 0.00010137500000000077, 0.00010188900000000084, 0.00010148599999999786, 0.00010133299999999512, 0.00010195900000000563, 0.00010208400000000228, 0.0001016939999999994, 0.00010148599999999786, 0.00010190300000000041, 0.00010145799999999872, 0.00010167999999999983, 0.0001018060000000029, 0.00010129200000000282, 0.00010199999999999793]</msg>
<status status="PASS" starttime="20201029 12:45:16.604" endtime="20201029 12:45:16.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.593" endtime="20201029 12:45:16.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.621" endtime="20201029 12:45:16.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.615" endtime="20201029 12:45:16.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.613" endtime="20201029 12:45:16.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.128" endtime="20201029 12:45:16.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.126" endtime="20201029 12:45:16.646"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.668" endtime="20201029 12:45:16.687"></status>
</kw>
<msg timestamp="20201029 12:45:16.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.665" endtime="20201029 12:45:16.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.691" endtime="20201029 12:45:16.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.697" endtime="20201029 12:45:16.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.658" endtime="20201029 12:45:16.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.652" endtime="20201029 12:45:16.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.720" endtime="20201029 12:45:17.055"></status>
</kw>
<msg timestamp="20201029 12:45:17.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039228583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039331764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.717" endtime="20201029 12:45:17.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039228583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039331764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.064" endtime="20201029 12:45:17.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.082" endtime="20201029 12:45:17.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.710" endtime="20201029 12:45:17.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.705" endtime="20201029 12:45:17.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.099" level="INFO">${RESULT} = [{'diff': 0.0001031810000000008}, {'diff': 0.00010279100000000485}, {'diff': 0.0001032359999999996}, {'diff': 0.00010270899999999944}, {'diff': 0.00010294400000000065}, {'diff': 0.00010222199999999904...</msg>
<status status="PASS" starttime="20201029 12:45:17.091" endtime="20201029 12:45:17.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:17.110" level="INFO">${ACCURACY} = {'diff': [0.0001031810000000008, 0.00010279100000000485, 0.0001032359999999996, 0.00010270899999999944, 0.00010294400000000065, 0.00010222199999999904, 0.00010255499999999723, 0.00010291700000000098, ...</msg>
<status status="PASS" starttime="20201029 12:45:17.101" endtime="20201029 12:45:17.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.120" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:45:17.118" endtime="20201029 12:45:17.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.126" level="INFO">VALUE: [0.0001031810000000008, 0.00010279100000000485, 0.0001032359999999996, 0.00010270899999999944, 0.00010294400000000065, 0.00010222199999999904, 0.00010255499999999723, 0.00010291700000000098, 0.00010226399999999775, 0.00010265200000000169, 0.00010252799999999757, 0.00010244400000000015, 0.00010256900000000374, 0.00010255499999999723, 0.00010255499999999723, 0.00010315300000000166, 0.00010297199999999979, 0.00010230599999999646, 0.00010312500000000252, 0.0001026940000000004, 0.00010245799999999972, 0.00010247199999999929, 0.00010249999999999843, 0.00010238900000000134, 0.00010316700000000123, 0.00010277800000000475, 0.00010277800000000475, 0.00010233299999999612, 0.00010259700000000288, 0.00010259700000000288, 0.00010280599999999696, 0.00010313899999999515, 0.0001029160000000015, 0.00010233300000000306, 0.00010302700000000553, 0.00010319500000000037, 0.00010234699999999569, 0.00010318000000000133, 0.00010230499999999698, 0.0001026940000000004, 0.00010326399999999875, 0.0001025689999999968, 0.00010275000000000561, 0.00010272199999999954, 0.00010280599999999696, 0.00010256900000000374, 0.00010236200000000167, 0.00010225000000000511, 0.00010287499999999533, 0.00010294500000000012]</msg>
<status status="PASS" starttime="20201029 12:45:17.123" endtime="20201029 12:45:17.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.111" endtime="20201029 12:45:17.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.138" endtime="20201029 12:45:17.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.134" endtime="20201029 12:45:17.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.131" endtime="20201029 12:45:17.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.648" endtime="20201029 12:45:17.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.647" endtime="20201029 12:45:17.163"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.185" endtime="20201029 12:45:17.204"></status>
</kw>
<msg timestamp="20201029 12:45:17.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.182" endtime="20201029 12:45:17.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.207" endtime="20201029 12:45:17.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.214" endtime="20201029 12:45:17.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.175" endtime="20201029 12:45:17.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.169" endtime="20201029 12:45:17.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.236" endtime="20201029 12:45:17.570"></status>
</kw>
<msg timestamp="20201029 12:45:17.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039078361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039182153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.233" endtime="20201029 12:45:17.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039078361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039182153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.579" endtime="20201029 12:45:17.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.597" endtime="20201029 12:45:17.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.226" endtime="20201029 12:45:17.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.222" endtime="20201029 12:45:17.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.614" level="INFO">${RESULT} = [{'diff': 0.00010379199999999839}, {'diff': 0.00010358399999999685}, {'diff': 0.00010358400000000378}, {'diff': 0.00010337500000000277}, {'diff': 0.00010358299999999737}, {'diff': 0.000103777999999998...</msg>
<status status="PASS" starttime="20201029 12:45:17.606" endtime="20201029 12:45:17.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:17.625" level="INFO">${ACCURACY} = {'diff': [0.00010379199999999839, 0.00010358399999999685, 0.00010358400000000378, 0.00010337500000000277, 0.00010358299999999737, 0.00010377799999999882, 0.00010404099999999916, 0.00010341599999999507...</msg>
<status status="PASS" starttime="20201029 12:45:17.616" endtime="20201029 12:45:17.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.636" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:45:17.634" endtime="20201029 12:45:17.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.641" level="INFO">VALUE: [0.00010379199999999839, 0.00010358399999999685, 0.00010358400000000378, 0.00010337500000000277, 0.00010358299999999737, 0.00010377799999999882, 0.00010404099999999916, 0.00010341599999999507, 0.00010362500000000302, 0.00010398600000000036, 0.00010413900000000309, 0.00010359800000000335, 0.00010408299999999787, 0.0001038889999999959, 0.00010329099999999841, 0.00010380500000000542, 0.00010402799999999907, 0.0001033060000000044, 0.00010372200000000054, 0.00010349999999999943, 0.00010368000000000183, 0.00010341699999999454, 0.00010384700000000413, 0.00010357000000000421, 0.0001041810000000018, 0.00010384699999999719, 0.00010397200000000079, 0.00010381999999999753, 0.00010384699999999719, 0.00010397200000000079, 0.00010388900000000284, 0.00010390300000000241, 0.00010384700000000413, 0.00010415300000000266, 0.00010411099999999701, 0.00010349999999999943, 0.00010338900000000234, 0.00010415299999999572, 0.00010412500000000352, 0.00010363900000000259, 0.00010408300000000481, 0.00010355499999999823, 0.0001035689999999978, 0.00010361099999999651, 0.00010380599999999796, 0.00010365299999999522, 0.00010409699999999744, 0.00010380599999999796, 0.00010327799999999832, 0.00010395899999999375]</msg>
<status status="PASS" starttime="20201029 12:45:17.638" endtime="20201029 12:45:17.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.627" endtime="20201029 12:45:17.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.654" endtime="20201029 12:45:17.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.650" endtime="20201029 12:45:17.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.647" endtime="20201029 12:45:17.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.165" endtime="20201029 12:45:17.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.164" endtime="20201029 12:45:17.679"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.701" endtime="20201029 12:45:17.721"></status>
</kw>
<msg timestamp="20201029 12:45:17.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.698" endtime="20201029 12:45:17.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.724" endtime="20201029 12:45:17.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.730" endtime="20201029 12:45:17.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.691" endtime="20201029 12:45:17.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.685" endtime="20201029 12:45:17.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.753" endtime="20201029 12:45:18.089"></status>
</kw>
<msg timestamp="20201029 12:45:18.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039611014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.750" endtime="20201029 12:45:18.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039611014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.098" endtime="20201029 12:45:18.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.116" endtime="20201029 12:45:18.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.742" endtime="20201029 12:45:18.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.738" endtime="20201029 12:45:18.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.133" level="INFO">${RESULT} = [{'diff': 0.00010434699999999769}, {'diff': 0.00010455499999999923}, {'diff': 0.00010450000000000043}, {'diff': 0.00010438800000000387}, {'diff': 0.00010486099999999776}, {'diff': 0.000104819000000005...</msg>
<status status="PASS" starttime="20201029 12:45:18.124" endtime="20201029 12:45:18.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:18.142" level="INFO">${ACCURACY} = {'diff': [0.00010434699999999769, 0.00010455499999999923, 0.00010450000000000043, 0.00010438800000000387, 0.00010486099999999776, 0.00010481900000000599, 0.00010461099999999751, 0.00010486099999999776...</msg>
<status status="PASS" starttime="20201029 12:45:18.135" endtime="20201029 12:45:18.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.153" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:45:18.151" endtime="20201029 12:45:18.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.158" level="INFO">VALUE: [0.00010434699999999769, 0.00010455499999999923, 0.00010450000000000043, 0.00010438800000000387, 0.00010486099999999776, 0.00010481900000000599, 0.00010461099999999751, 0.00010486099999999776, 0.000104514, 0.00010501300000000102, 0.00010431999999999803, 0.00010459699999999794, 0.0001043889999999964, 0.00010467999999999589, 0.00010429199999999889, 0.00010523599999999467, 0.00010526400000000075, 0.00010466699999999579, 0.00010465300000000316, 0.00010436099999999726, 0.00010430599999999846, 0.00010440300000000291, 0.00010502700000000059, 0.00010490299999999647, 0.00010494499999999518, 0.0001046940000000024, 0.00010434799999999717, 0.00010508399999999835, 0.00010490300000000341, 0.00010511099999999801, 0.0001048480000000046, 0.00010516699999999629, 0.00010462500000000402, 0.00010441700000000248, 0.0001045559999999987, 0.00010458299999999837, 0.00010504199999999964, 0.00010431900000000549, 0.00010502800000000007, 0.00010427799999999932, 0.00010512499999999758, 0.00010490299999999647, 0.00010505500000000667, 0.00010509800000000485, 0.00010442999999999564, 0.00010493000000000308, 0.000104514, 0.00010508299999999887, 0.00010484700000000513, 0.00010454199999999914]</msg>
<status status="PASS" starttime="20201029 12:45:18.155" endtime="20201029 12:45:18.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.144" endtime="20201029 12:45:18.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.176" endtime="20201029 12:45:18.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.172" endtime="20201029 12:45:18.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.170" endtime="20201029 12:45:18.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.681" endtime="20201029 12:45:18.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.680" endtime="20201029 12:45:18.201"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.224" endtime="20201029 12:45:18.249"></status>
</kw>
<msg timestamp="20201029 12:45:18.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.220" endtime="20201029 12:45:18.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.252" endtime="20201029 12:45:18.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.258" endtime="20201029 12:45:18.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.213" endtime="20201029 12:45:18.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.208" endtime="20201029 12:45:18.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.282" endtime="20201029 12:45:18.617"></status>
</kw>
<msg timestamp="20201029 12:45:18.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044976403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045082528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.278" endtime="20201029 12:45:18.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044976403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045082528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.626" endtime="20201029 12:45:18.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.648" endtime="20201029 12:45:18.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.271" endtime="20201029 12:45:18.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.266" endtime="20201029 12:45:18.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.670" level="INFO">${RESULT} = [{'diff': 0.00010612499999999858}, {'diff': 0.00010541700000000348}, {'diff': 0.00010547200000000229}, {'diff': 0.00010620799999999653}, {'diff': 0.00010593000000000408}, {'diff': 0.000106013999999994...</msg>
<status status="PASS" starttime="20201029 12:45:18.659" endtime="20201029 12:45:18.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:18.683" level="INFO">${ACCURACY} = {'diff': [0.00010612499999999858, 0.00010541700000000348, 0.00010547200000000229, 0.00010620799999999653, 0.00010593000000000408, 0.00010601399999999456, 0.00010625000000000218, 0.00010525000000000118...</msg>
<status status="PASS" starttime="20201029 12:45:18.673" endtime="20201029 12:45:18.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.698" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:45:18.695" endtime="20201029 12:45:18.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.704" level="INFO">VALUE: [0.00010612499999999858, 0.00010541700000000348, 0.00010547200000000229, 0.00010620799999999653, 0.00010593000000000408, 0.00010601399999999456, 0.00010625000000000218, 0.00010525000000000118, 0.0001053889999999974, 0.00010555500000000023, 0.00010575000000000168, 0.00010561099999999851, 0.00010579100000000091, 0.00010626400000000175, 0.00010527800000000032, 0.00010572200000000254, 0.00010586099999999876, 0.00010590299999999747, 0.00010624999999999524, 0.00010552800000000057, 0.00010534699999999869, 0.00010567999999999689, 0.0001053889999999974, 0.00010626300000000227, 0.00010547199999999535, 0.00010581900000000005, 0.00010556999999999928, 0.00010531899999999955, 0.00010566700000000373, 0.00010597200000000279, 0.00010595800000000322, 0.00010587499999999833, 0.00010619399999999696, 0.00010597199999999585, 0.00010534799999999817, 0.00010547199999999535, 0.00010545799999999578, 0.00010527700000000084, 0.0001052219999999951, 0.00010592999999999714, 0.000105514000000001, 0.00010612499999999858, 0.00010523700000000108, 0.00010563899999999765, 0.00010556999999999928, 0.0001055689999999998, 0.00010538900000000434, 0.00010567999999999689, 0.00010536099999999826, 0.00010526400000000075]</msg>
<status status="PASS" starttime="20201029 12:45:18.701" endtime="20201029 12:45:18.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.685" endtime="20201029 12:45:18.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.720" endtime="20201029 12:45:18.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.714" endtime="20201029 12:45:18.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.712" endtime="20201029 12:45:18.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.204" endtime="20201029 12:45:18.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.202" endtime="20201029 12:45:18.746"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.775" endtime="20201029 12:45:18.801"></status>
</kw>
<msg timestamp="20201029 12:45:18.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.765" endtime="20201029 12:45:18.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.806" endtime="20201029 12:45:18.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.818" endtime="20201029 12:45:18.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.758" endtime="20201029 12:45:18.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.752" endtime="20201029 12:45:18.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.859" endtime="20201029 12:45:19.231"></status>
</kw>
<msg timestamp="20201029 12:45:19.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047342125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047448875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.853" endtime="20201029 12:45:19.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047342125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047448875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.241" endtime="20201029 12:45:19.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.261" endtime="20201029 12:45:19.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.840" endtime="20201029 12:45:19.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.832" endtime="20201029 12:45:19.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.278" level="INFO">${RESULT} = [{'diff': 0.00010675000000000268}, {'diff': 0.00010627800000000132}, {'diff': 0.0001063889999999984}, {'diff': 0.00010655500000000123}, {'diff': 0.0001065690000000008}, {'diff': 0.00010670799999999703...</msg>
<status status="PASS" starttime="20201029 12:45:19.269" endtime="20201029 12:45:19.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:19.288" level="INFO">${ACCURACY} = {'diff': [0.00010675000000000268, 0.00010627800000000132, 0.0001063889999999984, 0.00010655500000000123, 0.0001065690000000008, 0.00010670799999999703, 0.00010708400000000035, 0.00010661099999999951, ...</msg>
<status status="PASS" starttime="20201029 12:45:19.280" endtime="20201029 12:45:19.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.299" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:45:19.297" endtime="20201029 12:45:19.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.304" level="INFO">VALUE: [0.00010675000000000268, 0.00010627800000000132, 0.0001063889999999984, 0.00010655500000000123, 0.0001065690000000008, 0.00010670799999999703, 0.00010708400000000035, 0.00010661099999999951, 0.00010651399999999506, 0.00010620799999999653, 0.00010719399999999796, 0.00010686200000000617, 0.0001065560000000007, 0.00010663899999999865, 0.00010726400000000275, 0.00010650000000000243, 0.00010680500000000148, 0.00010705500000000173, 0.00010654200000000114, 0.00010663799999999918, 0.0001065690000000008, 0.00010692999999999814, 0.00010690299999999847, 0.00010670799999999703, 0.00010649999999999549, 0.00010648599999999592, 0.00010655500000000123, 0.00010672299999999607, 0.0001068889999999989, 0.00010644399999999721, 0.0001063610000000062, 0.0001067769999999954, 0.00010686099999999976, 0.00010663900000000559, 0.00010659799999999942, 0.00010648599999999592, 0.0001067360000000031, 0.00010620900000000294, 0.00010631900000000055, 0.00010727700000000284, 0.0001068340000000001, 0.0001063889999999984, 0.0001072360000000036, 0.00010669399999999746, 0.00010651299999999558, 0.00010701399999999556, 0.00010637499999999883, 0.00010695799999999728, 0.00010661099999999951, 0.0001070690000000013]</msg>
<status status="PASS" starttime="20201029 12:45:19.301" endtime="20201029 12:45:19.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.290" endtime="20201029 12:45:19.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.316" endtime="20201029 12:45:19.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.312" endtime="20201029 12:45:19.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.310" endtime="20201029 12:45:19.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.748" endtime="20201029 12:45:19.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.746" endtime="20201029 12:45:19.342"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.364" endtime="20201029 12:45:19.385"></status>
</kw>
<msg timestamp="20201029 12:45:19.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.361" endtime="20201029 12:45:19.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.388" endtime="20201029 12:45:19.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.394" endtime="20201029 12:45:19.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.354" endtime="20201029 12:45:19.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.348" endtime="20201029 12:45:19.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.417" endtime="20201029 12:45:19.765"></status>
</kw>
<msg timestamp="20201029 12:45:19.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039439694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039547542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.414" endtime="20201029 12:45:19.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039439694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039547542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.774" endtime="20201029 12:45:19.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.792" endtime="20201029 12:45:19.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.407" endtime="20201029 12:45:19.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.402" endtime="20201029 12:45:19.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.809" level="INFO">${RESULT} = [{'diff': 0.00010784800000000067}, {'diff': 0.00010820800000000547}, {'diff': 0.00010800000000000393}, {'diff': 0.0001075839999999939}, {'diff': 0.00010790299999999947}, {'diff': 0.0001073749999999998...</msg>
<status status="PASS" starttime="20201029 12:45:19.800" endtime="20201029 12:45:19.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:19.819" level="INFO">${ACCURACY} = {'diff': [0.00010784800000000067, 0.00010820800000000547, 0.00010800000000000393, 0.0001075839999999939, 0.00010790299999999947, 0.00010737499999999983, 0.0001078340000000011, 0.0001080140000000035, 0...</msg>
<status status="PASS" starttime="20201029 12:45:19.811" endtime="20201029 12:45:19.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.830" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:45:19.828" endtime="20201029 12:45:19.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.835" level="INFO">VALUE: [0.00010784800000000067, 0.00010820800000000547, 0.00010800000000000393, 0.0001075839999999939, 0.00010790299999999947, 0.00010737499999999983, 0.0001078340000000011, 0.0001080140000000035, 0.0001080690000000023, 0.00010765199999999975, 0.00010731900000000155, 0.00010792999999999914, 0.00010784700000000119, 0.00010737499999999983, 0.00010758400000000085, 0.00010744399999999821, 0.00010761100000000051, 0.00010737499999999983, 0.00010744399999999821, 0.00010744499999999768, 0.00010790299999999947, 0.0001078889999999999, 0.00010727800000000232, 0.00010811100000000101, 0.00010743099999999811, 0.000107902, 0.00010800000000000393, 0.00010832000000000203, 0.00010790299999999947, 0.00010776400000000325, 0.00010775000000000368, 0.00010774999999999674, 0.00010795899999999775, 0.00010741699999999854, 0.00010807000000000178, 0.00010811100000000101, 0.00010751399999999606, 0.00010745899999999725, 0.00010787500000000033, 0.00010812500000000058, 0.000107514000000003, 0.00010816599999999982, 0.0001078889999999999, 0.00010733399999999366, 0.00010784800000000067, 0.0001075560000000017, 0.00010784700000000119, 0.00010747200000000429, 0.00010782000000000153, 0.00010815299999999972]</msg>
<status status="PASS" starttime="20201029 12:45:19.832" endtime="20201029 12:45:19.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.821" endtime="20201029 12:45:19.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.848" endtime="20201029 12:45:19.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.843" endtime="20201029 12:45:19.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.841" endtime="20201029 12:45:19.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.344" endtime="20201029 12:45:19.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.342" endtime="20201029 12:45:19.873"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.895" endtime="20201029 12:45:19.916"></status>
</kw>
<msg timestamp="20201029 12:45:19.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.892" endtime="20201029 12:45:19.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.919" endtime="20201029 12:45:19.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.925" endtime="20201029 12:45:19.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.885" endtime="20201029 12:45:19.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.879" endtime="20201029 12:45:19.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.948" endtime="20201029 12:45:20.297"></status>
</kw>
<msg timestamp="20201029 12:45:20.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039201, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039309764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:19.945" endtime="20201029 12:45:20.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039201, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039309764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:20.307" endtime="20201029 12:45:20.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.325" endtime="20201029 12:45:20.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.938" endtime="20201029 12:45:20.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.933" endtime="20201029 12:45:20.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:20.342" level="INFO">${RESULT} = [{'diff': 0.00010876399999999731}, {'diff': 0.00010832000000000203}, {'diff': 0.00010919399999999996}, {'diff': 0.00010899999999999799}, {'diff': 0.00010848599999999792}, {'diff': 0.000109098000000001...</msg>
<status status="PASS" starttime="20201029 12:45:20.333" endtime="20201029 12:45:20.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:20.350" level="INFO">${ACCURACY} = {'diff': [0.00010876399999999731, 0.00010832000000000203, 0.00010919399999999996, 0.00010899999999999799, 0.00010848599999999792, 0.00010909800000000192, 0.00010897200000000579, 0.00010912500000000158...</msg>
<status status="PASS" starttime="20201029 12:45:20.344" endtime="20201029 12:45:20.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.361" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:45:20.359" endtime="20201029 12:45:20.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.366" level="INFO">VALUE: [0.00010876399999999731, 0.00010832000000000203, 0.00010919399999999996, 0.00010899999999999799, 0.00010848599999999792, 0.00010909800000000192, 0.00010897200000000579, 0.00010912500000000158, 0.00010851399999999706, 0.00010862500000000108, 0.00010926299999999833, 0.00010911099999999507, 0.00010869500000000587, 0.00010841699999999954, 0.0001090140000000045, 0.00010834799999999423, 0.0001088890000000009, 0.0001087219999999986, 0.00010929199999999695, 0.00010861100000000151, 0.00010884699999999525, 0.00010880499999999654, 0.0001087089999999985, 0.0001092219999999991, 0.00010901399999999756, 0.00010887500000000133, 0.00010869399999999946, 0.00010924999999999824, 0.00010882000000000253, 0.00010908399999999541, 0.00010913900000000115, 0.00010848599999999792, 0.00010911100000000201, 0.00010861100000000151, 0.000108514000000004, 0.0001085560000000027, 0.00010834700000000169, 0.00010933399999999566, 0.00010891600000000057, 0.00010841699999999954, 0.00010866600000000032, 0.0001090690000000033, 0.00010851399999999706, 0.00010919399999999996, 0.00010843099999999911, 0.00010874999999999774, 0.00010855599999999577, 0.00010931900000000355, 0.00010834699999999475, 0.00010831900000000255]</msg>
<status status="PASS" starttime="20201029 12:45:20.364" endtime="20201029 12:45:20.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.352" endtime="20201029 12:45:20.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.379" endtime="20201029 12:45:20.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.374" endtime="20201029 12:45:20.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.372" endtime="20201029 12:45:20.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.875" endtime="20201029 12:45:20.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.874" endtime="20201029 12:45:20.404"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.426" endtime="20201029 12:45:20.449"></status>
</kw>
<msg timestamp="20201029 12:45:20.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.423" endtime="20201029 12:45:20.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.452" endtime="20201029 12:45:20.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.458" endtime="20201029 12:45:20.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.416" endtime="20201029 12:45:20.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.410" endtime="20201029 12:45:20.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.481" endtime="20201029 12:45:20.827"></status>
</kw>
<msg timestamp="20201029 12:45:20.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040952056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041062014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.478" endtime="20201029 12:45:20.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040952056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041062014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.836" endtime="20201029 12:45:20.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.854" endtime="20201029 12:45:20.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.471" endtime="20201029 12:45:20.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.466" endtime="20201029 12:45:20.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:20.870" level="INFO">${RESULT} = [{'diff': 0.00010995800000000028}, {'diff': 0.00011007000000000378}, {'diff': 0.00011029099999999847}, {'diff': 0.00011015300000000172}, {'diff': 0.00010976399999999831}, {'diff': 0.000110055999999997...</msg>
<status status="PASS" starttime="20201029 12:45:20.862" endtime="20201029 12:45:20.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:20.879" level="INFO">${ACCURACY} = {'diff': [0.00010995800000000028, 0.00011007000000000378, 0.00011029099999999847, 0.00011015300000000172, 0.00010976399999999831, 0.00011005599999999727, 0.0001098890000000019, 0.00010934700000000269,...</msg>
<status status="PASS" starttime="20201029 12:45:20.872" endtime="20201029 12:45:20.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.890" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:45:20.888" endtime="20201029 12:45:20.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.895" level="INFO">VALUE: [0.00010995800000000028, 0.00011007000000000378, 0.00011029099999999847, 0.00011015300000000172, 0.00010976399999999831, 0.00011005599999999727, 0.0001098890000000019, 0.00010934700000000269, 0.0001097219999999996, 0.00011018100000000086, 0.00011011100000000301, 0.00010936100000000226, 0.00010977800000000482, 0.00010943000000000064, 0.00011019500000000043, 0.00010965200000000175, 0.00010943000000000064, 0.00010977799999999788, 0.00010958300000000337, 0.00010969499999999993, 0.00011011199999999555, 0.00010981999999999659, 0.00010981899999999711, 0.0001095549999999973, 0.00010930500000000398, 0.00010998599999999942, 0.00010963900000000165, 0.00010980599999999702, 0.00010968100000000036, 0.00010934800000000217, 0.00011017999999999445, 0.00011019400000000096, 0.00010958299999999643, 0.00010943100000000011, 0.00010976400000000525, 0.00011011199999999555, 0.0001095549999999973, 0.00010991700000000104, 0.0001102220000000001, 0.00010986099999999582, 0.00011023599999999967, 0.00010980499999999754, 0.00010965299999999428, 0.00011019500000000043, 0.00011011199999999555, 0.00011015300000000172, 0.00010945799999999978, 0.00010941700000000054, 0.00010948700000000533, 0.00010965300000000122]</msg>
<status status="PASS" starttime="20201029 12:45:20.892" endtime="20201029 12:45:20.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.881" endtime="20201029 12:45:20.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.909" endtime="20201029 12:45:20.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.903" endtime="20201029 12:45:20.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.901" endtime="20201029 12:45:20.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.406" endtime="20201029 12:45:20.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.405" endtime="20201029 12:45:20.934"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.956" endtime="20201029 12:45:20.978"></status>
</kw>
<msg timestamp="20201029 12:45:20.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.953" endtime="20201029 12:45:20.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.981" endtime="20201029 12:45:20.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.987" endtime="20201029 12:45:20.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.946" endtime="20201029 12:45:20.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.940" endtime="20201029 12:45:20.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.011" endtime="20201029 12:45:21.358"></status>
</kw>
<msg timestamp="20201029 12:45:21.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039392528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039503194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.007" endtime="20201029 12:45:21.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039392528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039503194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.367" endtime="20201029 12:45:21.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.385" endtime="20201029 12:45:21.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.000" endtime="20201029 12:45:21.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.995" endtime="20201029 12:45:21.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:21.402" level="INFO">${RESULT} = [{'diff': 0.00011066599999999538}, {'diff': 0.00011056899999999786}, {'diff': 0.00011115199999999631}, {'diff': 0.00011011099999999607}, {'diff': 0.00011029199999999795}, {'diff': 0.000111263999999999...</msg>
<status status="PASS" starttime="20201029 12:45:21.393" endtime="20201029 12:45:21.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:21.412" level="INFO">${ACCURACY} = {'diff': [0.00011066599999999538, 0.00011056899999999786, 0.00011115199999999631, 0.00011011099999999607, 0.00011029199999999795, 0.00011126399999999981, 0.00011061100000000351, 0.00011109700000000444...</msg>
<status status="PASS" starttime="20201029 12:45:21.404" endtime="20201029 12:45:21.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.423" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:45:21.421" endtime="20201029 12:45:21.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.428" level="INFO">VALUE: [0.00011066599999999538, 0.00011056899999999786, 0.00011115199999999631, 0.00011011099999999607, 0.00011029199999999795, 0.00011126399999999981, 0.00011061100000000351, 0.00011109700000000444, 0.00011048599999999992, 0.00011074999999999974, 0.00011047200000000035, 0.00011081899999999811, 0.00011068100000000136, 0.00011118000000000239, 0.00011074999999999974, 0.00011023699999999914, 0.00011099999999999999, 0.00011099999999999999, 0.00011113900000000315, 0.00011084700000000419, 0.00011099999999999999, 0.00011119400000000196, 0.00011080600000000496, 0.00011095800000000128, 0.00011076399999999931, 0.00011102799999999913, 0.00011079099999999897, 0.00011051399999999906, 0.00011070800000000103, 0.00011069500000000093, 0.00011041600000000207, 0.00011094500000000118, 0.0001112220000000011, 0.00011119400000000196, 0.00011076399999999931, 0.00011037499999999589, 0.00011076399999999931, 0.00011083399999999716, 0.00011031900000000455, 0.00011079200000000539, 0.00011094399999999477, 0.00011056999999999734, 0.00011091600000000257, 0.00011076399999999931, 0.00011031900000000455, 0.00011047299999999982, 0.00011031899999999761, 0.00011056899999999786, 0.00011059700000000394, 0.00011098600000000042]</msg>
<status status="PASS" starttime="20201029 12:45:21.425" endtime="20201029 12:45:21.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.414" endtime="20201029 12:45:21.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:21.440" endtime="20201029 12:45:21.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.436" endtime="20201029 12:45:21.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.433" endtime="20201029 12:45:21.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.936" endtime="20201029 12:45:21.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.935" endtime="20201029 12:45:21.466"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.490" endtime="20201029 12:45:21.512"></status>
</kw>
<msg timestamp="20201029 12:45:21.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.487" endtime="20201029 12:45:21.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.515" endtime="20201029 12:45:21.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.521" endtime="20201029 12:45:21.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.480" endtime="20201029 12:45:21.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.474" endtime="20201029 12:45:21.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.544" endtime="20201029 12:45:21.889"></status>
</kw>
<msg timestamp="20201029 12:45:21.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042076417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.541" endtime="20201029 12:45:21.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041964194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042076417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.898" endtime="20201029 12:45:21.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.916" endtime="20201029 12:45:21.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.534" endtime="20201029 12:45:21.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.529" endtime="20201029 12:45:21.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:21.933" level="INFO">${RESULT} = [{'diff': 0.00011222299999999463}, {'diff': 0.00011195799999999534}, {'diff': 0.00011173599999999423}, {'diff': 0.00011152799999999963}, {'diff': 0.0001120419999999997}, {'diff': 0.0001122080000000025...</msg>
<status status="PASS" starttime="20201029 12:45:21.924" endtime="20201029 12:45:21.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:21.943" level="INFO">${ACCURACY} = {'diff': [0.00011222299999999463, 0.00011195799999999534, 0.00011173599999999423, 0.00011152799999999963, 0.0001120419999999997, 0.00011220800000000253, 0.00011125000000000024, 0.00011211100000000501,...</msg>
<status status="PASS" starttime="20201029 12:45:21.935" endtime="20201029 12:45:21.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.954" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:45:21.952" endtime="20201029 12:45:21.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.960" level="INFO">VALUE: [0.00011222299999999463, 0.00011195799999999534, 0.00011173599999999423, 0.00011152799999999963, 0.0001120419999999997, 0.00011220800000000253, 0.00011125000000000024, 0.00011211100000000501, 0.00011202800000000013, 0.00011133299999999818, 0.00011168099999999542, 0.00011148700000000039, 0.00011184700000000519, 0.00011137500000000383, 0.00011195900000000175, 0.00011137500000000383, 0.00011166599999999638, 0.00011138899999999646, 0.00011141700000000254, 0.00011181899999999911, 0.00011213899999999721, 0.00011145799999999484, 0.00011218100000000286, 0.00011148600000000092, 0.00011197200000000185, 0.00011206899999999936, 0.00011220800000000253, 0.00011194399999999577, 0.00011163899999999671, 0.00011197200000000185, 0.00011183299999999868, 0.00011218000000000339, 0.00011190299999999653, 0.00011143000000000264, 0.00011194500000000218, 0.00011162499999999714, 0.00011175000000000074, 0.00011136200000000374, 0.00011172199999999466, 0.00011216700000000329, 0.00011190199999999706, 0.00011193099999999567, 0.00011186099999999782, 0.00011158300000000537, 0.00011129199999999895, 0.00011193100000000261, 0.00011159800000000442, 0.0001113890000000034, 0.00011212499999999764, 0.0001120969999999985]</msg>
<status status="PASS" starttime="20201029 12:45:21.957" endtime="20201029 12:45:21.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.945" endtime="20201029 12:45:21.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:21.972" endtime="20201029 12:45:21.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.968" endtime="20201029 12:45:21.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.965" endtime="20201029 12:45:21.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.469" endtime="20201029 12:45:21.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.468" endtime="20201029 12:45:21.997"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.020" endtime="20201029 12:45:22.041"></status>
</kw>
<msg timestamp="20201029 12:45:22.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.016" endtime="20201029 12:45:22.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.045" endtime="20201029 12:45:22.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.051" endtime="20201029 12:45:22.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.009" endtime="20201029 12:45:22.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.004" endtime="20201029 12:45:22.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.075" endtime="20201029 12:45:22.423"></status>
</kw>
<msg timestamp="20201029 12:45:22.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039747944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.072" endtime="20201029 12:45:22.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039747944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.432" endtime="20201029 12:45:22.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.450" endtime="20201029 12:45:22.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.064" endtime="20201029 12:45:22.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.060" endtime="20201029 12:45:22.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:22.467" level="INFO">${RESULT} = [{'diff': 0.00011250000000000149}, {'diff': 0.00011258299999999943}, {'diff': 0.00011293100000000361}, {'diff': 0.00011276399999999437}, {'diff': 0.00011219400000000296}, {'diff': 0.000112944000000003...</msg>
<status status="PASS" starttime="20201029 12:45:22.458" endtime="20201029 12:45:22.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:22.476" level="INFO">${ACCURACY} = {'diff': [0.00011250000000000149, 0.00011258299999999943, 0.00011293100000000361, 0.00011276399999999437, 0.00011219400000000296, 0.00011294400000000371, 0.00011216600000000382, 0.0001129299999999972,...</msg>
<status status="PASS" starttime="20201029 12:45:22.469" endtime="20201029 12:45:22.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.486" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:45:22.484" endtime="20201029 12:45:22.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.492" level="INFO">VALUE: [0.00011250000000000149, 0.00011258299999999943, 0.00011293100000000361, 0.00011276399999999437, 0.00011219400000000296, 0.00011294400000000371, 0.00011216600000000382, 0.0001129299999999972, 0.00011287500000000533, 0.00011313899999999821, 0.00011272299999999513, 0.00011222199999999516, 0.00011222199999999516, 0.00011248600000000192, 0.00011245800000000278, 0.00011277800000000088, 0.0001127499999999948, 0.00011219400000000296, 0.00011270800000000303, 0.00011250000000000149, 0.00011245799999999584, 0.00011290299999999753, 0.0001122220000000021, 0.00011276400000000131, 0.00011230500000000004, 0.00011251400000000106, 0.00011243099999999617, 0.00011218000000000339, 0.00011308299999999993, 0.00011247200000000235, 0.0001123890000000044, 0.00011223600000000167, 0.00011255599999999977, 0.000112596999999999, 0.00011215299999999678, 0.00011313899999999821, 0.00011266699999999685, 0.00011297199999999591, 0.00011233300000000612, 0.00011247200000000235, 0.00011245900000000225, 0.00011244399999999627, 0.0001122499999999943, 0.00011279100000000097, 0.00011247199999999541, 0.00011295799999999634, 0.00011311099999999907, 0.00011326399999999487, 0.00011291700000000404, 0.00011281900000000011]</msg>
<status status="PASS" starttime="20201029 12:45:22.489" endtime="20201029 12:45:22.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.477" endtime="20201029 12:45:22.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:22.504" endtime="20201029 12:45:22.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.500" endtime="20201029 12:45:22.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.497" endtime="20201029 12:45:22.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.999" endtime="20201029 12:45:22.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.998" endtime="20201029 12:45:22.529"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.556" endtime="20201029 12:45:22.586"></status>
</kw>
<msg timestamp="20201029 12:45:22.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.548" endtime="20201029 12:45:22.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.590" endtime="20201029 12:45:22.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.599" endtime="20201029 12:45:22.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.541" endtime="20201029 12:45:22.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.535" endtime="20201029 12:45:22.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.622" endtime="20201029 12:45:22.965"></status>
</kw>
<msg timestamp="20201029 12:45:22.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047077431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047191389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.619" endtime="20201029 12:45:22.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047077431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047191389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.975" endtime="20201029 12:45:22.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.993" endtime="20201029 12:45:22.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.612" endtime="20201029 12:45:22.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.607" endtime="20201029 12:45:22.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.010" level="INFO">${RESULT} = [{'diff': 0.00011395799999999734}, {'diff': 0.00011344500000000368}, {'diff': 0.0001140970000000005}, {'diff': 0.0001135550000000013}, {'diff': 0.00011333300000000018}, {'diff': 0.00011401300000000308...</msg>
<status status="PASS" starttime="20201029 12:45:23.001" endtime="20201029 12:45:23.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:23.019" level="INFO">${ACCURACY} = {'diff': [0.00011395799999999734, 0.00011344500000000368, 0.0001140970000000005, 0.0001135550000000013, 0.00011333300000000018, 0.00011401300000000308, 0.00011354100000000172, 0.00011368099999999742, ...</msg>
<status status="PASS" starttime="20201029 12:45:23.012" endtime="20201029 12:45:23.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.029" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:45:23.027" endtime="20201029 12:45:23.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.034" level="INFO">VALUE: [0.00011395799999999734, 0.00011344500000000368, 0.0001140970000000005, 0.0001135550000000013, 0.00011333300000000018, 0.00011401300000000308, 0.00011354100000000172, 0.00011368099999999742, 0.00011333300000000018, 0.00011350000000000249, 0.00011363899999999871, 0.000113597, 0.00011380500000000154, 0.00011327699999999497, 0.00011327699999999497, 0.00011411199999999955, 0.00011354100000000172, 0.00011336099999999932, 0.00011331900000000061, 0.00011318099999999692, 0.0001132220000000031, 0.0001138619999999993, 0.00011407000000000084, 0.00011336099999999932, 0.00011334799999999923, 0.00011405600000000127, 0.00011348600000000292, 0.00011372199999999666, 0.00011412499999999964, 0.00011402800000000213, 0.00011358300000000043, 0.00011327800000000138, 0.00011361199999999905, 0.00011369400000000446, 0.00011358300000000043, 0.00011361099999999957, 0.0001132220000000031, 0.0001133890000000054, 0.0001140420000000017, 0.00011340300000000497, 0.00011379200000000145, 0.00011413899999999921, 0.00011327699999999497, 0.00011345900000000325, 0.00011368100000000436, 0.00011402800000000213, 0.0001133749999999989, 0.00011362499999999914, 0.00011319400000000396, 0.00011383300000000068]</msg>
<status status="PASS" starttime="20201029 12:45:23.032" endtime="20201029 12:45:23.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.020" endtime="20201029 12:45:23.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.048" endtime="20201029 12:45:23.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.043" endtime="20201029 12:45:23.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.040" endtime="20201029 12:45:23.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.531" endtime="20201029 12:45:23.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.530" endtime="20201029 12:45:23.073"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.097" endtime="20201029 12:45:23.117"></status>
</kw>
<msg timestamp="20201029 12:45:23.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.093" endtime="20201029 12:45:23.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.121" endtime="20201029 12:45:23.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.127" endtime="20201029 12:45:23.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.086" endtime="20201029 12:45:23.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.080" endtime="20201029 12:45:23.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.150" endtime="20201029 12:45:23.484"></status>
</kw>
<msg timestamp="20201029 12:45:23.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040883597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040998167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.146" endtime="20201029 12:45:23.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040883597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040998167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.493" endtime="20201029 12:45:23.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.511" endtime="20201029 12:45:23.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.139" endtime="20201029 12:45:23.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.135" endtime="20201029 12:45:23.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.527" level="INFO">${RESULT} = [{'diff': 0.00011457000000000134}, {'diff': 0.00011502800000000313}, {'diff': 0.00011444399999999827}, {'diff': 0.00011433400000000066}, {'diff': 0.00011447200000000435}, {'diff': 0.000114556000000001...</msg>
<status status="PASS" starttime="20201029 12:45:23.519" endtime="20201029 12:45:23.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:23.542" level="INFO">${ACCURACY} = {'diff': [0.00011457000000000134, 0.00011502800000000313, 0.00011444399999999827, 0.00011433400000000066, 0.00011447200000000435, 0.00011455600000000177, 0.00011426399999999587, 0.00011448599999999698...</msg>
<status status="PASS" starttime="20201029 12:45:23.530" endtime="20201029 12:45:23.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.553" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:45:23.550" endtime="20201029 12:45:23.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.558" level="INFO">VALUE: [0.00011457000000000134, 0.00011502800000000313, 0.00011444399999999827, 0.00011433400000000066, 0.00011447200000000435, 0.00011455600000000177, 0.00011426399999999587, 0.00011448599999999698, 0.00011440299999999903, 0.00011469500000000493, 0.00011512500000000064, 0.00011451400000000306, 0.00011473600000000417, 0.00011441599999999913, 0.00011416699999999835, 0.00011508300000000193, 0.00011465299999999928, 0.00011440199999999956, 0.00011419400000000496, 0.000114209000000004, 0.00011479200000000245, 0.00011519499999999849, 0.0001144299999999987, 0.00011454199999999526, 0.00011418099999999792, 0.00011454199999999526, 0.00011429099999999554, 0.00011430600000000152, 0.000114597000000001, 0.00011481900000000211, 0.00011470799999999809, 0.00011444500000000468, 0.00011462500000000014, 0.00011469399999999852, 0.0001143749999999999, 0.00011461099999999363, 0.0001150420000000027, 0.00011497199999999791, 0.00011447200000000435, 0.00011436100000000032, 0.0001142499999999963, 0.00011502799999999619, 0.00011440300000000597, 0.00011481899999999517, 0.0001142220000000041, 0.00011504199999999576, 0.00011462500000000014, 0.00011423600000000367, 0.00011501400000000356, 0.00011473599999999723]</msg>
<status status="PASS" starttime="20201029 12:45:23.555" endtime="20201029 12:45:23.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.544" endtime="20201029 12:45:23.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.575" endtime="20201029 12:45:23.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.570" endtime="20201029 12:45:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.568" endtime="20201029 12:45:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.076" endtime="20201029 12:45:23.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.074" endtime="20201029 12:45:23.599"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.622" endtime="20201029 12:45:23.643"></status>
</kw>
<msg timestamp="20201029 12:45:23.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.619" endtime="20201029 12:45:23.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.647" endtime="20201029 12:45:23.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.653" endtime="20201029 12:45:23.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.612" endtime="20201029 12:45:23.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.606" endtime="20201029 12:45:23.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.676" endtime="20201029 12:45:24.014"></status>
</kw>
<msg timestamp="20201029 12:45:24.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039133556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039248903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.672" endtime="20201029 12:45:24.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039133556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039248903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.024" endtime="20201029 12:45:24.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.042" endtime="20201029 12:45:24.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.665" endtime="20201029 12:45:24.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.661" endtime="20201029 12:45:24.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:24.058" level="INFO">${RESULT} = [{'diff': 0.00011534700000000175}, {'diff': 0.00011556899999999592}, {'diff': 0.00011538900000000046}, {'diff': 0.00011519399999999902}, {'diff': 0.00011583299999999574}, {'diff': 0.000115707999999999...</msg>
<status status="PASS" starttime="20201029 12:45:24.050" endtime="20201029 12:45:24.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:24.144" level="INFO">${ACCURACY} = {'diff': [0.00011534700000000175, 0.00011556899999999592, 0.00011538900000000046, 0.00011519399999999902, 0.00011583299999999574, 0.00011570799999999909, 0.00011601399999999762, 0.00011552799999999669...</msg>
<status status="PASS" starttime="20201029 12:45:24.061" endtime="20201029 12:45:24.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.155" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:45:24.153" endtime="20201029 12:45:24.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.160" level="INFO">VALUE: [0.00011534700000000175, 0.00011556899999999592, 0.00011538900000000046, 0.00011519399999999902, 0.00011583299999999574, 0.00011570799999999909, 0.00011601399999999762, 0.00011552799999999669, 0.00011579099999999704, 0.00011549999999999755, 0.00011563900000000071, 0.00011616600000000088, 0.0001159300000000002, 0.00011590300000000053, 0.00011597199999999891, 0.00011586100000000182, 0.00011584699999999531, 0.00011563800000000124, 0.00011565300000000028, 0.00011579199999999651, 0.00011613900000000121, 0.0001160970000000025, 0.00011608399999999547, 0.00011550000000000449, 0.00011598599999999848, 0.00011525000000000424, 0.0001159300000000002, 0.0001161249999999947, 0.0001153750000000009, 0.0001154169999999996, 0.0001152629999999974, 0.00011519500000000543, 0.00011518099999999892, 0.00011599999999999805, 0.00011561100000000157, 0.0001158750000000014, 0.00011619400000000002, 0.00011601399999999762, 0.0001154169999999996, 0.00011581999999999565, 0.00011609800000000198, 0.00011579200000000345, 0.00011598599999999848, 0.00011573700000000464, 0.00011581899999999618, 0.00011565200000000081, 0.00011552699999999722, 0.00011598599999999848, 0.00011605600000000327, 0.00011561100000000157]</msg>
<status status="PASS" starttime="20201029 12:45:24.157" endtime="20201029 12:45:24.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.146" endtime="20201029 12:45:24.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:24.172" endtime="20201029 12:45:24.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.168" endtime="20201029 12:45:24.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.166" endtime="20201029 12:45:24.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.602" endtime="20201029 12:45:24.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.600" endtime="20201029 12:45:24.197"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.221" endtime="20201029 12:45:24.241"></status>
</kw>
<msg timestamp="20201029 12:45:24.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.217" endtime="20201029 12:45:24.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.244" endtime="20201029 12:45:24.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.250" endtime="20201029 12:45:24.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.209" endtime="20201029 12:45:24.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.204" endtime="20201029 12:45:24.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.273" endtime="20201029 12:45:24.626"></status>
</kw>
<msg timestamp="20201029 12:45:24.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040462153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040578958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.270" endtime="20201029 12:45:24.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040462153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040578958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.636" endtime="20201029 12:45:24.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.655" endtime="20201029 12:45:24.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.263" endtime="20201029 12:45:24.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.258" endtime="20201029 12:45:24.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:24.672" level="INFO">${RESULT} = [{'diff': 0.0001168049999999976}, {'diff': 0.0001171249999999957}, {'diff': 0.00011688900000000196}, {'diff': 0.00011669499999999999}, {'diff': 0.00011659699999999606}, {'diff': 0.00011693100000000067...</msg>
<status status="PASS" starttime="20201029 12:45:24.663" endtime="20201029 12:45:24.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:24.681" level="INFO">${ACCURACY} = {'diff': [0.0001168049999999976, 0.0001171249999999957, 0.00011688900000000196, 0.00011669499999999999, 0.00011659699999999606, 0.00011693100000000067, 0.00011700000000000599, 0.0001165829999999965, 0...</msg>
<status status="PASS" starttime="20201029 12:45:24.674" endtime="20201029 12:45:24.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.693" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:45:24.690" endtime="20201029 12:45:24.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.699" level="INFO">VALUE: [0.0001168049999999976, 0.0001171249999999957, 0.00011688900000000196, 0.00011669499999999999, 0.00011659699999999606, 0.00011693100000000067, 0.00011700000000000599, 0.0001165829999999965, 0.00011711099999999613, 0.00011651399999999812, 0.00011661200000000205, 0.00011677699999999847, 0.0001162499999999983, 0.00011638899999999452, 0.0001165699999999964, 0.00011677699999999847, 0.000116209000000006, 0.00011719400000000102, 0.00011661100000000257, 0.00011699999999999905, 0.00011690300000000153, 0.00011704100000000522, 0.00011645799999999984, 0.0001171249999999957, 0.0001169170000000011, 0.00011670800000000009, 0.00011630599999999658, 0.00011662500000000214, 0.00011690300000000153, 0.00011620799999999959, 0.0001167090000000065, 0.00011698599999999948, 0.00011666700000000085, 0.00011680599999999708, 0.00011669499999999999, 0.00011698599999999948, 0.00011670800000000009, 0.00011690200000000206, 0.00011643100000000017, 0.00011686100000000282, 0.00011676399999999837, 0.00011716700000000135, 0.00011640300000000103, 0.00011651399999999812, 0.00011636099999999538, 0.00011631899999999668, 0.00011658400000000291, 0.00011636100000000232, 0.00011707000000000384, 0.00011662500000000214]</msg>
<status status="PASS" starttime="20201029 12:45:24.695" endtime="20201029 12:45:24.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.683" endtime="20201029 12:45:24.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:24.712" endtime="20201029 12:45:24.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.707" endtime="20201029 12:45:24.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.705" endtime="20201029 12:45:24.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.199" endtime="20201029 12:45:24.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.198" endtime="20201029 12:45:24.737"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.760" endtime="20201029 12:45:24.783"></status>
</kw>
<msg timestamp="20201029 12:45:24.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.757" endtime="20201029 12:45:24.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.786" endtime="20201029 12:45:24.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.792" endtime="20201029 12:45:24.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.750" endtime="20201029 12:45:24.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.744" endtime="20201029 12:45:24.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.816" endtime="20201029 12:45:25.165"></status>
</kw>
<msg timestamp="20201029 12:45:25.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040297889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040415417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.813" endtime="20201029 12:45:25.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040297889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040415417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.174" endtime="20201029 12:45:25.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.193" endtime="20201029 12:45:25.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.805" endtime="20201029 12:45:25.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.801" endtime="20201029 12:45:25.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.210" level="INFO">${RESULT} = [{'diff': 0.00011752799999999869}, {'diff': 0.00011802799999999919}, {'diff': 0.00011783299999999775}, {'diff': 0.00011787499999999645}, {'diff': 0.00011748599999999998}, {'diff': 0.000117527999999998...</msg>
<status status="PASS" starttime="20201029 12:45:25.201" endtime="20201029 12:45:25.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:25.220" level="INFO">${ACCURACY} = {'diff': [0.00011752799999999869, 0.00011802799999999919, 0.00011783299999999775, 0.00011787499999999645, 0.00011748599999999998, 0.00011752799999999869, 0.00011813800000000374, 0.00011800000000000005...</msg>
<status status="PASS" starttime="20201029 12:45:25.212" endtime="20201029 12:45:25.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.231" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:45:25.229" endtime="20201029 12:45:25.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.237" level="INFO">VALUE: [0.00011752799999999869, 0.00011802799999999919, 0.00011783299999999775, 0.00011787499999999645, 0.00011748599999999998, 0.00011752799999999869, 0.00011813800000000374, 0.00011800000000000005, 0.00011748699999999945, 0.00011805599999999833, 0.00011732000000000409, 0.0001177499999999998, 0.00011751399999999912, 0.00011722200000000016, 0.00011776399999999937, 0.00011761100000000357, 0.00011790200000000306, 0.00011790300000000253, 0.00011744500000000074, 0.00011747199999999347, 0.00011758300000000443, 0.00011783299999999775, 0.00011813900000000321, 0.00011730600000000452, 0.0001174170000000016, 0.0001174029999999951, 0.00011718000000000145, 0.00011720800000000059, 0.00011800000000000005, 0.00011743100000000117, 0.00011748599999999998, 0.00011813900000000321, 0.00011795800000000134, 0.00011722200000000016, 0.00011795800000000134, 0.00011748599999999998, 0.00011802799999999919, 0.00011815300000000278, 0.00011811099999999713, 0.00011762500000000314, 0.00011743100000000117, 0.00011777800000000588, 0.00011781899999999818, 0.00011770800000000109, 0.00011772200000000066, 0.0001177499999999998, 0.00011768100000000142, 0.00011762500000000314, 0.00011783400000000416, 0.0001173049999999981]</msg>
<status status="PASS" starttime="20201029 12:45:25.234" endtime="20201029 12:45:25.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.222" endtime="20201029 12:45:25.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:25.249" endtime="20201029 12:45:25.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.245" endtime="20201029 12:45:25.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.242" endtime="20201029 12:45:25.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.740" endtime="20201029 12:45:25.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.738" endtime="20201029 12:45:25.274"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.297" endtime="20201029 12:45:25.319"></status>
</kw>
<msg timestamp="20201029 12:45:25.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.294" endtime="20201029 12:45:25.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.322" endtime="20201029 12:45:25.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.328" endtime="20201029 12:45:25.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.286" endtime="20201029 12:45:25.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.281" endtime="20201029 12:45:25.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.352" endtime="20201029 12:45:25.701"></status>
</kw>
<msg timestamp="20201029 12:45:25.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039774778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039893625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.348" endtime="20201029 12:45:25.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039774778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039893625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.710" endtime="20201029 12:45:25.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.728" endtime="20201029 12:45:25.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.341" endtime="20201029 12:45:25.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.336" endtime="20201029 12:45:25.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.745" level="INFO">${RESULT} = [{'diff': 0.00011884700000000525}, {'diff': 0.00011829199999999901}, {'diff': 0.00011901300000000115}, {'diff': 0.00011836099999999738}, {'diff': 0.00011868000000000295}, {'diff': 0.000118806000000006...</msg>
<status status="PASS" starttime="20201029 12:45:25.736" endtime="20201029 12:45:25.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:25.757" level="INFO">${ACCURACY} = {'diff': [0.00011884700000000525, 0.00011829199999999901, 0.00011901300000000115, 0.00011836099999999738, 0.00011868000000000295, 0.00011880600000000602, 0.00011919399999999608, 0.00011916699999999641...</msg>
<status status="PASS" starttime="20201029 12:45:25.747" endtime="20201029 12:45:25.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.768" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:45:25.766" endtime="20201029 12:45:25.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.773" level="INFO">VALUE: [0.00011884700000000525, 0.00011829199999999901, 0.00011901300000000115, 0.00011836099999999738, 0.00011868000000000295, 0.00011880600000000602, 0.00011919399999999608, 0.00011916699999999641, 0.00011841600000000313, 0.00011841600000000313, 0.00011884699999999832, 0.00011822199999999422, 0.00011823600000000073, 0.00011918099999999598, 0.00011915299999999684, 0.0001181950000000015, 0.00011838900000000346, 0.00011867999999999601, 0.00011872300000000113, 0.0001188049999999996, 0.00011877799999999994, 0.00011865300000000328, 0.00011822200000000116, 0.00011826299999999346, 0.00011890300000000353, 0.00011855600000000577, 0.00011888899999999702, 0.0001190699999999989, 0.00011852799999999969, 0.00011886099999999789, 0.00011841599999999619, 0.00011854199999999926, 0.00011900000000000105, 0.00011892999999999626, 0.00011831899999999868, 0.00011837499999999695, 0.00011870799999999515, 0.00011822300000000063, 0.00011884699999999832, 0.0001188750000000044, 0.00011879100000000004, 0.00011884700000000525, 0.00011886099999999789, 0.00011872300000000113, 0.00011920800000000259, 0.00011834699999999782, 0.00011886099999999789, 0.0001189170000000031, 0.00011826399999999987, 0.00011888899999999702]</msg>
<status status="PASS" starttime="20201029 12:45:25.770" endtime="20201029 12:45:25.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.759" endtime="20201029 12:45:25.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:25.786" endtime="20201029 12:45:25.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.781" endtime="20201029 12:45:25.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.779" endtime="20201029 12:45:25.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.276" endtime="20201029 12:45:25.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.275" endtime="20201029 12:45:25.811"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.834" endtime="20201029 12:45:25.855"></status>
</kw>
<msg timestamp="20201029 12:45:25.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.830" endtime="20201029 12:45:25.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.859" endtime="20201029 12:45:25.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.865" endtime="20201029 12:45:25.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.823" endtime="20201029 12:45:25.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.817" endtime="20201029 12:45:25.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.890" endtime="20201029 12:45:26.241"></status>
</kw>
<msg timestamp="20201029 12:45:26.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039785236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039904486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.885" endtime="20201029 12:45:26.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039785236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039904486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.251" endtime="20201029 12:45:26.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.269" endtime="20201029 12:45:26.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.878" endtime="20201029 12:45:26.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.873" endtime="20201029 12:45:26.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.286" level="INFO">${RESULT} = [{'diff': 0.0001192500000000013}, {'diff': 0.00011984699999999932}, {'diff': 0.00011936099999999839}, {'diff': 0.0001199300000000042}, {'diff': 0.00012020900000000306}, {'diff': 0.000120083}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:45:26.277" endtime="20201029 12:45:26.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:26.295" level="INFO">${ACCURACY} = {'diff': [0.0001192500000000013, 0.00011984699999999932, 0.00011936099999999839, 0.0001199300000000042, 0.00012020900000000306, 0.000120083, 0.00011958399999999897, 0.00011940300000000403, 0.000119638...</msg>
<status status="PASS" starttime="20201029 12:45:26.288" endtime="20201029 12:45:26.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.306" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:45:26.304" endtime="20201029 12:45:26.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.311" level="INFO">VALUE: [0.0001192500000000013, 0.00011984699999999932, 0.00011936099999999839, 0.0001199300000000042, 0.00012020900000000306, 0.000120083, 0.00011958399999999897, 0.00011940300000000403, 0.00011963899999999777, 0.00011923600000000173, 0.00011919499999999555, 0.00012005600000000033, 0.00011937499999999795, 0.00011994500000000324, 0.00011944500000000274, 0.00011931899999999968, 0.00012019399999999708, 0.00011920800000000259, 0.00011977800000000094, 0.00011995800000000334, 0.0001194449999999958, 0.00011931899999999968, 0.0001196249999999982, 0.00011966699999999691, 0.00011977800000000094, 0.00011955599999999983, 0.00011933299999999925, 0.00011988899999999802, 0.00011986099999999889, 0.00011926400000000087, 0.00011999999999999511, 0.00011966699999999691, 0.00011927700000000097, 0.00011981999999999965, 0.00012004199999999382, 0.000120083, 0.00012008399999999947, 0.00011940300000000403, 0.00011926399999999393, 0.00011958400000000591, 0.00011933399999999872, 0.00012016699999999741, 0.00011922199999999522, 0.00011931999999999915, 0.00011929200000000001, 0.0001196249999999982, 0.00011976400000000137, 0.00011933299999999925, 0.00011952800000000069, 0.00011988900000000496]</msg>
<status status="PASS" starttime="20201029 12:45:26.308" endtime="20201029 12:45:26.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.297" endtime="20201029 12:45:26.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.324" endtime="20201029 12:45:26.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.320" endtime="20201029 12:45:26.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.317" endtime="20201029 12:45:26.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.813" endtime="20201029 12:45:26.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.812" endtime="20201029 12:45:26.349"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.375" endtime="20201029 12:45:26.395"></status>
</kw>
<msg timestamp="20201029 12:45:26.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.370" endtime="20201029 12:45:26.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.398" endtime="20201029 12:45:26.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.405" endtime="20201029 12:45:26.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.363" endtime="20201029 12:45:26.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.356" endtime="20201029 12:45:26.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.428" endtime="20201029 12:45:26.765"></status>
</kw>
<msg timestamp="20201029 12:45:26.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042776778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042897236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.425" endtime="20201029 12:45:26.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042776778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042897236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.775" endtime="20201029 12:45:26.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.793" endtime="20201029 12:45:26.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.417" endtime="20201029 12:45:26.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.413" endtime="20201029 12:45:26.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.810" level="INFO">${RESULT} = [{'diff': 0.0001204579999999969}, {'diff': 0.00012099999999999611}, {'diff': 0.00012084799999999979}, {'diff': 0.00012029200000000101}, {'diff': 0.00012019499999999655}, {'diff': 0.0001210840000000004...</msg>
<status status="PASS" starttime="20201029 12:45:26.801" endtime="20201029 12:45:26.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:26.818" level="INFO">${ACCURACY} = {'diff': [0.0001204579999999969, 0.00012099999999999611, 0.00012084799999999979, 0.00012029200000000101, 0.00012019499999999655, 0.00012108400000000047, 0.0001204449999999968, 0.0001202779999999945, 0...</msg>
<status status="PASS" starttime="20201029 12:45:26.812" endtime="20201029 12:45:26.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.829" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:45:26.827" endtime="20201029 12:45:26.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.834" level="INFO">VALUE: [0.0001204579999999969, 0.00012099999999999611, 0.00012084799999999979, 0.00012029200000000101, 0.00012019499999999655, 0.00012108400000000047, 0.0001204449999999968, 0.0001202779999999945, 0.00012047200000000341, 0.0001206249999999992, 0.00012050000000000255, 0.00012052800000000169, 0.00012037499999999896, 0.00012036099999999939, 0.00012043100000000417, 0.00012063900000000571, 0.00012022199999999622, 0.00012023599999999579, 0.00012023600000000273, 0.00012040300000000503, 0.00012054199999999432, 0.00012051400000000212, 0.00012079200000000151, 0.00012097200000000391, 0.00012029100000000154, 0.00012037499999999896, 0.00012056900000000093, 0.00012051399999999518, 0.00012111100000000014, 0.00012034799999999929, 0.00012098599999999654, 0.00012106900000000143, 0.000121083000000001, 0.00012019400000000402, 0.00012072199999999672, 0.00012084700000000032, 0.00012041699999999766, 0.00012030600000000058, 0.00012045800000000384, 0.0001207500000000028, 0.00012070900000000356, 0.00012070900000000356, 0.00012101399999999568, 0.0001211249999999997, 0.00012026400000000187, 0.00012020799999999665, 0.00012102700000000272, 0.00012065299999999834, 0.0001207500000000028, 0.00012016599999999794]</msg>
<status status="PASS" starttime="20201029 12:45:26.831" endtime="20201029 12:45:26.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.820" endtime="20201029 12:45:26.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.848" endtime="20201029 12:45:26.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.842" endtime="20201029 12:45:26.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.840" endtime="20201029 12:45:26.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.351" endtime="20201029 12:45:26.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.350" endtime="20201029 12:45:26.873"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.895" endtime="20201029 12:45:26.915"></status>
</kw>
<msg timestamp="20201029 12:45:26.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.892" endtime="20201029 12:45:26.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.919" endtime="20201029 12:45:26.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.925" endtime="20201029 12:45:26.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.885" endtime="20201029 12:45:26.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.879" endtime="20201029 12:45:26.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.948" endtime="20201029 12:45:27.298"></status>
</kw>
<msg timestamp="20201029 12:45:27.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038940389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039061597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.944" endtime="20201029 12:45:27.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038940389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039061597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.307" endtime="20201029 12:45:27.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.325" endtime="20201029 12:45:27.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.937" endtime="20201029 12:45:27.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.933" endtime="20201029 12:45:27.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:27.342" level="INFO">${RESULT} = [{'diff': 0.00012120800000000459}, {'diff': 0.00012119499999999755}, {'diff': 0.0001221380000000008}, {'diff': 0.000122083000000002}, {'diff': 0.00012191699999999916}, {'diff': 0.00012215200000000037}...</msg>
<status status="PASS" starttime="20201029 12:45:27.334" endtime="20201029 12:45:27.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:27.353" level="INFO">${ACCURACY} = {'diff': [0.00012120800000000459, 0.00012119499999999755, 0.0001221380000000008, 0.000122083000000002, 0.00012191699999999916, 0.00012215200000000037, 0.00012211100000000114, 0.00012138899999999953, 0...</msg>
<status status="PASS" starttime="20201029 12:45:27.344" endtime="20201029 12:45:27.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.363" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:45:27.361" endtime="20201029 12:45:27.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.369" level="INFO">VALUE: [0.00012120800000000459, 0.00012119499999999755, 0.0001221380000000008, 0.000122083000000002, 0.00012191699999999916, 0.00012215200000000037, 0.00012211100000000114, 0.00012138899999999953, 0.00012163899999999978, 0.00012137499999999996, 0.00012144500000000474, 0.00012141699999999866, 0.00012141699999999866, 0.00012127699999999603, 0.00012133300000000125, 0.00012216699999999941, 0.00012159800000000054, 0.00012131900000000168, 0.00012142999999999876, 0.00012134700000000082, 0.0001220700000000019, 0.00012136100000000039, 0.00012165299999999934, 0.00012136100000000039, 0.0001212500000000033, 0.00012126400000000287, 0.00012206899999999549, 0.00012219499999999855, 0.00012136100000000039, 0.00012174999999999686, 0.00012166699999999891, 0.00012141599999999919, 0.0001213329999999943, 0.00012129200000000201, 0.000122083000000002, 0.00012187500000000046, 0.00012184700000000132, 0.0001213050000000021, 0.00012129200000000201, 0.00012170799999999815, 0.00012149999999999661, 0.00012176400000000337, 0.00012206900000000243, 0.00012170799999999815, 0.00012120799999999765, 0.00012181999999999471, 0.00012205600000000233, 0.00012206900000000243, 0.0001212500000000033, 0.00012120799999999765]</msg>
<status status="PASS" starttime="20201029 12:45:27.366" endtime="20201029 12:45:27.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.354" endtime="20201029 12:45:27.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:27.381" endtime="20201029 12:45:27.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.377" endtime="20201029 12:45:27.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.374" endtime="20201029 12:45:27.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.875" endtime="20201029 12:45:27.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.874" endtime="20201029 12:45:27.406"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.428" endtime="20201029 12:45:27.450"></status>
</kw>
<msg timestamp="20201029 12:45:27.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.425" endtime="20201029 12:45:27.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.453" endtime="20201029 12:45:27.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.460" endtime="20201029 12:45:27.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.418" endtime="20201029 12:45:27.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.412" endtime="20201029 12:45:27.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.483" endtime="20201029 12:45:27.828"></status>
</kw>
<msg timestamp="20201029 12:45:27.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039162, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039284556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:27.479" endtime="20201029 12:45:27.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039162, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039284556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:27.838" endtime="20201029 12:45:27.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.856" endtime="20201029 12:45:27.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.472" endtime="20201029 12:45:27.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.467" endtime="20201029 12:45:27.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:27.873" level="INFO">${RESULT} = [{'diff': 0.0001225559999999959}, {'diff': 0.00012238900000000053}, {'diff': 0.0001226250000000012}, {'diff': 0.00012269399999999958}, {'diff': 0.00012234700000000182}, {'diff': 0.0001230129999999982}...</msg>
<status status="PASS" starttime="20201029 12:45:27.864" endtime="20201029 12:45:27.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:27.883" level="INFO">${ACCURACY} = {'diff': [0.0001225559999999959, 0.00012238900000000053, 0.0001226250000000012, 0.00012269399999999958, 0.00012234700000000182, 0.0001230129999999982, 0.00012286100000000189, 0.0001223050000000031, 0....</msg>
<status status="PASS" starttime="20201029 12:45:27.875" endtime="20201029 12:45:27.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.894" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:45:27.892" endtime="20201029 12:45:27.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.899" level="INFO">VALUE: [0.0001225559999999959, 0.00012238900000000053, 0.0001226250000000012, 0.00012269399999999958, 0.00012234700000000182, 0.0001230129999999982, 0.00012286100000000189, 0.0001223050000000031, 0.00012231900000000268, 0.0001224160000000002, 0.00012272200000000566, 0.00012304199999999682, 0.0001231120000000016, 0.0001229160000000007, 0.00012244399999999933, 0.00012261100000000164, 0.00012263799999999436, 0.00012291599999999375, 0.00012232000000000215, 0.00012320799999999965, 0.00012255500000000336, 0.00012227800000000344, 0.00012309700000000257, 0.0001229999999999981, 0.00012305499999999692, 0.00012295800000000634, 0.00012305600000000333, 0.00012265300000000035, 0.00012298600000000548, 0.00012219399999999908, 0.00012311100000000214, 0.0001222359999999978, 0.000123083000000003, 0.00012259700000000207, 0.00012218100000000592, 0.00012291700000000017, 0.00012276399999999743, 0.00012280600000000308, 0.00012280499999999667, 0.0001225559999999959, 0.0001229579999999994, 0.00012243100000000617, 0.00012284699999999538, 0.0001230689999999965, 0.00012304200000000376, 0.00012284700000000232, 0.00012254200000000326, 0.0001222359999999978, 0.00012318099999999998, 0.00012219499999999855]</msg>
<status status="PASS" starttime="20201029 12:45:27.896" endtime="20201029 12:45:27.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.885" endtime="20201029 12:45:27.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:27.912" endtime="20201029 12:45:27.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.907" endtime="20201029 12:45:27.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.905" endtime="20201029 12:45:27.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.408" endtime="20201029 12:45:27.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.407" endtime="20201029 12:45:27.937"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.959" endtime="20201029 12:45:27.981"></status>
</kw>
<msg timestamp="20201029 12:45:27.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.956" endtime="20201029 12:45:27.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.984" endtime="20201029 12:45:27.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.990" endtime="20201029 12:45:27.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.949" endtime="20201029 12:45:27.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.943" endtime="20201029 12:45:27.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.014" endtime="20201029 12:45:28.361"></status>
</kw>
<msg timestamp="20201029 12:45:28.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039433514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039557111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.010" endtime="20201029 12:45:28.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039433514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039557111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.371" endtime="20201029 12:45:28.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.389" endtime="20201029 12:45:28.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.003" endtime="20201029 12:45:28.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.998" endtime="20201029 12:45:28.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:28.406" level="INFO">${RESULT} = [{'diff': 0.00012359699999999613}, {'diff': 0.00012365200000000187}, {'diff': 0.00012369500000000005}, {'diff': 0.00012398699999999901}, {'diff': 0.00012418100000000099}, {'diff': 0.000124083999999996...</msg>
<status status="PASS" starttime="20201029 12:45:28.397" endtime="20201029 12:45:28.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:28.415" level="INFO">${ACCURACY} = {'diff': [0.00012359699999999613, 0.00012365200000000187, 0.00012369500000000005, 0.00012398699999999901, 0.00012418100000000099, 0.00012408399999999653, 0.0001237920000000045, 0.00012401399999999868,...</msg>
<status status="PASS" starttime="20201029 12:45:28.408" endtime="20201029 12:45:28.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.426" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:45:28.423" endtime="20201029 12:45:28.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.431" level="INFO">VALUE: [0.00012359699999999613, 0.00012365200000000187, 0.00012369500000000005, 0.00012398699999999901, 0.00012418100000000099, 0.00012408399999999653, 0.0001237920000000045, 0.00012401399999999868, 0.00012388900000000203, 0.00012398699999999901, 0.0001240559999999974, 0.00012374999999999886, 0.00012366600000000144, 0.00012329199999999707, 0.00012370800000000015, 0.00012413899999999534, 0.00012376399999999843, 0.00012401399999999868, 0.00012334700000000282, 0.00012384699999999638, 0.00012374999999999886, 0.00012337499999999502, 0.00012344400000000033, 0.00012315200000000137, 0.0001232359999999988, 0.00012341700000000067, 0.00012376400000000537, 0.0001236250000000022, 0.00012377699999999853, 0.00012398599999999954, 0.0001241109999999962, 0.00012354100000000479, 0.0001240280000000052, 0.00012424999999999936, 0.0001238879999999956, 0.00012341700000000067, 0.00012332000000000315, 0.0001232779999999975, 0.00012416700000000142, 0.0001235700000000034, 0.00012355500000000436, 0.00012404099999999835, 0.000123680000000001, 0.00012412499999999577, 0.00012386100000000289, 0.00012376399999999843, 0.00012386100000000289, 0.00012387500000000246, 0.00012326400000000487, 0.0001241109999999962]</msg>
<status status="PASS" starttime="20201029 12:45:28.428" endtime="20201029 12:45:28.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.417" endtime="20201029 12:45:28.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:28.443" endtime="20201029 12:45:28.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.439" endtime="20201029 12:45:28.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.437" endtime="20201029 12:45:28.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.939" endtime="20201029 12:45:28.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.938" endtime="20201029 12:45:28.468"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.492" endtime="20201029 12:45:28.514"></status>
</kw>
<msg timestamp="20201029 12:45:28.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.487" endtime="20201029 12:45:28.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.518" endtime="20201029 12:45:28.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.524" endtime="20201029 12:45:28.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.480" endtime="20201029 12:45:28.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.475" endtime="20201029 12:45:28.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.547" endtime="20201029 12:45:28.892"></status>
</kw>
<msg timestamp="20201029 12:45:28.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041084708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.543" endtime="20201029 12:45:28.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041084708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.901" endtime="20201029 12:45:28.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.919" endtime="20201029 12:45:28.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.536" endtime="20201029 12:45:28.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.532" endtime="20201029 12:45:28.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:28.936" level="INFO">${RESULT} = [{'diff': 0.000125165999999996}, {'diff': 0.0001241800000000015}, {'diff': 0.00012463900000000278}, {'diff': 0.00012486099999999695}, {'diff': 0.00012452799999999875}, {'diff': 0.0001252360000000008},...</msg>
<status status="PASS" starttime="20201029 12:45:28.927" endtime="20201029 12:45:28.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:28.944" level="INFO">${ACCURACY} = {'diff': [0.000125165999999996, 0.0001241800000000015, 0.00012463900000000278, 0.00012486099999999695, 0.00012452799999999875, 0.0001252360000000008, 0.00012445900000000037, 0.00012488900000000303, 0....</msg>
<status status="PASS" starttime="20201029 12:45:28.938" endtime="20201029 12:45:28.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.955" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:45:28.953" endtime="20201029 12:45:28.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.960" level="INFO">VALUE: [0.000125165999999996, 0.0001241800000000015, 0.00012463900000000278, 0.00012486099999999695, 0.00012452799999999875, 0.0001252360000000008, 0.00012445900000000037, 0.00012488900000000303, 0.00012447200000000047, 0.00012443100000000124, 0.00012448600000000004, 0.00012493100000000174, 0.00012437499999999602, 0.00012420900000000012, 0.00012481899999999824, 0.00012509699999999763, 0.0001244030000000021, 0.00012499999999999317, 0.00012518100000000199, 0.00012429199999999807, 0.0001246250000000032, 0.0001249030000000026, 0.00012461100000000364, 0.0001243329999999973, 0.0001249030000000026, 0.00012469400000000158, 0.00012497200000000097, 0.00012461100000000364, 0.00012420800000000065, 0.00012438900000000253, 0.0001242359999999998, 0.0001248329999999978, 0.00012511199999999667, 0.00012515300000000285, 0.00012516700000000242, 0.0001242359999999998, 0.0001251529999999959, 0.00012497200000000097, 0.00012426400000000587, 0.00012474999999999986, 0.0001242359999999998, 0.00012477699999999953, 0.00012437500000000296, 0.00012498600000000054, 0.0001250559999999984, 0.00012484799999999685, 0.00012474999999999986, 0.00012426399999999893, 0.00012436100000000339, 0.00012519500000000156]</msg>
<status status="PASS" starttime="20201029 12:45:28.957" endtime="20201029 12:45:28.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.946" endtime="20201029 12:45:28.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:28.983" endtime="20201029 12:45:29.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.973" endtime="20201029 12:45:29.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.971" endtime="20201029 12:45:29.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.471" endtime="20201029 12:45:29.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.469" endtime="20201029 12:45:29.008"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.030" endtime="20201029 12:45:29.052"></status>
</kw>
<msg timestamp="20201029 12:45:29.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.027" endtime="20201029 12:45:29.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.056" endtime="20201029 12:45:29.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.062" endtime="20201029 12:45:29.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.020" endtime="20201029 12:45:29.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.014" endtime="20201029 12:45:29.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.085" endtime="20201029 12:45:29.431"></status>
</kw>
<msg timestamp="20201029 12:45:29.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039665292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039790903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.082" endtime="20201029 12:45:29.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039665292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039790903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.440" endtime="20201029 12:45:29.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.458" endtime="20201029 12:45:29.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.074" endtime="20201029 12:45:29.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.070" endtime="20201029 12:45:29.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:29.475" level="INFO">${RESULT} = [{'diff': 0.00012561100000000464}, {'diff': 0.00012579199999999957}, {'diff': 0.00012558399999999803}, {'diff': 0.00012554099999999985}, {'diff': 0.0001257360000000013}, {'diff': 0.0001253059999999986...</msg>
<status status="PASS" starttime="20201029 12:45:29.466" endtime="20201029 12:45:29.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:29.485" level="INFO">${ACCURACY} = {'diff': [0.00012561100000000464, 0.00012579199999999957, 0.00012558399999999803, 0.00012554099999999985, 0.0001257360000000013, 0.00012530599999999864, 0.0001252360000000008, 0.00012537500000000396, ...</msg>
<status status="PASS" starttime="20201029 12:45:29.477" endtime="20201029 12:45:29.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.495" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:45:29.493" endtime="20201029 12:45:29.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.501" level="INFO">VALUE: [0.00012561100000000464, 0.00012579199999999957, 0.00012558399999999803, 0.00012554099999999985, 0.0001257360000000013, 0.00012530599999999864, 0.0001252360000000008, 0.00012537500000000396, 0.00012587499999999752, 0.0001252360000000008, 0.00012586100000000489, 0.00012568100000000249, 0.00012615300000000385, 0.0001255559999999989, 0.0001261109999999982, 0.00012576400000000043, 0.00012579199999999957, 0.000125680000000003, 0.0001255000000000006, 0.00012580499999999967, 0.00012530499999999917, 0.00012563900000000378, 0.000125778, 0.00012561100000000464, 0.00012572199999999478, 0.0001254450000000018, 0.0001253889999999966, 0.0001257360000000013, 0.0001259580000000024, 0.00012540199999999668, 0.00012586100000000489, 0.00012581899999999924, 0.00012551400000000018, 0.00012601400000000068, 0.00012551400000000018, 0.00012565300000000335, 0.00012572200000000172, 0.00012554199999999932, 0.0001254160000000032, 0.0001252360000000008, 0.00012559700000000507, 0.00012563900000000378, 0.00012536099999999745, 0.0001256250000000042, 0.00012523700000000026, 0.00012558400000000497, 0.00012568100000000249, 0.00012522200000000122, 0.00012552799999999975, 0.00012588900000000403]</msg>
<status status="PASS" starttime="20201029 12:45:29.498" endtime="20201029 12:45:29.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.486" endtime="20201029 12:45:29.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:29.513" endtime="20201029 12:45:29.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.509" endtime="20201029 12:45:29.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.506" endtime="20201029 12:45:29.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.010" endtime="20201029 12:45:29.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.009" endtime="20201029 12:45:29.538"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.560" endtime="20201029 12:45:29.582"></status>
</kw>
<msg timestamp="20201029 12:45:29.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.557" endtime="20201029 12:45:29.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.585" endtime="20201029 12:45:29.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.592" endtime="20201029 12:45:29.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.550" endtime="20201029 12:45:29.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.544" endtime="20201029 12:45:29.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.614" endtime="20201029 12:45:29.959"></status>
</kw>
<msg timestamp="20201029 12:45:29.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039361986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039489069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.611" endtime="20201029 12:45:29.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039361986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039489069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.969" endtime="20201029 12:45:29.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.987" endtime="20201029 12:45:29.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.604" endtime="20201029 12:45:29.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.600" endtime="20201029 12:45:29.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:30.004" level="INFO">${RESULT} = [{'diff': 0.00012708300000000006}, {'diff': 0.00012643000000000376}, {'diff': 0.00012669400000000358}, {'diff': 0.0001271529999999979}, {'diff': 0.0001266250000000052}, {'diff': 0.0001270000000000021}...</msg>
<status status="PASS" starttime="20201029 12:45:29.995" endtime="20201029 12:45:30.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:30.014" level="INFO">${ACCURACY} = {'diff': [0.00012708300000000006, 0.00012643000000000376, 0.00012669400000000358, 0.0001271529999999979, 0.0001266250000000052, 0.0001270000000000021, 0.00012651399999999424, 0.0001270130000000022, 0....</msg>
<status status="PASS" starttime="20201029 12:45:30.006" endtime="20201029 12:45:30.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.025" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:45:30.023" endtime="20201029 12:45:30.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.030" level="INFO">VALUE: [0.00012708300000000006, 0.00012643000000000376, 0.00012669400000000358, 0.0001271529999999979, 0.0001266250000000052, 0.0001270000000000021, 0.00012651399999999424, 0.0001270130000000022, 0.00012634699999999888, 0.00012659699999999913, 0.00012704200000000082, 0.00012715199999999843, 0.00012713899999999834, 0.00012681900000000024, 0.00012723599999999585, 0.00012713899999999834, 0.00012658299999999956, 0.00012680499999999373, 0.00012684699999999938, 0.00012663899999999784, 0.0001268059999999932, 0.0001269439999999969, 0.00012670800000000315, 0.0001269439999999969, 0.00012634799999999835, 0.0001262780000000005, 0.00012655500000000042, 0.00012687499999999852, 0.0001269859999999956, 0.00012631900000000668, 0.00012652700000000128, 0.00012672199999999578, 0.00012699999999999517, 0.00012694400000000383, 0.00012647300000000194, 0.00012670800000000315, 0.00012676400000000143, 0.00012634699999999888, 0.00012640200000000462, 0.00012669400000000358, 0.00012654200000000032, 0.0001262230000000017, 0.00012651400000000118, 0.00012676400000000143, 0.00012709699999999963, 0.00012658299999999956, 0.00012672200000000272, 0.00012677700000000153, 0.00012636099999999845, 0.00012658299999999956]</msg>
<status status="PASS" starttime="20201029 12:45:30.027" endtime="20201029 12:45:30.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.016" endtime="20201029 12:45:30.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:30.042" endtime="20201029 12:45:30.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.038" endtime="20201029 12:45:30.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.036" endtime="20201029 12:45:30.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.540" endtime="20201029 12:45:30.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.539" endtime="20201029 12:45:30.068"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.090" endtime="20201029 12:45:30.112"></status>
</kw>
<msg timestamp="20201029 12:45:30.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.087" endtime="20201029 12:45:30.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.115" endtime="20201029 12:45:30.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.121" endtime="20201029 12:45:30.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.080" endtime="20201029 12:45:30.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.074" endtime="20201029 12:45:30.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.144" endtime="20201029 12:45:30.491"></status>
</kw>
<msg timestamp="20201029 12:45:30.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039480014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.141" endtime="20201029 12:45:30.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039480014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.502" endtime="20201029 12:45:30.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.520" endtime="20201029 12:45:30.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.134" endtime="20201029 12:45:30.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.129" endtime="20201029 12:45:30.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:30.537" level="INFO">${RESULT} = [{'diff': 0.00012790299999999866}, {'diff': 0.0001273889999999986}, {'diff': 0.00012725000000000236}, {'diff': 0.00012772299999999626}, {'diff': 0.00012766700000000492}, {'diff': 0.0001277359999999963...</msg>
<status status="PASS" starttime="20201029 12:45:30.529" endtime="20201029 12:45:30.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:30.546" level="INFO">${ACCURACY} = {'diff': [0.00012790299999999866, 0.0001273889999999986, 0.00012725000000000236, 0.00012772299999999626, 0.00012766700000000492, 0.00012773599999999635, 0.00012734699999999988, 0.00012747200000000347,...</msg>
<status status="PASS" starttime="20201029 12:45:30.539" endtime="20201029 12:45:30.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.557" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:45:30.555" endtime="20201029 12:45:30.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.562" level="INFO">VALUE: [0.00012790299999999866, 0.0001273889999999986, 0.00012725000000000236, 0.00012772299999999626, 0.00012766700000000492, 0.00012773599999999635, 0.00012734699999999988, 0.00012747200000000347, 0.00012768100000000449, 0.00012741699999999773, 0.00012740200000000562, 0.00012727799999999456, 0.00012812499999999977, 0.000127569000000001, 0.00012784700000000038, 0.00012792999999999832, 0.00012730500000000117, 0.00012737499999999902, 0.000127569000000001, 0.00012752700000000228, 0.0001281110000000002, 0.00012790199999999918, 0.00012819499999999762, 0.00012808300000000106, 0.00012777700000000253, 0.00012743100000000424, 0.00012744499999999687, 0.00012723599999999585, 0.0001274859999999961, 0.00012819499999999762, 0.0001280560000000014, 0.00012822199999999728, 0.000127778000000002, 0.00012751400000000218, 0.00012725000000000236, 0.0001272360000000028, 0.0001278879999999996, 0.00012762499999999927, 0.00012725000000000236, 0.00012812499999999977, 0.00012738900000000553, 0.0001279160000000057, 0.00012769499999999712, 0.00012751400000000218, 0.00012737500000000596, 0.00012780500000000167, 0.00012737499999999902, 0.00012805500000000192, 0.0001276529999999984, 0.00012787499999999952]</msg>
<status status="PASS" starttime="20201029 12:45:30.559" endtime="20201029 12:45:30.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.548" endtime="20201029 12:45:30.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:30.575" endtime="20201029 12:45:30.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.571" endtime="20201029 12:45:30.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.568" endtime="20201029 12:45:30.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.070" endtime="20201029 12:45:30.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.068" endtime="20201029 12:45:30.600"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.622" endtime="20201029 12:45:30.644"></status>
</kw>
<msg timestamp="20201029 12:45:30.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.619" endtime="20201029 12:45:30.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.647" endtime="20201029 12:45:30.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.653" endtime="20201029 12:45:30.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.612" endtime="20201029 12:45:30.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.606" endtime="20201029 12:45:30.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.676" endtime="20201029 12:45:31.008"></status>
</kw>
<msg timestamp="20201029 12:45:31.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.673" endtime="20201029 12:45:31.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.017" endtime="20201029 12:45:31.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.035" endtime="20201029 12:45:31.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.666" endtime="20201029 12:45:31.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.661" endtime="20201029 12:45:31.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:31.052" level="INFO">${RESULT} = [{'diff': 0.0001288059999999952}, {'diff': 0.00012880499999999573}, {'diff': 0.00012830600000000164}, {'diff': 0.00012901399999999674}, {'diff': 0.00012911099999999426}, {'diff': 0.0001291110000000012...</msg>
<status status="PASS" starttime="20201029 12:45:31.044" endtime="20201029 12:45:31.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:31.061" level="INFO">${ACCURACY} = {'diff': [0.0001288059999999952, 0.00012880499999999573, 0.00012830600000000164, 0.00012901399999999674, 0.00012911099999999426, 0.0001291110000000012, 0.0001292079999999987, 0.0001287639999999965, 0....</msg>
<status status="PASS" starttime="20201029 12:45:31.054" endtime="20201029 12:45:31.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.072" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:45:31.070" endtime="20201029 12:45:31.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.077" level="INFO">VALUE: [0.0001288059999999952, 0.00012880499999999573, 0.00012830600000000164, 0.00012901399999999674, 0.00012911099999999426, 0.0001291110000000012, 0.0001292079999999987, 0.0001287639999999965, 0.00012905500000000292, 0.00012919400000000608, 0.00012866699999999898, 0.00012919399999999914, 0.00012825000000000336, 0.00012913900000000034, 0.00012880600000000214, 0.0001285000000000036, 0.0001282079999999977, 0.00012913900000000034, 0.00012892999999999932, 0.00012866699999999898, 0.00012909700000000163, 0.00012880499999999573, 0.00012898600000000454, 0.00012901400000000368, 0.0001283889999999996, 0.00012911099999999426, 0.0001286529999999994, 0.00012912500000000077, 0.00012922299999999776, 0.00012922200000000522, 0.00012854100000000285, 0.000128263999999996, 0.00012908299999999512, 0.0001284309999999983, 0.00012922299999999776, 0.00012895799999999846, 0.00012876299999999702, 0.00012924999999999742, 0.0001286110000000007, 0.00012912500000000077, 0.00012862500000000027, 0.00012829099999999566, 0.00012880600000000214, 0.00012844499999999787, 0.0001283330000000013, 0.00012868099999999855, 0.00012920899999999819, 0.00012901399999999674, 0.00012836100000000045, 0.00012899999999999717]</msg>
<status status="PASS" starttime="20201029 12:45:31.074" endtime="20201029 12:45:31.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.063" endtime="20201029 12:45:31.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:31.091" endtime="20201029 12:45:31.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.085" endtime="20201029 12:45:31.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.083" endtime="20201029 12:45:31.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.602" endtime="20201029 12:45:31.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.601" endtime="20201029 12:45:31.116"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.138" endtime="20201029 12:45:31.159"></status>
</kw>
<msg timestamp="20201029 12:45:31.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.135" endtime="20201029 12:45:31.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.162" endtime="20201029 12:45:31.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.168" endtime="20201029 12:45:31.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.128" endtime="20201029 12:45:31.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.122" endtime="20201029 12:45:31.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.191" endtime="20201029 12:45:31.524"></status>
</kw>
<msg timestamp="20201029 12:45:31.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039105639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.188" endtime="20201029 12:45:31.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039105639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039234931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.534" endtime="20201029 12:45:31.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.552" endtime="20201029 12:45:31.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.181" endtime="20201029 12:45:31.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.176" endtime="20201029 12:45:31.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:31.568" level="INFO">${RESULT} = [{'diff': 0.00012929200000000307}, {'diff': 0.00012972199999999878}, {'diff': 0.0001293200000000022}, {'diff': 0.00013001400000000468}, {'diff': 0.0001297079999999992}, {'diff': 0.00013013900000000134...</msg>
<status status="PASS" starttime="20201029 12:45:31.560" endtime="20201029 12:45:31.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:31.578" level="INFO">${ACCURACY} = {'diff': [0.00012929200000000307, 0.00012972199999999878, 0.0001293200000000022, 0.00013001400000000468, 0.0001297079999999992, 0.00013013900000000134, 0.00013001399999999774, 0.00012983400000000228, ...</msg>
<status status="PASS" starttime="20201029 12:45:31.570" endtime="20201029 12:45:31.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.589" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:45:31.587" endtime="20201029 12:45:31.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.594" level="INFO">VALUE: [0.00012929200000000307, 0.00012972199999999878, 0.0001293200000000022, 0.00013001400000000468, 0.0001297079999999992, 0.00013013900000000134, 0.00013001399999999774, 0.00012983400000000228, 0.0001298890000000011, 0.0001293890000000006, 0.00013002800000000425, 0.00012947199999999853, 0.00012929200000000307, 0.0001298330000000028, 0.00012925000000000436, 0.00012990300000000066, 0.0001298880000000016, 0.00012974999999999792, 0.00012958400000000203, 0.00012918100000000599, 0.00012984700000000238, 0.00012965200000000093, 0.00013002800000000425, 0.000129263999999997, 0.00012997200000000597, 0.00012952800000000375, 0.0001293200000000022, 0.00013002699999999784, 0.00012930499999999623, 0.00013015299999999397, 0.0001301530000000009, 0.00012942999999999982, 0.00013008300000000306, 0.00012984700000000238, 0.00012955500000000342, 0.00013004200000000382, 0.00013009700000000263, 0.0001297639999999975, 0.00012941699999999973, 0.00012929099999999666, 0.00012990300000000066, 0.00012961200000000117, 0.00012922200000000522, 0.0001295560000000029, 0.00012952700000000428, 0.00012974999999999792, 0.00012954199999999638, 0.00012990300000000066, 0.00012973599999999835, 0.0001292360000000048]</msg>
<status status="PASS" starttime="20201029 12:45:31.592" endtime="20201029 12:45:31.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.580" endtime="20201029 12:45:31.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:31.607" endtime="20201029 12:45:31.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.603" endtime="20201029 12:45:31.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.600" endtime="20201029 12:45:31.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.118" endtime="20201029 12:45:31.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.117" endtime="20201029 12:45:31.632"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.654" endtime="20201029 12:45:31.674"></status>
</kw>
<msg timestamp="20201029 12:45:31.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.651" endtime="20201029 12:45:31.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.678" endtime="20201029 12:45:31.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.684" endtime="20201029 12:45:31.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.644" endtime="20201029 12:45:31.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.638" endtime="20201029 12:45:31.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.707" endtime="20201029 12:45:32.039"></status>
</kw>
<msg timestamp="20201029 12:45:32.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039093431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039224125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.703" endtime="20201029 12:45:32.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039093431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039224125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.049" endtime="20201029 12:45:32.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.067" endtime="20201029 12:45:32.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.696" endtime="20201029 12:45:32.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.692" endtime="20201029 12:45:32.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:32.083" level="INFO">${RESULT} = [{'diff': 0.00013069400000000064}, {'diff': 0.00013119400000000114}, {'diff': 0.0001305560000000039}, {'diff': 0.00013051399999999824}, {'diff': 0.00013047199999999953}, {'diff': 0.0001311529999999949...</msg>
<status status="PASS" starttime="20201029 12:45:32.075" endtime="20201029 12:45:32.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:32.094" level="INFO">${ACCURACY} = {'diff': [0.00013069400000000064, 0.00013119400000000114, 0.0001305560000000039, 0.00013051399999999824, 0.00013047199999999953, 0.00013115299999999497, 0.00013072199999999978, 0.00013063900000000184,...</msg>
<status status="PASS" starttime="20201029 12:45:32.085" endtime="20201029 12:45:32.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.105" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:45:32.103" endtime="20201029 12:45:32.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.110" level="INFO">VALUE: [0.00013069400000000064, 0.00013119400000000114, 0.0001305560000000039, 0.00013051399999999824, 0.00013047199999999953, 0.00013115299999999497, 0.00013072199999999978, 0.00013063900000000184, 0.0001303890000000016, 0.00013118100000000105, 0.0001303890000000016, 0.00013095800000000046, 0.00013027799999999756, 0.0001310690000000045, 0.0001306530000000014, 0.00013051400000000518, 0.00013123599999999985, 0.00013062500000000227, 0.00013094500000000037, 0.00013105599999999745, 0.00013116700000000148, 0.00013045799999999996, 0.0001306939999999937, 0.00013102699999999884, 0.0001308479999999959, 0.00013081900000000424, 0.0001310980000000031, 0.0001310000000000061, 0.0001309729999999995, 0.0001311530000000019, 0.00013041700000000073, 0.00013091700000000123, 0.00013074999999999892, 0.00013083299999999687, 0.000130569000000004, 0.00013034700000000288, 0.00013088899999999515, 0.00013019400000000014, 0.00013068000000000107, 0.00013080600000000414, 0.0001310969999999967, 0.0001311530000000019, 0.00013091600000000175, 0.0001309859999999996, 0.0001303890000000016, 0.00013087500000000252, 0.00013073599999999935, 0.0001304169999999938, 0.00013072199999999978, 0.0001307080000000002]</msg>
<status status="PASS" starttime="20201029 12:45:32.107" endtime="20201029 12:45:32.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.096" endtime="20201029 12:45:32.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.122" endtime="20201029 12:45:32.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.118" endtime="20201029 12:45:32.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.116" endtime="20201029 12:45:32.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.634" endtime="20201029 12:45:32.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.633" endtime="20201029 12:45:32.147"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.169" endtime="20201029 12:45:32.190"></status>
</kw>
<msg timestamp="20201029 12:45:32.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.166" endtime="20201029 12:45:32.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.193" endtime="20201029 12:45:32.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.199" endtime="20201029 12:45:32.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.159" endtime="20201029 12:45:32.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.153" endtime="20201029 12:45:32.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.222" endtime="20201029 12:45:32.556"></status>
</kw>
<msg timestamp="20201029 12:45:32.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039076014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039207639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.219" endtime="20201029 12:45:32.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039076014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039207639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.565" endtime="20201029 12:45:32.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.584" endtime="20201029 12:45:32.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.212" endtime="20201029 12:45:32.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.207" endtime="20201029 12:45:32.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:32.600" level="INFO">${RESULT} = [{'diff': 0.00013162500000000327}, {'diff': 0.000132264}, {'diff': 0.00013213799999999692}, {'diff': 0.00013180600000000514}, {'diff': 0.00013149999999999967}, {'diff': 0.00013213799999999692}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:45:32.592" endtime="20201029 12:45:32.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:32.609" level="INFO">${ACCURACY} = {'diff': [0.00013162500000000327, 0.000132264, 0.00013213799999999692, 0.00013180600000000514, 0.00013149999999999967, 0.00013213799999999692, 0.00013211099999999726, 0.00013186100000000395, 0.0001313...</msg>
<status status="PASS" starttime="20201029 12:45:32.602" endtime="20201029 12:45:32.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.620" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:45:32.618" endtime="20201029 12:45:32.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.625" level="INFO">VALUE: [0.00013162500000000327, 0.000132264, 0.00013213799999999692, 0.00013180600000000514, 0.00013149999999999967, 0.00013213799999999692, 0.00013211099999999726, 0.00013186100000000395, 0.0001313890000000026, 0.00013141600000000225, 0.00013198700000000008, 0.00013213900000000334, 0.00013220799999999477, 0.0001312769999999991, 0.00013219499999999468, 0.00013197200000000103, 0.00013154200000000532, 0.000131860999999997, 0.00013169400000000164, 0.000131263999999999, 0.00013213900000000334, 0.00013181999999999777, 0.0001313059999999977, 0.0001316389999999959, 0.00013212500000000377, 0.00013183400000000428, 0.0001312780000000055, 0.00013194499999999443, 0.00013145799999999402, 0.00013205499999999898, 0.00013156999999999752, 0.00013187499999999658, 0.00013195800000000146, 0.00013158400000000403, 0.00013129199999999813, 0.00013186100000000395, 0.0001320279999999993, 0.00013151399999999924, 0.00013123699999999933, 0.00013147200000000053, 0.0001320969999999977, 0.0001321809999999951, 0.00013187500000000352, 0.0001321389999999964, 0.00013151399999999924, 0.00013140299999999522, 0.0001319440000000019, 0.00013188899999999615, 0.00013208299999999812, 0.00013124999999999942]</msg>
<status status="PASS" starttime="20201029 12:45:32.622" endtime="20201029 12:45:32.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.611" endtime="20201029 12:45:32.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.637" endtime="20201029 12:45:32.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.633" endtime="20201029 12:45:32.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.631" endtime="20201029 12:45:32.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.149" endtime="20201029 12:45:32.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.148" endtime="20201029 12:45:32.662"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.685" endtime="20201029 12:45:32.707"></status>
</kw>
<msg timestamp="20201029 12:45:32.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.681" endtime="20201029 12:45:32.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.710" endtime="20201029 12:45:32.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.716" endtime="20201029 12:45:32.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.674" endtime="20201029 12:45:32.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.668" endtime="20201029 12:45:32.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.739" endtime="20201029 12:45:33.086"></status>
</kw>
<msg timestamp="20201029 12:45:33.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040735194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.736" endtime="20201029 12:45:33.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040735194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.095" endtime="20201029 12:45:33.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.113" endtime="20201029 12:45:33.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.729" endtime="20201029 12:45:33.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.724" endtime="20201029 12:45:33.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:33.130" level="INFO">${RESULT} = [{'diff': 0.00013280499999999973}, {'diff': 0.00013312500000000477}, {'diff': 0.00013312499999999783}, {'diff': 0.0001323189999999988}, {'diff': 0.00013275000000000092}, {'diff': 0.0001331669999999965...</msg>
<status status="PASS" starttime="20201029 12:45:33.121" endtime="20201029 12:45:33.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:33.139" level="INFO">${ACCURACY} = {'diff': [0.00013280499999999973, 0.00013312500000000477, 0.00013312499999999783, 0.0001323189999999988, 0.00013275000000000092, 0.00013316699999999654, 0.0001328189999999993, 0.00013237500000000402, ...</msg>
<status status="PASS" starttime="20201029 12:45:33.132" endtime="20201029 12:45:33.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.150" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:45:33.147" endtime="20201029 12:45:33.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.155" level="INFO">VALUE: [0.00013280499999999973, 0.00013312500000000477, 0.00013312499999999783, 0.0001323189999999988, 0.00013275000000000092, 0.00013316699999999654, 0.0001328189999999993, 0.00013237500000000402, 0.00013268100000000255, 0.00013250000000000067, 0.00013237499999999708, 0.00013277800000000006, 0.00013280499999999973, 0.0001326530000000034, 0.00013291700000000323, 0.00013288899999999715, 0.0001328059999999992, 0.00013262500000000427, 0.00013240300000000316, 0.00013287499999999758, 0.00013266700000000298, 0.00013240200000000368, 0.00013262499999999733, 0.00013259799999999766, 0.00013248599999999416, 0.00013240299999999622, 0.0001329860000000016, 0.0001331389999999974, 0.00013251400000000024, 0.00013241599999999631, 0.00013283299999999887, 0.00013300000000000117, 0.00013312499999999783, 0.00013254199999999938, 0.00013245800000000196, 0.0001326110000000047, 0.00013234699999999794, 0.00013291700000000323, 0.00013319400000000314, 0.00013229099999999966, 0.00013250000000000067, 0.00013238899999999665, 0.0001332090000000022, 0.00013254199999999938, 0.0001328059999999992, 0.00013255599999999895, 0.00013251400000000024, 0.00013233299999999837, 0.0001326389999999969, 0.00013250000000000067]</msg>
<status status="PASS" starttime="20201029 12:45:33.152" endtime="20201029 12:45:33.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.141" endtime="20201029 12:45:33.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:33.168" endtime="20201029 12:45:33.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.163" endtime="20201029 12:45:33.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.160" endtime="20201029 12:45:33.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.664" endtime="20201029 12:45:33.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.663" endtime="20201029 12:45:33.193"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.216" endtime="20201029 12:45:33.236"></status>
</kw>
<msg timestamp="20201029 12:45:33.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.212" endtime="20201029 12:45:33.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.240" endtime="20201029 12:45:33.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.246" endtime="20201029 12:45:33.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.205" endtime="20201029 12:45:33.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.200" endtime="20201029 12:45:33.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.268" endtime="20201029 12:45:33.607"></status>
</kw>
<msg timestamp="20201029 12:45:33.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038801347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038935611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.265" endtime="20201029 12:45:33.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038801347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038935611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.616" endtime="20201029 12:45:33.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.634" endtime="20201029 12:45:33.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.258" endtime="20201029 12:45:33.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.254" endtime="20201029 12:45:33.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:33.650" level="INFO">${RESULT} = [{'diff': 0.000134264000000002}, {'diff': 0.0001333189999999998}, {'diff': 0.000133264000000001}, {'diff': 0.00013355500000000048}, {'diff': 0.00013361099999999876}, {'diff': 0.00013416699999999754}, ...</msg>
<status status="PASS" starttime="20201029 12:45:33.642" endtime="20201029 12:45:33.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:33.661" level="INFO">${ACCURACY} = {'diff': [0.000134264000000002, 0.0001333189999999998, 0.000133264000000001, 0.00013355500000000048, 0.00013361099999999876, 0.00013416699999999754, 0.00013354099999999397, 0.0001338479999999989, 0.00...</msg>
<status status="PASS" starttime="20201029 12:45:33.653" endtime="20201029 12:45:33.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.671" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:45:33.669" endtime="20201029 12:45:33.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.677" level="INFO">VALUE: [0.000134264000000002, 0.0001333189999999998, 0.000133264000000001, 0.00013355500000000048, 0.00013361099999999876, 0.00013416699999999754, 0.00013354099999999397, 0.0001338479999999989, 0.00013323600000000185, 0.0001340280000000013, 0.00013419500000000362, 0.00013350000000000167, 0.000133264000000001, 0.00013411099999999926, 0.00013397200000000303, 0.000133264000000001, 0.00013334699999999894, 0.0001337640000000015, 0.0001341389999999984, 0.00013344500000000287, 0.00013423600000000285, 0.00013418100000000405, 0.0001339169999999973, 0.00013334700000000588, 0.00013361099999999876, 0.00013395800000000346, 0.00013337499999999808, 0.00013407000000000002, 0.00013350000000000167, 0.0001335839999999991, 0.00013392999999999738, 0.00013362499999999833, 0.0001337080000000032, 0.00013361099999999876, 0.00013345800000000296, 0.00013413900000000534, 0.0001334440000000034, 0.0001332770000000011, 0.0001339860000000026, 0.000133958999999996, 0.0001335969999999992, 0.00013351400000000124, 0.00013387499999999858, 0.00013337500000000502, 0.0001333609999999985, 0.00013358299999999962, 0.00013351400000000124, 0.00013377800000000106, 0.0001334310000000033, 0.00013323600000000185]</msg>
<status status="PASS" starttime="20201029 12:45:33.674" endtime="20201029 12:45:33.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.662" endtime="20201029 12:45:33.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:33.689" endtime="20201029 12:45:33.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.685" endtime="20201029 12:45:33.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.682" endtime="20201029 12:45:33.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.195" endtime="20201029 12:45:33.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.194" endtime="20201029 12:45:33.714"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.737" endtime="20201029 12:45:33.759"></status>
</kw>
<msg timestamp="20201029 12:45:33.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.733" endtime="20201029 12:45:33.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.762" endtime="20201029 12:45:33.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.768" endtime="20201029 12:45:33.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.726" endtime="20201029 12:45:33.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.720" endtime="20201029 12:45:33.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.791" endtime="20201029 12:45:34.137"></status>
</kw>
<msg timestamp="20201029 12:45:34.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039539458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039674486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.788" endtime="20201029 12:45:34.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039539458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039674486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.147" endtime="20201029 12:45:34.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.165" endtime="20201029 12:45:34.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.781" endtime="20201029 12:45:34.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.776" endtime="20201029 12:45:34.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:34.182" level="INFO">${RESULT} = [{'diff': 0.0001350280000000023}, {'diff': 0.00013440199999999874}, {'diff': 0.00013461099999999976}, {'diff': 0.00013437500000000602}, {'diff': 0.00013467999999999813}, {'diff': 0.0001343609999999995...</msg>
<status status="PASS" starttime="20201029 12:45:34.173" endtime="20201029 12:45:34.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:34.196" level="INFO">${ACCURACY} = {'diff': [0.0001350280000000023, 0.00013440199999999874, 0.00013461099999999976, 0.00013437500000000602, 0.00013467999999999813, 0.0001343609999999995, 0.00013487499999999958, 0.00013490299999999872, ...</msg>
<status status="PASS" starttime="20201029 12:45:34.184" endtime="20201029 12:45:34.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.207" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:45:34.205" endtime="20201029 12:45:34.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.212" level="INFO">VALUE: [0.0001350280000000023, 0.00013440199999999874, 0.00013461099999999976, 0.00013437500000000602, 0.00013467999999999813, 0.0001343609999999995, 0.00013487499999999958, 0.00013490299999999872, 0.00013462499999999933, 0.0001351809999999981, 0.00013434699999999994, 0.00013440299999999822, 0.00013425000000000242, 0.00013444499999999693, 0.00013493099999999786, 0.00013497200000000403, 0.00013487499999999958, 0.00013519499999999768, 0.00013466700000000498, 0.00013440299999999822, 0.00013515299999999897, 0.0001343190000000008, 0.000134264000000002, 0.0001345970000000002, 0.00013516700000000548, 0.00013448599999999616, 0.00013475000000000292, 0.0001348190000000013, 0.00013515299999999897, 0.00013511100000000026, 0.0001349860000000036, 0.00013522199999999734, 0.00013442999999999788, 0.00013519499999999768, 0.00013420899999999625, 0.00013493099999999786, 0.00013512499999999983, 0.00013487499999999958, 0.0001347640000000025, 0.00013473600000000335, 0.00013519499999999768, 0.0001347090000000037, 0.00013429200000000113, 0.00013450000000000267, 0.00013440300000000516, 0.0001346389999999989, 0.00013484700000000044, 0.00013476300000000302, 0.00013506900000000155, 0.00013454200000000138]</msg>
<status status="PASS" starttime="20201029 12:45:34.209" endtime="20201029 12:45:34.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.198" endtime="20201029 12:45:34.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.228" endtime="20201029 12:45:34.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.224" endtime="20201029 12:45:34.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.222" endtime="20201029 12:45:34.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.716" endtime="20201029 12:45:34.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.715" endtime="20201029 12:45:34.254"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.276" endtime="20201029 12:45:34.298"></status>
</kw>
<msg timestamp="20201029 12:45:34.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.273" endtime="20201029 12:45:34.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.302" endtime="20201029 12:45:34.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.308" endtime="20201029 12:45:34.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.266" endtime="20201029 12:45:34.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.260" endtime="20201029 12:45:34.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.331" endtime="20201029 12:45:34.681"></status>
</kw>
<msg timestamp="20201029 12:45:34.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039291597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.327" endtime="20201029 12:45:34.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039155972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039291597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.691" endtime="20201029 12:45:34.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.709" endtime="20201029 12:45:34.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.320" endtime="20201029 12:45:34.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.316" endtime="20201029 12:45:34.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:34.725" level="INFO">${RESULT} = [{'diff': 0.00013562500000000033}, {'diff': 0.0001358060000000022}, {'diff': 0.00013543099999999836}, {'diff': 0.00013586099999999407}, {'diff': 0.00013533300000000137}, {'diff': 0.0001354860000000041...</msg>
<status status="PASS" starttime="20201029 12:45:34.717" endtime="20201029 12:45:34.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:34.734" level="INFO">${ACCURACY} = {'diff': [0.00013562500000000033, 0.0001358060000000022, 0.00013543099999999836, 0.00013586099999999407, 0.00013533300000000137, 0.0001354860000000041, 0.00013566700000000598, 0.00013534700000000094, ...</msg>
<status status="PASS" starttime="20201029 12:45:34.727" endtime="20201029 12:45:34.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.745" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:45:34.743" endtime="20201029 12:45:34.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.750" level="INFO">VALUE: [0.00013562500000000033, 0.0001358060000000022, 0.00013543099999999836, 0.00013586099999999407, 0.00013533300000000137, 0.0001354860000000041, 0.00013566700000000598, 0.00013534700000000094, 0.00013529100000000266, 0.00013588900000000015, 0.00013558300000000162, 0.00013573600000000435, 0.00013620799999999877, 0.00013569499999999818, 0.0001354440000000054, 0.00013527800000000256, 0.0001361249999999939, 0.0001353610000000005, 0.00013622200000000528, 0.0001354860000000041, 0.0001355840000000011, 0.00013555500000000248, 0.00013525000000000342, 0.00013552799999999587, 0.00013619499999999868, 0.00013572199999999784, 0.00013541700000000573, 0.00013543099999999836, 0.00013570799999999827, 0.00013591599999999981, 0.0001361809999999991, 0.00013533300000000137, 0.00013601299999999733, 0.0001356389999999999, 0.0001359169999999993, 0.00013541599999999931, 0.00013555499999999554, 0.00013562500000000033, 0.00013577799999999612, 0.00013561100000000076, 0.00013530500000000223, 0.00013537500000000008, 0.00013562500000000033, 0.0001358049999999958, 0.00013579099999999622, 0.00013537500000000008, 0.00013558300000000162, 0.00013591599999999981, 0.00013522200000000428, 0.0001354169999999988]</msg>
<status status="PASS" starttime="20201029 12:45:34.747" endtime="20201029 12:45:34.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.736" endtime="20201029 12:45:34.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.763" endtime="20201029 12:45:34.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.758" endtime="20201029 12:45:34.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.756" endtime="20201029 12:45:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.256" endtime="20201029 12:45:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.254" endtime="20201029 12:45:34.788"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.810" endtime="20201029 12:45:34.832"></status>
</kw>
<msg timestamp="20201029 12:45:34.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.806" endtime="20201029 12:45:34.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.835" endtime="20201029 12:45:34.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.841" endtime="20201029 12:45:34.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.799" endtime="20201029 12:45:34.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.794" endtime="20201029 12:45:34.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.864" endtime="20201029 12:45:35.198"></status>
</kw>
<msg timestamp="20201029 12:45:35.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.861" endtime="20201029 12:45:35.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.207" endtime="20201029 12:45:35.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.225" endtime="20201029 12:45:35.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.854" endtime="20201029 12:45:35.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.849" endtime="20201029 12:45:35.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.242" level="INFO">${RESULT} = [{'diff': 0.00013702799999999737}, {'diff': 0.00013704099999999747}, {'diff': 0.00013716600000000106}, {'diff': 0.00013681999999999583}, {'diff': 0.00013643099999999936}, {'diff': 0.000136542000000003...</msg>
<status status="PASS" starttime="20201029 12:45:35.233" endtime="20201029 12:45:35.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:35.251" level="INFO">${ACCURACY} = {'diff': [0.00013702799999999737, 0.00013704099999999747, 0.00013716600000000106, 0.00013681999999999583, 0.00013643099999999936, 0.00013654200000000338, 0.0001370970000000027, 0.00013702700000000484,...</msg>
<status status="PASS" starttime="20201029 12:45:35.244" endtime="20201029 12:45:35.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.262" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:45:35.259" endtime="20201029 12:45:35.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.267" level="INFO">VALUE: [0.00013702799999999737, 0.00013704099999999747, 0.00013716600000000106, 0.00013681999999999583, 0.00013643099999999936, 0.00013654200000000338, 0.0001370970000000027, 0.00013702700000000484, 0.0001365840000000021, 0.00013687500000000158, 0.00013672199999999884, 0.00013640200000000074, 0.00013699999999999823, 0.00013688799999999474, 0.00013683300000000287, 0.00013622199999999834, 0.0001365840000000021, 0.00013652799999999687, 0.00013716700000000054, 0.0001371940000000002, 0.00013662500000000133, 0.00013636200000000098, 0.00013682000000000277, 0.00013679099999999722, 0.00013648699999999764, 0.00013633300000000237, 0.00013720899999999925, 0.00013666600000000056, 0.00013726300000000552, 0.00013666700000000004, 0.00013716700000000054, 0.00013698599999999866, 0.00013666599999999363, 0.00013720799999999977, 0.00013680599999999626, 0.0001370280000000043, 0.00013722199999999934, 0.00013626399999999705, 0.000136861000000002, 0.00013684700000000244, 0.000136264000000004, 0.00013723600000000585, 0.0001369170000000003, 0.00013704099999999747, 0.00013716700000000054, 0.0001365689999999961, 0.00013649999999999773, 0.00013694499999999943, 0.0001364589999999985, 0.00013727799999999762]</msg>
<status status="PASS" starttime="20201029 12:45:35.264" endtime="20201029 12:45:35.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.253" endtime="20201029 12:45:35.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:35.280" endtime="20201029 12:45:35.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.275" endtime="20201029 12:45:35.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.272" endtime="20201029 12:45:35.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.790" endtime="20201029 12:45:35.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.788" endtime="20201029 12:45:35.305"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.327" endtime="20201029 12:45:35.348"></status>
</kw>
<msg timestamp="20201029 12:45:35.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.324" endtime="20201029 12:45:35.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.352" endtime="20201029 12:45:35.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.358" endtime="20201029 12:45:35.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.317" endtime="20201029 12:45:35.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.312" endtime="20201029 12:45:35.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.381" endtime="20201029 12:45:35.716"></status>
</kw>
<msg timestamp="20201029 12:45:35.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039006569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039144361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.377" endtime="20201029 12:45:35.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039006569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039144361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.725" endtime="20201029 12:45:35.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.743" endtime="20201029 12:45:35.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.370" endtime="20201029 12:45:35.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.366" endtime="20201029 12:45:35.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.760" level="INFO">${RESULT} = [{'diff': 0.00013779200000000463}, {'diff': 0.00013815299999999503}, {'diff': 0.00013809699999999675}, {'diff': 0.0001376249999999954}, {'diff': 0.00013783400000000334}, {'diff': 0.0001374999999999987...</msg>
<status status="PASS" starttime="20201029 12:45:35.751" endtime="20201029 12:45:35.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:35.770" level="INFO">${ACCURACY} = {'diff': [0.00013779200000000463, 0.00013815299999999503, 0.00013809699999999675, 0.0001376249999999954, 0.00013783400000000334, 0.00013749999999999873, 0.00013818000000000163, 0.00013798599999999966,...</msg>
<status status="PASS" starttime="20201029 12:45:35.762" endtime="20201029 12:45:35.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.780" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:45:35.778" endtime="20201029 12:45:35.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.786" level="INFO">VALUE: [0.00013779200000000463, 0.00013815299999999503, 0.00013809699999999675, 0.0001376249999999954, 0.00013783400000000334, 0.00013749999999999873, 0.00013818000000000163, 0.00013798599999999966, 0.00013763899999999496, 0.00013813899999999546, 0.0001380280000000053, 0.0001375139999999983, 0.00013773599999999941, 0.00013816600000000206, 0.00013776399999999855, 0.00013818000000000163, 0.00013744400000000045, 0.00013759799999999572, 0.00013725000000000542, 0.00013816700000000154, 0.00013774999999999898, 0.00013743000000000088, 0.0001378469999999965, 0.00013740300000000122, 0.0001373610000000025, 0.00013749999999999873, 0.00013722199999999934, 0.0001381810000000011, 0.00013733300000000337, 0.00013774999999999898, 0.00013761100000000276, 0.0001381520000000025, 0.0001381810000000011, 0.0001376940000000007, 0.00013790300000000172, 0.0001376810000000006, 0.00013818000000000163, 0.00013779200000000463, 0.00013774999999999898, 0.0001373339999999959, 0.00013786099999999607, 0.0001380139999999988, 0.00013777699999999865, 0.00013765300000000147, 0.00013811200000000273, 0.00013759699999999625, 0.00013768000000000113, 0.0001381390000000024, 0.00013762500000000233, 0.0001376940000000007]</msg>
<status status="PASS" starttime="20201029 12:45:35.783" endtime="20201029 12:45:35.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.772" endtime="20201029 12:45:35.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:35.798" endtime="20201029 12:45:35.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.794" endtime="20201029 12:45:35.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.791" endtime="20201029 12:45:35.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.307" endtime="20201029 12:45:35.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.306" endtime="20201029 12:45:35.823"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.845" endtime="20201029 12:45:35.866"></status>
</kw>
<msg timestamp="20201029 12:45:35.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.842" endtime="20201029 12:45:35.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.869" endtime="20201029 12:45:35.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.875" endtime="20201029 12:45:35.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.835" endtime="20201029 12:45:35.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.829" endtime="20201029 12:45:35.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.898" endtime="20201029 12:45:36.231"></status>
</kw>
<msg timestamp="20201029 12:45:36.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039022222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039160556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.895" endtime="20201029 12:45:36.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039022222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039160556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.241" endtime="20201029 12:45:36.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.258" endtime="20201029 12:45:36.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.888" endtime="20201029 12:45:36.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.883" endtime="20201029 12:45:36.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.275" level="INFO">${RESULT} = [{'diff': 0.0001383339999999969}, {'diff': 0.00013837499999999614}, {'diff': 0.00013911099999999732}, {'diff': 0.00013870800000000127}, {'diff': 0.0001386940000000017}, {'diff': 0.0001384720000000006}...</msg>
<status status="PASS" starttime="20201029 12:45:36.267" endtime="20201029 12:45:36.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:36.286" level="INFO">${ACCURACY} = {'diff': [0.0001383339999999969, 0.00013837499999999614, 0.00013911099999999732, 0.00013870800000000127, 0.0001386940000000017, 0.0001384720000000006, 0.00013848600000000016, 0.00013874999999999998, 0...</msg>
<status status="PASS" starttime="20201029 12:45:36.277" endtime="20201029 12:45:36.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.297" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:45:36.294" endtime="20201029 12:45:36.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.302" level="INFO">VALUE: [0.0001383339999999969, 0.00013837499999999614, 0.00013911099999999732, 0.00013870800000000127, 0.0001386940000000017, 0.0001384720000000006, 0.00013848600000000016, 0.00013874999999999998, 0.00013894399999999502, 0.00013829099999999872, 0.00013916600000000307, 0.0001383480000000034, 0.00013916700000000254, 0.0001389720000000011, 0.0001391390000000034, 0.0001384170000000018, 0.00013847300000000007, 0.00013877799999999912, 0.00013861099999999682, 0.00013854199999999844, 0.0001386390000000029, 0.00013909699999999775, 0.0001385139999999993, 0.00013874999999999998, 0.00013840300000000222, 0.00013923600000000091, 0.00013859699999999725, 0.00013902799999999937, 0.00013848600000000016, 0.0001385970000000042, 0.00013858299999999768, 0.0001387369999999999, 0.00013900000000000023, 0.00013880599999999826, 0.00013902799999999937, 0.00013898600000000066, 0.00013831899999999786, 0.00013870900000000075, 0.0001390269999999999, 0.0001385970000000042, 0.00013912500000000383, 0.00013893000000000238, 0.00013894400000000195, 0.00013838800000000318, 0.0001383049999999983, 0.00013837500000000308, 0.00013838800000000318, 0.0001390269999999999, 0.0001389170000000023, 0.00013831999999999733]</msg>
<status status="PASS" starttime="20201029 12:45:36.299" endtime="20201029 12:45:36.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.288" endtime="20201029 12:45:36.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:36.314" endtime="20201029 12:45:36.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.310" endtime="20201029 12:45:36.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.307" endtime="20201029 12:45:36.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.825" endtime="20201029 12:45:36.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.824" endtime="20201029 12:45:36.339"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.361" endtime="20201029 12:45:36.382"></status>
</kw>
<msg timestamp="20201029 12:45:36.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.358" endtime="20201029 12:45:36.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.386" endtime="20201029 12:45:36.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.392" endtime="20201029 12:45:36.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.351" endtime="20201029 12:45:36.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.345" endtime="20201029 12:45:36.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.415" endtime="20201029 12:45:36.751"></status>
</kw>
<msg timestamp="20201029 12:45:36.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039349194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039488611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.412" endtime="20201029 12:45:36.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039349194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039488611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.760" endtime="20201029 12:45:36.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.778" endtime="20201029 12:45:36.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.405" endtime="20201029 12:45:36.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.400" endtime="20201029 12:45:36.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.795" level="INFO">${RESULT} = [{'diff': 0.0001394170000000028}, {'diff': 0.00013926400000000005}, {'diff': 0.00014006999999999908}, {'diff': 0.0001393889999999967}, {'diff': 0.00013969500000000218}, {'diff': 0.00013930599999999876...</msg>
<status status="PASS" starttime="20201029 12:45:36.786" endtime="20201029 12:45:36.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:36.804" level="INFO">${ACCURACY} = {'diff': [0.0001394170000000028, 0.00013926400000000005, 0.00014006999999999908, 0.0001393889999999967, 0.00013969500000000218, 0.00013930599999999876, 0.0001401249999999979, 0.00013944400000000245, 0...</msg>
<status status="PASS" starttime="20201029 12:45:36.797" endtime="20201029 12:45:36.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.815" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:45:36.812" endtime="20201029 12:45:36.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.820" level="INFO">VALUE: [0.0001394170000000028, 0.00013926400000000005, 0.00014006999999999908, 0.0001393889999999967, 0.00013969500000000218, 0.00013930599999999876, 0.0001401249999999979, 0.00013944400000000245, 0.0001395270000000004, 0.00013965300000000347, 0.00013955599999999901, 0.00013934700000000494, 0.00013955599999999901, 0.00013963899999999696, 0.0001401249999999979, 0.00013986099999999807, 0.00014020900000000225, 0.0001400270000000009, 0.00014004100000000047, 0.00013940300000000322, 0.00013998599999999473, 0.00013970800000000227, 0.00014008299999999918, 0.00013936099999999757, 0.00013936099999999757, 0.00014008399999999865, 0.00013975000000000098, 0.00013925000000000048, 0.0001397919999999997, 0.00013938900000000365, 0.00013974999999999405, 0.00013984700000000544, 0.00013926400000000005, 0.0001399720000000021, 0.0001396799999999962, 0.00013958399999999815, 0.00013927799999999962, 0.00013976400000000055, 0.00013945799999999509, 0.00013936200000000398, 0.0001394999999999938, 0.00013980599999999926, 0.00014018099999999617, 0.0001401390000000044, 0.00013976400000000055, 0.00013973600000000141, 0.0001397919999999997, 0.00013938800000000418, 0.00014020799999999584, 0.00013922300000000082]</msg>
<status status="PASS" starttime="20201029 12:45:36.817" endtime="20201029 12:45:36.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.805" endtime="20201029 12:45:36.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:36.832" endtime="20201029 12:45:36.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.828" endtime="20201029 12:45:36.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.825" endtime="20201029 12:45:36.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.341" endtime="20201029 12:45:36.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.340" endtime="20201029 12:45:36.857"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.879" endtime="20201029 12:45:36.902"></status>
</kw>
<msg timestamp="20201029 12:45:36.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.876" endtime="20201029 12:45:36.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.905" endtime="20201029 12:45:36.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.911" endtime="20201029 12:45:36.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.869" endtime="20201029 12:45:36.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.863" endtime="20201029 12:45:36.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.934" endtime="20201029 12:45:37.267"></status>
</kw>
<msg timestamp="20201029 12:45:37.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040632556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040773486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.931" endtime="20201029 12:45:37.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040632556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040773486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.276" endtime="20201029 12:45:37.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.294" endtime="20201029 12:45:37.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.924" endtime="20201029 12:45:37.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.919" endtime="20201029 12:45:37.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:37.311" level="INFO">${RESULT} = [{'diff': 0.00014092999999999745}, {'diff': 0.0001402769999999942}, {'diff': 0.00014094399999999702}, {'diff': 0.00014100000000000223}, {'diff': 0.0001405140000000013}, {'diff': 0.00014109799999999922...</msg>
<status status="PASS" starttime="20201029 12:45:37.303" endtime="20201029 12:45:37.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:37.320" level="INFO">${ACCURACY} = {'diff': [0.00014092999999999745, 0.0001402769999999942, 0.00014094399999999702, 0.00014100000000000223, 0.0001405140000000013, 0.00014109799999999922, 0.0001408339999999994, 0.00014069399999999677, 0...</msg>
<status status="PASS" starttime="20201029 12:45:37.313" endtime="20201029 12:45:37.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.331" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:45:37.328" endtime="20201029 12:45:37.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.336" level="INFO">VALUE: [0.00014092999999999745, 0.0001402769999999942, 0.00014094399999999702, 0.00014100000000000223, 0.0001405140000000013, 0.00014109799999999922, 0.0001408339999999994, 0.00014069399999999677, 0.00014042999999999695, 0.00014058299999999968, 0.00014066700000000404, 0.00014023699999999445, 0.00014125000000000248, 0.00014126400000000205, 0.0001404720000000026, 0.00014126399999999512, 0.0001403050000000003, 0.0001410140000000018, 0.00014065299999999753, 0.0001408469999999995, 0.00014086099999999907, 0.00014105500000000104, 0.0001412370000000024, 0.00014058399999999915, 0.00014030599999999976, 0.00014051399999999437, 0.0001405129999999949, 0.00014070800000000327, 0.0001405140000000013, 0.0001403610000000055, 0.00014104200000000094, 0.0001411669999999976, 0.00014080600000000026, 0.00014048599999999523, 0.00014047300000000207, 0.0001406249999999984, 0.00014105500000000104, 0.00014030599999999976, 0.00014122299999999588, 0.0001402920000000002, 0.00014036099999999857, 0.0001409720000000031, 0.00014068099999999667, 0.00014108300000000018, 0.0001411810000000041, 0.00014052800000000087, 0.00014050000000000173, 0.00014044400000000345, 0.00014020800000000277, 0.00014105500000000104]</msg>
<status status="PASS" starttime="20201029 12:45:37.333" endtime="20201029 12:45:37.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.322" endtime="20201029 12:45:37.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:37.350" endtime="20201029 12:45:37.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.344" endtime="20201029 12:45:37.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.342" endtime="20201029 12:45:37.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.859" endtime="20201029 12:45:37.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.858" endtime="20201029 12:45:37.375"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.397" endtime="20201029 12:45:37.418"></status>
</kw>
<msg timestamp="20201029 12:45:37.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.394" endtime="20201029 12:45:37.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.421" endtime="20201029 12:45:37.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.428" endtime="20201029 12:45:37.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.387" endtime="20201029 12:45:37.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.381" endtime="20201029 12:45:37.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.451" endtime="20201029 12:45:37.784"></status>
</kw>
<msg timestamp="20201029 12:45:37.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039114153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039256069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.447" endtime="20201029 12:45:37.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039114153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039256069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.793" endtime="20201029 12:45:37.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.811" endtime="20201029 12:45:37.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.440" endtime="20201029 12:45:37.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.435" endtime="20201029 12:45:37.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:37.828" level="INFO">${RESULT} = [{'diff': 0.00014191599999999888}, {'diff': 0.00014205500000000204}, {'diff': 0.00014220799999999784}, {'diff': 0.0001417920000000017}, {'diff': 0.00014183300000000093}, {'diff': 0.0001420280000000023...</msg>
<status status="PASS" starttime="20201029 12:45:37.819" endtime="20201029 12:45:37.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:37.838" level="INFO">${ACCURACY} = {'diff': [0.00014191599999999888, 0.00014205500000000204, 0.00014220799999999784, 0.0001417920000000017, 0.00014183300000000093, 0.00014202800000000237, 0.0001414170000000048, 0.00014213899999999946, ...</msg>
<status status="PASS" starttime="20201029 12:45:37.830" endtime="20201029 12:45:37.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.849" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:45:37.846" endtime="20201029 12:45:37.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.854" level="INFO">VALUE: [0.00014191599999999888, 0.00014205500000000204, 0.00014220799999999784, 0.0001417920000000017, 0.00014183300000000093, 0.00014202800000000237, 0.0001414170000000048, 0.00014213899999999946, 0.00014184799999999997, 0.00014211100000000032, 0.00014169499999999724, 0.00014208300000000118, 0.0001422219999999974, 0.000141347, 0.00014140300000000522, 0.0001416669999999981, 0.0001418889999999992, 0.0001421669999999986, 0.00014137499999999914, 0.00014175000000000298, 0.0001422219999999974, 0.0001421799999999987, 0.0001417920000000017, 0.00014197300000000357, 0.00014165299999999853, 0.00014140300000000522, 0.00014223600000000391, 0.00014208299999999424, 0.0001418470000000005, 0.00014152800000000187, 0.00014175000000000298, 0.00014176399999999562, 0.00014136099999999957, 0.00014186100000000007, 0.00014177700000000265, 0.00014155600000000101, 0.00014132000000000033, 0.0001415690000000011, 0.00014172299999999638, 0.00014215199999999956, 0.0001414999999999958, 0.0001414019999999988, 0.00014145899999999656, 0.00014229199999999526, 0.0001422920000000022, 0.0001416799999999982, 0.00014127800000000162, 0.00014223599999999698, 0.00014204200000000194, 0.0001418889999999992]</msg>
<status status="PASS" starttime="20201029 12:45:37.851" endtime="20201029 12:45:37.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.840" endtime="20201029 12:45:37.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:37.866" endtime="20201029 12:45:37.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.862" endtime="20201029 12:45:37.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.860" endtime="20201029 12:45:37.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.377" endtime="20201029 12:45:37.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.376" endtime="20201029 12:45:37.891"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.913" endtime="20201029 12:45:37.935"></status>
</kw>
<msg timestamp="20201029 12:45:37.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.910" endtime="20201029 12:45:37.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.938" endtime="20201029 12:45:37.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.944" endtime="20201029 12:45:37.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.903" endtime="20201029 12:45:37.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.897" endtime="20201029 12:45:37.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.967" endtime="20201029 12:45:38.301"></status>
</kw>
<msg timestamp="20201029 12:45:38.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039090958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0392335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:37.964" endtime="20201029 12:45:38.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039090958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0392335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:38.310" endtime="20201029 12:45:38.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.328" endtime="20201029 12:45:38.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.957" endtime="20201029 12:45:38.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.952" endtime="20201029 12:45:38.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.345" level="INFO">${RESULT} = [{'diff': 0.0001425419999999955}, {'diff': 0.00014263899999999996}, {'diff': 0.00014287500000000064}, {'diff': 0.00014323599999999798}, {'diff': 0.00014295799999999859}, {'diff': 0.0001428480000000009...</msg>
<status status="PASS" starttime="20201029 12:45:38.336" endtime="20201029 12:45:38.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:38.355" level="INFO">${ACCURACY} = {'diff': [0.0001425419999999955, 0.00014263899999999996, 0.00014287500000000064, 0.00014323599999999798, 0.00014295799999999859, 0.00014284800000000097, 0.0001422920000000022, 0.00014315300000000003, ...</msg>
<status status="PASS" starttime="20201029 12:45:38.347" endtime="20201029 12:45:38.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.366" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:45:38.364" endtime="20201029 12:45:38.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.372" level="INFO">VALUE: [0.0001425419999999955, 0.00014263899999999996, 0.00014287500000000064, 0.00014323599999999798, 0.00014295799999999859, 0.00014284800000000097, 0.0001422920000000022, 0.00014315300000000003, 0.00014286099999999413, 0.00014270799999999834, 0.00014302699999999696, 0.00014322299999999788, 0.00014227800000000262, 0.0001425690000000021, 0.0001425140000000033, 0.00014325000000000448, 0.00014302800000000337, 0.00014295899999999806, 0.000143041999999996, 0.00014232000000000133, 0.00014325000000000448, 0.00014252799999999594, 0.00014281900000000236, 0.00014233300000000143, 0.00014287500000000064, 0.00014259700000000125, 0.00014265299999999953, 0.00014255600000000201, 0.00014311099999999438, 0.0001425140000000033, 0.00014258299999999474, 0.00014294399999999902, 0.0001428890000000002, 0.000143041999999996, 0.00014269399999999877, 0.0001428890000000002, 0.0001431669999999996, 0.00014240299999999928, 0.00014247199999999766, 0.00014226400000000305, 0.00014233300000000143, 0.0001431669999999996, 0.0001428890000000002, 0.00014266700000000604, 0.00014240299999999928, 0.0001425270000000034, 0.00014230600000000176, 0.00014237500000000014, 0.00014269499999999824, 0.00014277800000000312]</msg>
<status status="PASS" starttime="20201029 12:45:38.369" endtime="20201029 12:45:38.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.357" endtime="20201029 12:45:38.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:38.384" endtime="20201029 12:45:38.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.380" endtime="20201029 12:45:38.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.377" endtime="20201029 12:45:38.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.893" endtime="20201029 12:45:38.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.892" endtime="20201029 12:45:38.409"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.431" endtime="20201029 12:45:38.452"></status>
</kw>
<msg timestamp="20201029 12:45:38.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.428" endtime="20201029 12:45:38.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.456" endtime="20201029 12:45:38.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.462" endtime="20201029 12:45:38.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.421" endtime="20201029 12:45:38.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.415" endtime="20201029 12:45:38.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.485" endtime="20201029 12:45:38.817"></status>
</kw>
<msg timestamp="20201029 12:45:38.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039023694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039167861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.482" endtime="20201029 12:45:38.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039023694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039167861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.827" endtime="20201029 12:45:38.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.845" endtime="20201029 12:45:38.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.474" endtime="20201029 12:45:38.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.470" endtime="20201029 12:45:38.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.862" level="INFO">${RESULT} = [{'diff': 0.0001441670000000006}, {'diff': 0.00014423599999999898}, {'diff': 0.00014370799999999934}, {'diff': 0.00014394400000000002}, {'diff': 0.00014401399999999787}, {'diff': 0.000143444999999999}...</msg>
<status status="PASS" starttime="20201029 12:45:38.853" endtime="20201029 12:45:38.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:38.871" level="INFO">${ACCURACY} = {'diff': [0.0001441670000000006, 0.00014423599999999898, 0.00014370799999999934, 0.00014394400000000002, 0.00014401399999999787, 0.000143444999999999, 0.0001434590000000055, 0.00014356999999999565, 0....</msg>
<status status="PASS" starttime="20201029 12:45:38.864" endtime="20201029 12:45:38.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.881" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:45:38.879" endtime="20201029 12:45:38.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.887" level="INFO">VALUE: [0.0001441670000000006, 0.00014423599999999898, 0.00014370799999999934, 0.00014394400000000002, 0.00014401399999999787, 0.000143444999999999, 0.0001434590000000055, 0.00014356999999999565, 0.0001434999999999978, 0.00014347199999999866, 0.0001434999999999978, 0.00014387500000000164, 0.00014336099999999463, 0.0001437219999999989, 0.0001437219999999989, 0.00014391600000000088, 0.00014401399999999787, 0.00014413899999999452, 0.00014423600000000592, 0.00014387500000000164, 0.00014356899999999617, 0.00014423600000000592, 0.00014344399999999952, 0.00014427799999999769, 0.00014358300000000268, 0.0001441250000000019, 0.0001438749999999947, 0.00014376399999999762, 0.00014415300000000103, 0.00014398600000000567, 0.0001435690000000031, 0.00014423599999999898, 0.00014387500000000164, 0.00014343099999999942, 0.00014423599999999898, 0.00014423599999999898, 0.00014425000000000548, 0.0001434020000000008, 0.00014419400000000027, 0.00014327799999999669, 0.00014350000000000473, 0.0001435969999999953, 0.0001437219999999989, 0.0001434999999999978, 0.00014397199999999916, 0.00014427800000000462, 0.0001435129999999979, 0.00014373599999999848, 0.00014413900000000146, 0.00014344399999999952]</msg>
<status status="PASS" starttime="20201029 12:45:38.884" endtime="20201029 12:45:38.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.872" endtime="20201029 12:45:38.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:38.899" endtime="20201029 12:45:38.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.895" endtime="20201029 12:45:38.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.892" endtime="20201029 12:45:38.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.411" endtime="20201029 12:45:38.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.410" endtime="20201029 12:45:38.924"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.946" endtime="20201029 12:45:38.973"></status>
</kw>
<msg timestamp="20201029 12:45:38.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.943" endtime="20201029 12:45:38.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.977" endtime="20201029 12:45:38.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.984" endtime="20201029 12:45:38.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.936" endtime="20201029 12:45:38.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.930" endtime="20201029 12:45:38.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.007" endtime="20201029 12:45:39.341"></status>
</kw>
<msg timestamp="20201029 12:45:39.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044817458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044962125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.004" endtime="20201029 12:45:39.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044817458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044962125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.350" endtime="20201029 12:45:39.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.368" endtime="20201029 12:45:39.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.996" endtime="20201029 12:45:39.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.992" endtime="20201029 12:45:39.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.386" level="INFO">${RESULT} = [{'diff': 0.0001446670000000011}, {'diff': 0.00014463899999999502}, {'diff': 0.00014443000000000095}, {'diff': 0.00014523599999999998}, {'diff': 0.00014451399999999837}, {'diff': 0.0001442919999999972...</msg>
<status status="PASS" starttime="20201029 12:45:39.377" endtime="20201029 12:45:39.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:39.395" level="INFO">${ACCURACY} = {'diff': [0.0001446670000000011, 0.00014463899999999502, 0.00014443000000000095, 0.00014523599999999998, 0.00014451399999999837, 0.00014429199999999726, 0.00014430499999999735, 0.00014515200000000256,...</msg>
<status status="PASS" starttime="20201029 12:45:39.388" endtime="20201029 12:45:39.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.406" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:45:39.404" endtime="20201029 12:45:39.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.411" level="INFO">VALUE: [0.0001446670000000011, 0.00014463899999999502, 0.00014443000000000095, 0.00014523599999999998, 0.00014451399999999837, 0.00014429199999999726, 0.00014430499999999735, 0.00014515200000000256, 0.00014479199999999776, 0.00014426400000000505, 0.0001448050000000048, 0.00014518100000000117, 0.000145041999999998, 0.0001448890000000022, 0.00014429100000000472, 0.00014502699999999896, 0.00014427799999999769, 0.0001443619999999951, 0.0001448340000000034, 0.00014443100000000042, 0.00014443100000000042, 0.00014434799999999554, 0.0001445419999999975, 0.00014469400000000077, 0.00014487500000000264, 0.00014480499999999785, 0.0001448199999999969, 0.00014508300000000418, 0.0001451529999999951, 0.00014524999999999955, 0.00014506899999999767, 0.00014454100000000497, 0.00014515300000000203, 0.00014481899999999742, 0.0001446250000000024, 0.00014515200000000256, 0.00014473599999999948, 0.0001446659999999947, 0.00014501399999999887, 0.00014444400000000052, 0.00014501399999999887, 0.00014487500000000264, 0.00014497299999999963, 0.00014452800000000487, 0.00014515300000000203, 0.0001449869999999992, 0.00014483300000000393, 0.0001447219999999999, 0.00014427799999999769, 0.00014456999999999665]</msg>
<status status="PASS" starttime="20201029 12:45:39.408" endtime="20201029 12:45:39.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.397" endtime="20201029 12:45:39.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:39.425" endtime="20201029 12:45:39.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.419" endtime="20201029 12:45:39.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.416" endtime="20201029 12:45:39.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.926" endtime="20201029 12:45:39.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.925" endtime="20201029 12:45:39.449"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.472" endtime="20201029 12:45:39.496"></status>
</kw>
<msg timestamp="20201029 12:45:39.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.468" endtime="20201029 12:45:39.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.500" endtime="20201029 12:45:39.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.508" endtime="20201029 12:45:39.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.461" endtime="20201029 12:45:39.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.456" endtime="20201029 12:45:39.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.539" endtime="20201029 12:45:39.882"></status>
</kw>
<msg timestamp="20201029 12:45:39.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039654361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039800528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.535" endtime="20201029 12:45:39.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039654361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039800528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.891" endtime="20201029 12:45:39.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.909" endtime="20201029 12:45:39.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.526" endtime="20201029 12:45:39.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.518" endtime="20201029 12:45:39.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.926" level="INFO">${RESULT} = [{'diff': 0.0001461670000000026}, {'diff': 0.00014615300000000303}, {'diff': 0.0001456250000000034}, {'diff': 0.00014588899999999627}, {'diff': 0.0001462220000000014}, {'diff': 0.00014532000000000433}...</msg>
<status status="PASS" starttime="20201029 12:45:39.917" endtime="20201029 12:45:39.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:39.936" level="INFO">${ACCURACY} = {'diff': [0.0001461670000000026, 0.00014615300000000303, 0.0001456250000000034, 0.00014588899999999627, 0.0001462220000000014, 0.00014532000000000433, 0.00014608399999999772, 0.0001461949999999948, 0....</msg>
<status status="PASS" starttime="20201029 12:45:39.928" endtime="20201029 12:45:39.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.947" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:45:39.944" endtime="20201029 12:45:39.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.952" level="INFO">VALUE: [0.0001461670000000026, 0.00014615300000000303, 0.0001456250000000034, 0.00014588899999999627, 0.0001462220000000014, 0.00014532000000000433, 0.00014608399999999772, 0.0001461949999999948, 0.0001453340000000039, 0.00014566600000000263, 0.00014616699999999566, 0.00014530599999999783, 0.00014583300000000493, 0.00014613899999999652, 0.00014561100000000382, 0.0001460000000000003, 0.00014534699999999706, 0.00014540299999999534, 0.00014524999999999955, 0.0001455140000000063, 0.0001453329999999975, 0.00014615200000000356, 0.0001462499999999936, 0.00014541700000000185, 0.0001457920000000057, 0.00014548600000000023, 0.00014580499999999885, 0.0001460549999999991, 0.00014582000000000483, 0.00014583300000000493, 0.00014538899999999577, 0.00014597200000000116, 0.00014586100000000407, 0.00014537500000000314, 0.00014565300000000253, 0.0001455549999999986, 0.0001461670000000026, 0.00014586100000000407, 0.00014598600000000073, 0.00014561100000000382, 0.0001456670000000021, 0.00014541600000000238, 0.00014582000000000483, 0.00014568100000000167, 0.00014531899999999792, 0.00014611099999999738, 0.00014569400000000177, 0.00014566600000000263, 0.00014601399999999987, 0.00014590300000000278]</msg>
<status status="PASS" starttime="20201029 12:45:39.949" endtime="20201029 12:45:39.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.938" endtime="20201029 12:45:39.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:39.965" endtime="20201029 12:45:39.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.960" endtime="20201029 12:45:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.958" endtime="20201029 12:45:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.452" endtime="20201029 12:45:39.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.450" endtime="20201029 12:45:39.990"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.012" endtime="20201029 12:45:40.035"></status>
</kw>
<msg timestamp="20201029 12:45:40.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.009" endtime="20201029 12:45:40.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.038" endtime="20201029 12:45:40.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.045" endtime="20201029 12:45:40.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.002" endtime="20201029 12:45:40.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.996" endtime="20201029 12:45:40.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.068" endtime="20201029 12:45:40.411"></status>
</kw>
<msg timestamp="20201029 12:45:40.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0396595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039806667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:40.065" endtime="20201029 12:45:40.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0396595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039806667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:40.420" endtime="20201029 12:45:40.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.438" endtime="20201029 12:45:40.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.057" endtime="20201029 12:45:40.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.053" endtime="20201029 12:45:40.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.455" level="INFO">${RESULT} = [{'diff': 0.00014716699999999666}, {'diff': 0.00014645900000000156}, {'diff': 0.00014640299999999634}, {'diff': 0.00014638899999999677}, {'diff': 0.00014663899999999702}, {'diff': 0.000147042}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:45:40.446" endtime="20201029 12:45:40.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:40.466" level="INFO">${ACCURACY} = {'diff': [0.00014716699999999666, 0.00014645900000000156, 0.00014640299999999634, 0.00014638899999999677, 0.00014663899999999702, 0.000147042, 0.00014661100000000482, 0.00014729200000000026, 0.0001472...</msg>
<status status="PASS" starttime="20201029 12:45:40.457" endtime="20201029 12:45:40.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.477" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:45:40.474" endtime="20201029 12:45:40.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.482" level="INFO">VALUE: [0.00014716699999999666, 0.00014645900000000156, 0.00014640299999999634, 0.00014638899999999677, 0.00014663899999999702, 0.000147042, 0.00014661100000000482, 0.00014729200000000026, 0.00014726300000000164, 0.00014637500000000414, 0.00014725000000000155, 0.0001465000000000008, 0.00014677800000000019, 0.00014656999999999865, 0.00014697200000000216, 0.00014677800000000019, 0.00014627799999999969, 0.00014723600000000198, 0.00014726400000000112, 0.00014726400000000112, 0.00014652799999999994, 0.00014691700000000335, 0.00014706999999999915, 0.00014718099999999623, 0.00014716699999999666, 0.00014666699999999616, 0.00014661100000000482, 0.00014644399999999558, 0.00014675000000000105, 0.0001468199999999989, 0.00014669399999999583, 0.00014640199999999687, 0.00014623600000000098, 0.00014718100000000317, 0.00014661100000000482, 0.00014638899999999677, 0.0001465000000000008, 0.00014687500000000464, 0.00014701400000000087, 0.00014651400000000037, 0.00014636099999999763, 0.00014648600000000123, 0.0001466659999999967, 0.00014675000000000105, 0.00014665300000000353, 0.00014672299999999444, 0.00014634799999999754, 0.00014691599999999694, 0.0001465549999999996, 0.00014652799999999994]</msg>
<status status="PASS" starttime="20201029 12:45:40.479" endtime="20201029 12:45:40.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.468" endtime="20201029 12:45:40.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:40.494" endtime="20201029 12:45:40.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.490" endtime="20201029 12:45:40.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.487" endtime="20201029 12:45:40.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.992" endtime="20201029 12:45:40.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.990" endtime="20201029 12:45:40.519"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.541" endtime="20201029 12:45:40.563"></status>
</kw>
<msg timestamp="20201029 12:45:40.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.538" endtime="20201029 12:45:40.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.566" endtime="20201029 12:45:40.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.573" endtime="20201029 12:45:40.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.531" endtime="20201029 12:45:40.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.525" endtime="20201029 12:45:40.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.595" endtime="20201029 12:45:40.932"></status>
</kw>
<msg timestamp="20201029 12:45:40.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038958833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039106681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.592" endtime="20201029 12:45:40.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038958833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039106681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.941" endtime="20201029 12:45:40.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.959" endtime="20201029 12:45:40.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.585" endtime="20201029 12:45:40.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.580" endtime="20201029 12:45:40.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.976" level="INFO">${RESULT} = [{'diff': 0.00014784799999999904}, {'diff': 0.0001478749999999987}, {'diff': 0.0001476250000000054}, {'diff': 0.00014813799999999905}, {'diff': 0.00014818099999999723}, {'diff': 0.0001478749999999987}...</msg>
<status status="PASS" starttime="20201029 12:45:40.967" endtime="20201029 12:45:40.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:40.985" level="INFO">${ACCURACY} = {'diff': [0.00014784799999999904, 0.0001478749999999987, 0.0001476250000000054, 0.00014813799999999905, 0.00014818099999999723, 0.0001478749999999987, 0.00014795799999999665, 0.00014827800000000169, 0...</msg>
<status status="PASS" starttime="20201029 12:45:40.978" endtime="20201029 12:45:40.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.996" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:45:40.994" endtime="20201029 12:45:40.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.002" level="INFO">VALUE: [0.00014784799999999904, 0.0001478749999999987, 0.0001476250000000054, 0.00014813799999999905, 0.00014818099999999723, 0.0001478749999999987, 0.00014795799999999665, 0.00014827800000000169, 0.00014808399999999972, 0.00014786099999999913, 0.00014826399999999518, 0.00014811099999999938, 0.00014795799999999665, 0.00014812499999999895, 0.0001478199999999999, 0.00014731899999999992, 0.00014752700000000146, 0.000147527999999994, 0.00014729200000000026, 0.00014808399999999972, 0.00014772199999999597, 0.00014777699999999477, 0.00014806900000000067, 0.000147429999999997, 0.00014740299999999734, 0.00014798699999999526, 0.00014738899999999777, 0.00014758399999999922, 0.00014783399999999947, 0.00014758299999999974, 0.000147833, 0.00014817999999999776, 0.0001479169999999974, 0.00014820899999999637, 0.00014758299999999974, 0.0001480969999999998, 0.00014748699999999476, 0.00014748600000000223, 0.00014748600000000223, 0.00014812499999999895, 0.00014793100000000392, 0.00014819399999999733, 0.00014812499999999895, 0.00014812499999999895, 0.00014807000000000015, 0.00014780600000000033, 0.00014747199999999572, 0.00014758299999999974, 0.00014737500000000514, 0.0001480000000000023]</msg>
<status status="PASS" starttime="20201029 12:45:40.998" endtime="20201029 12:45:41.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.987" endtime="20201029 12:45:41.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:41.014" endtime="20201029 12:45:41.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.010" endtime="20201029 12:45:41.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.007" endtime="20201029 12:45:41.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.521" endtime="20201029 12:45:41.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.520" endtime="20201029 12:45:41.039"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.062" endtime="20201029 12:45:41.084"></status>
</kw>
<msg timestamp="20201029 12:45:41.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.058" endtime="20201029 12:45:41.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.088" endtime="20201029 12:45:41.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.094" endtime="20201029 12:45:41.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.051" endtime="20201029 12:45:41.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.045" endtime="20201029 12:45:41.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.117" endtime="20201029 12:45:41.453"></status>
</kw>
<msg timestamp="20201029 12:45:41.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041082611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041231583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.114" endtime="20201029 12:45:41.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041082611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041231583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.462" endtime="20201029 12:45:41.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.480" endtime="20201029 12:45:41.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.107" endtime="20201029 12:45:41.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.102" endtime="20201029 12:45:41.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:41.497" level="INFO">${RESULT} = [{'diff': 0.00014897200000000416}, {'diff': 0.0001489859999999968}, {'diff': 0.00014886100000000013}, {'diff': 0.0001489870000000032}, {'diff': 0.0001490000000000033}, {'diff': 0.0001489859999999968},...</msg>
<status status="PASS" starttime="20201029 12:45:41.488" endtime="20201029 12:45:41.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:41.506" level="INFO">${ACCURACY} = {'diff': [0.00014897200000000416, 0.0001489859999999968, 0.00014886100000000013, 0.0001489870000000032, 0.0001490000000000033, 0.0001489859999999968, 0.00014872299999999644, 0.00014851400000000237, 0....</msg>
<status status="PASS" starttime="20201029 12:45:41.499" endtime="20201029 12:45:41.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.517" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:45:41.515" endtime="20201029 12:45:41.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.522" level="INFO">VALUE: [0.00014897200000000416, 0.0001489859999999968, 0.00014886100000000013, 0.0001489870000000032, 0.0001490000000000033, 0.0001489859999999968, 0.00014872299999999644, 0.00014851400000000237, 0.00014886100000000013, 0.00014836099999999963, 0.00014838899999999877, 0.0001488200000000009, 0.0001490970000000008, 0.0001488749999999997, 0.000149042000000002, 0.00014844399999999758, 0.00014856900000000117, 0.0001490970000000008, 0.00014851400000000237, 0.00014877799999999525, 0.00014908300000000124, 0.0001490000000000033, 0.00014907000000000115, 0.00014844499999999705, 0.00014886100000000013, 0.00014876399999999568, 0.0001487090000000038, 0.0001485970000000003, 0.00014861099999999988, 0.00014876300000000314, 0.00014845899999999662, 0.00014826300000000264, 0.000149042000000002, 0.0001485970000000003, 0.00014911100000000038, 0.00014895799999999765, 0.00014834799999999954, 0.00014893099999999798, 0.0001485699999999937, 0.00014873600000000348, 0.00014907000000000115, 0.0001486949999999973, 0.00014866699999999816, 0.00014838899999999877, 0.00014875000000000305, 0.00014833399999999997, 0.00014852800000000194, 0.00014918099999999823, 0.00014865200000000606, 0.00014859799999999979]</msg>
<status status="PASS" starttime="20201029 12:45:41.519" endtime="20201029 12:45:41.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.508" endtime="20201029 12:45:41.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:41.536" endtime="20201029 12:45:41.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.530" endtime="20201029 12:45:41.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.528" endtime="20201029 12:45:41.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.041" endtime="20201029 12:45:41.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.040" endtime="20201029 12:45:41.561"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.583" endtime="20201029 12:45:41.605"></status>
</kw>
<msg timestamp="20201029 12:45:41.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.580" endtime="20201029 12:45:41.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.608" endtime="20201029 12:45:41.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.614" endtime="20201029 12:45:41.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.573" endtime="20201029 12:45:41.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.567" endtime="20201029 12:45:41.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.637" endtime="20201029 12:45:41.971"></status>
</kw>
<msg timestamp="20201029 12:45:41.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039233653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039383556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.634" endtime="20201029 12:45:41.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039233653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039383556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.981" endtime="20201029 12:45:41.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.000" endtime="20201029 12:45:42.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.627" endtime="20201029 12:45:42.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.622" endtime="20201029 12:45:42.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.017" level="INFO">${RESULT} = [{'diff': 0.00014990299999999984}, {'diff': 0.00015007000000000215}, {'diff': 0.0001495829999999948}, {'diff': 0.00014973599999999754}, {'diff': 0.00014969399999999883}, {'diff': 0.0001495280000000029...</msg>
<status status="PASS" starttime="20201029 12:45:42.008" endtime="20201029 12:45:42.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:42.027" level="INFO">${ACCURACY} = {'diff': [0.00014990299999999984, 0.00015007000000000215, 0.0001495829999999948, 0.00014973599999999754, 0.00014969399999999883, 0.00014952800000000294, 0.00014923599999999704, 0.000149445000000005, 0...</msg>
<status status="PASS" starttime="20201029 12:45:42.019" endtime="20201029 12:45:42.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.038" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:45:42.036" endtime="20201029 12:45:42.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.044" level="INFO">VALUE: [0.00014990299999999984, 0.00015007000000000215, 0.0001495829999999948, 0.00014973599999999754, 0.00014969399999999883, 0.00014952800000000294, 0.00014923599999999704, 0.000149445000000005, 0.00014981899999999548, 0.00015002700000000396, 0.00014955600000000208, 0.00014951399999999643, 0.00014977799999999625, 0.00015012500000000095, 0.0001495829999999948, 0.00015022299999999794, 0.0001493200000000014, 0.00014948600000000423, 0.00014940299999999934, 0.00014972199999999797, 0.00014951400000000337, 0.00014961099999999394, 0.00014947200000000466, 0.0001498750000000007, 0.00014944499999999805, 0.00015013900000000052, 0.00015013900000000052, 0.00014952800000000294, 0.00015009699999999487, 0.0001493330000000015, 0.00014997199999999822, 0.00015011100000000138, 0.00015007000000000215, 0.00014958300000000174, 0.0001501530000000001, 0.00015018099999999923, 0.0001499580000000056, 0.00014952800000000294, 0.000149527999999996, 0.0001494580000000051, 0.0001498880000000008, 0.00015013900000000052, 0.00015016699999999966, 0.00014976400000000362, 0.00015012500000000095, 0.0001499169999999994, 0.00014962500000000045, 0.00015023599999999804, 0.00014977799999999625, 0.00014979200000000276]</msg>
<status status="PASS" starttime="20201029 12:45:42.041" endtime="20201029 12:45:42.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.029" endtime="20201029 12:45:42.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:42.056" endtime="20201029 12:45:42.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.052" endtime="20201029 12:45:42.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.049" endtime="20201029 12:45:42.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.563" endtime="20201029 12:45:42.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.562" endtime="20201029 12:45:42.081"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.104" endtime="20201029 12:45:42.125"></status>
</kw>
<msg timestamp="20201029 12:45:42.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.100" endtime="20201029 12:45:42.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.129" endtime="20201029 12:45:42.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.135" endtime="20201029 12:45:42.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.093" endtime="20201029 12:45:42.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.087" endtime="20201029 12:45:42.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.160" endtime="20201029 12:45:42.495"></status>
</kw>
<msg timestamp="20201029 12:45:42.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039549292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039699597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.155" endtime="20201029 12:45:42.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039549292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039699597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.505" endtime="20201029 12:45:42.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.523" endtime="20201029 12:45:42.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.148" endtime="20201029 12:45:42.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.143" endtime="20201029 12:45:42.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.541" level="INFO">${RESULT} = [{'diff': 0.00015030500000000335}, {'diff': 0.00015044399999999958}, {'diff': 0.0001503059999999959}, {'diff': 0.00015129199999999732}, {'diff': 0.00015101299999999845}, {'diff': 0.0001505139999999974...</msg>
<status status="PASS" starttime="20201029 12:45:42.531" endtime="20201029 12:45:42.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:42.553" level="INFO">${ACCURACY} = {'diff': [0.00015030500000000335, 0.00015044399999999958, 0.0001503059999999959, 0.00015129199999999732, 0.00015101299999999845, 0.00015051399999999743, 0.00015086100000000213, 0.00015077799999999725,...</msg>
<status status="PASS" starttime="20201029 12:45:42.544" endtime="20201029 12:45:42.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.564" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:45:42.562" endtime="20201029 12:45:42.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.569" level="INFO">VALUE: [0.00015030500000000335, 0.00015044399999999958, 0.0001503059999999959, 0.00015129199999999732, 0.00015101299999999845, 0.00015051399999999743, 0.00015086100000000213, 0.00015077799999999725, 0.0001506530000000006, 0.00015108300000000324, 0.0001512499999999986, 0.00015047199999999872, 0.00015119400000000033, 0.0001503059999999959, 0.00015040200000000087, 0.00015094400000000008, 0.00015111099999999544, 0.000150527999999997, 0.00015070800000000634, 0.00015095799999999965, 0.00015030499999999641, 0.00015094400000000008, 0.0001504169999999999, 0.00015030600000000283, 0.0001504580000000061, 0.00015113900000000152, 0.00015047199999999872, 0.00015043099999999948, 0.0001504169999999999, 0.00015040300000000034, 0.00015027699999999727, 0.00015068000000000026, 0.0001509300000000005, 0.00015040200000000087, 0.00015027799999999675, 0.00015036100000000163, 0.00015063900000000102, 0.00015055600000000308, 0.00015083399999999553, 0.00015108300000000324, 0.00015090300000000084, 0.00015029099999999684, 0.00015105499999999716, 0.00015052699999999752, 0.0001510409999999976, 0.00015099999999999836, 0.00015080500000000385, 0.0001511530000000011, 0.0001508750000000017, 0.00015026399999999718]</msg>
<status status="PASS" starttime="20201029 12:45:42.566" endtime="20201029 12:45:42.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.555" endtime="20201029 12:45:42.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:42.582" endtime="20201029 12:45:42.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.577" endtime="20201029 12:45:42.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.575" endtime="20201029 12:45:42.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.083" endtime="20201029 12:45:42.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.082" endtime="20201029 12:45:42.607"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.629" endtime="20201029 12:45:42.653"></status>
</kw>
<msg timestamp="20201029 12:45:42.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.626" endtime="20201029 12:45:42.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.656" endtime="20201029 12:45:42.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.662" endtime="20201029 12:45:42.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.619" endtime="20201029 12:45:42.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.613" endtime="20201029 12:45:42.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.685" endtime="20201029 12:45:43.032"></status>
</kw>
<msg timestamp="20201029 12:45:43.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039551306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039703264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.682" endtime="20201029 12:45:43.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039551306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039703264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.041" endtime="20201029 12:45:43.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.059" endtime="20201029 12:45:43.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.675" endtime="20201029 12:45:43.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.670" endtime="20201029 12:45:43.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.076" level="INFO">${RESULT} = [{'diff': 0.00015195800000000065}, {'diff': 0.0001520279999999985}, {'diff': 0.0001516530000000016}, {'diff': 0.000151915999999995}, {'diff': 0.00015134700000000306}, {'diff': 0.00015136199999999517},...</msg>
<status status="PASS" starttime="20201029 12:45:43.068" endtime="20201029 12:45:43.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:43.085" level="INFO">${ACCURACY} = {'diff': [0.00015195800000000065, 0.0001520279999999985, 0.0001516530000000016, 0.000151915999999995, 0.00015134700000000306, 0.00015136199999999517, 0.00015213900000000252, 0.00015144400000000058, 0....</msg>
<status status="PASS" starttime="20201029 12:45:43.078" endtime="20201029 12:45:43.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.096" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:45:43.094" endtime="20201029 12:45:43.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.101" level="INFO">VALUE: [0.00015195800000000065, 0.0001520279999999985, 0.0001516530000000016, 0.000151915999999995, 0.00015134700000000306, 0.00015136199999999517, 0.00015213900000000252, 0.00015144400000000058, 0.0001517629999999992, 0.00015147199999999972, 0.0001522499999999996, 0.00015168000000000126, 0.00015158400000000322, 0.00015194500000000055, 0.00015161099999999594, 0.00015165199999999518, 0.00015223600000000004, 0.0001514859999999993, 0.0001515829999999968, 0.00015207000000000415, 0.00015136100000000263, 0.0001522369999999995, 0.00015188900000000227, 0.0001514859999999993, 0.00015166699999999422, 0.00015162500000000245, 0.00015165299999999465, 0.00015201399999999893, 0.000152124999999996, 0.000151527999999998, 0.0001514859999999993, 0.00015194399999999414, 0.000151527999999998, 0.0001520829999999973, 0.00015215299999999515, 0.00015212500000000295, 0.00015201400000000587, 0.00015204199999999807, 0.0001516249999999955, 0.00015201399999999893, 0.00015151399999999843, 0.0001522499999999996, 0.00015159800000000279, 0.00015209799999999635, 0.00015213900000000252, 0.0001516530000000016, 0.00015154199999999757, 0.00015180500000000485, 0.00015138900000000177, 0.00015143100000000048]</msg>
<status status="PASS" starttime="20201029 12:45:43.098" endtime="20201029 12:45:43.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.087" endtime="20201029 12:45:43.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:43.114" endtime="20201029 12:45:43.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.110" endtime="20201029 12:45:43.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.107" endtime="20201029 12:45:43.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.609" endtime="20201029 12:45:43.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.608" endtime="20201029 12:45:43.139"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.161" endtime="20201029 12:45:43.186"></status>
</kw>
<msg timestamp="20201029 12:45:43.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.158" endtime="20201029 12:45:43.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.189" endtime="20201029 12:45:43.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.196" endtime="20201029 12:45:43.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.151" endtime="20201029 12:45:43.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.145" endtime="20201029 12:45:43.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.219" endtime="20201029 12:45:43.564"></status>
</kw>
<msg timestamp="20201029 12:45:43.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041059097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041212056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.215" endtime="20201029 12:45:43.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041059097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041212056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.573" endtime="20201029 12:45:43.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.591" endtime="20201029 12:45:43.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.208" endtime="20201029 12:45:43.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.204" endtime="20201029 12:45:43.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.608" level="INFO">${RESULT} = [{'diff': 0.00015295899999999418}, {'diff': 0.00015273600000000054}, {'diff': 0.00015230499999999841}, {'diff': 0.00015322300000000094}, {'diff': 0.00015261099999999694}, {'diff': 0.000152695000000001...</msg>
<status status="PASS" starttime="20201029 12:45:43.599" endtime="20201029 12:45:43.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:43.617" level="INFO">${ACCURACY} = {'diff': [0.00015295899999999418, 0.00015273600000000054, 0.00015230499999999841, 0.00015322300000000094, 0.00015261099999999694, 0.0001526950000000013, 0.00015286100000000413, 0.00015266699999999522,...</msg>
<status status="PASS" starttime="20201029 12:45:43.610" endtime="20201029 12:45:43.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.628" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:45:43.625" endtime="20201029 12:45:43.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.633" level="INFO">VALUE: [0.00015295899999999418, 0.00015273600000000054, 0.00015230499999999841, 0.00015322300000000094, 0.00015261099999999694, 0.0001526950000000013, 0.00015286100000000413, 0.00015266699999999522, 0.00015280499999999891, 0.00015322300000000094, 0.0001531530000000031, 0.0001528750000000037, 0.00015227799999999875, 0.00015261100000000388, 0.00015301399999999993, 0.00015231899999999798, 0.00015238899999999583, 0.00015238899999999583, 0.00015238900000000277, 0.00015300000000000036, 0.00015280499999999891, 0.0001530970000000048, 0.0001528750000000037, 0.0001529170000000024, 0.00015245900000000062, 0.00015315299999999615, 0.00015279099999999934, 0.0001523750000000032, 0.000152430000000002, 0.00015305600000000558, 0.00015276399999999968, 0.0001530699999999982, 0.00015324999999999367, 0.0001524860000000003, 0.00015305499999999916, 0.0001526249999999965, 0.00015251399999999943, 0.0001523609999999967, 0.00015254199999999857, 0.0001522780000000057, 0.0001528880000000038, 0.00015301400000000687, 0.00015268000000000226, 0.00015311099999999744, 0.00015311099999999744, 0.00015276399999999968, 0.00015295800000000165, 0.0001530279999999995, 0.00015227699999999927, 0.00015243100000000148]</msg>
<status status="PASS" starttime="20201029 12:45:43.630" endtime="20201029 12:45:43.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.619" endtime="20201029 12:45:43.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:43.647" endtime="20201029 12:45:43.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.641" endtime="20201029 12:45:43.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.638" endtime="20201029 12:45:43.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.141" endtime="20201029 12:45:43.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.140" endtime="20201029 12:45:43.672"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.694" endtime="20201029 12:45:43.717"></status>
</kw>
<msg timestamp="20201029 12:45:43.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.691" endtime="20201029 12:45:43.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.721" endtime="20201029 12:45:43.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.727" endtime="20201029 12:45:43.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.684" endtime="20201029 12:45:43.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.678" endtime="20201029 12:45:43.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.749" endtime="20201029 12:45:44.096"></status>
</kw>
<msg timestamp="20201029 12:45:44.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039250264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039404472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.746" endtime="20201029 12:45:44.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039250264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039404472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.105" endtime="20201029 12:45:44.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.123" endtime="20201029 12:45:44.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.739" endtime="20201029 12:45:44.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.735" endtime="20201029 12:45:44.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:44.140" level="INFO">${RESULT} = [{'diff': 0.0001542080000000029}, {'diff': 0.0001536249999999975}, {'diff': 0.0001541660000000042}, {'diff': 0.00015365299999999665}, {'diff': 0.00015358399999999828}, {'diff': 0.0001534730000000012},...</msg>
<status status="PASS" starttime="20201029 12:45:44.131" endtime="20201029 12:45:44.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:44.154" level="INFO">${ACCURACY} = {'diff': [0.0001542080000000029, 0.0001536249999999975, 0.0001541660000000042, 0.00015365299999999665, 0.00015358399999999828, 0.0001534730000000012, 0.00015381999999999896, 0.00015355599999999914, 0....</msg>
<status status="PASS" starttime="20201029 12:45:44.142" endtime="20201029 12:45:44.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.165" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:45:44.163" endtime="20201029 12:45:44.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.170" level="INFO">VALUE: [0.0001542080000000029, 0.0001536249999999975, 0.0001541660000000042, 0.00015365299999999665, 0.00015358399999999828, 0.0001534730000000012, 0.00015381999999999896, 0.00015355599999999914, 0.00015394399999999614, 0.00015338900000000377, 0.0001533609999999977, 0.00015330499999999941, 0.00015384700000000556, 0.00015366699999999622, 0.00015347199999999478, 0.00015418000000000376, 0.00015411099999999844, 0.00015363899999999708, 0.00015354199999999957, 0.00015397200000000222, 0.00015416599999999725, 0.00015404099999999366, 0.0001536660000000037, 0.00015397199999999528, 0.0001538609999999982, 0.00015394400000000308, 0.00015411099999999844, 0.00015370900000000187, 0.00015416699999999672, 0.00015363899999999708, 0.00015388899999999733, 0.00015350000000000086, 0.0001537500000000011, 0.00015373600000000154, 0.00015424999999999467, 0.00015381999999999896, 0.00015358300000000574, 0.00015379100000000034, 0.00015372300000000144, 0.00015420900000000237, 0.00015413899999999758, 0.0001539730000000017, 0.00015388899999999733, 0.00015380499999999991, 0.00015358400000000522, 0.0001536660000000037, 0.00015394400000000308, 0.00015402700000000102, 0.00015336199999999717, 0.00015380499999999991]</msg>
<status status="PASS" starttime="20201029 12:45:44.167" endtime="20201029 12:45:44.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.156" endtime="20201029 12:45:44.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:44.183" endtime="20201029 12:45:44.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.178" endtime="20201029 12:45:44.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.176" endtime="20201029 12:45:44.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.674" endtime="20201029 12:45:44.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.673" endtime="20201029 12:45:44.208"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.231" endtime="20201029 12:45:44.254"></status>
</kw>
<msg timestamp="20201029 12:45:44.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.228" endtime="20201029 12:45:44.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.258" endtime="20201029 12:45:44.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.264" endtime="20201029 12:45:44.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.220" endtime="20201029 12:45:44.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.214" endtime="20201029 12:45:44.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.287" endtime="20201029 12:45:44.630"></status>
</kw>
<msg timestamp="20201029 12:45:44.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040175611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.284" endtime="20201029 12:45:44.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040175611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.639" endtime="20201029 12:45:44.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.657" endtime="20201029 12:45:44.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.277" endtime="20201029 12:45:44.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.272" endtime="20201029 12:45:44.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:44.674" level="INFO">${RESULT} = [{'diff': 0.00015429200000000032}, {'diff': 0.00015520799999999696}, {'diff': 0.0001544029999999974}, {'diff': 0.00015484699999999962}, {'diff': 0.00015447199999999578}, {'diff': 0.0001553330000000005...</msg>
<status status="PASS" starttime="20201029 12:45:44.666" endtime="20201029 12:45:44.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:44.685" level="INFO">${ACCURACY} = {'diff': [0.00015429200000000032, 0.00015520799999999696, 0.0001544029999999974, 0.00015484699999999962, 0.00015447199999999578, 0.00015533300000000055, 0.00015445800000000315, 0.00015473600000000254,...</msg>
<status status="PASS" starttime="20201029 12:45:44.676" endtime="20201029 12:45:44.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.697" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:45:44.694" endtime="20201029 12:45:44.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.702" level="INFO">VALUE: [0.00015429200000000032, 0.00015520799999999696, 0.0001544029999999974, 0.00015484699999999962, 0.00015447199999999578, 0.00015533300000000055, 0.00015445800000000315, 0.00015473600000000254, 0.00015517999999999782, 0.00015456900000000023, 0.00015498599999999585, 0.00015455500000000066, 0.00015516700000000466, 0.00015505500000000116, 0.0001549029999999979, 0.00015451400000000143, 0.00015527800000000175, 0.00015463899999999808, 0.0001552500000000026, 0.0001550700000000002, 0.00015491699999999747, 0.00015427700000000127, 0.00015441699999999697, 0.00015445900000000262, 0.00015512499999999901, 0.00015437499999999826, 0.00015508399999999978, 0.00015481999999999996, 0.00015513899999999858, 0.00015469499999999636, 0.0001544029999999974, 0.00015491699999999747, 0.00015462500000000545, 0.00015498599999999585, 0.00015516700000000466, 0.00015477700000000177, 0.000155222999999996, 0.00015524999999999567, 0.0001550280000000015, 0.00015466599999999775, 0.0001548060000000004, 0.00015447200000000272, 0.00015451400000000143, 0.00015461099999999894, 0.00015467999999999732, 0.0001544579999999962, 0.00015477800000000125, 0.0001549029999999979, 0.00015459699999999937, 0.00015476400000000168]</msg>
<status status="PASS" starttime="20201029 12:45:44.699" endtime="20201029 12:45:44.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.687" endtime="20201029 12:45:44.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:44.720" endtime="20201029 12:45:44.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.715" endtime="20201029 12:45:44.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.713" endtime="20201029 12:45:44.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.210" endtime="20201029 12:45:44.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.209" endtime="20201029 12:45:44.745"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.767" endtime="20201029 12:45:44.789"></status>
</kw>
<msg timestamp="20201029 12:45:44.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.764" endtime="20201029 12:45:44.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.792" endtime="20201029 12:45:44.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.798" endtime="20201029 12:45:44.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.757" endtime="20201029 12:45:44.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.751" endtime="20201029 12:45:44.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.822" endtime="20201029 12:45:45.158"></status>
</kw>
<msg timestamp="20201029 12:45:45.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03937825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:44.818" endtime="20201029 12:45:45.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03937825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:45.168" endtime="20201029 12:45:45.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.186" endtime="20201029 12:45:45.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.811" endtime="20201029 12:45:45.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.806" endtime="20201029 12:45:45.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.202" level="INFO">${RESULT} = [{'diff': 0.0001556809999999978}, {'diff': 0.00015531900000000098}, {'diff': 0.00015588899999999933}, {'diff': 0.0001559860000000038}, {'diff': 0.00015541699999999797}, {'diff': 0.00015574999999999617...</msg>
<status status="PASS" starttime="20201029 12:45:45.194" endtime="20201029 12:45:45.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:45.211" level="INFO">${ACCURACY} = {'diff': [0.0001556809999999978, 0.00015531900000000098, 0.00015588899999999933, 0.0001559860000000038, 0.00015541699999999797, 0.00015574999999999617, 0.00015566599999999875, 0.00015622199999999753, ...</msg>
<status status="PASS" starttime="20201029 12:45:45.204" endtime="20201029 12:45:45.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.222" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:45:45.220" endtime="20201029 12:45:45.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.227" level="INFO">VALUE: [0.0001556809999999978, 0.00015531900000000098, 0.00015588899999999933, 0.0001559860000000038, 0.00015541699999999797, 0.00015574999999999617, 0.00015566599999999875, 0.00015622199999999753, 0.00015615299999999915, 0.00015626400000000318, 0.00015576399999999574, 0.00015554200000000157, 0.0001561809999999983, 0.00015605500000000216, 0.00015561099999999994, 0.00015598599999999685, 0.0001557359999999966, 0.0001558610000000002, 0.0001562779999999958, 0.0001554449999999971, 0.0001559579999999977, 0.00015583400000000053, 0.0001560700000000012, 0.00015543099999999754, 0.000155528000000002, 0.00015588899999999933, 0.00015555600000000114, 0.00015611100000000044, 0.0001559449999999976, 0.0001561939999999984, 0.00015572300000000344, 0.00015559700000000037, 0.00015532000000000046, 0.00015591699999999847, 0.00015626400000000318, 0.00015616699999999872, 0.0001561660000000062, 0.00015537499999999926, 0.00015534700000000012, 0.0001561380000000001, 0.00015582000000000096, 0.0001553609999999997, 0.00015562499999999951, 0.0001561939999999984, 0.00015566700000000516, 0.00015570899999999693, 0.0001557500000000031, 0.00015594399999999814, 0.0001561939999999984, 0.00015583400000000053]</msg>
<status status="PASS" starttime="20201029 12:45:45.224" endtime="20201029 12:45:45.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.213" endtime="20201029 12:45:45.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:45.240" endtime="20201029 12:45:45.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.235" endtime="20201029 12:45:45.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.233" endtime="20201029 12:45:45.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.747" endtime="20201029 12:45:45.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.746" endtime="20201029 12:45:45.265"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.287" endtime="20201029 12:45:45.310"></status>
</kw>
<msg timestamp="20201029 12:45:45.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.283" endtime="20201029 12:45:45.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.313" endtime="20201029 12:45:45.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.320" endtime="20201029 12:45:45.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.276" endtime="20201029 12:45:45.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.271" endtime="20201029 12:45:45.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.342" endtime="20201029 12:45:45.675"></status>
</kw>
<msg timestamp="20201029 12:45:45.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040569958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040727056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.339" endtime="20201029 12:45:45.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040569958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040727056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.684" endtime="20201029 12:45:45.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.702" endtime="20201029 12:45:45.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.332" endtime="20201029 12:45:45.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.327" endtime="20201029 12:45:45.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.719" level="INFO">${RESULT} = [{'diff': 0.0001570979999999944}, {'diff': 0.0001563480000000006}, {'diff': 0.00015683299999999512}, {'diff': 0.00015694500000000555}, {'diff': 0.00015662499999999357}, {'diff': 0.00015681900000000248...</msg>
<status status="PASS" starttime="20201029 12:45:45.710" endtime="20201029 12:45:45.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:45.728" level="INFO">${ACCURACY} = {'diff': [0.0001570979999999944, 0.0001563480000000006, 0.00015683299999999512, 0.00015694500000000555, 0.00015662499999999357, 0.00015681900000000248, 0.0001563610000000007, 0.00015681900000000248, 0...</msg>
<status status="PASS" starttime="20201029 12:45:45.721" endtime="20201029 12:45:45.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.738" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:45:45.736" endtime="20201029 12:45:45.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.744" level="INFO">VALUE: [0.0001570979999999944, 0.0001563480000000006, 0.00015683299999999512, 0.00015694500000000555, 0.00015662499999999357, 0.00015681900000000248, 0.0001563610000000007, 0.00015681900000000248, 0.00015676399999999674, 0.00015679100000000334, 0.00015687500000000076, 0.00015640199999999993, 0.00015647199999999778, 0.00015713899999999364, 0.0001568610000000012, 0.00015727800000000375, 0.00015652799999999606, 0.0001569860000000048, 0.0001568610000000012, 0.00015655500000000266, 0.0001568060000000024, 0.0001572359999999981, 0.00015658399999999434, 0.00015684799999999416, 0.00015648599999999735, 0.00015661100000000094, 0.00015688900000000033, 0.00015642999999999907, 0.0001564159999999995, 0.0001566809999999988, 0.00015662499999999357, 0.000156916, 0.00015638800000000036, 0.00015637500000000026, 0.0001567359999999976, 0.00015676400000000368, 0.00015709700000000187, 0.00015708399999999484, 0.00015654200000000257, 0.00015705600000000264, 0.00015718100000000623, 0.00015691699999999947, 0.00015650000000000386, 0.00015672200000000497, 0.00015644399999999864, 0.00015699999999999742, 0.00015672199999999803, 0.0001567359999999976, 0.0001570830000000023, 0.00015637500000000026]</msg>
<status status="PASS" starttime="20201029 12:45:45.741" endtime="20201029 12:45:45.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.729" endtime="20201029 12:45:45.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:45.757" endtime="20201029 12:45:45.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.752" endtime="20201029 12:45:45.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.749" endtime="20201029 12:45:45.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.267" endtime="20201029 12:45:45.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.265" endtime="20201029 12:45:45.782"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.804" endtime="20201029 12:45:45.826"></status>
</kw>
<msg timestamp="20201029 12:45:45.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.801" endtime="20201029 12:45:45.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.830" endtime="20201029 12:45:45.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.836" endtime="20201029 12:45:45.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.794" endtime="20201029 12:45:45.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.788" endtime="20201029 12:45:45.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.859" endtime="20201029 12:45:46.194"></status>
</kw>
<msg timestamp="20201029 12:45:46.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038897931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039055611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.856" endtime="20201029 12:45:46.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038897931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039055611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.203" endtime="20201029 12:45:46.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.221" endtime="20201029 12:45:46.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.848" endtime="20201029 12:45:46.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.844" endtime="20201029 12:45:46.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.238" level="INFO">${RESULT} = [{'diff': 0.00015768000000000032}, {'diff': 0.00015733300000000255}, {'diff': 0.00015776399999999774}, {'diff': 0.00015812499999999508}, {'diff': 0.00015755499999999673}, {'diff': 0.000157777000000004...</msg>
<status status="PASS" starttime="20201029 12:45:46.229" endtime="20201029 12:45:46.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:46.248" level="INFO">${ACCURACY} = {'diff': [0.00015768000000000032, 0.00015733300000000255, 0.00015776399999999774, 0.00015812499999999508, 0.00015755499999999673, 0.00015777700000000477, 0.00015768000000000032, 0.00015776299999999827...</msg>
<status status="PASS" starttime="20201029 12:45:46.240" endtime="20201029 12:45:46.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.259" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:45:46.257" endtime="20201029 12:45:46.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.264" level="INFO">VALUE: [0.00015768000000000032, 0.00015733300000000255, 0.00015776399999999774, 0.00015812499999999508, 0.00015755499999999673, 0.00015777700000000477, 0.00015768000000000032, 0.00015776299999999827, 0.00015815200000000168, 0.0001582359999999991, 0.00015779199999999688, 0.000157528000000004, 0.00015774999999999817, 0.00015747199999999878, 0.00015737499999999432, 0.00015777699999999784, 0.00015763900000000108, 0.00015744399999999964, 0.00015816700000000072, 0.00015751400000000443, 0.00015793100000000004, 0.00015804199999999713, 0.0001576380000000016, 0.00015731999999999552, 0.00015801299999999852, 0.00015787500000000176, 0.00015815300000000115, 0.0001579449999999996, 0.0001573060000000029, 0.00015747200000000572, 0.00015738900000000083, 0.0001573060000000029, 0.00015813900000000158, 0.00015754099999999716, 0.00015819499999999986, 0.00015806999999999627, 0.0001574030000000004, 0.00015787499999999483, 0.0001581810000000003, 0.00015779199999999688, 0.00015816700000000072, 0.00015749999999999792, 0.00015797199999999928, 0.00015769499999999936, 0.00015747200000000572, 0.00015809699999999594, 0.0001572909999999969, 0.0001577909999999974, 0.0001572909999999969, 0.00015799999999999842]</msg>
<status status="PASS" starttime="20201029 12:45:46.261" endtime="20201029 12:45:46.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.250" endtime="20201029 12:45:46.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:46.277" endtime="20201029 12:45:46.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.272" endtime="20201029 12:45:46.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.270" endtime="20201029 12:45:46.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.784" endtime="20201029 12:45:46.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.783" endtime="20201029 12:45:46.301"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.324" endtime="20201029 12:45:46.345"></status>
</kw>
<msg timestamp="20201029 12:45:46.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.320" endtime="20201029 12:45:46.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.349" endtime="20201029 12:45:46.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.355" endtime="20201029 12:45:46.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.313" endtime="20201029 12:45:46.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.308" endtime="20201029 12:45:46.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.378" endtime="20201029 12:45:46.709"></status>
</kw>
<msg timestamp="20201029 12:45:46.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039036708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039195458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.375" endtime="20201029 12:45:46.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039036708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039195458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.718" endtime="20201029 12:45:46.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.736" endtime="20201029 12:45:46.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.368" endtime="20201029 12:45:46.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.363" endtime="20201029 12:45:46.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.753" level="INFO">${RESULT} = [{'diff': 0.00015874999999999917}, {'diff': 0.00015888900000000233}, {'diff': 0.00015872200000000003}, {'diff': 0.00015831899999999705}, {'diff': 0.0001584580000000002}, {'diff': 0.0001589720000000002...</msg>
<status status="PASS" starttime="20201029 12:45:46.745" endtime="20201029 12:45:46.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:46.764" level="INFO">${ACCURACY} = {'diff': [0.00015874999999999917, 0.00015888900000000233, 0.00015872200000000003, 0.00015831899999999705, 0.0001584580000000002, 0.00015897200000000028, 0.00015852799999999806, 0.00015926399999999924,...</msg>
<status status="PASS" starttime="20201029 12:45:46.755" endtime="20201029 12:45:46.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.775" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:45:46.773" endtime="20201029 12:45:46.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.780" level="INFO">VALUE: [0.00015874999999999917, 0.00015888900000000233, 0.00015872200000000003, 0.00015831899999999705, 0.0001584580000000002, 0.00015897200000000028, 0.00015852799999999806, 0.00015926399999999924, 0.0001587779999999983, 0.0001584450000000001, 0.0001585139999999985, 0.00015926399999999924, 0.000159013999999999, 0.00015911200000000292, 0.0001584030000000014, 0.00015852799999999806, 0.00015922200000000053, 0.000159223, 0.00015874999999999917, 0.0001591810000000013, 0.00015918099999999435, 0.00015848599999999935, 0.00015861100000000294, 0.00015831899999999705, 0.00015865300000000165, 0.00015897200000000028, 0.00015883299999999712, 0.00015897199999999334, 0.00015862500000000251, 0.0001592779999999988, 0.000158737000000006, 0.0001584450000000001, 0.00015879199999999788, 0.00015833300000000355, 0.00015858400000000328, 0.00015886099999999626, 0.0001587359999999996, 0.00015831899999999705, 0.000158528000000005, 0.00015899999999999942, 0.0001592360000000001, 0.00015881900000000448, 0.00015872200000000003, 0.00015848599999999935, 0.00015829199999999738, 0.00015854200000000457, 0.0001584580000000002, 0.0001587630000000062, 0.0001589580000000007, 0.00015918000000000182]</msg>
<status status="PASS" starttime="20201029 12:45:46.777" endtime="20201029 12:45:46.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.766" endtime="20201029 12:45:46.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:46.792" endtime="20201029 12:45:46.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.788" endtime="20201029 12:45:46.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.786" endtime="20201029 12:45:46.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.303" endtime="20201029 12:45:46.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.302" endtime="20201029 12:45:46.817"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.840" endtime="20201029 12:45:46.862"></status>
</kw>
<msg timestamp="20201029 12:45:46.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.836" endtime="20201029 12:45:46.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.865" endtime="20201029 12:45:46.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.871" endtime="20201029 12:45:46.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.829" endtime="20201029 12:45:46.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.824" endtime="20201029 12:45:46.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.895" endtime="20201029 12:45:47.228"></status>
</kw>
<msg timestamp="20201029 12:45:47.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03911825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039277611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:46.891" endtime="20201029 12:45:47.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03911825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039277611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:47.237" endtime="20201029 12:45:47.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.256" endtime="20201029 12:45:47.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.884" endtime="20201029 12:45:47.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.879" endtime="20201029 12:45:47.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.273" level="INFO">${RESULT} = [{'diff': 0.00015936099999999676}, {'diff': 0.00016025000000000067}, {'diff': 0.00015954199999999863}, {'diff': 0.00016004199999999913}, {'diff': 0.00016016699999999578}, {'diff': 0.000159486000000000...</msg>
<status status="PASS" starttime="20201029 12:45:47.264" endtime="20201029 12:45:47.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:47.281" level="INFO">${ACCURACY} = {'diff': [0.00015936099999999676, 0.00016025000000000067, 0.00015954199999999863, 0.00016004199999999913, 0.00016016699999999578, 0.00015948600000000035, 0.00015987499999999683, 0.00016029199999999938...</msg>
<status status="PASS" starttime="20201029 12:45:47.275" endtime="20201029 12:45:47.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.292" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:45:47.290" endtime="20201029 12:45:47.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.297" level="INFO">VALUE: [0.00015936099999999676, 0.00016025000000000067, 0.00015954199999999863, 0.00016004199999999913, 0.00016016699999999578, 0.00015948600000000035, 0.00015987499999999683, 0.00016029199999999938, 0.00015994500000000161, 0.00015987499999999683, 0.0001598889999999964, 0.00016008299999999837, 0.00015969399999999495, 0.00015941700000000197, 0.00015981899999999855, 0.0001601109999999975, 0.00015969500000000136, 0.00016022200000000153, 0.00016026400000000024, 0.00015958299999999787, 0.00015966700000000222, 0.0001597360000000006, 0.00015948600000000035, 0.00015963900000000308, 0.0001595689999999983, 0.00016018000000000282, 0.00015954099999999916, 0.0001602779999999998, 0.00016013899999999665, 0.0001597360000000006, 0.00015949999999999992, 0.00015962499999999658, 0.00015936200000000317, 0.00015991700000000247, 0.0001598339999999976, 0.00016013900000000358, 0.00015981899999999855, 0.0001602360000000011, 0.00015962499999999658, 0.000159610999999997, 0.00015941599999999556, 0.00015993000000000257, 0.00015941700000000197, 0.0001593480000000036, 0.00015965300000000265, 0.00016015300000000315, 0.00015943000000000207, 0.0001598610000000042, 0.00015955499999999873, 0.00015959700000000437]</msg>
<status status="PASS" starttime="20201029 12:45:47.294" endtime="20201029 12:45:47.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.283" endtime="20201029 12:45:47.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:47.310" endtime="20201029 12:45:47.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.305" endtime="20201029 12:45:47.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.303" endtime="20201029 12:45:47.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.819" endtime="20201029 12:45:47.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.818" endtime="20201029 12:45:47.334"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.357" endtime="20201029 12:45:47.381"></status>
</kw>
<msg timestamp="20201029 12:45:47.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.353" endtime="20201029 12:45:47.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.384" endtime="20201029 12:45:47.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.390" endtime="20201029 12:45:47.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.346" endtime="20201029 12:45:47.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.341" endtime="20201029 12:45:47.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.413" endtime="20201029 12:45:47.767"></status>
</kw>
<msg timestamp="20201029 12:45:47.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040697861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040858472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.410" endtime="20201029 12:45:47.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040697861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040858472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.776" endtime="20201029 12:45:47.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.795" endtime="20201029 12:45:47.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.403" endtime="20201029 12:45:47.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.398" endtime="20201029 12:45:47.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.812" level="INFO">${RESULT} = [{'diff': 0.000160610999999998}, {'diff': 0.00016075000000000117}, {'diff': 0.0001609859999999949}, {'diff': 0.00016048600000000135}, {'diff': 0.00016084699999999869}, {'diff': 0.00016115300000000415}...</msg>
<status status="PASS" starttime="20201029 12:45:47.804" endtime="20201029 12:45:47.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:47.822" level="INFO">${ACCURACY} = {'diff': [0.000160610999999998, 0.00016075000000000117, 0.0001609859999999949, 0.00016048600000000135, 0.00016084699999999869, 0.00016115300000000415, 0.00016058400000000528, 0.00016041700000000297, 0...</msg>
<status status="PASS" starttime="20201029 12:45:47.814" endtime="20201029 12:45:47.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.833" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:45:47.831" endtime="20201029 12:45:47.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.838" level="INFO">VALUE: [0.000160610999999998, 0.00016075000000000117, 0.0001609859999999949, 0.00016048600000000135, 0.00016084699999999869, 0.00016115300000000415, 0.00016058400000000528, 0.00016041700000000297, 0.0001609309999999961, 0.00016122200000000253, 0.00016031999999999852, 0.00016043100000000254, 0.00016048600000000135, 0.0001604580000000022, 0.00016087500000000476, 0.00016044499999999517, 0.00016047199999999484, 0.00016030499999999948, 0.00016120800000000296, 0.0001607219999999951, 0.00016054100000000016, 0.00016055499999999973, 0.000160401999999997, 0.00016080599999999945, 0.000160610999999998, 0.000161223000000002, 0.00016088900000000433, 0.00016048600000000135, 0.00016052700000000059, 0.00016036099999999776, 0.00016116699999999679, 0.00016038799999999742, 0.00016095900000000218, 0.0001608889999999974, 0.0001607780000000003, 0.00016052800000000006, 0.00016062499999999758, 0.0001611810000000033, 0.00016084699999999869, 0.000160916000000004, 0.00016059699999999844, 0.00016118000000000382, 0.0001609580000000027, 0.00016031899999999905, 0.0001602909999999999, 0.00016072299999999456, 0.00016067999999999638, 0.00016037499999999733, 0.00016029199999999938, 0.0001607360000000016]</msg>
<status status="PASS" starttime="20201029 12:45:47.835" endtime="20201029 12:45:47.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.823" endtime="20201029 12:45:47.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:47.852" endtime="20201029 12:45:47.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.846" endtime="20201029 12:45:47.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.844" endtime="20201029 12:45:47.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.336" endtime="20201029 12:45:47.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.335" endtime="20201029 12:45:47.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.888" endtime="20201029 12:45:47.878"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:54.765" endtime="20201029 12:45:47.880" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:59.344" endtime="20201029 12:45:47.889"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.033" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:48.048" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:50.038" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:48.029" endtime="20201029 12:45:50.039"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.045" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:50.042" endtime="20201029 12:45:50.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.026" endtime="20201029 12:45:50.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.052" endtime="20201029 12:45:50.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.049" endtime="20201029 12:45:50.389"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.418" endtime="20201029 12:45:50.436"></status>
</kw>
<msg timestamp="20201029 12:45:50.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.415" endtime="20201029 12:45:50.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.440" endtime="20201029 12:45:50.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.451" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:50.446" endtime="20201029 12:45:50.453"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.409" endtime="20201029 12:45:50.455"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.403" endtime="20201029 12:45:50.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.401" endtime="20201029 12:45:50.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:50.465" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:50.464" endtime="20201029 12:45:50.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.459" endtime="20201029 12:45:50.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.399" endtime="20201029 12:45:50.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.397" endtime="20201029 12:45:50.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.469" endtime="20201029 12:45:50.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.394" endtime="20201029 12:45:50.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.475" endtime="20201029 12:45:50.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.391" endtime="20201029 12:45:50.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.023" endtime="20201029 12:45:50.481"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.502" endtime="20201029 12:45:50.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.498" endtime="20201029 12:45:50.525"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.559" endtime="20201029 12:45:50.577"></status>
</kw>
<msg timestamp="20201029 12:45:50.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.555" endtime="20201029 12:45:50.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.581" endtime="20201029 12:45:50.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:50.587" endtime="20201029 12:45:50.592"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.548" endtime="20201029 12:45:50.594"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.541" endtime="20201029 12:45:50.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.539" endtime="20201029 12:45:50.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:50.604" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:50.603" endtime="20201029 12:45:50.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.598" endtime="20201029 12:45:50.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.537" endtime="20201029 12:45:50.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.535" endtime="20201029 12:45:50.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.607" endtime="20201029 12:45:50.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.531" endtime="20201029 12:45:50.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.527" endtime="20201029 12:45:50.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.495" endtime="20201029 12:45:50.614"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.638" endtime="20201029 12:45:56.770"></status>
</kw>
<msg timestamp="20201029 12:45:56.771" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.634" endtime="20201029 12:45:56.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.777" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.773" endtime="20201029 12:45:56.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.780" endtime="20201029 12:45:56.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.627" endtime="20201029 12:45:56.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.620" endtime="20201029 12:45:56.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.792" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 12:45:56.788" endtime="20201029 12:45:56.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.803" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:56.801" endtime="20201029 12:45:56.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.808" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:56.805" endtime="20201029 12:45:56.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.794" endtime="20201029 12:45:56.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.819" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:56.817" endtime="20201029 12:45:56.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.824" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:56.822" endtime="20201029 12:45:56.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.811" endtime="20201029 12:45:56.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.836" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:56.833" endtime="20201029 12:45:56.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.840" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:45:56.838" endtime="20201029 12:45:56.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.827" endtime="20201029 12:45:56.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.859" endtime="20201029 12:45:57.221"></status>
</kw>
<msg timestamp="20201029 12:45:57.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.227188278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.227188819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:56.856" endtime="20201029 12:45:57.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.227188278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.227188819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:57.231" endtime="20201029 12:45:57.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.252" endtime="20201029 12:45:57.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.848" endtime="20201029 12:45:57.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.844" endtime="20201029 12:45:57.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:57.270" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.100181362}, {'diff': 0.10016809700000001}, {'diff': 0.10016054200000002}, {'diff': 0.1001740969999999}, {'diff': 0.10017984700000004}, {'diff': 0.10018505499999997}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 12:45:57.261" endtime="20201029 12:45:57.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.280" level="INFO">${RESULT} = {'diff': [0, 0.100181362, 0.10016809700000001, 0.10016054200000002, 0.1001740969999999, 0.10017984700000004, 0.10018505499999997, 0.10018249999999995, 0.10017613800000003, 0.10016594500000009, 0.10016...</msg>
<status status="PASS" starttime="20201029 12:45:57.272" endtime="20201029 12:45:57.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.290" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:57.288" endtime="20201029 12:45:57.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.296" level="INFO">VALUE: [0, 0.100181362, 0.10016809700000001, 0.10016054200000002, 0.1001740969999999, 0.10017984700000004, 0.10018505499999997, 0.10018249999999995, 0.10017613800000003, 0.10016594500000009, 0.10016007000000005, 0.100174459, 0.10017658399999996, 0.10017633400000014, 0.10016973600000001, 0.10016697200000002, 0.10018404199999997, 0.10017398600000016, 0.1002105419999999, 0.10018540300000023, 0.10018122199999979, 0.1001866800000002, 0.10018563899999977, 0.10019370800000038, 0.10019204099999968, 0.10018018000000017, 0.100181611, 0.10019308300000018, 0.10018954199999985, 0.10019545900000004, 0.10018016600000035, 0.10018818100000004, 0.100183264, 0.10018301399999974, 0.10018854199999971, 0.10018748600000027, 0.10018580599999982, 0.10019199999999984, 0.10018029200000012, 0.10018393000000003, 0.10018080600000001, 0.10018295799999954, 0.10018548599999999, 0.10018143100000021, 0.10016858299999942, 0.1001760410000001, 0.10018143000000013, 0.10017623600000025, 0.10016243000000014, 0.10017244500000011, 0.10017727799999943]</msg>
<status status="PASS" starttime="20201029 12:45:57.293" endtime="20201029 12:45:57.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.282" endtime="20201029 12:45:57.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.616" endtime="20201029 12:45:57.299"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:50.482" endtime="20201029 12:45:57.302" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.318" endtime="20201029 12:45:57.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.314" endtime="20201029 12:45:57.341"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.374" endtime="20201029 12:45:57.391"></status>
</kw>
<msg timestamp="20201029 12:45:57.392" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.371" endtime="20201029 12:45:57.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.394" endtime="20201029 12:45:57.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.405" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:57.401" endtime="20201029 12:45:57.406"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:57.364" endtime="20201029 12:45:57.407"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:57.358" endtime="20201029 12:45:57.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.354" endtime="20201029 12:45:57.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:57.417" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:57.416" endtime="20201029 12:45:57.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.411" endtime="20201029 12:45:57.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.352" endtime="20201029 12:45:57.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.351" endtime="20201029 12:45:57.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.421" endtime="20201029 12:45:57.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.347" endtime="20201029 12:45:57.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.342" endtime="20201029 12:45:57.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.311" endtime="20201029 12:45:57.428"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.448" endtime="20201029 12:46:03.580"></status>
</kw>
<msg timestamp="20201029 12:46:03.582" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.445" endtime="20201029 12:46:03.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.588" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.584" endtime="20201029 12:46:03.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.590" endtime="20201029 12:46:03.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.438" endtime="20201029 12:46:03.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.433" endtime="20201029 12:46:03.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.602" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 12:46:03.598" endtime="20201029 12:46:03.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.615" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:03.612" endtime="20201029 12:46:03.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.620" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:03.617" endtime="20201029 12:46:03.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.605" endtime="20201029 12:46:03.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.632" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:03.629" endtime="20201029 12:46:03.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.636" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:03.634" endtime="20201029 12:46:03.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.623" endtime="20201029 12:46:03.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.648" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:03.646" endtime="20201029 12:46:03.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.652" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:46:03.650" endtime="20201029 12:46:03.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.640" endtime="20201029 12:46:03.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.678" endtime="20201029 12:46:04.036"></status>
</kw>
<msg timestamp="20201029 12:46:04.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121965667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222208944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.674" endtime="20201029 12:46:04.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121965667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222208944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.045" endtime="20201029 12:46:04.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.063" endtime="20201029 12:46:04.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.666" endtime="20201029 12:46:04.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.658" endtime="20201029 12:46:04.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:04.080" level="INFO">${FILTERED} = [{'diff': 0.10024327699999999}, {'diff': 0.10048499999999999}, {'diff': 0.099886861}, {'diff': 0.100196652}, {'diff': 0.10018997200000002}, {'diff': 0.10018619400000006}, {'diff': 0.10018343099999993}...</msg>
<status status="PASS" starttime="20201029 12:46:04.071" endtime="20201029 12:46:04.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.089" level="INFO">${RESULT} = {'diff': [0.10024327699999999, 0.10048499999999999, 0.099886861, 0.100196652, 0.10018997200000002, 0.10018619400000006, 0.10018343099999993, 0.10018427799999996, 0.10016797199999994, 0.100180665999999...</msg>
<status status="PASS" starttime="20201029 12:46:04.082" endtime="20201029 12:46:04.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.099" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:04.097" endtime="20201029 12:46:04.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.104" level="INFO">VALUE: [0.10024327699999999, 0.10048499999999999, 0.099886861, 0.100196652, 0.10018997200000002, 0.10018619400000006, 0.10018343099999993, 0.10018427799999996, 0.10016797199999994, 0.10018066599999997, 0.100176861, 0.100184139, 0.10018143099999999, 0.10018447300000011, 0.10018994500000011, 0.10017802799999997, 0.100185792, 0.10019276400000021, 0.10018281900000003, 0.10019062499999976, 0.10019269399999997, 0.10019223600000027, 0.10019579200000006, 0.10020156999999985, 0.10018420900000002, 0.10017827800000001, 0.10019184800000014, 0.10018420900000002, 0.10018740300000006, 0.10018047199999991, 0.10018365200000012, 0.10018308300000012, 0.10018711099999988, 0.10019515300000004, 0.10018654199999988, 0.10018711100000033, 0.10019401399999994, 0.10019297199999988, 0.10018827800000052, 0.10018129200000025, 0.10019020799999989, 0.1001826939999999, 0.10018111099999949, 0.10019172300000001, 0.10019234800000021, 0.10018697199999949, 0.10019074999999944, 0.10019148599999994, 0.10017091599999972, 0.10017669399999996, 0.10017222200000031]</msg>
<status status="PASS" starttime="20201029 12:46:04.101" endtime="20201029 12:46:04.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.091" endtime="20201029 12:46:04.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.429" endtime="20201029 12:46:04.109"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:57.306" endtime="20201029 12:46:04.110" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.126" endtime="20201029 12:46:04.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.123" endtime="20201029 12:46:04.150"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.184" endtime="20201029 12:46:04.200"></status>
</kw>
<msg timestamp="20201029 12:46:04.201" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.181" endtime="20201029 12:46:04.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.207" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.203" endtime="20201029 12:46:04.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.214" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:04.210" endtime="20201029 12:46:04.215"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.174" endtime="20201029 12:46:04.216"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.167" endtime="20201029 12:46:04.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.163" endtime="20201029 12:46:04.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:04.227" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:04.225" endtime="20201029 12:46:04.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.221" endtime="20201029 12:46:04.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.161" endtime="20201029 12:46:04.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.159" endtime="20201029 12:46:04.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.230" endtime="20201029 12:46:04.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.155" endtime="20201029 12:46:04.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.151" endtime="20201029 12:46:04.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.120" endtime="20201029 12:46:04.237"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.258" endtime="20201029 12:46:10.391"></status>
</kw>
<msg timestamp="20201029 12:46:10.392" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.255" endtime="20201029 12:46:10.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.398" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.394" endtime="20201029 12:46:10.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.400" endtime="20201029 12:46:10.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.248" endtime="20201029 12:46:10.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.243" endtime="20201029 12:46:10.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.413" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 12:46:10.408" endtime="20201029 12:46:10.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.423" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:10.421" endtime="20201029 12:46:10.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.428" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:10.426" endtime="20201029 12:46:10.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.415" endtime="20201029 12:46:10.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.440" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:10.437" endtime="20201029 12:46:10.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.444" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:10.442" endtime="20201029 12:46:10.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.431" endtime="20201029 12:46:10.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.458" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:10.454" endtime="20201029 12:46:10.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.463" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:46:10.460" endtime="20201029 12:46:10.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.448" endtime="20201029 12:46:10.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.481" endtime="20201029 12:46:10.833"></status>
</kw>
<msg timestamp="20201029 12:46:10.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123507736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.22405825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:10.478" endtime="20201029 12:46:10.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123507736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.22405825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:10.842" endtime="20201029 12:46:10.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.860" endtime="20201029 12:46:10.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.471" endtime="20201029 12:46:10.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.466" endtime="20201029 12:46:10.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:10.877" level="INFO">${FILTERED} = [{'diff': 0.10055051399999998}, {'diff': 0.09988184699999997}, {'diff': 0.10017916599999999}, {'diff': 0.10017219399999999}, {'diff': 0.10018454200000004}, {'diff': 0.10019494499999992}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:46:10.868" endtime="20201029 12:46:10.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.886" level="INFO">${RESULT} = {'diff': [0.10055051399999998, 0.09988184699999997, 0.10017916599999999, 0.10017219399999999, 0.10018454200000004, 0.10019494499999992, 0.10018516700000002, 0.10018154099999999, 0.10017026400000006, 0...</msg>
<status status="PASS" starttime="20201029 12:46:10.879" endtime="20201029 12:46:10.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.896" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:10.894" endtime="20201029 12:46:10.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.901" level="INFO">VALUE: [0.10055051399999998, 0.09988184699999997, 0.10017916599999999, 0.10017219399999999, 0.10018454200000004, 0.10019494499999992, 0.10018516700000002, 0.10018154099999999, 0.10017026400000006, 0.1001663049999999, 0.100164417, 0.10016251399999998, 0.10016823600000002, 0.10018866599999998, 0.10017787499999997, 0.10017593000000002, 0.10019156899999992, 0.100179625, 0.10016980500000017, 0.10016484699999983, 0.10017588899999996, 0.10018284699999969, 0.10018688900000017, 0.10019809699999982, 0.10019265200000005, 0.10017938900000001, 0.10018381900000017, 0.10017567999999999, 0.10017277800000013, 0.10017215299999993, 0.10017399999999999, 0.10017429200000016, 0.100172347, 0.10018887499999973, 0.10017844500000006, 0.10016808400000032, 0.10017029200000005, 0.10016268100000003, 0.10015834699999981, 0.10016704099999973, 0.10016022199999952, 0.10017099999999957, 0.10018187499999964, 0.10018267999999964, 0.10018243099999946, 0.10017326400000037, 0.10016884699999995, 0.1001741109999994, 0.10016737499999984, 0.10017067999999973, 0.10018445900000028]</msg>
<status status="PASS" starttime="20201029 12:46:10.898" endtime="20201029 12:46:10.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.888" endtime="20201029 12:46:10.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.238" endtime="20201029 12:46:10.906"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:04.114" endtime="20201029 12:46:10.907" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.925" endtime="20201029 12:46:10.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.920" endtime="20201029 12:46:10.949"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.982" endtime="20201029 12:46:10.997"></status>
</kw>
<msg timestamp="20201029 12:46:10.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.978" endtime="20201029 12:46:10.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.005" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.001" endtime="20201029 12:46:11.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.012" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:11.007" endtime="20201029 12:46:11.012"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:10.971" endtime="20201029 12:46:11.014"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:10.965" endtime="20201029 12:46:11.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.962" endtime="20201029 12:46:11.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:11.024" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:11.023" endtime="20201029 12:46:11.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.018" endtime="20201029 12:46:11.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.960" endtime="20201029 12:46:11.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.958" endtime="20201029 12:46:11.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.028" endtime="20201029 12:46:11.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.954" endtime="20201029 12:46:11.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.950" endtime="20201029 12:46:11.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.917" endtime="20201029 12:46:11.035"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.056" endtime="20201029 12:46:17.188"></status>
</kw>
<msg timestamp="20201029 12:46:17.189" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.053" endtime="20201029 12:46:17.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.195" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.191" endtime="20201029 12:46:17.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.198" endtime="20201029 12:46:17.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.046" endtime="20201029 12:46:17.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.040" endtime="20201029 12:46:17.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.211" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 12:46:17.206" endtime="20201029 12:46:17.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.223" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:17.218" endtime="20201029 12:46:17.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.227" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:17.225" endtime="20201029 12:46:17.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.212" endtime="20201029 12:46:17.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.240" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:17.237" endtime="20201029 12:46:17.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.244" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:17.242" endtime="20201029 12:46:17.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.231" endtime="20201029 12:46:17.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.256" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:17.254" endtime="20201029 12:46:17.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.260" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:46:17.258" endtime="20201029 12:46:17.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.248" endtime="20201029 12:46:17.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.279" endtime="20201029 12:46:17.628"></status>
</kw>
<msg timestamp="20201029 12:46:17.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121987236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222748833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.276" endtime="20201029 12:46:17.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121987236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222748833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.638" endtime="20201029 12:46:17.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.656" endtime="20201029 12:46:17.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.269" endtime="20201029 12:46:17.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.264" endtime="20201029 12:46:17.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:17.673" level="INFO">${FILTERED} = [{'diff': 0.10076159700000001}, {'diff': 0.09967506899999998}, {'diff': 0.10016465299999999}, {'diff': 0.10016475000000002}, {'diff': 0.10015606999999993}, {'diff': 0.10016455599999996}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:46:17.664" endtime="20201029 12:46:17.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.683" level="INFO">${RESULT} = {'diff': [0.10076159700000001, 0.09967506899999998, 0.10016465299999999, 0.10016475000000002, 0.10015606999999993, 0.10016455599999996, 0.10016972200000007, 0.10016048699999991, 0.10016520900000003, 0...</msg>
<status status="PASS" starttime="20201029 12:46:17.675" endtime="20201029 12:46:17.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.693" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:17.691" endtime="20201029 12:46:17.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.698" level="INFO">VALUE: [0.10076159700000001, 0.09967506899999998, 0.10016465299999999, 0.10016475000000002, 0.10015606999999993, 0.10016455599999996, 0.10016972200000007, 0.10016048699999991, 0.10016520900000003, 0.10017032000000015, 0.10017197299999991, 0.10017540299999994, 0.10017276400000008, 0.10016072200000004, 0.10016194499999997, 0.10016457000000001, 0.10017261100000008, 0.10018237499999993, 0.10018590300000008, 0.100170431, 0.10017940300000028, 0.10018142999999968, 0.10018025000000019, 0.10017754099999987, 0.10018481999999995, 0.10018404199999997, 0.10018276299999984, 0.10017850000000017, 0.10017387499999986, 0.10017897200000014, 0.1001784859999999, 0.10018013899999989, 0.100178514, 0.10017430600000043, 0.1001696799999996, 0.1001844860000003, 0.1001724020000001, 0.1001736529999997, 0.10017429200000061, 0.10018152800000024, 0.10016993099999993, 0.10016512500000019, 0.10016041700000056, 0.10015141700000019, 0.1001556249999993, 0.10016044500000021, 0.100153347, 0.10016236199999984, 0.10016179199999975, 0.10015909700000059, 0.10016297300000065]</msg>
<status status="PASS" starttime="20201029 12:46:17.695" endtime="20201029 12:46:17.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.685" endtime="20201029 12:46:17.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.036" endtime="20201029 12:46:17.703"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:10.912" endtime="20201029 12:46:17.704" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.721" endtime="20201029 12:46:17.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.717" endtime="20201029 12:46:17.744"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.777" endtime="20201029 12:46:17.792"></status>
</kw>
<msg timestamp="20201029 12:46:17.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.773" endtime="20201029 12:46:17.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.796" endtime="20201029 12:46:17.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.813" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:17.804" endtime="20201029 12:46:17.816"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:17.766" endtime="20201029 12:46:17.819"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:17.760" endtime="20201029 12:46:17.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.757" endtime="20201029 12:46:17.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:17.832" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:17.830" endtime="20201029 12:46:17.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.824" endtime="20201029 12:46:17.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.756" endtime="20201029 12:46:17.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.754" endtime="20201029 12:46:17.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.836" endtime="20201029 12:46:17.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.750" endtime="20201029 12:46:17.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.745" endtime="20201029 12:46:17.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.714" endtime="20201029 12:46:17.845"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.870" endtime="20201029 12:46:24.002"></status>
</kw>
<msg timestamp="20201029 12:46:24.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.867" endtime="20201029 12:46:24.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.010" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.005" endtime="20201029 12:46:24.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.012" endtime="20201029 12:46:24.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.857" endtime="20201029 12:46:24.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.852" endtime="20201029 12:46:24.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.025" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 12:46:24.020" endtime="20201029 12:46:24.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.036" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:24.033" endtime="20201029 12:46:24.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.041" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:24.038" endtime="20201029 12:46:24.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.027" endtime="20201029 12:46:24.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.053" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:24.050" endtime="20201029 12:46:24.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.057" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:24.055" endtime="20201029 12:46:24.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.044" endtime="20201029 12:46:24.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.069" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:24.067" endtime="20201029 12:46:24.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.073" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:46:24.071" endtime="20201029 12:46:24.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.061" endtime="20201029 12:46:24.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.092" endtime="20201029 12:46:24.442"></status>
</kw>
<msg timestamp="20201029 12:46:24.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140968736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.241920458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.089" endtime="20201029 12:46:24.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140968736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.241920458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.451" endtime="20201029 12:46:24.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.470" endtime="20201029 12:46:24.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.082" endtime="20201029 12:46:24.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.077" endtime="20201029 12:46:24.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:24.487" level="INFO">${FILTERED} = [{'diff': 0.100951722}, {'diff': 0.09944147199999998}, {'diff': 0.10015330499999997}, {'diff': 0.10014723599999997}, {'diff': 0.10014143000000009}, {'diff': 0.10014904199999997}, {'diff': 0.1001563479...</msg>
<status status="PASS" starttime="20201029 12:46:24.479" endtime="20201029 12:46:24.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.498" level="INFO">${RESULT} = {'diff': [0.100951722, 0.09944147199999998, 0.10015330499999997, 0.10014723599999997, 0.10014143000000009, 0.10014904199999997, 0.10015634799999995, 0.100150709, 0.10016294499999989, 0.100158611999999...</msg>
<status status="PASS" starttime="20201029 12:46:24.490" endtime="20201029 12:46:24.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.508" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:24.506" endtime="20201029 12:46:24.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.514" level="INFO">VALUE: [0.100951722, 0.09944147199999998, 0.10015330499999997, 0.10014723599999997, 0.10014143000000009, 0.10014904199999997, 0.10015634799999995, 0.100150709, 0.10016294499999989, 0.10015861199999998, 0.10015836100000008, 0.10015805599999994, 0.10015045899999997, 0.10016358400000014, 0.10016944499999991, 0.10017329200000002, 0.10017427700000003, 0.10017326399999993, 0.10016263900000011, 0.10016929199999991, 0.10017522200000029, 0.10016312499999991, 0.10017251400000005, 0.10016881899999985, 0.10017194399999996, 0.10018297200000026, 0.10016752800000006, 0.10018277799999975, 0.10017313900000024, 0.10017538899999989, 0.10015916600000008, 0.10015834700000026, 0.10016069399999994, 0.10016063899999983, 0.10015831900000016, 0.10016184699999986, 0.10016804099999987, 0.1001733610000004, 0.10019265299999969, 0.100177972, 0.10017805599999985, 0.10017977800000022, 0.10018159700000062, 0.10018058300000021, 0.10018273600000072, 0.1001830840000002, 0.100181042, 0.10016879099999976, 0.10017850000000017, 0.10016938900000039, 0.10017076400000047]</msg>
<status status="PASS" starttime="20201029 12:46:24.511" endtime="20201029 12:46:24.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.500" endtime="20201029 12:46:24.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.847" endtime="20201029 12:46:24.519"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:17.709" endtime="20201029 12:46:24.520" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.537" endtime="20201029 12:46:24.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.533" endtime="20201029 12:46:24.560"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.594" endtime="20201029 12:46:24.609"></status>
</kw>
<msg timestamp="20201029 12:46:24.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.590" endtime="20201029 12:46:24.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.613" endtime="20201029 12:46:24.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.624" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:24.620" endtime="20201029 12:46:24.625"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:24.583" endtime="20201029 12:46:24.627"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:24.577" endtime="20201029 12:46:24.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.574" endtime="20201029 12:46:24.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:24.639" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:24.637" endtime="20201029 12:46:24.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.632" endtime="20201029 12:46:24.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.572" endtime="20201029 12:46:24.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.571" endtime="20201029 12:46:24.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.649" endtime="20201029 12:46:24.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.566" endtime="20201029 12:46:24.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.562" endtime="20201029 12:46:24.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.530" endtime="20201029 12:46:24.656"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.677" endtime="20201029 12:46:30.809"></status>
</kw>
<msg timestamp="20201029 12:46:30.810" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.674" endtime="20201029 12:46:30.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.816" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.812" endtime="20201029 12:46:30.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.819" endtime="20201029 12:46:30.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.666" endtime="20201029 12:46:30.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.661" endtime="20201029 12:46:30.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.832" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 12:46:30.827" endtime="20201029 12:46:30.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.842" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:30.840" endtime="20201029 12:46:30.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.846" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:30.844" endtime="20201029 12:46:30.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.834" endtime="20201029 12:46:30.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.858" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:30.856" endtime="20201029 12:46:30.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.863" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:30.861" endtime="20201029 12:46:30.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.850" endtime="20201029 12:46:30.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.874" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:30.872" endtime="20201029 12:46:30.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.879" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:46:30.877" endtime="20201029 12:46:30.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.866" endtime="20201029 12:46:30.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.898" endtime="20201029 12:46:31.248"></status>
</kw>
<msg timestamp="20201029 12:46:31.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131594236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.232811778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.894" endtime="20201029 12:46:31.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131594236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.232811778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.257" endtime="20201029 12:46:31.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.275" endtime="20201029 12:46:31.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.887" endtime="20201029 12:46:31.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.883" endtime="20201029 12:46:31.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:31.292" level="INFO">${FILTERED} = [{'diff': 0.101217542}, {'diff': 0.100320042}, {'diff': 0.099000472}, {'diff': 0.10016180499999999}, {'diff': 0.100159208}, {'diff': 0.10016680500000008}, {'diff': 0.10016523599999994}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 12:46:31.284" endtime="20201029 12:46:31.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.303" level="INFO">${RESULT} = {'diff': [0.101217542, 0.100320042, 0.099000472, 0.10016180499999999, 0.100159208, 0.10016680500000008, 0.10016523599999994, 0.10016118000000007, 0.10016662500000006, 0.10016840299999985, 0.1001669720...</msg>
<status status="PASS" starttime="20201029 12:46:31.296" endtime="20201029 12:46:31.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.313" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:31.310" endtime="20201029 12:46:31.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.318" level="INFO">VALUE: [0.101217542, 0.100320042, 0.099000472, 0.10016180499999999, 0.100159208, 0.10016680500000008, 0.10016523599999994, 0.10016118000000007, 0.10016662500000006, 0.10016840299999985, 0.10016697200000002, 0.10016908299999994, 0.1001658889999999, 0.10015369400000007, 0.10015825, 0.10016544500000002, 0.10017215199999985, 0.10016672199999999, 0.10016913900000013, 0.10017413899999994, 0.1001629580000003, 0.10016793099999965, 0.10017579199999993, 0.10017144399999989, 0.10017497200000003, 0.10016915299999996, 0.10016197300000007, 0.1001628750000001, 0.10016215299999986, 0.10016794499999992, 0.10017726299999996, 0.10017244500000011, 0.10017976399999995, 0.10016848600000028, 0.10016299999999978, 0.10017947199999977, 0.10017141699999987, 0.10016256999999973, 0.10016754100000025, 0.10016952800000034, 0.10017349999999947, 0.10016920799999962, 0.10016884699999995, 0.10016847200000001, 0.10018058299999932, 0.1001742779999999, 0.10016644400000008, 0.10016481999999982, 0.10017056999999951, 0.10015672199999948, 0.10015219499999972]</msg>
<status status="PASS" starttime="20201029 12:46:31.315" endtime="20201029 12:46:31.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.304" endtime="20201029 12:46:31.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.657" endtime="20201029 12:46:31.323"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:24.524" endtime="20201029 12:46:31.324" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:47.912" endtime="20201029 12:46:31.341"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:42:56.188" endtime="20201029 12:46:31.419"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
